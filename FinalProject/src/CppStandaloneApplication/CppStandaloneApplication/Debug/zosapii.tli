// Created by Microsoft (R) C/C++ Compiler Version 14.10.25019.0 (9557a495).
//
// e:\users\byrdie\school\classes\eele582_opticaldesign\finalproject\src\cppstandaloneapplication\cppstandaloneapplication\debug\zosapii.tli
//
// Wrapper implementations for type library C:\\Program Files\\Zemax OpticStudio\\ZOS-API\\Libraries\\ZOSAPII.tlb
// compiler-generated file created 04/23/17 at 11:30:25 - DO NOT EDIT!


//
// interface IConvertToNSCGroup wrapper method implementations
//

#pragma implementation_key(1)
inline long ZOSAPI_Interfaces::IConvertToNSCGroup::GetFirstSurface ( ) {
    long _result = 0;
    HRESULT _hr = get_FirstSurface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2)
inline void ZOSAPI_Interfaces::IConvertToNSCGroup::PutFirstSurface ( long pRetVal ) {
    HRESULT _hr = put_FirstSurface(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3)
inline long ZOSAPI_Interfaces::IConvertToNSCGroup::GetLastSurface ( ) {
    long _result = 0;
    HRESULT _hr = get_LastSurface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4)
inline void ZOSAPI_Interfaces::IConvertToNSCGroup::PutLastSurface ( long pRetVal ) {
    HRESULT _hr = put_LastSurface(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5)
inline VARIANT_BOOL ZOSAPI_Interfaces::IConvertToNSCGroup::GetIgnoreErrors ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IgnoreErrors(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6)
inline void ZOSAPI_Interfaces::IConvertToNSCGroup::PutIgnoreErrors ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IgnoreErrors(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7)
inline VARIANT_BOOL ZOSAPI_Interfaces::IConvertToNSCGroup::GetConvertFileToNSC ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ConvertFileToNSC(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8)
inline void ZOSAPI_Interfaces::IConvertToNSCGroup::PutConvertFileToNSC ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_ConvertFileToNSC(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9)
inline VARIANT_BOOL ZOSAPI_Interfaces::IConvertToNSCGroup::GetCreateSourcesAndDetectors ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_CreateSourcesAndDetectors(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(10)
inline void ZOSAPI_Interfaces::IConvertToNSCGroup::PutCreateSourcesAndDetectors ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_CreateSourcesAndDetectors(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(11)
inline VARIANT_BOOL ZOSAPI_Interfaces::IConvertToNSCGroup::GetConvertToGlobalCoordinates ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ConvertToGlobalCoordinates(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(12)
inline void ZOSAPI_Interfaces::IConvertToNSCGroup::PutConvertToGlobalCoordinates ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_ConvertToGlobalCoordinates(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(13)
inline double ZOSAPI_Interfaces::IConvertToNSCGroup::GetOverfillFactor ( ) {
    double _result = 0;
    HRESULT _hr = get_OverfillFactor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(14)
inline void ZOSAPI_Interfaces::IConvertToNSCGroup::PutOverfillFactor ( double pRetVal ) {
    HRESULT _hr = put_OverfillFactor(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ICriticalRaysetGenerator wrapper method implementations
//

#pragma implementation_key(15)
inline enum ZOSAPI_Interfaces::RayPatternOption ZOSAPI_Interfaces::ICriticalRaysetGenerator::GetRayPattern ( ) {
    enum RayPatternOption _result;
    HRESULT _hr = get_RayPattern(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(16)
inline void ZOSAPI_Interfaces::ICriticalRaysetGenerator::PutRayPattern ( enum RayPatternOption pRetVal ) {
    HRESULT _hr = put_RayPattern(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(17)
inline long ZOSAPI_Interfaces::ICriticalRaysetGenerator::GetNumRays ( ) {
    long _result = 0;
    HRESULT _hr = get_NumRays(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(18)
inline void ZOSAPI_Interfaces::ICriticalRaysetGenerator::PutNumRays ( long pRetVal ) {
    HRESULT _hr = put_NumRays(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(19)
inline double ZOSAPI_Interfaces::ICriticalRaysetGenerator::GetMinimumEfectiveInputDistance ( ) {
    double _result = 0;
    HRESULT _hr = get_MinimumEfectiveInputDistance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(20)
inline double ZOSAPI_Interfaces::ICriticalRaysetGenerator::GetEffectiveInputDistance ( ) {
    double _result = 0;
    HRESULT _hr = get_EffectiveInputDistance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(21)
inline void ZOSAPI_Interfaces::ICriticalRaysetGenerator::PutEffectiveInputDistance ( double pRetVal ) {
    HRESULT _hr = put_EffectiveInputDistance(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(22)
inline VARIANT_BOOL ZOSAPI_Interfaces::ICriticalRaysetGenerator::GetUseAllFields ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseAllFields(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(23)
inline void ZOSAPI_Interfaces::ICriticalRaysetGenerator::PutUseAllFields ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UseAllFields(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(24)
inline VARIANT_BOOL ZOSAPI_Interfaces::ICriticalRaysetGenerator::GetUseAllWavelengths ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseAllWavelengths(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(25)
inline void ZOSAPI_Interfaces::ICriticalRaysetGenerator::PutUseAllWavelengths ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UseAllWavelengths(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(26)
inline void ZOSAPI_Interfaces::ICriticalRaysetGenerator::PutReadRaysFromFilename ( _bstr_t _arg1 ) {
    HRESULT _hr = put_ReadRaysFromFilename(_arg1);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(27)
inline void ZOSAPI_Interfaces::ICriticalRaysetGenerator::PutSaveCriticalRaysFilename ( _bstr_t _arg1 ) {
    HRESULT _hr = put_SaveCriticalRaysFilename(_arg1);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IMFCalculator wrapper method implementations
//

#pragma implementation_key(28)
inline double ZOSAPI_Interfaces::IMFCalculator::GetMeritFunctionCalculation ( ) {
    double _result = 0;
    HRESULT _hr = get_MeritFunctionCalculation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IDesignLockdown wrapper method implementations
//

#pragma implementation_key(29)
inline long ZOSAPI_Interfaces::IDesignLockdown::GetDecimalPrecision ( ) {
    long _result = 0;
    HRESULT _hr = get_DecimalPrecision(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(30)
inline void ZOSAPI_Interfaces::IDesignLockdown::PutDecimalPrecision ( long pRetVal ) {
    HRESULT _hr = put_DecimalPrecision(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(31)
inline VARIANT_BOOL ZOSAPI_Interfaces::IDesignLockdown::GetExcludePickups ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ExcludePickups(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(32)
inline void ZOSAPI_Interfaces::IDesignLockdown::PutExcludePickups ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_ExcludePickups(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(33)
inline VARIANT_BOOL ZOSAPI_Interfaces::IDesignLockdown::GetUsePrecisionRounding ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UsePrecisionRounding(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(34)
inline void ZOSAPI_Interfaces::IDesignLockdown::PutUsePrecisionRounding ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UsePrecisionRounding(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISystemTool wrapper method implementations
//

#pragma implementation_key(35)
inline long ZOSAPI_Interfaces::ISystemTool::GetProgress ( ) {
    long _result = 0;
    HRESULT _hr = get_Progress(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(36)
inline _bstr_t ZOSAPI_Interfaces::ISystemTool::GetStatus ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Status(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(37)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISystemTool::GetIsRunning ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsRunning(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(38)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISystemTool::GetCanCancel ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_CanCancel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(39)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISystemTool::GetIsAsynchronous ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAsynchronous(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(40)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISystemTool::GetIsFiniteDuration ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsFiniteDuration(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(41)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISystemTool::GetIsValid ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsValid(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(42)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISystemTool::Run ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_Run(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(43)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISystemTool::RunAndWaitForCompletion ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_RunAndWaitForCompletion(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(44)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISystemTool::WaitForCompletion ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_WaitForCompletion(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(45)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISystemTool::Cancel ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_Cancel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(46)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISystemTool::Close ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_Close(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(47)
inline enum ZOSAPI_Interfaces::RunStatus ZOSAPI_Interfaces::ISystemTool::WaitWithTimeout ( double timeOutSeconds ) {
    enum RunStatus _result;
    HRESULT _hr = raw_WaitWithTimeout(timeOutSeconds, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(48)
inline enum ZOSAPI_Interfaces::RunStatus ZOSAPI_Interfaces::ISystemTool::RunAndWaitWithTimeout ( double timeOutSeconds ) {
    enum RunStatus _result;
    HRESULT _hr = raw_RunAndWaitWithTimeout(timeOutSeconds, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(49)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISystemTool::GetSucceeded ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Succeeded(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(50)
inline _bstr_t ZOSAPI_Interfaces::ISystemTool::GetErrorMessage ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ErrorMessage(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

//
// interface IQuickAdjust wrapper method implementations
//

#pragma implementation_key(51)
inline long ZOSAPI_Interfaces::IQuickAdjust::GetAdjustSurface ( ) {
    long _result = 0;
    HRESULT _hr = get_AdjustSurface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(52)
inline void ZOSAPI_Interfaces::IQuickAdjust::PutAdjustSurface ( long pRetVal ) {
    HRESULT _hr = put_AdjustSurface(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(53)
inline enum ZOSAPI_Interfaces::QuickAdjustType ZOSAPI_Interfaces::IQuickAdjust::GetSurfaceParameter ( ) {
    enum QuickAdjustType _result;
    HRESULT _hr = get_SurfaceParameter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(54)
inline void ZOSAPI_Interfaces::IQuickAdjust::PutSurfaceParameter ( enum QuickAdjustType pRetVal ) {
    HRESULT _hr = put_SurfaceParameter(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(55)
inline enum ZOSAPI_Interfaces::QuickAdjustCriterion ZOSAPI_Interfaces::IQuickAdjust::GetCriterion ( ) {
    enum QuickAdjustCriterion _result;
    HRESULT _hr = get_Criterion(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(56)
inline void ZOSAPI_Interfaces::IQuickAdjust::PutCriterion ( enum QuickAdjustCriterion pRetVal ) {
    HRESULT _hr = put_Criterion(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(57)
inline long ZOSAPI_Interfaces::IQuickAdjust::GetEvaluateSurface ( ) {
    long _result = 0;
    HRESULT _hr = get_EvaluateSurface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(58)
inline void ZOSAPI_Interfaces::IQuickAdjust::PutEvaluateSurface ( long pRetVal ) {
    HRESULT _hr = put_EvaluateSurface(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(59)
inline HRESULT ZOSAPI_Interfaces::IQuickAdjust::SetEvaluateSurfaceImage ( ) {
    HRESULT _hr = raw_SetEvaluateSurfaceImage();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IQuickFocus wrapper method implementations
//

#pragma implementation_key(60)
inline VARIANT_BOOL ZOSAPI_Interfaces::IQuickFocus::GetUseCentroid ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseCentroid(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(61)
inline void ZOSAPI_Interfaces::IQuickFocus::PutUseCentroid ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UseCentroid(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(62)
inline enum ZOSAPI_Interfaces::QuickFocusCriterion ZOSAPI_Interfaces::IQuickFocus::GetCriterion ( ) {
    enum QuickFocusCriterion _result;
    HRESULT _hr = get_Criterion(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(63)
inline void ZOSAPI_Interfaces::IQuickFocus::PutCriterion ( enum QuickFocusCriterion pRetVal ) {
    HRESULT _hr = put_Criterion(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRestoreArchive wrapper method implementations
//

#pragma implementation_key(64)
inline _bstr_t ZOSAPI_Interfaces::IRestoreArchive::GetArchiveFile ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ArchiveFile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(65)
inline enum ZOSAPI_Interfaces::ArchiveFileStatus ZOSAPI_Interfaces::IRestoreArchive::SetFileName ( _bstr_t ArchiveFile ) {
    enum ArchiveFileStatus _result;
    HRESULT _hr = raw_SetFileName(ArchiveFile, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(66)
inline _bstr_t ZOSAPI_Interfaces::IRestoreArchive::GetOutputFolder ( ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetOutputFolder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(67)
inline VARIANT_BOOL ZOSAPI_Interfaces::IRestoreArchive::SetOutputFolder ( _bstr_t folder ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_SetOutputFolder(folder, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(68)
inline long ZOSAPI_Interfaces::IRestoreArchive::GetNumberOfFilesInArchive ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfFilesInArchive(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(69)
inline _bstr_t ZOSAPI_Interfaces::IRestoreArchive::GetFileNameInArchive ( long fileNumber ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetFileNameInArchive(fileNumber, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(70)
inline HRESULT ZOSAPI_Interfaces::IRestoreArchive::SetFileOverwrite ( long fileNumber, VARIANT_BOOL allowOverwrite ) {
    HRESULT _hr = raw_SetFileOverwrite(fileNumber, allowOverwrite);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(71)
inline HRESULT ZOSAPI_Interfaces::IRestoreArchive::SetFilesAllOverwrite ( ) {
    HRESULT _hr = raw_SetFilesAllOverwrite();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(72)
inline HRESULT ZOSAPI_Interfaces::IRestoreArchive::SetFilesNoOverwrite ( ) {
    HRESULT _hr = raw_SetFilesNoOverwrite();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ICreateArchive wrapper method implementations
//

#pragma implementation_key(73)
inline _bstr_t ZOSAPI_Interfaces::ICreateArchive::GetArchiveFileName ( ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetArchiveFileName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(74)
inline VARIANT_BOOL ZOSAPI_Interfaces::ICreateArchive::SetArchiveFileName ( _bstr_t fullFileName ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_SetArchiveFileName(fullFileName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(75)
inline VARIANT_BOOL ZOSAPI_Interfaces::ICreateArchive::GetUseDataCompression ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseDataCompression(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(76)
inline void ZOSAPI_Interfaces::ICreateArchive::PutUseDataCompression ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UseDataCompression(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IExportCAD wrapper method implementations
//

#pragma implementation_key(77)
inline long ZOSAPI_Interfaces::IExportCAD::GetFirstSurface ( ) {
    long _result = 0;
    HRESULT _hr = get_FirstSurface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(78)
inline void ZOSAPI_Interfaces::IExportCAD::PutFirstSurface ( long pRetVal ) {
    HRESULT _hr = put_FirstSurface(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(79)
inline long ZOSAPI_Interfaces::IExportCAD::GetLastSurface ( ) {
    long _result = 0;
    HRESULT _hr = get_LastSurface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(80)
inline void ZOSAPI_Interfaces::IExportCAD::PutLastSurface ( long pRetVal ) {
    HRESULT _hr = put_LastSurface(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(81)
inline VARIANT_BOOL ZOSAPI_Interfaces::IExportCAD::GetCanChangeSurface ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_CanChangeSurface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(82)
inline long ZOSAPI_Interfaces::IExportCAD::GetFirstObject ( ) {
    long _result = 0;
    HRESULT _hr = get_FirstObject(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(83)
inline void ZOSAPI_Interfaces::IExportCAD::PutFirstObject ( long pRetVal ) {
    HRESULT _hr = put_FirstObject(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(84)
inline long ZOSAPI_Interfaces::IExportCAD::GetLastObject ( ) {
    long _result = 0;
    HRESULT _hr = get_LastObject(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(85)
inline void ZOSAPI_Interfaces::IExportCAD::PutLastObject ( long pRetVal ) {
    HRESULT _hr = put_LastObject(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(86)
inline VARIANT_BOOL ZOSAPI_Interfaces::IExportCAD::GetSequentialSettingsEnabled ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SequentialSettingsEnabled(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(87)
inline enum ZOSAPI_Interfaces::RayPatternType ZOSAPI_Interfaces::IExportCAD::GetRayPattern ( ) {
    enum RayPatternType _result;
    HRESULT _hr = get_RayPattern(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(88)
inline void ZOSAPI_Interfaces::IExportCAD::PutRayPattern ( enum RayPatternType pRetVal ) {
    HRESULT _hr = put_RayPattern(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(89)
inline long ZOSAPI_Interfaces::IExportCAD::GetNumberOfRays ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfRays(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(90)
inline void ZOSAPI_Interfaces::IExportCAD::PutNumberOfRays ( long pRetVal ) {
    HRESULT _hr = put_NumberOfRays(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(91)
inline long ZOSAPI_Interfaces::IExportCAD::GetWavelength ( ) {
    long _result = 0;
    HRESULT _hr = get_Wavelength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(92)
inline void ZOSAPI_Interfaces::IExportCAD::PutWavelength ( long pRetVal ) {
    HRESULT _hr = put_Wavelength(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(93)
inline HRESULT ZOSAPI_Interfaces::IExportCAD::SetWavelengthAll ( ) {
    HRESULT _hr = raw_SetWavelengthAll();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(94)
inline long ZOSAPI_Interfaces::IExportCAD::GetField ( ) {
    long _result = 0;
    HRESULT _hr = get_Field(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(95)
inline void ZOSAPI_Interfaces::IExportCAD::PutField ( long pRetVal ) {
    HRESULT _hr = put_Field(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(96)
inline HRESULT ZOSAPI_Interfaces::IExportCAD::SetFieldAll ( ) {
    HRESULT _hr = raw_SetFieldAll();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(97)
inline VARIANT_BOOL ZOSAPI_Interfaces::IExportCAD::GetDeleteVignetted ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DeleteVignetted(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(98)
inline void ZOSAPI_Interfaces::IExportCAD::PutDeleteVignetted ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_DeleteVignetted(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(99)
inline long ZOSAPI_Interfaces::IExportCAD::GetRayLayer ( ) {
    long _result = 0;
    HRESULT _hr = get_RayLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(100)
inline void ZOSAPI_Interfaces::IExportCAD::PutRayLayer ( long pRetVal ) {
    HRESULT _hr = put_RayLayer(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(101)
inline long ZOSAPI_Interfaces::IExportCAD::GetLensLayer ( ) {
    long _result = 0;
    HRESULT _hr = get_LensLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(102)
inline void ZOSAPI_Interfaces::IExportCAD::PutLensLayer ( long pRetVal ) {
    HRESULT _hr = put_LensLayer(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(103)
inline double ZOSAPI_Interfaces::IExportCAD::GetDummyThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_DummyThickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(104)
inline void ZOSAPI_Interfaces::IExportCAD::PutDummyThickness ( double pRetVal ) {
    HRESULT _hr = put_DummyThickness(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(105)
inline enum ZOSAPI_Interfaces::SplineSegmentsType ZOSAPI_Interfaces::IExportCAD::GetSplineSegments ( ) {
    enum SplineSegmentsType _result;
    HRESULT _hr = get_SplineSegments(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(106)
inline void ZOSAPI_Interfaces::IExportCAD::PutSplineSegments ( enum SplineSegmentsType pRetVal ) {
    HRESULT _hr = put_SplineSegments(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(107)
inline enum ZOSAPI_Interfaces::CADFileType ZOSAPI_Interfaces::IExportCAD::GetFileType ( ) {
    enum CADFileType _result;
    HRESULT _hr = get_FileType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(108)
inline void ZOSAPI_Interfaces::IExportCAD::PutFileType ( enum CADFileType pRetVal ) {
    HRESULT _hr = put_FileType(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(109)
inline enum ZOSAPI_Interfaces::CADToleranceType ZOSAPI_Interfaces::IExportCAD::GetTolerance ( ) {
    enum CADToleranceType _result;
    HRESULT _hr = get_Tolerance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(110)
inline void ZOSAPI_Interfaces::IExportCAD::PutTolerance ( enum CADToleranceType pRetVal ) {
    HRESULT _hr = put_Tolerance(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(111)
inline enum ZOSAPI_Interfaces::CADAngularToleranceType ZOSAPI_Interfaces::IExportCAD::GetAngularTolerance ( ) {
    enum CADAngularToleranceType _result;
    HRESULT _hr = get_AngularTolerance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(112)
inline void ZOSAPI_Interfaces::IExportCAD::PutAngularTolerance ( enum CADAngularToleranceType pRetVal ) {
    HRESULT _hr = put_AngularTolerance(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(113)
inline long ZOSAPI_Interfaces::IExportCAD::GetConfiguration ( ) {
    long _result = 0;
    HRESULT _hr = get_Configuration(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(114)
inline HRESULT ZOSAPI_Interfaces::IExportCAD::SetSingleConfiguration ( long configurationNumber ) {
    HRESULT _hr = raw_SetSingleConfiguration(configurationNumber);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(115)
inline HRESULT ZOSAPI_Interfaces::IExportCAD::SetCurrentConfiguration ( ) {
    HRESULT _hr = raw_SetCurrentConfiguration();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(116)
inline HRESULT ZOSAPI_Interfaces::IExportCAD::SetConfigurationAllByLayer ( ) {
    HRESULT _hr = raw_SetConfigurationAllByLayer();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(117)
inline HRESULT ZOSAPI_Interfaces::IExportCAD::SetConfigurationAllByFile ( ) {
    HRESULT _hr = raw_SetConfigurationAllByFile();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(118)
inline HRESULT ZOSAPI_Interfaces::IExportCAD::SetConfigurationAllAtOnce ( ) {
    HRESULT _hr = raw_SetConfigurationAllAtOnce();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(119)
inline VARIANT_BOOL ZOSAPI_Interfaces::IExportCAD::GetExportDummySurfaces ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ExportDummySurfaces(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(120)
inline void ZOSAPI_Interfaces::IExportCAD::PutExportDummySurfaces ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_ExportDummySurfaces(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(121)
inline VARIANT_BOOL ZOSAPI_Interfaces::IExportCAD::GetSurfacesAsSolids ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SurfacesAsSolids(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(122)
inline void ZOSAPI_Interfaces::IExportCAD::PutSurfacesAsSolids ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_SurfacesAsSolids(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(123)
inline VARIANT_BOOL ZOSAPI_Interfaces::IExportCAD::GetScatterNSCRays ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ScatterNSCRays(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(124)
inline void ZOSAPI_Interfaces::IExportCAD::PutScatterNSCRays ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_ScatterNSCRays(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(125)
inline VARIANT_BOOL ZOSAPI_Interfaces::IExportCAD::GetSplitNSCRays ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SplitNSCRays(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(126)
inline void ZOSAPI_Interfaces::IExportCAD::PutSplitNSCRays ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_SplitNSCRays(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(127)
inline VARIANT_BOOL ZOSAPI_Interfaces::IExportCAD::GetUsePolarization ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UsePolarization(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(128)
inline void ZOSAPI_Interfaces::IExportCAD::PutUsePolarization ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UsePolarization(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(129)
inline _bstr_t ZOSAPI_Interfaces::IExportCAD::GetOutputFileName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_OutputFileName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(130)
inline void ZOSAPI_Interfaces::IExportCAD::PutOutputFileName ( _bstr_t pRetVal ) {
    HRESULT _hr = put_OutputFileName(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(131)
inline VARIANT_BOOL ZOSAPI_Interfaces::IExportCAD::GetAutoNameFaces ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AutoNameFaces(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(132)
inline void ZOSAPI_Interfaces::IExportCAD::PutAutoNameFaces ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_AutoNameFaces(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IScale wrapper method implementations
//

#pragma implementation_key(133)
inline double ZOSAPI_Interfaces::IScale::GetScaleFactor ( ) {
    double _result = 0;
    HRESULT _hr = get_ScaleFactor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(134)
inline void ZOSAPI_Interfaces::IScale::PutScaleFactor ( double pRetVal ) {
    HRESULT _hr = put_ScaleFactor(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(135)
inline long ZOSAPI_Interfaces::IScale::GetFirstComponent ( ) {
    long _result = 0;
    HRESULT _hr = get_FirstComponent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(136)
inline void ZOSAPI_Interfaces::IScale::PutFirstComponent ( long pRetVal ) {
    HRESULT _hr = put_FirstComponent(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(137)
inline long ZOSAPI_Interfaces::IScale::GetLastComponent ( ) {
    long _result = 0;
    HRESULT _hr = get_LastComponent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(138)
inline void ZOSAPI_Interfaces::IScale::PutLastComponent ( long pRetVal ) {
    HRESULT _hr = put_LastComponent(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(139)
inline enum ZOSAPI_Interfaces::ScaleToUnits ZOSAPI_Interfaces::IScale::GetScaleToUnit ( ) {
    enum ScaleToUnits _result;
    HRESULT _hr = get_ScaleToUnit(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(140)
inline void ZOSAPI_Interfaces::IScale::PutScaleToUnit ( enum ScaleToUnits pRetVal ) {
    HRESULT _hr = put_ScaleToUnit(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(141)
inline VARIANT_BOOL ZOSAPI_Interfaces::IScale::GetScaleByFactor ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ScaleByFactor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(142)
inline void ZOSAPI_Interfaces::IScale::PutScaleByFactor ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_ScaleByFactor(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(143)
inline VARIANT_BOOL ZOSAPI_Interfaces::IScale::GetScaleByUnits ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ScaleByUnits(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(144)
inline void ZOSAPI_Interfaces::IScale::PutScaleByUnits ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_ScaleByUnits(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(145)
inline long ZOSAPI_Interfaces::IScale::GetNumberOfComponents ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfComponents(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(146)
inline _bstr_t ZOSAPI_Interfaces::IScale::GetComponentAt ( long idx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetComponentAt(idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

//
// interface IComputeRMSSpotSize wrapper method implementations
//

#pragma implementation_key(147)
inline VARIANT_BOOL ZOSAPI_Interfaces::IComputeRMSSpotSize::GetUseGaussianQuadrature ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseGaussianQuadrature(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(148)
inline VARIANT_BOOL ZOSAPI_Interfaces::IComputeRMSSpotSize::GetUseRectangularArray ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseRectangularArray(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(149)
inline long ZOSAPI_Interfaces::IComputeRMSSpotSize::GetNumberOfRings ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfRings(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(150)
inline long ZOSAPI_Interfaces::IComputeRMSSpotSize::GetNumberOfArms ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfArms(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(151)
inline double ZOSAPI_Interfaces::IComputeRMSSpotSize::GetObscuredFration ( ) {
    double _result = 0;
    HRESULT _hr = get_ObscuredFration(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(152)
inline long ZOSAPI_Interfaces::IComputeRMSSpotSize::GetGridSampling ( ) {
    long _result = 0;
    HRESULT _hr = get_GridSampling(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(153)
inline VARIANT_BOOL ZOSAPI_Interfaces::IComputeRMSSpotSize::GetDeleteVignetted ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DeleteVignetted(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(154)
inline VARIANT_BOOL ZOSAPI_Interfaces::IComputeRMSSpotSize::GetAssumeAxialSymmetry ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AssumeAxialSymmetry(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(155)
inline void ZOSAPI_Interfaces::IComputeRMSSpotSize::PutAssumeAxialSymmetry ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_AssumeAxialSymmetry(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(156)
inline VARIANT_BOOL ZOSAPI_Interfaces::IComputeRMSSpotSize::GetIgnoreLateralColor ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IgnoreLateralColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(157)
inline void ZOSAPI_Interfaces::IComputeRMSSpotSize::PutIgnoreLateralColor ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IgnoreLateralColor(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(158)
inline HRESULT ZOSAPI_Interfaces::IComputeRMSSpotSize::SetMethodGaussianQuadrature ( long NumberOfRings, long NumberOfArms, double obscuredFraction ) {
    HRESULT _hr = raw_SetMethodGaussianQuadrature(NumberOfRings, NumberOfArms, obscuredFraction);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(159)
inline HRESULT ZOSAPI_Interfaces::IComputeRMSSpotSize::SetMethodRectangularArray ( long GridSampling, VARIANT_BOOL DeleteVignetted ) {
    HRESULT _hr = raw_SetMethodRectangularArray(GridSampling, DeleteVignetted);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(160)
inline long ZOSAPI_Interfaces::IComputeRMSSpotSize::GetNumberOfConfigurations ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfConfigurations(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(161)
inline long ZOSAPI_Interfaces::IComputeRMSSpotSize::GetNumberOfFields ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfFields(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(162)
inline SAFEARRAY * ZOSAPI_Interfaces::IComputeRMSSpotSize::GetRMSSpotRadii ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = get_RMSSpotRadii(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(163)
inline double ZOSAPI_Interfaces::IComputeRMSSpotSize::GetSpotRadius ( long Configuration, long Field ) {
    double _result = 0;
    HRESULT _hr = raw_GetSpotRadius(Configuration, Field, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface ITolerancing wrapper method implementations
//

#pragma implementation_key(164)
inline VARIANT_BOOL ZOSAPI_Interfaces::ITolerancing::Save ( _bstr_t fileName ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_Save(fileName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(165)
inline VARIANT_BOOL ZOSAPI_Interfaces::ITolerancing::Load ( _bstr_t fileName ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_Load(fileName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(166)
inline VARIANT_BOOL ZOSAPI_Interfaces::ITolerancing::Reset ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_Reset(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(167)
inline _bstr_t ZOSAPI_Interfaces::ITolerancing::GetResultFilename ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ResultFilename(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(168)
inline VARIANT_BOOL ZOSAPI_Interfaces::ITolerancing::GetIsForceRayAimingUsed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsForceRayAimingUsed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(169)
inline void ZOSAPI_Interfaces::ITolerancing::PutIsForceRayAimingUsed ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsForceRayAimingUsed(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(170)
inline VARIANT_BOOL ZOSAPI_Interfaces::ITolerancing::GetIsSeperateFieldConfigurationsUsed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsSeperateFieldConfigurationsUsed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(171)
inline void ZOSAPI_Interfaces::ITolerancing::PutIsSeperateFieldConfigurationsUsed ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsSeperateFieldConfigurationsUsed(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(172)
inline enum ZOSAPI_Interfaces::SetupModes ZOSAPI_Interfaces::ITolerancing::GetSetupMode ( ) {
    enum SetupModes _result;
    HRESULT _hr = get_SetupMode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(173)
inline void ZOSAPI_Interfaces::ITolerancing::PutSetupMode ( enum SetupModes pRetVal ) {
    HRESULT _hr = put_SetupMode(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(174)
inline long ZOSAPI_Interfaces::ITolerancing::GetSetupModeIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_SetupModeIndex(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(175)
inline void ZOSAPI_Interfaces::ITolerancing::PutSetupModeIndex ( long pRetVal ) {
    HRESULT _hr = put_SetupModeIndex(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(176)
inline long ZOSAPI_Interfaces::ITolerancing::GetNumberOfSetupModes ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfSetupModes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(177)
inline _bstr_t ZOSAPI_Interfaces::ITolerancing::GetSetupModeAt ( long idx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetSetupModeAt(idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(178)
inline enum ZOSAPI_Interfaces::SetupPolynomials ZOSAPI_Interfaces::ITolerancing::GetSetupPolynomial ( ) {
    enum SetupPolynomials _result;
    HRESULT _hr = get_SetupPolynomial(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(179)
inline void ZOSAPI_Interfaces::ITolerancing::PutSetupPolynomial ( enum SetupPolynomials pRetVal ) {
    HRESULT _hr = put_SetupPolynomial(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(180)
inline long ZOSAPI_Interfaces::ITolerancing::GetSetupPolynomialsIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_SetupPolynomialsIndex(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(181)
inline void ZOSAPI_Interfaces::ITolerancing::PutSetupPolynomialsIndex ( long pRetVal ) {
    HRESULT _hr = put_SetupPolynomialsIndex(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(182)
inline long ZOSAPI_Interfaces::ITolerancing::GetNumberOfSetupPolynomials ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfSetupPolynomials(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(183)
inline _bstr_t ZOSAPI_Interfaces::ITolerancing::GetSetupPolynomialAt ( long idx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetSetupPolynomialAt(idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(184)
inline enum ZOSAPI_Interfaces::SetupCaches ZOSAPI_Interfaces::ITolerancing::GetSetupCache ( ) {
    enum SetupCaches _result;
    HRESULT _hr = get_SetupCache(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(185)
inline void ZOSAPI_Interfaces::ITolerancing::PutSetupCache ( enum SetupCaches pRetVal ) {
    HRESULT _hr = put_SetupCache(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(186)
inline long ZOSAPI_Interfaces::ITolerancing::GetSetupCacheIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_SetupCacheIndex(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(187)
inline void ZOSAPI_Interfaces::ITolerancing::PutSetupCacheIndex ( long pRetVal ) {
    HRESULT _hr = put_SetupCacheIndex(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(188)
inline long ZOSAPI_Interfaces::ITolerancing::GetNumberOfSetupCaches ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfSetupCaches(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(189)
inline _bstr_t ZOSAPI_Interfaces::ITolerancing::GetSetupCacheAt ( long idx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetSetupCacheAt(idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(190)
inline enum ZOSAPI_Interfaces::SetupChanges ZOSAPI_Interfaces::ITolerancing::GetSetupChange ( ) {
    enum SetupChanges _result;
    HRESULT _hr = get_SetupChange(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(191)
inline void ZOSAPI_Interfaces::ITolerancing::PutSetupChange ( enum SetupChanges pRetVal ) {
    HRESULT _hr = put_SetupChange(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(192)
inline long ZOSAPI_Interfaces::ITolerancing::GetSetupChangeIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_SetupChangeIndex(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(193)
inline void ZOSAPI_Interfaces::ITolerancing::PutSetupChangeIndex ( long pRetVal ) {
    HRESULT _hr = put_SetupChangeIndex(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(194)
inline long ZOSAPI_Interfaces::ITolerancing::GetNumberOfSetupChanges ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfSetupChanges(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(195)
inline _bstr_t ZOSAPI_Interfaces::ITolerancing::GetSetupChangeAt ( long idx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetSetupChangeAt(idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(196)
inline long ZOSAPI_Interfaces::ITolerancing::GetSetupCore ( ) {
    long _result = 0;
    HRESULT _hr = get_SetupCore(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(197)
inline void ZOSAPI_Interfaces::ITolerancing::PutSetupCore ( long pRetVal ) {
    HRESULT _hr = put_SetupCore(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(198)
inline long ZOSAPI_Interfaces::ITolerancing::GetSetupCoreIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_SetupCoreIndex(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(199)
inline void ZOSAPI_Interfaces::ITolerancing::PutSetupCoreIndex ( long pRetVal ) {
    HRESULT _hr = put_SetupCoreIndex(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(200)
inline long ZOSAPI_Interfaces::ITolerancing::GetNumberOfSetupCores ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfSetupCores(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(201)
inline _bstr_t ZOSAPI_Interfaces::ITolerancing::GetSetupCoreAt ( long idx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetSetupCoreAt(idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(202)
inline double ZOSAPI_Interfaces::ITolerancing::GetMaximumCriteria ( ) {
    double _result = 0;
    HRESULT _hr = get_MaximumCriteria(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(203)
inline void ZOSAPI_Interfaces::ITolerancing::PutMaximumCriteria ( double pRetVal ) {
    HRESULT _hr = put_MaximumCriteria(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(204)
inline double ZOSAPI_Interfaces::ITolerancing::GetMTFFrequency ( ) {
    double _result = 0;
    HRESULT _hr = get_MTFFrequency(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(205)
inline void ZOSAPI_Interfaces::ITolerancing::PutMTFFrequency ( double pRetVal ) {
    HRESULT _hr = put_MTFFrequency(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(206)
inline enum ZOSAPI_Interfaces::Criterions ZOSAPI_Interfaces::ITolerancing::GetCriterion ( ) {
    enum Criterions _result;
    HRESULT _hr = get_Criterion(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(207)
inline void ZOSAPI_Interfaces::ITolerancing::PutCriterion ( enum Criterions pRetVal ) {
    HRESULT _hr = put_Criterion(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(208)
inline long ZOSAPI_Interfaces::ITolerancing::GetCriterionIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_CriterionIndex(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(209)
inline void ZOSAPI_Interfaces::ITolerancing::PutCriterionIndex ( long pRetVal ) {
    HRESULT _hr = put_CriterionIndex(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(210)
inline long ZOSAPI_Interfaces::ITolerancing::GetNumberOfCriteria ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfCriteria(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(211)
inline _bstr_t ZOSAPI_Interfaces::ITolerancing::GetCriterionAt ( long idx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetCriterionAt(idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(212)
inline long ZOSAPI_Interfaces::ITolerancing::GetCriterionSampling ( ) {
    long _result = 0;
    HRESULT _hr = get_CriterionSampling(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(213)
inline void ZOSAPI_Interfaces::ITolerancing::PutCriterionSampling ( long pRetVal ) {
    HRESULT _hr = put_CriterionSampling(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(214)
inline long ZOSAPI_Interfaces::ITolerancing::GetCriterionSamplingIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_CriterionSamplingIndex(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(215)
inline void ZOSAPI_Interfaces::ITolerancing::PutCriterionSamplingIndex ( long pRetVal ) {
    HRESULT _hr = put_CriterionSamplingIndex(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(216)
inline long ZOSAPI_Interfaces::ITolerancing::GetNumberOfCriterionSamplings ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfCriterionSamplings(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(217)
inline _bstr_t ZOSAPI_Interfaces::ITolerancing::GetCriterionSampleAt ( long idx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetCriterionSampleAt(idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(218)
inline enum ZOSAPI_Interfaces::CriterionComps ZOSAPI_Interfaces::ITolerancing::GetCriterionComp ( ) {
    enum CriterionComps _result;
    HRESULT _hr = get_CriterionComp(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(219)
inline void ZOSAPI_Interfaces::ITolerancing::PutCriterionComp ( enum CriterionComps pRetVal ) {
    HRESULT _hr = put_CriterionComp(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(220)
inline long ZOSAPI_Interfaces::ITolerancing::GetCriterionCompIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_CriterionCompIndex(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(221)
inline void ZOSAPI_Interfaces::ITolerancing::PutCriterionCompIndex ( long pRetVal ) {
    HRESULT _hr = put_CriterionCompIndex(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(222)
inline long ZOSAPI_Interfaces::ITolerancing::GetNumberOfCriterionComps ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfCriterionComps(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(223)
inline _bstr_t ZOSAPI_Interfaces::ITolerancing::GetCriterionCompAt ( long idx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetCriterionCompAt(idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(224)
inline long ZOSAPI_Interfaces::ITolerancing::GetCriterionConfiguration ( ) {
    long _result = 0;
    HRESULT _hr = get_CriterionConfiguration(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(225)
inline void ZOSAPI_Interfaces::ITolerancing::PutCriterionConfiguration ( long pRetVal ) {
    HRESULT _hr = put_CriterionConfiguration(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(226)
inline long ZOSAPI_Interfaces::ITolerancing::GetCriterionConfigurationIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_CriterionConfigurationIndex(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(227)
inline void ZOSAPI_Interfaces::ITolerancing::PutCriterionConfigurationIndex ( long pRetVal ) {
    HRESULT _hr = put_CriterionConfigurationIndex(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(228)
inline long ZOSAPI_Interfaces::ITolerancing::GetNumberOfCriterionConfigurations ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfCriterionConfigurations(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(229)
inline _bstr_t ZOSAPI_Interfaces::ITolerancing::GetCriterionConfigurationAt ( long idx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetCriterionConfigurationAt(idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(230)
inline enum ZOSAPI_Interfaces::CriterionFields ZOSAPI_Interfaces::ITolerancing::GetCriterionField ( ) {
    enum CriterionFields _result;
    HRESULT _hr = get_CriterionField(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(231)
inline void ZOSAPI_Interfaces::ITolerancing::PutCriterionField ( enum CriterionFields pRetVal ) {
    HRESULT _hr = put_CriterionField(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(232)
inline long ZOSAPI_Interfaces::ITolerancing::GetCriterionFieldIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_CriterionFieldIndex(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(233)
inline void ZOSAPI_Interfaces::ITolerancing::PutCriterionFieldIndex ( long pRetVal ) {
    HRESULT _hr = put_CriterionFieldIndex(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(234)
inline long ZOSAPI_Interfaces::ITolerancing::GetNumberOfCriterionFields ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfCriterionFields(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(235)
inline _bstr_t ZOSAPI_Interfaces::ITolerancing::GetCriterionFieldAt ( long idx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetCriterionFieldAt(idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(236)
inline long ZOSAPI_Interfaces::ITolerancing::GetCriterionCycle ( ) {
    long _result = 0;
    HRESULT _hr = get_CriterionCycle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(237)
inline void ZOSAPI_Interfaces::ITolerancing::PutCriterionCycle ( long pRetVal ) {
    HRESULT _hr = put_CriterionCycle(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(238)
inline long ZOSAPI_Interfaces::ITolerancing::GetCriterionCycleIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_CriterionCycleIndex(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(239)
inline void ZOSAPI_Interfaces::ITolerancing::PutCriterionCycleIndex ( long pRetVal ) {
    HRESULT _hr = put_CriterionCycleIndex(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(240)
inline long ZOSAPI_Interfaces::ITolerancing::GetNumberOfCriterionCycles ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfCriterionCycles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(241)
inline _bstr_t ZOSAPI_Interfaces::ITolerancing::GetCriterionCycleAt ( long idx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetCriterionCycleAt(idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(242)
inline long ZOSAPI_Interfaces::ITolerancing::GetCriterionScript ( ) {
    long _result = 0;
    HRESULT _hr = get_CriterionScript(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(243)
inline void ZOSAPI_Interfaces::ITolerancing::PutCriterionScript ( long pRetVal ) {
    HRESULT _hr = put_CriterionScript(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(244)
inline long ZOSAPI_Interfaces::ITolerancing::GetCriterionScriptIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_CriterionScriptIndex(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(245)
inline void ZOSAPI_Interfaces::ITolerancing::PutCriterionScriptIndex ( long pRetVal ) {
    HRESULT _hr = put_CriterionScriptIndex(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(246)
inline long ZOSAPI_Interfaces::ITolerancing::GetNumberOfCriterionScripts ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfCriterionScripts(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(247)
inline _bstr_t ZOSAPI_Interfaces::ITolerancing::GetCriterionScriptAt ( long idx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetCriterionScriptAt(idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(248)
inline long ZOSAPI_Interfaces::ITolerancing::GetNumberOfRuns ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfRuns(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(249)
inline void ZOSAPI_Interfaces::ITolerancing::PutNumberOfRuns ( long pRetVal ) {
    HRESULT _hr = put_NumberOfRuns(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(250)
inline long ZOSAPI_Interfaces::ITolerancing::GetNumberToSave ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberToSave(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(251)
inline void ZOSAPI_Interfaces::ITolerancing::PutNumberToSave ( long pRetVal ) {
    HRESULT _hr = put_NumberToSave(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(252)
inline VARIANT_BOOL ZOSAPI_Interfaces::ITolerancing::GetIsSaveBestWorstUsed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsSaveBestWorstUsed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(253)
inline void ZOSAPI_Interfaces::ITolerancing::PutIsSaveBestWorstUsed ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsSaveBestWorstUsed(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(254)
inline VARIANT_BOOL ZOSAPI_Interfaces::ITolerancing::GetIsOverlayGraphicsUsed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsOverlayGraphicsUsed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(255)
inline void ZOSAPI_Interfaces::ITolerancing::PutIsOverlayGraphicsUsed ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsOverlayGraphicsUsed(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(256)
inline _bstr_t ZOSAPI_Interfaces::ITolerancing::GetFilePrefix ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FilePrefix(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(257)
inline void ZOSAPI_Interfaces::ITolerancing::PutFilePrefix ( _bstr_t pRetVal ) {
    HRESULT _hr = put_FilePrefix(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(258)
inline enum ZOSAPI_Interfaces::MonteCarloStatistics ZOSAPI_Interfaces::ITolerancing::GetMonteCarloStatistic ( ) {
    enum MonteCarloStatistics _result;
    HRESULT _hr = get_MonteCarloStatistic(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(259)
inline void ZOSAPI_Interfaces::ITolerancing::PutMonteCarloStatistic ( enum MonteCarloStatistics pRetVal ) {
    HRESULT _hr = put_MonteCarloStatistic(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(260)
inline long ZOSAPI_Interfaces::ITolerancing::GetMonteCarloStatisticIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_MonteCarloStatisticIndex(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(261)
inline void ZOSAPI_Interfaces::ITolerancing::PutMonteCarloStatisticIndex ( long pRetVal ) {
    HRESULT _hr = put_MonteCarloStatisticIndex(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(262)
inline long ZOSAPI_Interfaces::ITolerancing::GetNumberOfMonteCarloStatistics ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfMonteCarloStatistics(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(263)
inline _bstr_t ZOSAPI_Interfaces::ITolerancing::GetMonteCarloStatisticAt ( long idx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetMonteCarloStatisticAt(idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(264)
inline VARIANT_BOOL ZOSAPI_Interfaces::ITolerancing::GetIsShowDescriptionsUsed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsShowDescriptionsUsed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(265)
inline void ZOSAPI_Interfaces::ITolerancing::PutIsShowDescriptionsUsed ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsShowDescriptionsUsed(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(266)
inline VARIANT_BOOL ZOSAPI_Interfaces::ITolerancing::GetIsShowCompensatorsUsed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsShowCompensatorsUsed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(267)
inline void ZOSAPI_Interfaces::ITolerancing::PutIsShowCompensatorsUsed ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsShowCompensatorsUsed(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(268)
inline VARIANT_BOOL ZOSAPI_Interfaces::ITolerancing::GetIsHideAllButWorstUsed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsHideAllButWorstUsed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(269)
inline void ZOSAPI_Interfaces::ITolerancing::PutIsHideAllButWorstUsed ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsHideAllButWorstUsed(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(270)
inline _bstr_t ZOSAPI_Interfaces::ITolerancing::GetOutputFile ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_OutputFile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(271)
inline void ZOSAPI_Interfaces::ITolerancing::PutOutputFile ( _bstr_t pRetVal ) {
    HRESULT _hr = put_OutputFile(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(272)
inline long ZOSAPI_Interfaces::ITolerancing::GetDisplayShowWorst ( ) {
    long _result = 0;
    HRESULT _hr = get_DisplayShowWorst(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(273)
inline void ZOSAPI_Interfaces::ITolerancing::PutDisplayShowWorst ( long pRetVal ) {
    HRESULT _hr = put_DisplayShowWorst(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(274)
inline long ZOSAPI_Interfaces::ITolerancing::GetDisplayShowWorstIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_DisplayShowWorstIndex(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(275)
inline void ZOSAPI_Interfaces::ITolerancing::PutDisplayShowWorstIndex ( long pRetVal ) {
    HRESULT _hr = put_DisplayShowWorstIndex(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(276)
inline long ZOSAPI_Interfaces::ITolerancing::GetNumberOfDisplayShowWorsts ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfDisplayShowWorsts(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(277)
inline _bstr_t ZOSAPI_Interfaces::ITolerancing::GetDisplayShowWorstAt ( long idx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetDisplayShowWorstAt(idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

//
// interface ILightningTrace wrapper method implementations
//

#pragma implementation_key(278)
inline enum ZOSAPI_Interfaces::LTRaySampling ZOSAPI_Interfaces::ILightningTrace::GetRaySampling ( ) {
    enum LTRaySampling _result;
    HRESULT _hr = get_RaySampling(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(279)
inline void ZOSAPI_Interfaces::ILightningTrace::PutRaySampling ( enum LTRaySampling pRetVal ) {
    HRESULT _hr = put_RaySampling(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(280)
inline enum ZOSAPI_Interfaces::LTEdgeSasmpling ZOSAPI_Interfaces::ILightningTrace::GetEdgeSampling ( ) {
    enum LTEdgeSasmpling _result;
    HRESULT _hr = get_EdgeSampling(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(281)
inline void ZOSAPI_Interfaces::ILightningTrace::PutEdgeSampling ( enum LTEdgeSasmpling pRetVal ) {
    HRESULT _hr = put_EdgeSampling(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IRayTraceNormUnpolData wrapper method implementations
//

#pragma implementation_key(282)
inline long ZOSAPI_Interfaces::IRayTraceNormUnpolData::GetNumberOfRays ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfRays(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(283)
inline long ZOSAPI_Interfaces::IRayTraceNormUnpolData::GetMaxRays ( ) {
    long _result = 0;
    HRESULT _hr = get_MaxRays(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(284)
inline HRESULT ZOSAPI_Interfaces::IRayTraceNormUnpolData::ClearData ( ) {
    HRESULT _hr = raw_ClearData();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(285)
inline VARIANT_BOOL ZOSAPI_Interfaces::IRayTraceNormUnpolData::AddRay ( long waveNumber, double Hx, double Hy, double Px, double Py, enum OPDMode calcOPD ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_AddRay(waveNumber, Hx, Hy, Px, Py, calcOPD, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(286)
inline VARIANT_BOOL ZOSAPI_Interfaces::IRayTraceNormUnpolData::GetHasResultData ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_HasResultData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(287)
inline VARIANT_BOOL ZOSAPI_Interfaces::IRayTraceNormUnpolData::StartReadingResults ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_StartReadingResults(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(288)
inline VARIANT_BOOL ZOSAPI_Interfaces::IRayTraceNormUnpolData::ReadNextResult ( long * rayNumber, long * ErrorCode, long * vignetteCode, double * X, double * Y, double * Z, double * L, double * M, double * N, double * l2, double * m2, double * n2, double * opd, double * intensity ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_ReadNextResult(rayNumber, ErrorCode, vignetteCode, X, Y, Z, L, M, N, l2, m2, n2, opd, intensity, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRayTraceDirectUnpolData wrapper method implementations
//

#pragma implementation_key(289)
inline long ZOSAPI_Interfaces::IRayTraceDirectUnpolData::GetNumberOfRays ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfRays(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(290)
inline long ZOSAPI_Interfaces::IRayTraceDirectUnpolData::GetMaxRays ( ) {
    long _result = 0;
    HRESULT _hr = get_MaxRays(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(291)
inline HRESULT ZOSAPI_Interfaces::IRayTraceDirectUnpolData::ClearData ( ) {
    HRESULT _hr = raw_ClearData();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(292)
inline VARIANT_BOOL ZOSAPI_Interfaces::IRayTraceDirectUnpolData::AddRay ( long waveNumber, double X, double Y, double Z, double L, double M, double N ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_AddRay(waveNumber, X, Y, Z, L, M, N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(293)
inline VARIANT_BOOL ZOSAPI_Interfaces::IRayTraceDirectUnpolData::GetHasResultData ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_HasResultData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(294)
inline VARIANT_BOOL ZOSAPI_Interfaces::IRayTraceDirectUnpolData::StartReadingResults ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_StartReadingResults(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(295)
inline VARIANT_BOOL ZOSAPI_Interfaces::IRayTraceDirectUnpolData::ReadNextResult ( long * rayNumber, long * ErrorCode, long * vignetteCode, double * X, double * Y, double * Z, double * L, double * M, double * N, double * l2, double * m2, double * n2, double * intensity ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_ReadNextResult(rayNumber, ErrorCode, vignetteCode, X, Y, Z, L, M, N, l2, m2, n2, intensity, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRayTraceNormPolData wrapper method implementations
//

#pragma implementation_key(296)
inline long ZOSAPI_Interfaces::IRayTraceNormPolData::GetNumberOfRays ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfRays(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(297)
inline long ZOSAPI_Interfaces::IRayTraceNormPolData::GetMaxRays ( ) {
    long _result = 0;
    HRESULT _hr = get_MaxRays(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(298)
inline HRESULT ZOSAPI_Interfaces::IRayTraceNormPolData::ClearData ( ) {
    HRESULT _hr = raw_ClearData();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(299)
inline VARIANT_BOOL ZOSAPI_Interfaces::IRayTraceNormPolData::AddRay ( long waveNumber, double Hx, double Hy, double Px, double Py, double exr, double exi, double eyr, double eyi, double ezr, double ezi ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_AddRay(waveNumber, Hx, Hy, Px, Py, exr, exi, eyr, eyi, ezr, ezi, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(300)
inline VARIANT_BOOL ZOSAPI_Interfaces::IRayTraceNormPolData::GetHasResultData ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_HasResultData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(301)
inline VARIANT_BOOL ZOSAPI_Interfaces::IRayTraceNormPolData::StartReadingResults ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_StartReadingResults(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(302)
inline VARIANT_BOOL ZOSAPI_Interfaces::IRayTraceNormPolData::ReadNextResult ( long * rayNumber, long * ErrorCode, double * exr, double * exi, double * eyr, double * eyi, double * ezr, double * ezi, double * intensity ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_ReadNextResult(rayNumber, ErrorCode, exr, exi, eyr, eyi, ezr, ezi, intensity, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(303)
inline VARIANT_BOOL ZOSAPI_Interfaces::IRayTraceNormPolData::ReadNextResultFull ( long * rayNumber, long * ErrorCode, double * xo, double * yo, double * zo, double * lo, double * mo, double * no, double * exr, double * exi, double * eyr, double * eyi, double * ezr, double * ezi, double * intensity ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_ReadNextResultFull(rayNumber, ErrorCode, xo, yo, zo, lo, mo, no, exr, exi, eyr, eyi, ezr, ezi, intensity, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRayTraceDirectPolData wrapper method implementations
//

#pragma implementation_key(304)
inline long ZOSAPI_Interfaces::IRayTraceDirectPolData::GetNumberOfRays ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfRays(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(305)
inline long ZOSAPI_Interfaces::IRayTraceDirectPolData::GetMaxRays ( ) {
    long _result = 0;
    HRESULT _hr = get_MaxRays(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(306)
inline HRESULT ZOSAPI_Interfaces::IRayTraceDirectPolData::ClearData ( ) {
    HRESULT _hr = raw_ClearData();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(307)
inline VARIANT_BOOL ZOSAPI_Interfaces::IRayTraceDirectPolData::AddRay ( long waveNumber, double X, double Y, double Z, double L, double M, double N ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_AddRay(waveNumber, X, Y, Z, L, M, N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(308)
inline VARIANT_BOOL ZOSAPI_Interfaces::IRayTraceDirectPolData::GetHasResultData ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_HasResultData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(309)
inline VARIANT_BOOL ZOSAPI_Interfaces::IRayTraceDirectPolData::StartReadingResults ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_StartReadingResults(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(310)
inline VARIANT_BOOL ZOSAPI_Interfaces::IRayTraceDirectPolData::ReadNextResult ( long * rayNumber, long * ErrorCode, long * vignetteCode, double * exr, double * exi, double * eyr, double * eyi, double * ezr, double * ezi, double * intensity ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_ReadNextResult(rayNumber, ErrorCode, vignetteCode, exr, exi, eyr, eyi, ezr, ezi, intensity, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(311)
inline VARIANT_BOOL ZOSAPI_Interfaces::IRayTraceDirectPolData::ReadNextResultFull ( long * rayNumber, long * ErrorCode, long * vignetteCode, double * xo, double * yo, double * zo, double * lo, double * mo, double * no, double * exr, double * exi, double * eyr, double * eyi, double * ezr, double * ezi, double * intensity ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_ReadNextResultFull(rayNumber, ErrorCode, vignetteCode, xo, yo, zo, lo, mo, no, exr, exi, eyr, eyi, ezr, ezi, intensity, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRayTraceNSCData wrapper method implementations
//

#pragma implementation_key(312)
inline long ZOSAPI_Interfaces::IRayTraceNSCData::GetNumberOfRays ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfRays(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(313)
inline long ZOSAPI_Interfaces::IRayTraceNSCData::GetMaxRays ( ) {
    long _result = 0;
    HRESULT _hr = get_MaxRays(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(314)
inline HRESULT ZOSAPI_Interfaces::IRayTraceNSCData::ClearData ( ) {
    HRESULT _hr = raw_ClearData();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(315)
inline VARIANT_BOOL ZOSAPI_Interfaces::IRayTraceNSCData::AddRay ( long waveNumber, long surf, enum NSCTraceOptions Mode, double X, double Y, double Z, double L, double M, double N, long InsideOf, double exr, double exi, double eyr, double eyi, double ezr, double ezi ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_AddRay(waveNumber, surf, Mode, X, Y, Z, L, M, N, InsideOf, exr, exi, eyr, eyi, ezr, ezi, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(316)
inline VARIANT_BOOL ZOSAPI_Interfaces::IRayTraceNSCData::GetHasResultData ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_HasResultData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(317)
inline VARIANT_BOOL ZOSAPI_Interfaces::IRayTraceNSCData::StartReadingResults ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_StartReadingResults(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(318)
inline VARIANT_BOOL ZOSAPI_Interfaces::IRayTraceNSCData::ReadNextResult ( long * rayNumber, long * ErrorCode, long * wave, long * numSegments ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_ReadNextResult(rayNumber, ErrorCode, wave, numSegments, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(319)
inline VARIANT_BOOL ZOSAPI_Interfaces::IRayTraceNSCData::ReadNextSegment ( long * segmentLevel, long * segmentParent, long * hitObj, long * InsideOf, double * X, double * Y, double * Z, double * L, double * M, double * N, double * exr, double * exi, double * eyr, double * eyi, double * ezr, double * ezi, double * intensity, double * pathLength ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_ReadNextSegment(segmentLevel, segmentParent, hitObj, InsideOf, X, Y, Z, L, M, N, exr, exi, eyr, eyi, ezr, ezi, intensity, pathLength, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IRayTraceNSCSourceData wrapper method implementations
//

#pragma implementation_key(320)
inline VARIANT_BOOL ZOSAPI_Interfaces::IRayTraceNSCSourceData::GetUseSingleSource ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseSingleSource(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(321)
inline void ZOSAPI_Interfaces::IRayTraceNSCSourceData::PutUseSingleSource ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UseSingleSource(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(322)
inline long ZOSAPI_Interfaces::IRayTraceNSCSourceData::GetSurfaceNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_SurfaceNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(323)
inline void ZOSAPI_Interfaces::IRayTraceNSCSourceData::PutSurfaceNumber ( long pRetVal ) {
    HRESULT _hr = put_SurfaceNumber(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(324)
inline long ZOSAPI_Interfaces::IRayTraceNSCSourceData::GetObjectNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_ObjectNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(325)
inline void ZOSAPI_Interfaces::IRayTraceNSCSourceData::PutObjectNumber ( long pRetVal ) {
    HRESULT _hr = put_ObjectNumber(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(326)
inline long ZOSAPI_Interfaces::IRayTraceNSCSourceData::GetMaxRays ( ) {
    long _result = 0;
    HRESULT _hr = get_MaxRays(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(327)
inline void ZOSAPI_Interfaces::IRayTraceNSCSourceData::PutMaxRays ( long pRetVal ) {
    HRESULT _hr = put_MaxRays(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(328)
inline enum ZOSAPI_Interfaces::NSCTraceOptions ZOSAPI_Interfaces::IRayTraceNSCSourceData::GetTraceOptions ( ) {
    enum NSCTraceOptions _result;
    HRESULT _hr = get_TraceOptions(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(329)
inline void ZOSAPI_Interfaces::IRayTraceNSCSourceData::PutTraceOptions ( enum NSCTraceOptions pRetVal ) {
    HRESULT _hr = put_TraceOptions(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(330)
inline long ZOSAPI_Interfaces::IRayTraceNSCSourceData::GetWavelength ( ) {
    long _result = 0;
    HRESULT _hr = get_Wavelength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(331)
inline void ZOSAPI_Interfaces::IRayTraceNSCSourceData::PutWavelength ( long pRetVal ) {
    HRESULT _hr = put_Wavelength(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(332)
inline HRESULT ZOSAPI_Interfaces::IRayTraceNSCSourceData::UsePrimaryWavelength ( ) {
    HRESULT _hr = raw_UsePrimaryWavelength();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(333)
inline HRESULT ZOSAPI_Interfaces::IRayTraceNSCSourceData::UseAnyWavelength ( ) {
    HRESULT _hr = raw_UseAnyWavelength();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(334)
inline VARIANT_BOOL ZOSAPI_Interfaces::IRayTraceNSCSourceData::GetHasResultData ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_HasResultData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(335)
inline VARIANT_BOOL ZOSAPI_Interfaces::IRayTraceNSCSourceData::StartReadingResults ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_StartReadingResults(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(336)
inline VARIANT_BOOL ZOSAPI_Interfaces::IRayTraceNSCSourceData::ReadNextResult ( long * rayNumber, long * ErrorCode, long * wave, long * numSegments ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_ReadNextResult(rayNumber, ErrorCode, wave, numSegments, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(337)
inline VARIANT_BOOL ZOSAPI_Interfaces::IRayTraceNSCSourceData::ReadNextSegment ( long * segmentLevel, long * segmentParent, long * hitObj, long * InsideOf, double * X, double * Y, double * Z, double * L, double * M, double * N, double * exr, double * exi, double * eyr, double * eyi, double * ezr, double * ezi, double * intensity, double * pathLength ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_ReadNextSegment(segmentLevel, segmentParent, hitObj, InsideOf, X, Y, Z, L, M, N, exr, exi, eyr, eyi, ezr, ezi, intensity, pathLength, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IBatchRayTrace wrapper method implementations
//

#pragma implementation_key(338)
inline ZOSAPI_Interfaces::IRayTraceNormUnpolDataPtr ZOSAPI_Interfaces::IBatchRayTrace::CreateNormUnpol ( long MaxRays, enum RaysType rayType, long toSurface ) {
    struct IRayTraceNormUnpolData * _result = 0;
    HRESULT _hr = raw_CreateNormUnpol(MaxRays, rayType, toSurface, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRayTraceNormUnpolDataPtr(_result, false);
}

#pragma implementation_key(339)
inline VARIANT_BOOL ZOSAPI_Interfaces::IBatchRayTrace::SingleRayNormUnpol ( enum RaysType rayType, long toSurf, long waveNumber, double Hx, double Hy, double Px, double Py, VARIANT_BOOL calcOPD, long * ErrorCode, long * vignetteCode, double * xo, double * yo, double * zo, double * lo, double * mo, double * no, double * l2o, double * m2o, double * n2o, double * opd, double * intensity ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_SingleRayNormUnpol(rayType, toSurf, waveNumber, Hx, Hy, Px, Py, calcOPD, ErrorCode, vignetteCode, xo, yo, zo, lo, mo, no, l2o, m2o, n2o, opd, intensity, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(340)
inline ZOSAPI_Interfaces::IRayTraceDirectUnpolDataPtr ZOSAPI_Interfaces::IBatchRayTrace::CreateDirectUnpol ( long MaxRays, enum RaysType rayType, long startSurface, long toSurface ) {
    struct IRayTraceDirectUnpolData * _result = 0;
    HRESULT _hr = raw_CreateDirectUnpol(MaxRays, rayType, startSurface, toSurface, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRayTraceDirectUnpolDataPtr(_result, false);
}

#pragma implementation_key(341)
inline VARIANT_BOOL ZOSAPI_Interfaces::IBatchRayTrace::SingleRayDirectUnpol ( enum RaysType rayType, long startSurface, long toSurface, long waveNumber, double X, double Y, double Z, double L, double M, double N, long * ErrorCode, long * vignetteCode, double * xo, double * yo, double * zo, double * lo, double * mo, double * no, double * l2o, double * m2o, double * n2o, double * intensity ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_SingleRayDirectUnpol(rayType, startSurface, toSurface, waveNumber, X, Y, Z, L, M, N, ErrorCode, vignetteCode, xo, yo, zo, lo, mo, no, l2o, m2o, n2o, intensity, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(342)
inline ZOSAPI_Interfaces::IRayTraceNormPolDataPtr ZOSAPI_Interfaces::IBatchRayTrace::CreateNormPol ( long MaxRays, enum RaysType rayType, double Ex, double Ey, double phaX, double phaY, long toSurface ) {
    struct IRayTraceNormPolData * _result = 0;
    HRESULT _hr = raw_CreateNormPol(MaxRays, rayType, Ex, Ey, phaX, phaY, toSurface, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRayTraceNormPolDataPtr(_result, false);
}

#pragma implementation_key(343)
inline VARIANT_BOOL ZOSAPI_Interfaces::IBatchRayTrace::SingleRayNormPol ( enum RaysType rayType, double Ex, double Ey, double phaX, double phaY, long toSurf, long waveNumber, double Hx, double Hy, double Px, double Py, double exr, double exi, double eyr, double eyi, double ezr, double ezi, long * ErrorCode, double * exro, double * exio, double * eyro, double * eyio, double * ezro, double * ezio, double * intensity ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_SingleRayNormPol(rayType, Ex, Ey, phaX, phaY, toSurf, waveNumber, Hx, Hy, Px, Py, exr, exi, eyr, eyi, ezr, ezi, ErrorCode, exro, exio, eyro, eyio, ezro, ezio, intensity, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(344)
inline VARIANT_BOOL ZOSAPI_Interfaces::IBatchRayTrace::SingleRayNormPolFull ( enum RaysType rayType, double Ex, double Ey, double phaX, double phaY, long toSurf, long waveNumber, double Hx, double Hy, double Px, double Py, double exr, double exi, double eyr, double eyi, double ezr, double ezi, long * ErrorCode, double * xo, double * yo, double * zo, double * lo, double * mo, double * no, double * exro, double * exio, double * eyro, double * eyio, double * ezro, double * ezio, double * intensity ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_SingleRayNormPolFull(rayType, Ex, Ey, phaX, phaY, toSurf, waveNumber, Hx, Hy, Px, Py, exr, exi, eyr, eyi, ezr, ezi, ErrorCode, xo, yo, zo, lo, mo, no, exro, exio, eyro, eyio, ezro, ezio, intensity, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(345)
inline ZOSAPI_Interfaces::IRayTraceDirectPolDataPtr ZOSAPI_Interfaces::IBatchRayTrace::CreateDirectPol ( long MaxRays, enum RaysType rayType, double Ex, double Ey, double phaX, double phaY, long startSurface, long toSurface ) {
    struct IRayTraceDirectPolData * _result = 0;
    HRESULT _hr = raw_CreateDirectPol(MaxRays, rayType, Ex, Ey, phaX, phaY, startSurface, toSurface, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRayTraceDirectPolDataPtr(_result, false);
}

#pragma implementation_key(346)
inline VARIANT_BOOL ZOSAPI_Interfaces::IBatchRayTrace::SingleRayDirectPol ( enum RaysType rayType, double Ex, double Ey, double phaX, double phaY, long startSurface, long toSurface, long waveNumber, double X, double Y, double Z, double L, double M, double N, long * ErrorCode, long * vignetteCode, double * exro, double * exio, double * eyro, double * eyio, double * ezro, double * ezio, double * intensity ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_SingleRayDirectPol(rayType, Ex, Ey, phaX, phaY, startSurface, toSurface, waveNumber, X, Y, Z, L, M, N, ErrorCode, vignetteCode, exro, exio, eyro, eyio, ezro, ezio, intensity, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(347)
inline VARIANT_BOOL ZOSAPI_Interfaces::IBatchRayTrace::SingleRayDirectPolFull ( enum RaysType rayType, double Ex, double Ey, double phaX, double phaY, long startSurface, long toSurface, long waveNumber, double X, double Y, double Z, double L, double M, double N, long * ErrorCode, long * vignetteCode, double * xo, double * yo, double * zo, double * lo, double * mo, double * no, double * exro, double * exio, double * eyro, double * eyio, double * ezro, double * ezio, double * intensity ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_SingleRayDirectPolFull(rayType, Ex, Ey, phaX, phaY, startSurface, toSurface, waveNumber, X, Y, Z, L, M, N, ErrorCode, vignetteCode, xo, yo, zo, lo, mo, no, exro, exio, eyro, eyio, ezro, ezio, intensity, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(348)
inline ZOSAPI_Interfaces::IRayTraceNSCDataPtr ZOSAPI_Interfaces::IBatchRayTrace::CreateNSC ( long MaxRays, long maxSegments, double coherenceLength ) {
    struct IRayTraceNSCData * _result = 0;
    HRESULT _hr = raw_CreateNSC(MaxRays, maxSegments, coherenceLength, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRayTraceNSCDataPtr(_result, false);
}

#pragma implementation_key(349)
inline ZOSAPI_Interfaces::IRayTraceNSCSourceDataPtr ZOSAPI_Interfaces::IBatchRayTrace::CreateNSCSourceData ( long maxSegments, double coherenceLength ) {
    struct IRayTraceNSCSourceData * _result = 0;
    HRESULT _hr = raw_CreateNSCSourceData(maxSegments, coherenceLength, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRayTraceNSCSourceDataPtr(_result, false);
}

#pragma implementation_key(350)
inline VARIANT_BOOL ZOSAPI_Interfaces::IBatchRayTrace::GetDirectFieldCoordinates ( long waveNumber, enum RaysType rayType, double Hx, double Hy, double Px, double Py, double * X, double * Y, double * Z, double * L, double * M, double * N ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_GetDirectFieldCoordinates(waveNumber, rayType, Hx, Hy, Px, Py, X, Y, Z, L, M, N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(351)
inline HRESULT ZOSAPI_Interfaces::IBatchRayTrace::GetPhase ( double L, double M, double N, double jx, double jy, double xPhaseDeg, double yPhaseDeg, double intensity, double * exr, double * exi, double * eyr, double * eyi, double * ezr, double * ezi ) {
    HRESULT _hr = raw_GetPhase(L, M, N, jx, jy, xPhaseDeg, yPhaseDeg, intensity, exr, exi, eyr, eyi, ezr, ezi);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IZRDReaderResults wrapper method implementations
//

#pragma implementation_key(352)
inline VARIANT_BOOL ZOSAPI_Interfaces::IZRDReaderResults::GetIsValid ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsValid(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(353)
inline VARIANT_BOOL ZOSAPI_Interfaces::IZRDReaderResults::ReadNextResult ( long * rayNumber, long * waveIndex, double * wlUM, long * numSegments ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_ReadNextResult(rayNumber, waveIndex, wlUM, numSegments, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(354)
inline VARIANT_BOOL ZOSAPI_Interfaces::IZRDReaderResults::ReadNextSegment ( long * segmentLevel, long * segmentParent, long * hitObj, long * hitFace, long * InsideOf, enum RayStatus * Status, double * X, double * Y, double * Z, double * L, double * M, double * N, double * exr, double * exi, double * eyr, double * eyi, double * ezr, double * ezi, double * intensity, double * pathLength ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_ReadNextSegment(segmentLevel, segmentParent, hitObj, hitFace, InsideOf, Status, X, Y, Z, L, M, N, exr, exi, eyr, eyi, ezr, ezi, intensity, pathLength, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IZRDReader wrapper method implementations
//

#pragma implementation_key(355)
inline void ZOSAPI_Interfaces::IZRDReader::PutZRDFile ( _bstr_t _arg1 ) {
    HRESULT _hr = put_ZRDFile(_arg1);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(356)
inline _bstr_t ZOSAPI_Interfaces::IZRDReader::GetFilter ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Filter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(357)
inline void ZOSAPI_Interfaces::IZRDReader::PutFilter ( _bstr_t pRetVal ) {
    HRESULT _hr = put_Filter(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(358)
inline ZOSAPI_Interfaces::IZRDReaderResultsPtr ZOSAPI_Interfaces::IZRDReader::GetResults ( ) {
    struct IZRDReaderResults * _result = 0;
    HRESULT _hr = raw_GetResults(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IZRDReaderResultsPtr(_result, false);
}

//
// interface ILocalOptimization wrapper method implementations
//

#pragma implementation_key(359)
inline enum ZOSAPI_Interfaces::OptimizationAlgorithm ZOSAPI_Interfaces::ILocalOptimization::GetAlgorithm ( ) {
    enum OptimizationAlgorithm _result;
    HRESULT _hr = get_Algorithm(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(360)
inline void ZOSAPI_Interfaces::ILocalOptimization::PutAlgorithm ( enum OptimizationAlgorithm pRetVal ) {
    HRESULT _hr = put_Algorithm(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(361)
inline long ZOSAPI_Interfaces::ILocalOptimization::GetNumberOfCores ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfCores(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(362)
inline void ZOSAPI_Interfaces::ILocalOptimization::PutNumberOfCores ( long pRetVal ) {
    HRESULT _hr = put_NumberOfCores(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(363)
inline long ZOSAPI_Interfaces::ILocalOptimization::GetMaxCores ( ) {
    long _result = 0;
    HRESULT _hr = get_MaxCores(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(364)
inline enum ZOSAPI_Interfaces::OptimizationCycles ZOSAPI_Interfaces::ILocalOptimization::GetCycles ( ) {
    enum OptimizationCycles _result;
    HRESULT _hr = get_Cycles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(365)
inline void ZOSAPI_Interfaces::ILocalOptimization::PutCycles ( enum OptimizationCycles pRetVal ) {
    HRESULT _hr = put_Cycles(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(366)
inline long ZOSAPI_Interfaces::ILocalOptimization::GetTargets ( ) {
    long _result = 0;
    HRESULT _hr = get_Targets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(367)
inline long ZOSAPI_Interfaces::ILocalOptimization::GetVariables ( ) {
    long _result = 0;
    HRESULT _hr = get_Variables(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(368)
inline double ZOSAPI_Interfaces::ILocalOptimization::GetInitialMeritFunction ( ) {
    double _result = 0;
    HRESULT _hr = get_InitialMeritFunction(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(369)
inline double ZOSAPI_Interfaces::ILocalOptimization::GetCurrentMeritFunction ( ) {
    double _result = 0;
    HRESULT _hr = get_CurrentMeritFunction(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IGlobalOptimization wrapper method implementations
//

#pragma implementation_key(370)
inline enum ZOSAPI_Interfaces::OptimizationAlgorithm ZOSAPI_Interfaces::IGlobalOptimization::GetAlgorithm ( ) {
    enum OptimizationAlgorithm _result;
    HRESULT _hr = get_Algorithm(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(371)
inline void ZOSAPI_Interfaces::IGlobalOptimization::PutAlgorithm ( enum OptimizationAlgorithm pRetVal ) {
    HRESULT _hr = put_Algorithm(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(372)
inline long ZOSAPI_Interfaces::IGlobalOptimization::GetNumberOfCores ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfCores(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(373)
inline void ZOSAPI_Interfaces::IGlobalOptimization::PutNumberOfCores ( long pRetVal ) {
    HRESULT _hr = put_NumberOfCores(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(374)
inline long ZOSAPI_Interfaces::IGlobalOptimization::GetMaxCores ( ) {
    long _result = 0;
    HRESULT _hr = get_MaxCores(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(375)
inline enum ZOSAPI_Interfaces::OptimizationSaveCount ZOSAPI_Interfaces::IGlobalOptimization::GetNumberToSave ( ) {
    enum OptimizationSaveCount _result;
    HRESULT _hr = get_NumberToSave(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(376)
inline void ZOSAPI_Interfaces::IGlobalOptimization::PutNumberToSave ( enum OptimizationSaveCount pRetVal ) {
    HRESULT _hr = put_NumberToSave(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(377)
inline long ZOSAPI_Interfaces::IGlobalOptimization::GetTargets ( ) {
    long _result = 0;
    HRESULT _hr = get_Targets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(378)
inline long ZOSAPI_Interfaces::IGlobalOptimization::GetVariables ( ) {
    long _result = 0;
    HRESULT _hr = get_Variables(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(379)
inline double ZOSAPI_Interfaces::IGlobalOptimization::GetInitialMeritFunction ( ) {
    double _result = 0;
    HRESULT _hr = get_InitialMeritFunction(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(380)
inline __int64 ZOSAPI_Interfaces::IGlobalOptimization::GetSystems ( ) {
    __int64 _result = 0;
    HRESULT _hr = get_Systems(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(381)
inline long ZOSAPI_Interfaces::IGlobalOptimization::GetCycles ( ) {
    long _result = 0;
    HRESULT _hr = get_Cycles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(382)
inline double ZOSAPI_Interfaces::IGlobalOptimization::CurrentMeritFunction ( long N ) {
    double _result = 0;
    HRESULT _hr = raw_CurrentMeritFunction(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(383)
inline double ZOSAPI_Interfaces::IGlobalOptimization::GetCurrentMeritFunction01 ( ) {
    double _result = 0;
    HRESULT _hr = get_CurrentMeritFunction01(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(384)
inline double ZOSAPI_Interfaces::IGlobalOptimization::GetCurrentMeritFunction02 ( ) {
    double _result = 0;
    HRESULT _hr = get_CurrentMeritFunction02(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(385)
inline double ZOSAPI_Interfaces::IGlobalOptimization::GetCurrentMeritFunction03 ( ) {
    double _result = 0;
    HRESULT _hr = get_CurrentMeritFunction03(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(386)
inline double ZOSAPI_Interfaces::IGlobalOptimization::GetCurrentMeritFunction04 ( ) {
    double _result = 0;
    HRESULT _hr = get_CurrentMeritFunction04(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(387)
inline double ZOSAPI_Interfaces::IGlobalOptimization::GetCurrentMeritFunction05 ( ) {
    double _result = 0;
    HRESULT _hr = get_CurrentMeritFunction05(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(388)
inline double ZOSAPI_Interfaces::IGlobalOptimization::GetCurrentMeritFunction06 ( ) {
    double _result = 0;
    HRESULT _hr = get_CurrentMeritFunction06(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(389)
inline double ZOSAPI_Interfaces::IGlobalOptimization::GetCurrentMeritFunction07 ( ) {
    double _result = 0;
    HRESULT _hr = get_CurrentMeritFunction07(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(390)
inline double ZOSAPI_Interfaces::IGlobalOptimization::GetCurrentMeritFunction08 ( ) {
    double _result = 0;
    HRESULT _hr = get_CurrentMeritFunction08(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(391)
inline double ZOSAPI_Interfaces::IGlobalOptimization::GetCurrentMeritFunction09 ( ) {
    double _result = 0;
    HRESULT _hr = get_CurrentMeritFunction09(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(392)
inline double ZOSAPI_Interfaces::IGlobalOptimization::GetCurrentMeritFunction10 ( ) {
    double _result = 0;
    HRESULT _hr = get_CurrentMeritFunction10(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IHammerOptimization wrapper method implementations
//

#pragma implementation_key(393)
inline enum ZOSAPI_Interfaces::OptimizationAlgorithm ZOSAPI_Interfaces::IHammerOptimization::GetAlgorithm ( ) {
    enum OptimizationAlgorithm _result;
    HRESULT _hr = get_Algorithm(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(394)
inline void ZOSAPI_Interfaces::IHammerOptimization::PutAlgorithm ( enum OptimizationAlgorithm pRetVal ) {
    HRESULT _hr = put_Algorithm(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(395)
inline long ZOSAPI_Interfaces::IHammerOptimization::GetNumberOfCores ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfCores(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(396)
inline void ZOSAPI_Interfaces::IHammerOptimization::PutNumberOfCores ( long pRetVal ) {
    HRESULT _hr = put_NumberOfCores(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(397)
inline long ZOSAPI_Interfaces::IHammerOptimization::GetMaxCores ( ) {
    long _result = 0;
    HRESULT _hr = get_MaxCores(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(398)
inline VARIANT_BOOL ZOSAPI_Interfaces::IHammerOptimization::GetAutomaticOptimization ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AutomaticOptimization(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(399)
inline void ZOSAPI_Interfaces::IHammerOptimization::PutAutomaticOptimization ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_AutomaticOptimization(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(400)
inline long ZOSAPI_Interfaces::IHammerOptimization::GetTargets ( ) {
    long _result = 0;
    HRESULT _hr = get_Targets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(401)
inline long ZOSAPI_Interfaces::IHammerOptimization::GetVariables ( ) {
    long _result = 0;
    HRESULT _hr = get_Variables(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(402)
inline double ZOSAPI_Interfaces::IHammerOptimization::GetInitialMeritFunction ( ) {
    double _result = 0;
    HRESULT _hr = get_InitialMeritFunction(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(403)
inline double ZOSAPI_Interfaces::IHammerOptimization::GetCurrentMeritFunction ( ) {
    double _result = 0;
    HRESULT _hr = get_CurrentMeritFunction(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(404)
inline __int64 ZOSAPI_Interfaces::IHammerOptimization::GetSystems ( ) {
    __int64 _result = 0;
    HRESULT _hr = get_Systems(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IWizard wrapper method implementations
//

#pragma implementation_key(405)
inline enum ZOSAPI_Interfaces::WizardType ZOSAPI_Interfaces::IWizard::GetWizard ( ) {
    enum WizardType _result;
    HRESULT _hr = get_Wizard(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(406)
inline HRESULT ZOSAPI_Interfaces::IWizard::OK ( ) {
    HRESULT _hr = raw_OK();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(407)
inline HRESULT ZOSAPI_Interfaces::IWizard::Apply ( ) {
    HRESULT _hr = raw_Apply();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(408)
inline HRESULT ZOSAPI_Interfaces::IWizard::SaveSettings ( ) {
    HRESULT _hr = raw_SaveSettings();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(409)
inline HRESULT ZOSAPI_Interfaces::IWizard::LoadSettings ( ) {
    HRESULT _hr = raw_LoadSettings();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(410)
inline HRESULT ZOSAPI_Interfaces::IWizard::ResetSettings ( ) {
    HRESULT _hr = raw_ResetSettings();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(411)
inline HRESULT ZOSAPI_Interfaces::IWizard::Initialize ( ) {
    HRESULT _hr = raw_Initialize();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface INSCWizard wrapper method implementations
//

#pragma implementation_key(412)
inline VARIANT_BOOL ZOSAPI_Interfaces::INSCWizard::GetIsNSCOptimizingWizard ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsNSCOptimizingWizard(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(413)
inline VARIANT_BOOL ZOSAPI_Interfaces::INSCWizard::GetIsNSCBitmapWizard ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsNSCBitmapWizard(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(414)
inline VARIANT_BOOL ZOSAPI_Interfaces::INSCWizard::GetIsClearDataSettingsUsed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsClearDataSettingsUsed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(415)
inline void ZOSAPI_Interfaces::INSCWizard::PutIsClearDataSettingsUsed ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsClearDataSettingsUsed(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(416)
inline VARIANT_BOOL ZOSAPI_Interfaces::INSCWizard::GetIsRaytraceSettingsUsed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsRaytraceSettingsUsed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(417)
inline void ZOSAPI_Interfaces::INSCWizard::PutIsRaytraceSettingsUsed ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsRaytraceSettingsUsed(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(418)
inline VARIANT_BOOL ZOSAPI_Interfaces::INSCWizard::GetIsSplitRaysUsed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsSplitRaysUsed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(419)
inline void ZOSAPI_Interfaces::INSCWizard::PutIsSplitRaysUsed ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsSplitRaysUsed(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(420)
inline VARIANT_BOOL ZOSAPI_Interfaces::INSCWizard::GetIsUsePolarizationUsed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsUsePolarizationUsed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(421)
inline void ZOSAPI_Interfaces::INSCWizard::PutIsUsePolarizationUsed ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsUsePolarizationUsed(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(422)
inline VARIANT_BOOL ZOSAPI_Interfaces::INSCWizard::GetIsScatterRaysUsed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsScatterRaysUsed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(423)
inline void ZOSAPI_Interfaces::INSCWizard::PutIsScatterRaysUsed ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsScatterRaysUsed(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(424)
inline VARIANT_BOOL ZOSAPI_Interfaces::INSCWizard::GetIsIgnoreErrorsUsed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsIgnoreErrorsUsed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(425)
inline void ZOSAPI_Interfaces::INSCWizard::PutIsIgnoreErrorsUsed ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsIgnoreErrorsUsed(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(426)
inline VARIANT_BOOL ZOSAPI_Interfaces::INSCWizard::GetIsUseLightningTraceUsed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsUseLightningTraceUsed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(427)
inline void ZOSAPI_Interfaces::INSCWizard::PutIsUseLightningTraceUsed ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsUseLightningTraceUsed(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(428)
inline VARIANT_BOOL ZOSAPI_Interfaces::INSCWizard::GetIsCriterionSettingsUsed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsCriterionSettingsUsed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(429)
inline void ZOSAPI_Interfaces::INSCWizard::PutIsCriterionSettingsUsed ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsCriterionSettingsUsed(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(430)
inline VARIANT_BOOL ZOSAPI_Interfaces::INSCWizard::GetIsMinimumFluxUsed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsMinimumFluxUsed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(431)
inline void ZOSAPI_Interfaces::INSCWizard::PutIsMinimumFluxUsed ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsMinimumFluxUsed(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(432)
inline VARIANT_BOOL ZOSAPI_Interfaces::INSCWizard::GetIsOverwriteUsed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsOverwriteUsed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(433)
inline void ZOSAPI_Interfaces::INSCWizard::PutIsOverwriteUsed ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsOverwriteUsed(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(434)
inline VARIANT_BOOL ZOSAPI_Interfaces::INSCWizard::GetIsTargetSettingsUsed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsTargetSettingsUsed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(435)
inline void ZOSAPI_Interfaces::INSCWizard::PutIsTargetSettingsUsed ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsTargetSettingsUsed(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(436)
inline VARIANT_BOOL ZOSAPI_Interfaces::INSCWizard::GetIsColorTargetsUsed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsColorTargetsUsed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(437)
inline void ZOSAPI_Interfaces::INSCWizard::PutIsColorTargetsUsed ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsColorTargetsUsed(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(438)
inline VARIANT_BOOL ZOSAPI_Interfaces::INSCWizard::GetIsResampleDetectorUsed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsResampleDetectorUsed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(439)
inline void ZOSAPI_Interfaces::INSCWizard::PutIsResampleDetectorUsed ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsResampleDetectorUsed(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(440)
inline long ZOSAPI_Interfaces::INSCWizard::GetClearDetector ( ) {
    long _result = 0;
    HRESULT _hr = get_ClearDetector(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(441)
inline void ZOSAPI_Interfaces::INSCWizard::PutClearDetector ( long pRetVal ) {
    HRESULT _hr = put_ClearDetector(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(442)
inline long ZOSAPI_Interfaces::INSCWizard::GetCriterion ( ) {
    long _result = 0;
    HRESULT _hr = get_Criterion(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(443)
inline void ZOSAPI_Interfaces::INSCWizard::PutCriterion ( long pRetVal ) {
    HRESULT _hr = put_Criterion(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(444)
inline long ZOSAPI_Interfaces::INSCWizard::GetUseSource ( ) {
    long _result = 0;
    HRESULT _hr = get_UseSource(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(445)
inline void ZOSAPI_Interfaces::INSCWizard::PutUseSource ( long pRetVal ) {
    HRESULT _hr = put_UseSource(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(446)
inline long ZOSAPI_Interfaces::INSCWizard::GetUseDetector ( ) {
    long _result = 0;
    HRESULT _hr = get_UseDetector(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(447)
inline void ZOSAPI_Interfaces::INSCWizard::PutUseDetector ( long pRetVal ) {
    HRESULT _hr = put_UseDetector(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(448)
inline long ZOSAPI_Interfaces::INSCWizard::GetBoundary ( ) {
    long _result = 0;
    HRESULT _hr = get_Boundary(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(449)
inline void ZOSAPI_Interfaces::INSCWizard::PutBoundary ( long pRetVal ) {
    HRESULT _hr = put_Boundary(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(450)
inline long ZOSAPI_Interfaces::INSCWizard::GetStartAt ( ) {
    long _result = 0;
    HRESULT _hr = get_StartAt(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(451)
inline void ZOSAPI_Interfaces::INSCWizard::PutStartAt ( long pRetVal ) {
    HRESULT _hr = put_StartAt(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(452)
inline long ZOSAPI_Interfaces::INSCWizard::GetConfiguration ( ) {
    long _result = 0;
    HRESULT _hr = get_Configuration(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(453)
inline void ZOSAPI_Interfaces::INSCWizard::PutConfiguration ( long pRetVal ) {
    HRESULT _hr = put_Configuration(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(454)
inline long ZOSAPI_Interfaces::INSCWizard::GetBitmapFile ( ) {
    long _result = 0;
    HRESULT _hr = get_BitmapFile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(455)
inline void ZOSAPI_Interfaces::INSCWizard::PutBitmapFile ( long pRetVal ) {
    HRESULT _hr = put_BitmapFile(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(456)
inline long ZOSAPI_Interfaces::INSCWizard::GetRaySampling ( ) {
    long _result = 0;
    HRESULT _hr = get_RaySampling(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(457)
inline void ZOSAPI_Interfaces::INSCWizard::PutRaySampling ( long pRetVal ) {
    HRESULT _hr = put_RaySampling(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(458)
inline long ZOSAPI_Interfaces::INSCWizard::GetEdgeSampling ( ) {
    long _result = 0;
    HRESULT _hr = get_EdgeSampling(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(459)
inline void ZOSAPI_Interfaces::INSCWizard::PutEdgeSampling ( long pRetVal ) {
    HRESULT _hr = put_EdgeSampling(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(460)
inline double ZOSAPI_Interfaces::INSCWizard::GetTarget ( ) {
    double _result = 0;
    HRESULT _hr = get_Target(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(461)
inline void ZOSAPI_Interfaces::INSCWizard::PutTarget ( double pRetVal ) {
    HRESULT _hr = put_Target(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(462)
inline double ZOSAPI_Interfaces::INSCWizard::GetMinimumFlux ( ) {
    double _result = 0;
    HRESULT _hr = get_MinimumFlux(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(463)
inline void ZOSAPI_Interfaces::INSCWizard::PutMinimumFlux ( double pRetVal ) {
    HRESULT _hr = put_MinimumFlux(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(464)
inline double ZOSAPI_Interfaces::INSCWizard::GetOverallWeight ( ) {
    double _result = 0;
    HRESULT _hr = get_OverallWeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(465)
inline void ZOSAPI_Interfaces::INSCWizard::PutOverallWeight ( double pRetVal ) {
    HRESULT _hr = put_OverallWeight(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(466)
inline double ZOSAPI_Interfaces::INSCWizard::GetTotalFlux ( ) {
    double _result = 0;
    HRESULT _hr = get_TotalFlux(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(467)
inline void ZOSAPI_Interfaces::INSCWizard::PutTotalFlux ( double pRetVal ) {
    HRESULT _hr = put_TotalFlux(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(468)
inline long ZOSAPI_Interfaces::INSCWizard::GetNumberOfSources ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfSources(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(469)
inline _bstr_t ZOSAPI_Interfaces::INSCWizard::GetSourceAt ( long idx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetSourceAt(idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(470)
inline long ZOSAPI_Interfaces::INSCWizard::GetNumberOfDetectors ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfDetectors(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(471)
inline _bstr_t ZOSAPI_Interfaces::INSCWizard::GetDetectorAt ( long idx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetDetectorAt(idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(472)
inline long ZOSAPI_Interfaces::INSCWizard::GetNumberOfCriterion ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfCriterion(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(473)
inline _bstr_t ZOSAPI_Interfaces::INSCWizard::GetCriterionAt ( long idx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetCriterionAt(idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(474)
inline long ZOSAPI_Interfaces::INSCWizard::GetNumberOfConfigurations ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfConfigurations(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(475)
inline _bstr_t ZOSAPI_Interfaces::INSCWizard::GetConfigurationAt ( long idx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetConfigurationAt(idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(476)
inline long ZOSAPI_Interfaces::INSCWizard::GetNumberOfRaySamplings ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfRaySamplings(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(477)
inline _bstr_t ZOSAPI_Interfaces::INSCWizard::GetRaySamplingAt ( long idx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetRaySamplingAt(idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(478)
inline long ZOSAPI_Interfaces::INSCWizard::GetNumberOfEdgeSamplings ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfEdgeSamplings(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(479)
inline _bstr_t ZOSAPI_Interfaces::INSCWizard::GetEdgeSamplingAt ( long idx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetEdgeSamplingAt(idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(480)
inline long ZOSAPI_Interfaces::INSCWizard::GetNumberOfBoundaries ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfBoundaries(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(481)
inline _bstr_t ZOSAPI_Interfaces::INSCWizard::GetBoundaryAt ( long idx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetBoundaryAt(idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

//
// interface INSCOptimizationWizard wrapper method implementations
//

#pragma implementation_key(482)
inline ZOSAPI_Interfaces::INSCWizardPtr ZOSAPI_Interfaces::INSCOptimizationWizard::GetNSCSettings ( ) {
    struct INSCWizard * _result = 0;
    HRESULT _hr = get_NSCSettings(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return INSCWizardPtr(_result, false);
}

#pragma implementation_key(483)
inline ZOSAPI_Interfaces::IWizardPtr ZOSAPI_Interfaces::INSCOptimizationWizard::GetCommonSettings ( ) {
    struct IWizard * _result = 0;
    HRESULT _hr = get_CommonSettings(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IWizardPtr(_result, false);
}

//
// interface IImageData wrapper method implementations
//

#pragma implementation_key(484)
inline _bstr_t ZOSAPI_Interfaces::IImageData::GetImageName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ImageName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(485)
inline long ZOSAPI_Interfaces::IImageData::GetWidth ( ) {
    long _result = 0;
    HRESULT _hr = get_Width(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(486)
inline long ZOSAPI_Interfaces::IImageData::GetHeight ( ) {
    long _result = 0;
    HRESULT _hr = get_Height(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(487)
inline long ZOSAPI_Interfaces::IImageData::GetBitsPerPixel ( ) {
    long _result = 0;
    HRESULT _hr = get_BitsPerPixel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(488)
inline long ZOSAPI_Interfaces::IImageData::GetChannels ( ) {
    long _result = 0;
    HRESULT _hr = get_Channels(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(489)
inline long ZOSAPI_Interfaces::IImageData::GetStride ( ) {
    long _result = 0;
    HRESULT _hr = get_Stride(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(490)
inline VARIANT_BOOL ZOSAPI_Interfaces::IImageData::GetIsRGB ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsRGB(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(491)
inline SAFEARRAY * ZOSAPI_Interfaces::IImageData::GetRawData ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_GetRawData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(492)
inline HRESULT ZOSAPI_Interfaces::IImageData::GetRawDataSafe ( long totalSize, long Height, long Width, unsigned char * Data ) {
    HRESULT _hr = raw_GetRawDataSafe(totalSize, Height, Width, Data);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(493)
inline SAFEARRAY * ZOSAPI_Interfaces::IImageData::GetPixels ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_GetPixels(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(494)
inline HRESULT ZOSAPI_Interfaces::IImageData::GetPixelsSafe ( long totalSize, long Height, long Width, unsigned char * Data ) {
    HRESULT _hr = raw_GetPixelsSafe(totalSize, Height, Width, Data);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface INSCBitmapWizard wrapper method implementations
//

#pragma implementation_key(495)
inline ZOSAPI_Interfaces::INSCWizardPtr ZOSAPI_Interfaces::INSCBitmapWizard::GetNSCSettings ( ) {
    struct INSCWizard * _result = 0;
    HRESULT _hr = get_NSCSettings(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return INSCWizardPtr(_result, false);
}

#pragma implementation_key(496)
inline ZOSAPI_Interfaces::IWizardPtr ZOSAPI_Interfaces::INSCBitmapWizard::GetCommonSettings ( ) {
    struct IWizard * _result = 0;
    HRESULT _hr = get_CommonSettings(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IWizardPtr(_result, false);
}

#pragma implementation_key(497)
inline long ZOSAPI_Interfaces::INSCBitmapWizard::GetNumberOfBitmapFiles ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfBitmapFiles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(498)
inline _bstr_t ZOSAPI_Interfaces::INSCBitmapWizard::GetBitmapFileAt ( long idx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetBitmapFileAt(idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(499)
inline ZOSAPI_Interfaces::IImageDataPtr ZOSAPI_Interfaces::INSCBitmapWizard::GetPreviewImage ( ) {
    struct IImageData * _result = 0;
    HRESULT _hr = raw_GetPreviewImage(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IImageDataPtr(_result, false);
}

//
// interface INSCRoadwayLightingWizard wrapper method implementations
//

#pragma implementation_key(500)
inline ZOSAPI_Interfaces::IWizardPtr ZOSAPI_Interfaces::INSCRoadwayLightingWizard::GetCommonSettings ( ) {
    struct IWizard * _result = 0;
    HRESULT _hr = get_CommonSettings(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IWizardPtr(_result, false);
}

#pragma implementation_key(501)
inline VARIANT_BOOL ZOSAPI_Interfaces::INSCRoadwayLightingWizard::GetIsNSCRoadwayLightingWizard ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsNSCRoadwayLightingWizard(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(502)
inline VARIANT_BOOL ZOSAPI_Interfaces::INSCRoadwayLightingWizard::GetIsSplitRaysUsed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsSplitRaysUsed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(503)
inline void ZOSAPI_Interfaces::INSCRoadwayLightingWizard::PutIsSplitRaysUsed ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsSplitRaysUsed(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(504)
inline VARIANT_BOOL ZOSAPI_Interfaces::INSCRoadwayLightingWizard::GetIsScatterRaysUsed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsScatterRaysUsed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(505)
inline void ZOSAPI_Interfaces::INSCRoadwayLightingWizard::PutIsScatterRaysUsed ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsScatterRaysUsed(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(506)
inline VARIANT_BOOL ZOSAPI_Interfaces::INSCRoadwayLightingWizard::GetIsUsePolarizationUsed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsUsePolarizationUsed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(507)
inline void ZOSAPI_Interfaces::INSCRoadwayLightingWizard::PutIsUsePolarizationUsed ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsUsePolarizationUsed(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(508)
inline VARIANT_BOOL ZOSAPI_Interfaces::INSCRoadwayLightingWizard::GetIsIgnoreErrorsUsed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsIgnoreErrorsUsed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(509)
inline void ZOSAPI_Interfaces::INSCRoadwayLightingWizard::PutIsIgnoreErrorsUsed ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsIgnoreErrorsUsed(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(510)
inline long ZOSAPI_Interfaces::INSCRoadwayLightingWizard::GetArrangement ( ) {
    long _result = 0;
    HRESULT _hr = get_Arrangement(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(511)
inline void ZOSAPI_Interfaces::INSCRoadwayLightingWizard::PutArrangement ( long pRetVal ) {
    HRESULT _hr = put_Arrangement(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(512)
inline long ZOSAPI_Interfaces::INSCRoadwayLightingWizard::GetOrigin ( ) {
    long _result = 0;
    HRESULT _hr = get_Origin(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(513)
inline void ZOSAPI_Interfaces::INSCRoadwayLightingWizard::PutOrigin ( long pRetVal ) {
    HRESULT _hr = put_Origin(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(514)
inline long ZOSAPI_Interfaces::INSCRoadwayLightingWizard::GetNumberOfLanes ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfLanes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(515)
inline void ZOSAPI_Interfaces::INSCRoadwayLightingWizard::PutNumberOfLanes ( long pRetVal ) {
    HRESULT _hr = put_NumberOfLanes(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(516)
inline long ZOSAPI_Interfaces::INSCRoadwayLightingWizard::GetSurfaceClassification ( ) {
    long _result = 0;
    HRESULT _hr = get_SurfaceClassification(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(517)
inline void ZOSAPI_Interfaces::INSCRoadwayLightingWizard::PutSurfaceClassification ( long pRetVal ) {
    HRESULT _hr = put_SurfaceClassification(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(518)
inline long ZOSAPI_Interfaces::INSCRoadwayLightingWizard::GetRoadClass ( ) {
    long _result = 0;
    HRESULT _hr = get_RoadClass(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(519)
inline void ZOSAPI_Interfaces::INSCRoadwayLightingWizard::PutRoadClass ( long pRetVal ) {
    HRESULT _hr = put_RoadClass(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(520)
inline long ZOSAPI_Interfaces::INSCRoadwayLightingWizard::GetStartAt ( ) {
    long _result = 0;
    HRESULT _hr = get_StartAt(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(521)
inline void ZOSAPI_Interfaces::INSCRoadwayLightingWizard::PutStartAt ( long pRetVal ) {
    HRESULT _hr = put_StartAt(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(522)
inline long ZOSAPI_Interfaces::INSCRoadwayLightingWizard::GetConfiguration ( ) {
    long _result = 0;
    HRESULT _hr = get_Configuration(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(523)
inline void ZOSAPI_Interfaces::INSCRoadwayLightingWizard::PutConfiguration ( long pRetVal ) {
    HRESULT _hr = put_Configuration(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(524)
inline double ZOSAPI_Interfaces::INSCRoadwayLightingWizard::GetMountingHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_MountingHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(525)
inline void ZOSAPI_Interfaces::INSCRoadwayLightingWizard::PutMountingHeight ( double pRetVal ) {
    HRESULT _hr = put_MountingHeight(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(526)
inline double ZOSAPI_Interfaces::INSCRoadwayLightingWizard::GetLongitudinalSpacing ( ) {
    double _result = 0;
    HRESULT _hr = get_LongitudinalSpacing(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(527)
inline void ZOSAPI_Interfaces::INSCRoadwayLightingWizard::PutLongitudinalSpacing ( double pRetVal ) {
    HRESULT _hr = put_LongitudinalSpacing(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(528)
inline double ZOSAPI_Interfaces::INSCRoadwayLightingWizard::GetLateralOffset ( ) {
    double _result = 0;
    HRESULT _hr = get_LateralOffset(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(529)
inline void ZOSAPI_Interfaces::INSCRoadwayLightingWizard::PutLateralOffset ( double pRetVal ) {
    HRESULT _hr = put_LateralOffset(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(530)
inline double ZOSAPI_Interfaces::INSCRoadwayLightingWizard::GetLaneWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_LaneWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(531)
inline void ZOSAPI_Interfaces::INSCRoadwayLightingWizard::PutLaneWidth ( double pRetVal ) {
    HRESULT _hr = put_LaneWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(532)
inline double ZOSAPI_Interfaces::INSCRoadwayLightingWizard::GetOverallWeight ( ) {
    double _result = 0;
    HRESULT _hr = get_OverallWeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(533)
inline void ZOSAPI_Interfaces::INSCRoadwayLightingWizard::PutOverallWeight ( double pRetVal ) {
    HRESULT _hr = put_OverallWeight(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(534)
inline long ZOSAPI_Interfaces::INSCRoadwayLightingWizard::GetNumberOfOrigins ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfOrigins(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(535)
inline _bstr_t ZOSAPI_Interfaces::INSCRoadwayLightingWizard::GetOriginAt ( long idx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetOriginAt(idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(536)
inline long ZOSAPI_Interfaces::INSCRoadwayLightingWizard::GetNumberOfConfigurations ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfConfigurations(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(537)
inline _bstr_t ZOSAPI_Interfaces::INSCRoadwayLightingWizard::GetConfigurationAt ( long idx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetConfigurationAt(idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(538)
inline long ZOSAPI_Interfaces::INSCRoadwayLightingWizard::GetNumberOfArrangements ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfArrangements(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(539)
inline _bstr_t ZOSAPI_Interfaces::INSCRoadwayLightingWizard::GetArrangementAt ( long idx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetArrangementAt(idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(540)
inline long ZOSAPI_Interfaces::INSCRoadwayLightingWizard::GetNumberOfClassifications ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfClassifications(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(541)
inline _bstr_t ZOSAPI_Interfaces::INSCRoadwayLightingWizard::GetClassificationAt ( long idx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetClassificationAt(idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(542)
inline long ZOSAPI_Interfaces::INSCRoadwayLightingWizard::GetNumberOfRoadClasses ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfRoadClasses(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(543)
inline _bstr_t ZOSAPI_Interfaces::INSCRoadwayLightingWizard::GetRoadClassAt ( long idx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetRoadClassAt(idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

//
// interface ISEQOptimizationWizard wrapper method implementations
//

#pragma implementation_key(544)
inline ZOSAPI_Interfaces::IWizardPtr ZOSAPI_Interfaces::ISEQOptimizationWizard::GetCommonSettings ( ) {
    struct IWizard * _result = 0;
    HRESULT _hr = get_CommonSettings(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IWizardPtr(_result, false);
}

#pragma implementation_key(545)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISEQOptimizationWizard::GetIsSEQOptimizationWizard ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsSEQOptimizationWizard(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(546)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISEQOptimizationWizard::GetIsDeleteVignetteUsed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsDeleteVignetteUsed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(547)
inline void ZOSAPI_Interfaces::ISEQOptimizationWizard::PutIsDeleteVignetteUsed ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsDeleteVignetteUsed(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(548)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISEQOptimizationWizard::GetIsGlassUsed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsGlassUsed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(549)
inline void ZOSAPI_Interfaces::ISEQOptimizationWizard::PutIsGlassUsed ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsGlassUsed(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(550)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISEQOptimizationWizard::GetIsAirUsed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAirUsed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(551)
inline void ZOSAPI_Interfaces::ISEQOptimizationWizard::PutIsAirUsed ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsAirUsed(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(552)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISEQOptimizationWizard::GetIsAssumeAxialSymmetryUsed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAssumeAxialSymmetryUsed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(553)
inline void ZOSAPI_Interfaces::ISEQOptimizationWizard::PutIsAssumeAxialSymmetryUsed ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsAssumeAxialSymmetryUsed(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(554)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISEQOptimizationWizard::GetIsIgnoreLateralColorUsed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsIgnoreLateralColorUsed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(555)
inline void ZOSAPI_Interfaces::ISEQOptimizationWizard::PutIsIgnoreLateralColorUsed ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsIgnoreLateralColorUsed(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(556)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISEQOptimizationWizard::GetIsAddFavoriteOperandsUsed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAddFavoriteOperandsUsed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(557)
inline void ZOSAPI_Interfaces::ISEQOptimizationWizard::PutIsAddFavoriteOperandsUsed ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsAddFavoriteOperandsUsed(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(558)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISEQOptimizationWizard::GetIsRelativeXWeightUsed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsRelativeXWeightUsed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(559)
inline void ZOSAPI_Interfaces::ISEQOptimizationWizard::PutIsRelativeXWeightUsed ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsRelativeXWeightUsed(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(560)
inline long ZOSAPI_Interfaces::ISEQOptimizationWizard::GetType ( ) {
    long _result = 0;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(561)
inline void ZOSAPI_Interfaces::ISEQOptimizationWizard::PutType ( long pRetVal ) {
    HRESULT _hr = put_Type(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(562)
inline long ZOSAPI_Interfaces::ISEQOptimizationWizard::GetData ( ) {
    long _result = 0;
    HRESULT _hr = get_Data(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(563)
inline void ZOSAPI_Interfaces::ISEQOptimizationWizard::PutData ( long pRetVal ) {
    HRESULT _hr = put_Data(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(564)
inline long ZOSAPI_Interfaces::ISEQOptimizationWizard::GetReference ( ) {
    long _result = 0;
    HRESULT _hr = get_Reference(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(565)
inline void ZOSAPI_Interfaces::ISEQOptimizationWizard::PutReference ( long pRetVal ) {
    HRESULT _hr = put_Reference(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(566)
inline long ZOSAPI_Interfaces::ISEQOptimizationWizard::GetPupilIntegrationMethod ( ) {
    long _result = 0;
    HRESULT _hr = get_PupilIntegrationMethod(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(567)
inline void ZOSAPI_Interfaces::ISEQOptimizationWizard::PutPupilIntegrationMethod ( long pRetVal ) {
    HRESULT _hr = put_PupilIntegrationMethod(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(568)
inline long ZOSAPI_Interfaces::ISEQOptimizationWizard::GetRing ( ) {
    long _result = 0;
    HRESULT _hr = get_Ring(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(569)
inline void ZOSAPI_Interfaces::ISEQOptimizationWizard::PutRing ( long pRetVal ) {
    HRESULT _hr = put_Ring(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(570)
inline long ZOSAPI_Interfaces::ISEQOptimizationWizard::GetArm ( ) {
    long _result = 0;
    HRESULT _hr = get_Arm(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(571)
inline void ZOSAPI_Interfaces::ISEQOptimizationWizard::PutArm ( long pRetVal ) {
    HRESULT _hr = put_Arm(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(572)
inline long ZOSAPI_Interfaces::ISEQOptimizationWizard::GetGrid ( ) {
    long _result = 0;
    HRESULT _hr = get_Grid(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(573)
inline void ZOSAPI_Interfaces::ISEQOptimizationWizard::PutGrid ( long pRetVal ) {
    HRESULT _hr = put_Grid(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(574)
inline long ZOSAPI_Interfaces::ISEQOptimizationWizard::GetConfiguration ( ) {
    long _result = 0;
    HRESULT _hr = get_Configuration(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(575)
inline void ZOSAPI_Interfaces::ISEQOptimizationWizard::PutConfiguration ( long pRetVal ) {
    HRESULT _hr = put_Configuration(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(576)
inline long ZOSAPI_Interfaces::ISEQOptimizationWizard::GetStartAt ( ) {
    long _result = 0;
    HRESULT _hr = get_StartAt(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(577)
inline void ZOSAPI_Interfaces::ISEQOptimizationWizard::PutStartAt ( long pRetVal ) {
    HRESULT _hr = put_StartAt(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(578)
inline double ZOSAPI_Interfaces::ISEQOptimizationWizard::GetObscuration ( ) {
    double _result = 0;
    HRESULT _hr = get_Obscuration(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(579)
inline void ZOSAPI_Interfaces::ISEQOptimizationWizard::PutObscuration ( double pRetVal ) {
    HRESULT _hr = put_Obscuration(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(580)
inline double ZOSAPI_Interfaces::ISEQOptimizationWizard::GetGlassMin ( ) {
    double _result = 0;
    HRESULT _hr = get_GlassMin(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(581)
inline void ZOSAPI_Interfaces::ISEQOptimizationWizard::PutGlassMin ( double pRetVal ) {
    HRESULT _hr = put_GlassMin(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(582)
inline double ZOSAPI_Interfaces::ISEQOptimizationWizard::GetGlassMax ( ) {
    double _result = 0;
    HRESULT _hr = get_GlassMax(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(583)
inline void ZOSAPI_Interfaces::ISEQOptimizationWizard::PutGlassMax ( double pRetVal ) {
    HRESULT _hr = put_GlassMax(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(584)
inline double ZOSAPI_Interfaces::ISEQOptimizationWizard::GetGlassEdge ( ) {
    double _result = 0;
    HRESULT _hr = get_GlassEdge(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(585)
inline void ZOSAPI_Interfaces::ISEQOptimizationWizard::PutGlassEdge ( double pRetVal ) {
    HRESULT _hr = put_GlassEdge(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(586)
inline double ZOSAPI_Interfaces::ISEQOptimizationWizard::GetAirMin ( ) {
    double _result = 0;
    HRESULT _hr = get_AirMin(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(587)
inline void ZOSAPI_Interfaces::ISEQOptimizationWizard::PutAirMin ( double pRetVal ) {
    HRESULT _hr = put_AirMin(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(588)
inline double ZOSAPI_Interfaces::ISEQOptimizationWizard::GetAirMax ( ) {
    double _result = 0;
    HRESULT _hr = get_AirMax(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(589)
inline void ZOSAPI_Interfaces::ISEQOptimizationWizard::PutAirMax ( double pRetVal ) {
    HRESULT _hr = put_AirMax(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(590)
inline double ZOSAPI_Interfaces::ISEQOptimizationWizard::GetAirEdge ( ) {
    double _result = 0;
    HRESULT _hr = get_AirEdge(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(591)
inline void ZOSAPI_Interfaces::ISEQOptimizationWizard::PutAirEdge ( double pRetVal ) {
    HRESULT _hr = put_AirEdge(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(592)
inline double ZOSAPI_Interfaces::ISEQOptimizationWizard::GetRelativeXWeight ( ) {
    double _result = 0;
    HRESULT _hr = get_RelativeXWeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(593)
inline void ZOSAPI_Interfaces::ISEQOptimizationWizard::PutRelativeXWeight ( double pRetVal ) {
    HRESULT _hr = put_RelativeXWeight(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(594)
inline double ZOSAPI_Interfaces::ISEQOptimizationWizard::GetOverallWeight ( ) {
    double _result = 0;
    HRESULT _hr = get_OverallWeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(595)
inline void ZOSAPI_Interfaces::ISEQOptimizationWizard::PutOverallWeight ( double pRetVal ) {
    HRESULT _hr = put_OverallWeight(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(596)
inline long ZOSAPI_Interfaces::ISEQOptimizationWizard::GetNumberOfTypes ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfTypes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(597)
inline _bstr_t ZOSAPI_Interfaces::ISEQOptimizationWizard::GetTypeAt ( long idx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetTypeAt(idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(598)
inline long ZOSAPI_Interfaces::ISEQOptimizationWizard::GetNumberOfDataTypes ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfDataTypes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(599)
inline _bstr_t ZOSAPI_Interfaces::ISEQOptimizationWizard::GetDataTypeAt ( long idx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetDataTypeAt(idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(600)
inline long ZOSAPI_Interfaces::ISEQOptimizationWizard::GetNumberOfReferences ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfReferences(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(601)
inline _bstr_t ZOSAPI_Interfaces::ISEQOptimizationWizard::GetReferenceAt ( long idx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetReferenceAt(idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(602)
inline long ZOSAPI_Interfaces::ISEQOptimizationWizard::GetNumberOfPupilIntegrationMethods ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfPupilIntegrationMethods(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(603)
inline _bstr_t ZOSAPI_Interfaces::ISEQOptimizationWizard::GetPupilIntegrationMethodAt ( long idx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetPupilIntegrationMethodAt(idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(604)
inline long ZOSAPI_Interfaces::ISEQOptimizationWizard::GetNumberOfRings ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfRings(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(605)
inline _bstr_t ZOSAPI_Interfaces::ISEQOptimizationWizard::GetRingAt ( long idx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetRingAt(idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(606)
inline long ZOSAPI_Interfaces::ISEQOptimizationWizard::GetNumberOfArms ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfArms(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(607)
inline _bstr_t ZOSAPI_Interfaces::ISEQOptimizationWizard::GetArmAt ( long idx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetArmAt(idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(608)
inline long ZOSAPI_Interfaces::ISEQOptimizationWizard::GetNumberOfGrids ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfGrids(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(609)
inline _bstr_t ZOSAPI_Interfaces::ISEQOptimizationWizard::GetGridAt ( long idx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetGridAt(idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(610)
inline long ZOSAPI_Interfaces::ISEQOptimizationWizard::GetNumberOfConfigurations ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfConfigurations(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(611)
inline _bstr_t ZOSAPI_Interfaces::ISEQOptimizationWizard::GetConfigurationAt ( long idx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetConfigurationAt(idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

//
// interface IToleranceWizard wrapper method implementations
//

#pragma implementation_key(612)
inline ZOSAPI_Interfaces::IWizardPtr ZOSAPI_Interfaces::IToleranceWizard::GetCommonSettings ( ) {
    struct IWizard * _result = 0;
    HRESULT _hr = get_CommonSettings(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IWizardPtr(_result, false);
}

#pragma implementation_key(613)
inline VARIANT_BOOL ZOSAPI_Interfaces::IToleranceWizard::GetIsSEQToleranceWizard ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsSEQToleranceWizard(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(614)
inline VARIANT_BOOL ZOSAPI_Interfaces::IToleranceWizard::GetIsSurfaceRadiusUsed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsSurfaceRadiusUsed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(615)
inline void ZOSAPI_Interfaces::IToleranceWizard::PutIsSurfaceRadiusUsed ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsSurfaceRadiusUsed(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(616)
inline VARIANT_BOOL ZOSAPI_Interfaces::IToleranceWizard::GetIsSurfaceThicknessUsed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsSurfaceThicknessUsed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(617)
inline void ZOSAPI_Interfaces::IToleranceWizard::PutIsSurfaceThicknessUsed ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsSurfaceThicknessUsed(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(618)
inline VARIANT_BOOL ZOSAPI_Interfaces::IToleranceWizard::GetIsSurfaceDecenterXUsed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsSurfaceDecenterXUsed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(619)
inline void ZOSAPI_Interfaces::IToleranceWizard::PutIsSurfaceDecenterXUsed ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsSurfaceDecenterXUsed(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(620)
inline VARIANT_BOOL ZOSAPI_Interfaces::IToleranceWizard::GetIsSurfaceDecenterYUsed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsSurfaceDecenterYUsed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(621)
inline void ZOSAPI_Interfaces::IToleranceWizard::PutIsSurfaceDecenterYUsed ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsSurfaceDecenterYUsed(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(622)
inline VARIANT_BOOL ZOSAPI_Interfaces::IToleranceWizard::GetIsSurfaceTiltXUsed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsSurfaceTiltXUsed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(623)
inline void ZOSAPI_Interfaces::IToleranceWizard::PutIsSurfaceTiltXUsed ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsSurfaceTiltXUsed(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(624)
inline VARIANT_BOOL ZOSAPI_Interfaces::IToleranceWizard::GetIsSurfaceTiltYUsed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsSurfaceTiltYUsed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(625)
inline void ZOSAPI_Interfaces::IToleranceWizard::PutIsSurfaceTiltYUsed ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsSurfaceTiltYUsed(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(626)
inline VARIANT_BOOL ZOSAPI_Interfaces::IToleranceWizard::GetIsSurfaceSandAIrregularityUsed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsSurfaceSandAIrregularityUsed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(627)
inline void ZOSAPI_Interfaces::IToleranceWizard::PutIsSurfaceSandAIrregularityUsed ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsSurfaceSandAIrregularityUsed(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(628)
inline VARIANT_BOOL ZOSAPI_Interfaces::IToleranceWizard::GetIsSurfaceZernikeIrregularityUsed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsSurfaceZernikeIrregularityUsed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(629)
inline void ZOSAPI_Interfaces::IToleranceWizard::PutIsSurfaceZernikeIrregularityUsed ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsSurfaceZernikeIrregularityUsed(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(630)
inline VARIANT_BOOL ZOSAPI_Interfaces::IToleranceWizard::GetIsElementDecenterXUsed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsElementDecenterXUsed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(631)
inline void ZOSAPI_Interfaces::IToleranceWizard::PutIsElementDecenterXUsed ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsElementDecenterXUsed(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(632)
inline VARIANT_BOOL ZOSAPI_Interfaces::IToleranceWizard::GetIsElementDecenterYUsed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsElementDecenterYUsed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(633)
inline void ZOSAPI_Interfaces::IToleranceWizard::PutIsElementDecenterYUsed ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsElementDecenterYUsed(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(634)
inline VARIANT_BOOL ZOSAPI_Interfaces::IToleranceWizard::GetIsElementTiltXUsed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsElementTiltXUsed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(635)
inline void ZOSAPI_Interfaces::IToleranceWizard::PutIsElementTiltXUsed ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsElementTiltXUsed(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(636)
inline VARIANT_BOOL ZOSAPI_Interfaces::IToleranceWizard::GetIsElementTiltYUsed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsElementTiltYUsed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(637)
inline void ZOSAPI_Interfaces::IToleranceWizard::PutIsElementTiltYUsed ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsElementTiltYUsed(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(638)
inline VARIANT_BOOL ZOSAPI_Interfaces::IToleranceWizard::GetIsIndexUsed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsIndexUsed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(639)
inline void ZOSAPI_Interfaces::IToleranceWizard::PutIsIndexUsed ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsIndexUsed(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(640)
inline VARIANT_BOOL ZOSAPI_Interfaces::IToleranceWizard::GetIsIndexAbbePercentageUsed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsIndexAbbePercentageUsed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(641)
inline void ZOSAPI_Interfaces::IToleranceWizard::PutIsIndexAbbePercentageUsed ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsIndexAbbePercentageUsed(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(642)
inline VARIANT_BOOL ZOSAPI_Interfaces::IToleranceWizard::GetIsFocusCompensationUsed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsFocusCompensationUsed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(643)
inline void ZOSAPI_Interfaces::IToleranceWizard::PutIsFocusCompensationUsed ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsFocusCompensationUsed(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(644)
inline enum ZOSAPI_Interfaces::DefaultAndFringes ZOSAPI_Interfaces::IToleranceWizard::GetSurfaceRadiusUnitType ( ) {
    enum DefaultAndFringes _result;
    HRESULT _hr = get_SurfaceRadiusUnitType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(645)
inline void ZOSAPI_Interfaces::IToleranceWizard::PutSurfaceRadiusUnitType ( enum DefaultAndFringes pRetVal ) {
    HRESULT _hr = put_SurfaceRadiusUnitType(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(646)
inline enum ZOSAPI_Interfaces::DefaultAndDegrees ZOSAPI_Interfaces::IToleranceWizard::GetSurfaceTiltXUnitType ( ) {
    enum DefaultAndDegrees _result;
    HRESULT _hr = get_SurfaceTiltXUnitType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(647)
inline void ZOSAPI_Interfaces::IToleranceWizard::PutSurfaceTiltXUnitType ( enum DefaultAndDegrees pRetVal ) {
    HRESULT _hr = put_SurfaceTiltXUnitType(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(648)
inline enum ZOSAPI_Interfaces::DefaultAndDegrees ZOSAPI_Interfaces::IToleranceWizard::GetSurfaceTiltYUnitType ( ) {
    enum DefaultAndDegrees _result;
    HRESULT _hr = get_SurfaceTiltYUnitType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(649)
inline void ZOSAPI_Interfaces::IToleranceWizard::PutSurfaceTiltYUnitType ( enum DefaultAndDegrees pRetVal ) {
    HRESULT _hr = put_SurfaceTiltYUnitType(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(650)
inline long ZOSAPI_Interfaces::IToleranceWizard::GetStartAt ( ) {
    long _result = 0;
    HRESULT _hr = get_StartAt(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(651)
inline void ZOSAPI_Interfaces::IToleranceWizard::PutStartAt ( long pRetVal ) {
    HRESULT _hr = put_StartAt(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(652)
inline long ZOSAPI_Interfaces::IToleranceWizard::GetStartAtSurface ( ) {
    long _result = 0;
    HRESULT _hr = get_StartAtSurface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(653)
inline void ZOSAPI_Interfaces::IToleranceWizard::PutStartAtSurface ( long pRetVal ) {
    HRESULT _hr = put_StartAtSurface(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(654)
inline long ZOSAPI_Interfaces::IToleranceWizard::GetStopAtSurface ( ) {
    long _result = 0;
    HRESULT _hr = get_StopAtSurface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(655)
inline void ZOSAPI_Interfaces::IToleranceWizard::PutStopAtSurface ( long pRetVal ) {
    HRESULT _hr = put_StopAtSurface(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(656)
inline double ZOSAPI_Interfaces::IToleranceWizard::GetSurfaceRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_SurfaceRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(657)
inline void ZOSAPI_Interfaces::IToleranceWizard::PutSurfaceRadius ( double pRetVal ) {
    HRESULT _hr = put_SurfaceRadius(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(658)
inline double ZOSAPI_Interfaces::IToleranceWizard::GetSurfaceRadiusFringes ( ) {
    double _result = 0;
    HRESULT _hr = get_SurfaceRadiusFringes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(659)
inline void ZOSAPI_Interfaces::IToleranceWizard::PutSurfaceRadiusFringes ( double pRetVal ) {
    HRESULT _hr = put_SurfaceRadiusFringes(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(660)
inline double ZOSAPI_Interfaces::IToleranceWizard::GetSurfaceThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_SurfaceThickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(661)
inline void ZOSAPI_Interfaces::IToleranceWizard::PutSurfaceThickness ( double pRetVal ) {
    HRESULT _hr = put_SurfaceThickness(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(662)
inline double ZOSAPI_Interfaces::IToleranceWizard::GetSurfaceDecenterX ( ) {
    double _result = 0;
    HRESULT _hr = get_SurfaceDecenterX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(663)
inline void ZOSAPI_Interfaces::IToleranceWizard::PutSurfaceDecenterX ( double pRetVal ) {
    HRESULT _hr = put_SurfaceDecenterX(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(664)
inline double ZOSAPI_Interfaces::IToleranceWizard::GetSurfaceDecenterY ( ) {
    double _result = 0;
    HRESULT _hr = get_SurfaceDecenterY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(665)
inline void ZOSAPI_Interfaces::IToleranceWizard::PutSurfaceDecenterY ( double pRetVal ) {
    HRESULT _hr = put_SurfaceDecenterY(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(666)
inline double ZOSAPI_Interfaces::IToleranceWizard::GetSurfaceTiltX ( ) {
    double _result = 0;
    HRESULT _hr = get_SurfaceTiltX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(667)
inline void ZOSAPI_Interfaces::IToleranceWizard::PutSurfaceTiltX ( double pRetVal ) {
    HRESULT _hr = put_SurfaceTiltX(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(668)
inline double ZOSAPI_Interfaces::IToleranceWizard::GetSurfaceTiltXDegrees ( ) {
    double _result = 0;
    HRESULT _hr = get_SurfaceTiltXDegrees(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(669)
inline void ZOSAPI_Interfaces::IToleranceWizard::PutSurfaceTiltXDegrees ( double pRetVal ) {
    HRESULT _hr = put_SurfaceTiltXDegrees(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(670)
inline double ZOSAPI_Interfaces::IToleranceWizard::GetSurfaceTiltY ( ) {
    double _result = 0;
    HRESULT _hr = get_SurfaceTiltY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(671)
inline void ZOSAPI_Interfaces::IToleranceWizard::PutSurfaceTiltY ( double pRetVal ) {
    HRESULT _hr = put_SurfaceTiltY(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(672)
inline double ZOSAPI_Interfaces::IToleranceWizard::GetSurfaceTiltYDegrees ( ) {
    double _result = 0;
    HRESULT _hr = get_SurfaceTiltYDegrees(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(673)
inline void ZOSAPI_Interfaces::IToleranceWizard::PutSurfaceTiltYDegrees ( double pRetVal ) {
    HRESULT _hr = put_SurfaceTiltYDegrees(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(674)
inline double ZOSAPI_Interfaces::IToleranceWizard::GetSurfaceSandAIrregularityFringes ( ) {
    double _result = 0;
    HRESULT _hr = get_SurfaceSandAIrregularityFringes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(675)
inline void ZOSAPI_Interfaces::IToleranceWizard::PutSurfaceSandAIrregularityFringes ( double pRetVal ) {
    HRESULT _hr = put_SurfaceSandAIrregularityFringes(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(676)
inline double ZOSAPI_Interfaces::IToleranceWizard::GetSurfaceZernikeIrregularityFringes ( ) {
    double _result = 0;
    HRESULT _hr = get_SurfaceZernikeIrregularityFringes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(677)
inline void ZOSAPI_Interfaces::IToleranceWizard::PutSurfaceZernikeIrregularityFringes ( double pRetVal ) {
    HRESULT _hr = put_SurfaceZernikeIrregularityFringes(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(678)
inline double ZOSAPI_Interfaces::IToleranceWizard::GetElementDecenterX ( ) {
    double _result = 0;
    HRESULT _hr = get_ElementDecenterX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(679)
inline void ZOSAPI_Interfaces::IToleranceWizard::PutElementDecenterX ( double pRetVal ) {
    HRESULT _hr = put_ElementDecenterX(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(680)
inline double ZOSAPI_Interfaces::IToleranceWizard::GetElementDecenterY ( ) {
    double _result = 0;
    HRESULT _hr = get_ElementDecenterY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(681)
inline void ZOSAPI_Interfaces::IToleranceWizard::PutElementDecenterY ( double pRetVal ) {
    HRESULT _hr = put_ElementDecenterY(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(682)
inline double ZOSAPI_Interfaces::IToleranceWizard::GetElementTiltXDegrees ( ) {
    double _result = 0;
    HRESULT _hr = get_ElementTiltXDegrees(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(683)
inline void ZOSAPI_Interfaces::IToleranceWizard::PutElementTiltXDegrees ( double pRetVal ) {
    HRESULT _hr = put_ElementTiltXDegrees(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(684)
inline double ZOSAPI_Interfaces::IToleranceWizard::GetElementTiltYDegrees ( ) {
    double _result = 0;
    HRESULT _hr = get_ElementTiltYDegrees(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(685)
inline void ZOSAPI_Interfaces::IToleranceWizard::PutElementTiltYDegrees ( double pRetVal ) {
    HRESULT _hr = put_ElementTiltYDegrees(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(686)
inline double ZOSAPI_Interfaces::IToleranceWizard::Getindex ( ) {
    double _result = 0;
    HRESULT _hr = get_index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(687)
inline void ZOSAPI_Interfaces::IToleranceWizard::Putindex ( double pRetVal ) {
    HRESULT _hr = put_index(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(688)
inline double ZOSAPI_Interfaces::IToleranceWizard::GetIndexAbbePercentage ( ) {
    double _result = 0;
    HRESULT _hr = get_IndexAbbePercentage(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(689)
inline void ZOSAPI_Interfaces::IToleranceWizard::PutIndexAbbePercentage ( double pRetVal ) {
    HRESULT _hr = put_IndexAbbePercentage(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(690)
inline double ZOSAPI_Interfaces::IToleranceWizard::GetTestWavelength ( ) {
    double _result = 0;
    HRESULT _hr = get_TestWavelength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(691)
inline void ZOSAPI_Interfaces::IToleranceWizard::PutTestWavelength ( double pRetVal ) {
    HRESULT _hr = put_TestWavelength(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface INSCToleranceWizard wrapper method implementations
//

#pragma implementation_key(692)
inline ZOSAPI_Interfaces::IToleranceWizardPtr ZOSAPI_Interfaces::INSCToleranceWizard::GetToleranceSettings ( ) {
    struct IToleranceWizard * _result = 0;
    HRESULT _hr = get_ToleranceSettings(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IToleranceWizardPtr(_result, false);
}

//
// interface ISEQToleranceWizard wrapper method implementations
//

#pragma implementation_key(693)
inline ZOSAPI_Interfaces::IToleranceWizardPtr ZOSAPI_Interfaces::ISEQToleranceWizard::GetToleranceSettings ( ) {
    struct IToleranceWizard * _result = 0;
    HRESULT _hr = get_ToleranceSettings(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IToleranceWizardPtr(_result, false);
}

//
// interface ISurfaceSelection wrapper method implementations
//

#pragma implementation_key(694)
inline long ZOSAPI_Interfaces::ISurfaceSelection::GetFirstAllowedSurface ( ) {
    long _result = 0;
    HRESULT _hr = get_FirstAllowedSurface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(695)
inline long ZOSAPI_Interfaces::ISurfaceSelection::GetLastAllowedSurface ( ) {
    long _result = 0;
    HRESULT _hr = get_LastAllowedSurface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(696)
inline long ZOSAPI_Interfaces::ISurfaceSelection::GetImageSurface ( ) {
    long _result = 0;
    HRESULT _hr = get_ImageSurface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(697)
inline long ZOSAPI_Interfaces::ISurfaceSelection::GetStopSurface ( ) {
    long _result = 0;
    HRESULT _hr = get_StopSurface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(698)
inline long ZOSAPI_Interfaces::ISurfaceSelection::GetSelectedSurface ( ) {
    long _result = 0;
    HRESULT _hr = raw_GetSelectedSurface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(699)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISurfaceSelection::SetSelectedSurface ( long Surface ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_SetSelectedSurface(Surface, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(700)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISurfaceSelection::UseObjectSurface ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_UseObjectSurface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(701)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISurfaceSelection::UseStopSurface ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_UseStopSurface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(702)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISurfaceSelection::UseImageSurface ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_UseImageSurface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface ISDApertureData wrapper method implementations
//

#pragma implementation_key(703)
inline enum ZOSAPI_Interfaces::ZemaxApertureType ZOSAPI_Interfaces::ISDApertureData::GetApertureType ( ) {
    enum ZemaxApertureType _result;
    HRESULT _hr = get_ApertureType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(704)
inline void ZOSAPI_Interfaces::ISDApertureData::PutApertureType ( enum ZemaxApertureType pRetVal ) {
    HRESULT _hr = put_ApertureType(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(705)
inline double ZOSAPI_Interfaces::ISDApertureData::GetApertureValue ( ) {
    double _result = 0;
    HRESULT _hr = get_ApertureValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(706)
inline void ZOSAPI_Interfaces::ISDApertureData::PutApertureValue ( double pRetVal ) {
    HRESULT _hr = put_ApertureValue(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(707)
inline enum ZOSAPI_Interfaces::ZemaxApodizationType ZOSAPI_Interfaces::ISDApertureData::GetApodizationType ( ) {
    enum ZemaxApodizationType _result;
    HRESULT _hr = get_ApodizationType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(708)
inline void ZOSAPI_Interfaces::ISDApertureData::PutApodizationType ( enum ZemaxApodizationType pRetVal ) {
    HRESULT _hr = put_ApodizationType(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(709)
inline double ZOSAPI_Interfaces::ISDApertureData::GetApodizationFactor ( ) {
    double _result = 0;
    HRESULT _hr = get_ApodizationFactor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(710)
inline void ZOSAPI_Interfaces::ISDApertureData::PutApodizationFactor ( double pRetVal ) {
    HRESULT _hr = put_ApodizationFactor(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(711)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISDApertureData::GetApodizationFactorIsUsed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ApodizationFactorIsUsed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(712)
inline double ZOSAPI_Interfaces::ISDApertureData::GetSemiDiameterMargin ( ) {
    double _result = 0;
    HRESULT _hr = get_SemiDiameterMargin(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(713)
inline void ZOSAPI_Interfaces::ISDApertureData::PutSemiDiameterMargin ( double pRetVal ) {
    HRESULT _hr = put_SemiDiameterMargin(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(714)
inline double ZOSAPI_Interfaces::ISDApertureData::GetSemiDiameterMarginPct ( ) {
    double _result = 0;
    HRESULT _hr = get_SemiDiameterMarginPct(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(715)
inline void ZOSAPI_Interfaces::ISDApertureData::PutSemiDiameterMarginPct ( double pRetVal ) {
    HRESULT _hr = put_SemiDiameterMarginPct(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(716)
inline ZOSAPI_Interfaces::ISurfaceSelectionPtr ZOSAPI_Interfaces::ISDApertureData::GetGCRS ( ) {
    struct ISurfaceSelection * _result = 0;
    HRESULT _hr = get_GCRS(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISurfaceSelectionPtr(_result, false);
}

#pragma implementation_key(717)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISDApertureData::GetTelecentricObjectSpace ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_TelecentricObjectSpace(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(718)
inline void ZOSAPI_Interfaces::ISDApertureData::PutTelecentricObjectSpace ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_TelecentricObjectSpace(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(719)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISDApertureData::GetAFocalImageSpace ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AFocalImageSpace(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(720)
inline void ZOSAPI_Interfaces::ISDApertureData::PutAFocalImageSpace ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_AFocalImageSpace(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(721)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISDApertureData::GetIterateSolvesWhenUpdating ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IterateSolvesWhenUpdating(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(722)
inline void ZOSAPI_Interfaces::ISDApertureData::PutIterateSolvesWhenUpdating ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IterateSolvesWhenUpdating(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(723)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISDApertureData::GetFastSemiDiameters ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_FastSemiDiameters(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(724)
inline void ZOSAPI_Interfaces::ISDApertureData::PutFastSemiDiameters ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_FastSemiDiameters(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(725)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISDApertureData::GetCheckGRINApertures ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_CheckGRINApertures(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(726)
inline void ZOSAPI_Interfaces::ISDApertureData::PutCheckGRINApertures ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_CheckGRINApertures(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISDEnvironmentData wrapper method implementations
//

#pragma implementation_key(727)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISDEnvironmentData::GetAdjustIndexToEnvironment ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AdjustIndexToEnvironment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(728)
inline void ZOSAPI_Interfaces::ISDEnvironmentData::PutAdjustIndexToEnvironment ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_AdjustIndexToEnvironment(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(729)
inline double ZOSAPI_Interfaces::ISDEnvironmentData::GetTemperature ( ) {
    double _result = 0;
    HRESULT _hr = get_Temperature(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(730)
inline void ZOSAPI_Interfaces::ISDEnvironmentData::PutTemperature ( double pRetVal ) {
    HRESULT _hr = put_Temperature(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(731)
inline double ZOSAPI_Interfaces::ISDEnvironmentData::GetPressure ( ) {
    double _result = 0;
    HRESULT _hr = get_Pressure(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(732)
inline void ZOSAPI_Interfaces::ISDEnvironmentData::PutPressure ( double pRetVal ) {
    HRESULT _hr = put_Pressure(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISDPolarizationData wrapper method implementations
//

#pragma implementation_key(733)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISDPolarizationData::GetConvertThinFilmPhaseToRayEquivalent ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ConvertThinFilmPhaseToRayEquivalent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(734)
inline void ZOSAPI_Interfaces::ISDPolarizationData::PutConvertThinFilmPhaseToRayEquivalent ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_ConvertThinFilmPhaseToRayEquivalent(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(735)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISDPolarizationData::GetUnpolarized ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Unpolarized(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(736)
inline void ZOSAPI_Interfaces::ISDPolarizationData::PutUnpolarized ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_Unpolarized(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(737)
inline double ZOSAPI_Interfaces::ISDPolarizationData::Getjx ( ) {
    double _result = 0;
    HRESULT _hr = get_jx(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(738)
inline void ZOSAPI_Interfaces::ISDPolarizationData::Putjx ( double pRetVal ) {
    HRESULT _hr = put_jx(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(739)
inline double ZOSAPI_Interfaces::ISDPolarizationData::Getjy ( ) {
    double _result = 0;
    HRESULT _hr = get_jy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(740)
inline void ZOSAPI_Interfaces::ISDPolarizationData::Putjy ( double pRetVal ) {
    HRESULT _hr = put_jy(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(741)
inline double ZOSAPI_Interfaces::ISDPolarizationData::GetXPhase ( ) {
    double _result = 0;
    HRESULT _hr = get_XPhase(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(742)
inline void ZOSAPI_Interfaces::ISDPolarizationData::PutXPhase ( double pRetVal ) {
    HRESULT _hr = put_XPhase(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(743)
inline double ZOSAPI_Interfaces::ISDPolarizationData::GetYPhase ( ) {
    double _result = 0;
    HRESULT _hr = get_YPhase(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(744)
inline void ZOSAPI_Interfaces::ISDPolarizationData::PutYPhase ( double pRetVal ) {
    HRESULT _hr = put_YPhase(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(745)
inline enum ZOSAPI_Interfaces::PolarizationMethod ZOSAPI_Interfaces::ISDPolarizationData::GetMethod ( ) {
    enum PolarizationMethod _result;
    HRESULT _hr = get_Method(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(746)
inline void ZOSAPI_Interfaces::ISDPolarizationData::PutMethod ( enum PolarizationMethod pRetVal ) {
    HRESULT _hr = put_Method(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISDAdvancedData wrapper method implementations
//

#pragma implementation_key(747)
inline enum ZOSAPI_Interfaces::ReferenceOPDSetting ZOSAPI_Interfaces::ISDAdvancedData::GetReferenceOPD ( ) {
    enum ReferenceOPDSetting _result;
    HRESULT _hr = get_ReferenceOPD(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(748)
inline void ZOSAPI_Interfaces::ISDAdvancedData::PutReferenceOPD ( enum ReferenceOPDSetting pRetVal ) {
    HRESULT _hr = put_ReferenceOPD(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(749)
inline enum ZOSAPI_Interfaces::ParaxialRaysSetting ZOSAPI_Interfaces::ISDAdvancedData::GetParaxialRays ( ) {
    enum ParaxialRaysSetting _result;
    HRESULT _hr = get_ParaxialRays(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(750)
inline void ZOSAPI_Interfaces::ISDAdvancedData::PutParaxialRays ( enum ParaxialRaysSetting pRetVal ) {
    HRESULT _hr = put_ParaxialRays(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(751)
inline enum ZOSAPI_Interfaces::FNumberComputationType ZOSAPI_Interfaces::ISDAdvancedData::GetFNumMethod ( ) {
    enum FNumberComputationType _result;
    HRESULT _hr = get_FNumMethod(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(752)
inline void ZOSAPI_Interfaces::ISDAdvancedData::PutFNumMethod ( enum FNumberComputationType pRetVal ) {
    HRESULT _hr = put_FNumMethod(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(753)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISDAdvancedData::GetDontPrintCoordinateBreakData ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DontPrintCoordinateBreakData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(754)
inline void ZOSAPI_Interfaces::ISDAdvancedData::PutDontPrintCoordinateBreakData ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_DontPrintCoordinateBreakData(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(755)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISDAdvancedData::GetTurnOffThreading ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_TurnOffThreading(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(756)
inline void ZOSAPI_Interfaces::ISDAdvancedData::PutTurnOffThreading ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_TurnOffThreading(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(757)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISDAdvancedData::GetOPDModulo2PI ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_OPDModulo2PI(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(758)
inline void ZOSAPI_Interfaces::ISDAdvancedData::PutOPDModulo2PI ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_OPDModulo2PI(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(759)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISDAdvancedData::GetIncludeCalculatedDataInSessionFile ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IncludeCalculatedDataInSessionFile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(760)
inline void ZOSAPI_Interfaces::ISDAdvancedData::PutIncludeCalculatedDataInSessionFile ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IncludeCalculatedDataInSessionFile(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(761)
inline enum ZOSAPI_Interfaces::HuygensIntegralSettings ZOSAPI_Interfaces::ISDAdvancedData::GetHuygensIntegralMethod ( ) {
    enum HuygensIntegralSettings _result;
    HRESULT _hr = get_HuygensIntegralMethod(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(762)
inline void ZOSAPI_Interfaces::ISDAdvancedData::PutHuygensIntegralMethod ( enum HuygensIntegralSettings pRetVal ) {
    HRESULT _hr = put_HuygensIntegralMethod(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISDRayAimingData wrapper method implementations
//

#pragma implementation_key(763)
inline enum ZOSAPI_Interfaces::RayAimingMethod ZOSAPI_Interfaces::ISDRayAimingData::GetRayAiming ( ) {
    enum RayAimingMethod _result;
    HRESULT _hr = get_RayAiming(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(764)
inline void ZOSAPI_Interfaces::ISDRayAimingData::PutRayAiming ( enum RayAimingMethod pRetVal ) {
    HRESULT _hr = put_RayAiming(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(765)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISDRayAimingData::GetUseRayAimingCache ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseRayAimingCache(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(766)
inline void ZOSAPI_Interfaces::ISDRayAimingData::PutUseRayAimingCache ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UseRayAimingCache(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(767)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISDRayAimingData::GetUseRobustRayAiming ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseRobustRayAiming(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(768)
inline void ZOSAPI_Interfaces::ISDRayAimingData::PutUseRobustRayAiming ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UseRobustRayAiming(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(769)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISDRayAimingData::GetScalePupilShiftFactorsByField ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ScalePupilShiftFactorsByField(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(770)
inline void ZOSAPI_Interfaces::ISDRayAimingData::PutScalePupilShiftFactorsByField ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_ScalePupilShiftFactorsByField(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(771)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISDRayAimingData::GetAutomaticallyCalculatePupilShiftsIsChecked ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AutomaticallyCalculatePupilShiftsIsChecked(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(772)
inline void ZOSAPI_Interfaces::ISDRayAimingData::PutAutomaticallyCalculatePupilShiftsIsChecked ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_AutomaticallyCalculatePupilShiftsIsChecked(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(773)
inline double ZOSAPI_Interfaces::ISDRayAimingData::GetPupilShiftX ( ) {
    double _result = 0;
    HRESULT _hr = get_PupilShiftX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(774)
inline void ZOSAPI_Interfaces::ISDRayAimingData::PutPupilShiftX ( double pRetVal ) {
    HRESULT _hr = put_PupilShiftX(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(775)
inline double ZOSAPI_Interfaces::ISDRayAimingData::GetPupilShiftY ( ) {
    double _result = 0;
    HRESULT _hr = get_PupilShiftY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(776)
inline void ZOSAPI_Interfaces::ISDRayAimingData::PutPupilShiftY ( double pRetVal ) {
    HRESULT _hr = put_PupilShiftY(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(777)
inline double ZOSAPI_Interfaces::ISDRayAimingData::GetPupilShiftZ ( ) {
    double _result = 0;
    HRESULT _hr = get_PupilShiftZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(778)
inline void ZOSAPI_Interfaces::ISDRayAimingData::PutPupilShiftZ ( double pRetVal ) {
    HRESULT _hr = put_PupilShiftZ(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(779)
inline double ZOSAPI_Interfaces::ISDRayAimingData::GetPupilCompressX ( ) {
    double _result = 0;
    HRESULT _hr = get_PupilCompressX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(780)
inline void ZOSAPI_Interfaces::ISDRayAimingData::PutPupilCompressX ( double pRetVal ) {
    HRESULT _hr = put_PupilCompressX(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(781)
inline double ZOSAPI_Interfaces::ISDRayAimingData::GetPupilCompressY ( ) {
    double _result = 0;
    HRESULT _hr = get_PupilCompressY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(782)
inline void ZOSAPI_Interfaces::ISDRayAimingData::PutPupilCompressY ( double pRetVal ) {
    HRESULT _hr = put_PupilCompressY(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISDMaterialCatalogData wrapper method implementations
//

#pragma implementation_key(783)
inline SAFEARRAY * ZOSAPI_Interfaces::ISDMaterialCatalogData::GetCatalogsInUse ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_GetCatalogsInUse(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(784)
inline SAFEARRAY * ZOSAPI_Interfaces::ISDMaterialCatalogData::GetAvailableCatalogs ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_GetAvailableCatalogs(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(785)
inline SAFEARRAY * ZOSAPI_Interfaces::ISDMaterialCatalogData::GetMaterialsInCatalog ( _bstr_t catalog ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_GetMaterialsInCatalog(catalog, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(786)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISDMaterialCatalogData::IsCatalogInUse ( _bstr_t catalog ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_IsCatalogInUse(catalog, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(787)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISDMaterialCatalogData::RemoveCatalog ( _bstr_t catalog ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_RemoveCatalog(catalog, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(788)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISDMaterialCatalogData::AddCatalog ( _bstr_t catalog ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_AddCatalog(catalog, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface ISDTitleNotes wrapper method implementations
//

#pragma implementation_key(789)
inline _bstr_t ZOSAPI_Interfaces::ISDTitleNotes::GetTitle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Title(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(790)
inline void ZOSAPI_Interfaces::ISDTitleNotes::PutTitle ( _bstr_t pRetVal ) {
    HRESULT _hr = put_Title(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(791)
inline _bstr_t ZOSAPI_Interfaces::ISDTitleNotes::GetNotes ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Notes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(792)
inline void ZOSAPI_Interfaces::ISDTitleNotes::PutNotes ( _bstr_t pRetVal ) {
    HRESULT _hr = put_Notes(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISDFiles wrapper method implementations
//

#pragma implementation_key(793)
inline SAFEARRAY * ZOSAPI_Interfaces::ISDFiles::GetCoatingFiles ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_GetCoatingFiles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(794)
inline _bstr_t ZOSAPI_Interfaces::ISDFiles::GetCoatingFile ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_CoatingFile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(795)
inline void ZOSAPI_Interfaces::ISDFiles::PutCoatingFile ( _bstr_t pRetVal ) {
    HRESULT _hr = put_CoatingFile(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(796)
inline SAFEARRAY * ZOSAPI_Interfaces::ISDFiles::GetScatterProfiles ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_GetScatterProfiles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(797)
inline _bstr_t ZOSAPI_Interfaces::ISDFiles::GetScatterProfile ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ScatterProfile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(798)
inline void ZOSAPI_Interfaces::ISDFiles::PutScatterProfile ( _bstr_t pRetVal ) {
    HRESULT _hr = put_ScatterProfile(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(799)
inline SAFEARRAY * ZOSAPI_Interfaces::ISDFiles::GetABgDataFiles ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_GetABgDataFiles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(800)
inline _bstr_t ZOSAPI_Interfaces::ISDFiles::GetABgDataFile ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ABgDataFile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(801)
inline void ZOSAPI_Interfaces::ISDFiles::PutABgDataFile ( _bstr_t pRetVal ) {
    HRESULT _hr = put_ABgDataFile(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(802)
inline SAFEARRAY * ZOSAPI_Interfaces::ISDFiles::GetGradiumProfiles ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_GetGradiumProfiles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(803)
inline _bstr_t ZOSAPI_Interfaces::ISDFiles::GetGradiumProfile ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_GradiumProfile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(804)
inline void ZOSAPI_Interfaces::ISDFiles::PutGradiumProfile ( _bstr_t pRetVal ) {
    HRESULT _hr = put_GradiumProfile(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(805)
inline HRESULT ZOSAPI_Interfaces::ISDFiles::ReloadFiles ( ) {
    HRESULT _hr = raw_ReloadFiles();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISDUnitsData wrapper method implementations
//

#pragma implementation_key(806)
inline enum ZOSAPI_Interfaces::ZemaxSystemUnits ZOSAPI_Interfaces::ISDUnitsData::GetLensUnits ( ) {
    enum ZemaxSystemUnits _result;
    HRESULT _hr = get_LensUnits(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(807)
inline void ZOSAPI_Interfaces::ISDUnitsData::PutLensUnits ( enum ZemaxSystemUnits pRetVal ) {
    HRESULT _hr = put_LensUnits(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(808)
inline enum ZOSAPI_Interfaces::ZemaxUnitPrefix ZOSAPI_Interfaces::ISDUnitsData::GetSourceUnitPrefix ( ) {
    enum ZemaxUnitPrefix _result;
    HRESULT _hr = get_SourceUnitPrefix(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(809)
inline void ZOSAPI_Interfaces::ISDUnitsData::PutSourceUnitPrefix ( enum ZemaxUnitPrefix pRetVal ) {
    HRESULT _hr = put_SourceUnitPrefix(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(810)
inline enum ZOSAPI_Interfaces::ZemaxSourceUnits ZOSAPI_Interfaces::ISDUnitsData::GetSourceUnits ( ) {
    enum ZemaxSourceUnits _result;
    HRESULT _hr = get_SourceUnits(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(811)
inline void ZOSAPI_Interfaces::ISDUnitsData::PutSourceUnits ( enum ZemaxSourceUnits pRetVal ) {
    HRESULT _hr = put_SourceUnits(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(812)
inline enum ZOSAPI_Interfaces::ZemaxUnitPrefix ZOSAPI_Interfaces::ISDUnitsData::GetAnalysisUnitPrefix ( ) {
    enum ZemaxUnitPrefix _result;
    HRESULT _hr = get_AnalysisUnitPrefix(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(813)
inline void ZOSAPI_Interfaces::ISDUnitsData::PutAnalysisUnitPrefix ( enum ZemaxUnitPrefix pRetVal ) {
    HRESULT _hr = put_AnalysisUnitPrefix(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(814)
inline enum ZOSAPI_Interfaces::ZemaxAnalysisUnits ZOSAPI_Interfaces::ISDUnitsData::GetAnalysisUnits ( ) {
    enum ZemaxAnalysisUnits _result;
    HRESULT _hr = get_AnalysisUnits(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(815)
inline void ZOSAPI_Interfaces::ISDUnitsData::PutAnalysisUnits ( enum ZemaxAnalysisUnits pRetVal ) {
    HRESULT _hr = put_AnalysisUnits(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(816)
inline enum ZOSAPI_Interfaces::ZemaxAfocalModeUnits ZOSAPI_Interfaces::ISDUnitsData::GetAfocalModeUnits ( ) {
    enum ZemaxAfocalModeUnits _result;
    HRESULT _hr = get_AfocalModeUnits(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(817)
inline void ZOSAPI_Interfaces::ISDUnitsData::PutAfocalModeUnits ( enum ZemaxAfocalModeUnits pRetVal ) {
    HRESULT _hr = put_AfocalModeUnits(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(818)
inline enum ZOSAPI_Interfaces::ZemaxMTFUnits ZOSAPI_Interfaces::ISDUnitsData::GetMTFUnits ( ) {
    enum ZemaxMTFUnits _result;
    HRESULT _hr = get_MTFUnits(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(819)
inline void ZOSAPI_Interfaces::ISDUnitsData::PutMTFUnits ( enum ZemaxMTFUnits pRetVal ) {
    HRESULT _hr = put_MTFUnits(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IWavelength wrapper method implementations
//

#pragma implementation_key(820)
inline long ZOSAPI_Interfaces::IWavelength::GetWavelengthNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_WavelengthNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(821)
inline VARIANT_BOOL ZOSAPI_Interfaces::IWavelength::GetIsActive ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsActive(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(822)
inline VARIANT_BOOL ZOSAPI_Interfaces::IWavelength::GetIsPrimary ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsPrimary(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(823)
inline double ZOSAPI_Interfaces::IWavelength::GetWavelength ( ) {
    double _result = 0;
    HRESULT _hr = get_Wavelength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(824)
inline void ZOSAPI_Interfaces::IWavelength::PutWavelength ( double pRetVal ) {
    HRESULT _hr = put_Wavelength(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(825)
inline double ZOSAPI_Interfaces::IWavelength::GetWeight ( ) {
    double _result = 0;
    HRESULT _hr = get_Weight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(826)
inline void ZOSAPI_Interfaces::IWavelength::PutWeight ( double pRetVal ) {
    HRESULT _hr = put_Weight(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(827)
inline HRESULT ZOSAPI_Interfaces::IWavelength::MakePrimary ( ) {
    HRESULT _hr = raw_MakePrimary();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IWavelengths wrapper method implementations
//

#pragma implementation_key(828)
inline long ZOSAPI_Interfaces::IWavelengths::GetNumberOfWavelengths ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfWavelengths(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(829)
inline ZOSAPI_Interfaces::IWavelengthPtr ZOSAPI_Interfaces::IWavelengths::GetWavelength ( long position ) {
    struct IWavelength * _result = 0;
    HRESULT _hr = raw_GetWavelength(position, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IWavelengthPtr(_result, false);
}

#pragma implementation_key(830)
inline ZOSAPI_Interfaces::IWavelengthPtr ZOSAPI_Interfaces::IWavelengths::AddWavelength ( double Wavelength, double Weight ) {
    struct IWavelength * _result = 0;
    HRESULT _hr = raw_AddWavelength(Wavelength, Weight, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IWavelengthPtr(_result, false);
}

#pragma implementation_key(831)
inline VARIANT_BOOL ZOSAPI_Interfaces::IWavelengths::RemoveWavelength ( long position ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_RemoveWavelength(position, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(832)
inline VARIANT_BOOL ZOSAPI_Interfaces::IWavelengths::SelectWavelengthPreset ( enum WavelengthPreset preset ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_SelectWavelengthPreset(preset, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(833)
inline VARIANT_BOOL ZOSAPI_Interfaces::IWavelengths::GaussianQuadrature ( double minWave, double maxWave, enum QuadratureSteps numSteps ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_GaussianQuadrature(minWave, maxWave, numSteps, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IField wrapper method implementations
//

#pragma implementation_key(834)
inline VARIANT_BOOL ZOSAPI_Interfaces::IField::GetIsActive ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsActive(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(835)
inline long ZOSAPI_Interfaces::IField::GetFieldNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_FieldNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(836)
inline double ZOSAPI_Interfaces::IField::GetX ( ) {
    double _result = 0;
    HRESULT _hr = get_X(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(837)
inline void ZOSAPI_Interfaces::IField::PutX ( double pRetVal ) {
    HRESULT _hr = put_X(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(838)
inline double ZOSAPI_Interfaces::IField::GetY ( ) {
    double _result = 0;
    HRESULT _hr = get_Y(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(839)
inline void ZOSAPI_Interfaces::IField::PutY ( double pRetVal ) {
    HRESULT _hr = put_Y(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(840)
inline double ZOSAPI_Interfaces::IField::GetWeight ( ) {
    double _result = 0;
    HRESULT _hr = get_Weight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(841)
inline void ZOSAPI_Interfaces::IField::PutWeight ( double pRetVal ) {
    HRESULT _hr = put_Weight(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(842)
inline double ZOSAPI_Interfaces::IField::GetVDX ( ) {
    double _result = 0;
    HRESULT _hr = get_VDX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(843)
inline void ZOSAPI_Interfaces::IField::PutVDX ( double pRetVal ) {
    HRESULT _hr = put_VDX(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(844)
inline double ZOSAPI_Interfaces::IField::GetVDY ( ) {
    double _result = 0;
    HRESULT _hr = get_VDY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(845)
inline void ZOSAPI_Interfaces::IField::PutVDY ( double pRetVal ) {
    HRESULT _hr = put_VDY(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(846)
inline double ZOSAPI_Interfaces::IField::GetVCX ( ) {
    double _result = 0;
    HRESULT _hr = get_VCX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(847)
inline void ZOSAPI_Interfaces::IField::PutVCX ( double pRetVal ) {
    HRESULT _hr = put_VCX(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(848)
inline double ZOSAPI_Interfaces::IField::GetVCY ( ) {
    double _result = 0;
    HRESULT _hr = get_VCY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(849)
inline void ZOSAPI_Interfaces::IField::PutVCY ( double pRetVal ) {
    HRESULT _hr = put_VCY(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(850)
inline double ZOSAPI_Interfaces::IField::GetVAN ( ) {
    double _result = 0;
    HRESULT _hr = get_VAN(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(851)
inline void ZOSAPI_Interfaces::IField::PutVAN ( double pRetVal ) {
    HRESULT _hr = put_VAN(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IFields wrapper method implementations
//

#pragma implementation_key(852)
inline long ZOSAPI_Interfaces::IFields::GetNumberOfFields ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfFields(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(853)
inline ZOSAPI_Interfaces::IFieldPtr ZOSAPI_Interfaces::IFields::GetField ( long position ) {
    struct IField * _result = 0;
    HRESULT _hr = raw_GetField(position, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IFieldPtr(_result, false);
}

#pragma implementation_key(854)
inline ZOSAPI_Interfaces::IFieldPtr ZOSAPI_Interfaces::IFields::AddField ( double X, double Y, double Weight ) {
    struct IField * _result = 0;
    HRESULT _hr = raw_AddField(X, Y, Weight, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IFieldPtr(_result, false);
}

#pragma implementation_key(855)
inline VARIANT_BOOL ZOSAPI_Interfaces::IFields::RemoveField ( long position ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_RemoveField(position, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(856)
inline HRESULT ZOSAPI_Interfaces::IFields::SetVignetting ( ) {
    HRESULT _hr = raw_SetVignetting();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(857)
inline HRESULT ZOSAPI_Interfaces::IFields::ClearVignetting ( ) {
    HRESULT _hr = raw_ClearVignetting();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(858)
inline enum ZOSAPI_Interfaces::FieldType ZOSAPI_Interfaces::IFields::GetFieldType ( ) {
    enum FieldType _result;
    HRESULT _hr = raw_GetFieldType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(859)
inline HRESULT ZOSAPI_Interfaces::IFields::SetFieldType ( enum FieldType Type ) {
    HRESULT _hr = raw_SetFieldType(Type);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(860)
inline enum ZOSAPI_Interfaces::FieldNormalizationType ZOSAPI_Interfaces::IFields::GetNormalization ( ) {
    enum FieldNormalizationType _result;
    HRESULT _hr = get_Normalization(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(861)
inline void ZOSAPI_Interfaces::IFields::PutNormalization ( enum FieldNormalizationType pRetVal ) {
    HRESULT _hr = put_Normalization(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(862)
inline VARIANT_BOOL ZOSAPI_Interfaces::IFields::MakeEqualAreaFields ( long NumberOfFields, double maximumField ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_MakeEqualAreaFields(NumberOfFields, maximumField, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface ISDNonSeqData wrapper method implementations
//

#pragma implementation_key(863)
inline long ZOSAPI_Interfaces::ISDNonSeqData::GetMaximumIntersectionsPerRay ( ) {
    long _result = 0;
    HRESULT _hr = get_MaximumIntersectionsPerRay(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(864)
inline void ZOSAPI_Interfaces::ISDNonSeqData::PutMaximumIntersectionsPerRay ( long pRetVal ) {
    HRESULT _hr = put_MaximumIntersectionsPerRay(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(865)
inline long ZOSAPI_Interfaces::ISDNonSeqData::GetMaximumSegmentsPerRay ( ) {
    long _result = 0;
    HRESULT _hr = get_MaximumSegmentsPerRay(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(866)
inline void ZOSAPI_Interfaces::ISDNonSeqData::PutMaximumSegmentsPerRay ( long pRetVal ) {
    HRESULT _hr = put_MaximumSegmentsPerRay(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(867)
inline long ZOSAPI_Interfaces::ISDNonSeqData::GetMaximumNestedTouchingObjects ( ) {
    long _result = 0;
    HRESULT _hr = get_MaximumNestedTouchingObjects(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(868)
inline void ZOSAPI_Interfaces::ISDNonSeqData::PutMaximumNestedTouchingObjects ( long pRetVal ) {
    HRESULT _hr = put_MaximumNestedTouchingObjects(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(869)
inline long ZOSAPI_Interfaces::ISDNonSeqData::GetMaximumSourceFileRaysInMemory ( ) {
    long _result = 0;
    HRESULT _hr = get_MaximumSourceFileRaysInMemory(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(870)
inline void ZOSAPI_Interfaces::ISDNonSeqData::PutMaximumSourceFileRaysInMemory ( long pRetVal ) {
    HRESULT _hr = put_MaximumSourceFileRaysInMemory(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(871)
inline double ZOSAPI_Interfaces::ISDNonSeqData::GetMinimumRelativeRayIntensity ( ) {
    double _result = 0;
    HRESULT _hr = get_MinimumRelativeRayIntensity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(872)
inline void ZOSAPI_Interfaces::ISDNonSeqData::PutMinimumRelativeRayIntensity ( double pRetVal ) {
    HRESULT _hr = put_MinimumRelativeRayIntensity(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(873)
inline double ZOSAPI_Interfaces::ISDNonSeqData::GetMinimumAbsoluteRayIntensity ( ) {
    double _result = 0;
    HRESULT _hr = get_MinimumAbsoluteRayIntensity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(874)
inline void ZOSAPI_Interfaces::ISDNonSeqData::PutMinimumAbsoluteRayIntensity ( double pRetVal ) {
    HRESULT _hr = put_MinimumAbsoluteRayIntensity(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(875)
inline double ZOSAPI_Interfaces::ISDNonSeqData::GetGlueDistanceInLensUnits ( ) {
    double _result = 0;
    HRESULT _hr = get_GlueDistanceInLensUnits(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(876)
inline void ZOSAPI_Interfaces::ISDNonSeqData::PutGlueDistanceInLensUnits ( double pRetVal ) {
    HRESULT _hr = put_GlueDistanceInLensUnits(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(877)
inline double ZOSAPI_Interfaces::ISDNonSeqData::GetMissedRayDrawDistanceInLensUnits ( ) {
    double _result = 0;
    HRESULT _hr = get_MissedRayDrawDistanceInLensUnits(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(878)
inline void ZOSAPI_Interfaces::ISDNonSeqData::PutMissedRayDrawDistanceInLensUnits ( double pRetVal ) {
    HRESULT _hr = put_MissedRayDrawDistanceInLensUnits(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(879)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISDNonSeqData::GetSimpleRaySplitting ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SimpleRaySplitting(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(880)
inline void ZOSAPI_Interfaces::ISDNonSeqData::PutSimpleRaySplitting ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_SimpleRaySplitting(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(881)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISDNonSeqData::GetRetraceSourceRaysUponFileOpen ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_RetraceSourceRaysUponFileOpen(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(882)
inline void ZOSAPI_Interfaces::ISDNonSeqData::PutRetraceSourceRaysUponFileOpen ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_RetraceSourceRaysUponFileOpen(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISDNamedFilters wrapper method implementations
//

#pragma implementation_key(883)
inline _bstr_t ZOSAPI_Interfaces::ISDNamedFilters::GetNamedFilters ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_NamedFilters(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(884)
inline void ZOSAPI_Interfaces::ISDNamedFilters::PutNamedFilters ( _bstr_t pRetVal ) {
    HRESULT _hr = put_NamedFilters(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISystemData wrapper method implementations
//

#pragma implementation_key(885)
inline ZOSAPI_Interfaces::ISDApertureDataPtr ZOSAPI_Interfaces::ISystemData::GetAperture ( ) {
    struct ISDApertureData * _result = 0;
    HRESULT _hr = get_Aperture(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISDApertureDataPtr(_result, false);
}

#pragma implementation_key(886)
inline ZOSAPI_Interfaces::IWavelengthsPtr ZOSAPI_Interfaces::ISystemData::GetWavelengths ( ) {
    struct IWavelengths * _result = 0;
    HRESULT _hr = get_Wavelengths(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IWavelengthsPtr(_result, false);
}

#pragma implementation_key(887)
inline ZOSAPI_Interfaces::IFieldsPtr ZOSAPI_Interfaces::ISystemData::GetFields ( ) {
    struct IFields * _result = 0;
    HRESULT _hr = get_Fields(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IFieldsPtr(_result, false);
}

#pragma implementation_key(888)
inline ZOSAPI_Interfaces::ISDEnvironmentDataPtr ZOSAPI_Interfaces::ISystemData::GetEnvironment ( ) {
    struct ISDEnvironmentData * _result = 0;
    HRESULT _hr = get_Environment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISDEnvironmentDataPtr(_result, false);
}

#pragma implementation_key(889)
inline ZOSAPI_Interfaces::ISDPolarizationDataPtr ZOSAPI_Interfaces::ISystemData::GetPolarization ( ) {
    struct ISDPolarizationData * _result = 0;
    HRESULT _hr = get_Polarization(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISDPolarizationDataPtr(_result, false);
}

#pragma implementation_key(890)
inline ZOSAPI_Interfaces::ISDAdvancedDataPtr ZOSAPI_Interfaces::ISystemData::GetAdvanced ( ) {
    struct ISDAdvancedData * _result = 0;
    HRESULT _hr = get_Advanced(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISDAdvancedDataPtr(_result, false);
}

#pragma implementation_key(891)
inline ZOSAPI_Interfaces::ISDRayAimingDataPtr ZOSAPI_Interfaces::ISystemData::GetRayAiming ( ) {
    struct ISDRayAimingData * _result = 0;
    HRESULT _hr = get_RayAiming(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISDRayAimingDataPtr(_result, false);
}

#pragma implementation_key(892)
inline ZOSAPI_Interfaces::ISDMaterialCatalogDataPtr ZOSAPI_Interfaces::ISystemData::GetMaterialCatalogs ( ) {
    struct ISDMaterialCatalogData * _result = 0;
    HRESULT _hr = get_MaterialCatalogs(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISDMaterialCatalogDataPtr(_result, false);
}

#pragma implementation_key(893)
inline ZOSAPI_Interfaces::ISDTitleNotesPtr ZOSAPI_Interfaces::ISystemData::GetTitleNotes ( ) {
    struct ISDTitleNotes * _result = 0;
    HRESULT _hr = get_TitleNotes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISDTitleNotesPtr(_result, false);
}

#pragma implementation_key(894)
inline ZOSAPI_Interfaces::ISDFilesPtr ZOSAPI_Interfaces::ISystemData::GetFiles ( ) {
    struct ISDFiles * _result = 0;
    HRESULT _hr = get_Files(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISDFilesPtr(_result, false);
}

#pragma implementation_key(895)
inline ZOSAPI_Interfaces::ISDUnitsDataPtr ZOSAPI_Interfaces::ISystemData::GetUnits ( ) {
    struct ISDUnitsData * _result = 0;
    HRESULT _hr = get_Units(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISDUnitsDataPtr(_result, false);
}

#pragma implementation_key(896)
inline ZOSAPI_Interfaces::ISDNonSeqDataPtr ZOSAPI_Interfaces::ISystemData::GetNonSequentialData ( ) {
    struct ISDNonSeqData * _result = 0;
    HRESULT _hr = get_NonSequentialData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISDNonSeqDataPtr(_result, false);
}

#pragma implementation_key(897)
inline ZOSAPI_Interfaces::ISDNamedFiltersPtr ZOSAPI_Interfaces::ISystemData::GetNamedFiltersData ( ) {
    struct ISDNamedFilters * _result = 0;
    HRESULT _hr = get_NamedFiltersData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISDNamedFiltersPtr(_result, false);
}

//
// interface ISolveZPLMacro wrapper method implementations
//

#pragma implementation_key(898)
inline _bstr_t ZOSAPI_Interfaces::ISolveZPLMacro::GetMacro ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Macro(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(899)
inline void ZOSAPI_Interfaces::ISolveZPLMacro::PutMacro ( _bstr_t pRetVal ) {
    HRESULT _hr = put_Macro(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(900)
inline SAFEARRAY * ZOSAPI_Interfaces::ISolveZPLMacro::GetAvailableMacros ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_GetAvailableMacros(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface ISolveMarginalRayAngle wrapper method implementations
//

#pragma implementation_key(901)
inline double ZOSAPI_Interfaces::ISolveMarginalRayAngle::GetAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_Angle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(902)
inline void ZOSAPI_Interfaces::ISolveMarginalRayAngle::PutAngle ( double pRetVal ) {
    HRESULT _hr = put_Angle(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISolveMarginalRayHeight wrapper method implementations
//

#pragma implementation_key(903)
inline double ZOSAPI_Interfaces::ISolveMarginalRayHeight::GetHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_Height(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(904)
inline void ZOSAPI_Interfaces::ISolveMarginalRayHeight::PutHeight ( double pRetVal ) {
    HRESULT _hr = put_Height(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(905)
inline double ZOSAPI_Interfaces::ISolveMarginalRayHeight::GetPupilZone ( ) {
    double _result = 0;
    HRESULT _hr = get_PupilZone(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(906)
inline void ZOSAPI_Interfaces::ISolveMarginalRayHeight::PutPupilZone ( double pRetVal ) {
    HRESULT _hr = put_PupilZone(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISolveChiefRayAngle wrapper method implementations
//

#pragma implementation_key(907)
inline double ZOSAPI_Interfaces::ISolveChiefRayAngle::GetAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_Angle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(908)
inline void ZOSAPI_Interfaces::ISolveChiefRayAngle::PutAngle ( double pRetVal ) {
    HRESULT _hr = put_Angle(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISolveElementPower wrapper method implementations
//

#pragma implementation_key(909)
inline double ZOSAPI_Interfaces::ISolveElementPower::GetPower ( ) {
    double _result = 0;
    HRESULT _hr = get_Power(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(910)
inline void ZOSAPI_Interfaces::ISolveElementPower::PutPower ( double pRetVal ) {
    HRESULT _hr = put_Power(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISolveCocentricSurface wrapper method implementations
//

#pragma implementation_key(911)
inline long ZOSAPI_Interfaces::ISolveCocentricSurface::GetAboutSurface ( ) {
    long _result = 0;
    HRESULT _hr = get_AboutSurface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(912)
inline void ZOSAPI_Interfaces::ISolveCocentricSurface::PutAboutSurface ( long pRetVal ) {
    HRESULT _hr = put_AboutSurface(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISolveCocentricRadius wrapper method implementations
//

#pragma implementation_key(913)
inline long ZOSAPI_Interfaces::ISolveCocentricRadius::GetWithSurface ( ) {
    long _result = 0;
    HRESULT _hr = get_WithSurface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(914)
inline void ZOSAPI_Interfaces::ISolveCocentricRadius::PutWithSurface ( long pRetVal ) {
    HRESULT _hr = put_WithSurface(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISolveFNumber wrapper method implementations
//

#pragma implementation_key(915)
inline double ZOSAPI_Interfaces::ISolveFNumber::GetFNumber ( ) {
    double _result = 0;
    HRESULT _hr = get_FNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(916)
inline void ZOSAPI_Interfaces::ISolveFNumber::PutFNumber ( double pRetVal ) {
    HRESULT _hr = put_FNumber(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISolveChiefRayHeight wrapper method implementations
//

#pragma implementation_key(917)
inline double ZOSAPI_Interfaces::ISolveChiefRayHeight::GetHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_Height(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(918)
inline void ZOSAPI_Interfaces::ISolveChiefRayHeight::PutHeight ( double pRetVal ) {
    HRESULT _hr = put_Height(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISolveEdgeThickness wrapper method implementations
//

#pragma implementation_key(919)
inline double ZOSAPI_Interfaces::ISolveEdgeThickness::GetThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_Thickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(920)
inline void ZOSAPI_Interfaces::ISolveEdgeThickness::PutThickness ( double pRetVal ) {
    HRESULT _hr = put_Thickness(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(921)
inline double ZOSAPI_Interfaces::ISolveEdgeThickness::GetRadialHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_RadialHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(922)
inline void ZOSAPI_Interfaces::ISolveEdgeThickness::PutRadialHeight ( double pRetVal ) {
    HRESULT _hr = put_RadialHeight(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISolveOpticalPathDifference wrapper method implementations
//

#pragma implementation_key(923)
inline double ZOSAPI_Interfaces::ISolveOpticalPathDifference::Getopd ( ) {
    double _result = 0;
    HRESULT _hr = get_opd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(924)
inline void ZOSAPI_Interfaces::ISolveOpticalPathDifference::Putopd ( double pRetVal ) {
    HRESULT _hr = put_opd(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(925)
inline double ZOSAPI_Interfaces::ISolveOpticalPathDifference::GetPupilZone ( ) {
    double _result = 0;
    HRESULT _hr = get_PupilZone(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(926)
inline void ZOSAPI_Interfaces::ISolveOpticalPathDifference::PutPupilZone ( double pRetVal ) {
    HRESULT _hr = put_PupilZone(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISolvePosition wrapper method implementations
//

#pragma implementation_key(927)
inline long ZOSAPI_Interfaces::ISolvePosition::GetFromSurface ( ) {
    long _result = 0;
    HRESULT _hr = get_FromSurface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(928)
inline void ZOSAPI_Interfaces::ISolvePosition::PutFromSurface ( long pRetVal ) {
    HRESULT _hr = put_FromSurface(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(929)
inline double ZOSAPI_Interfaces::ISolvePosition::GetLength ( ) {
    double _result = 0;
    HRESULT _hr = get_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(930)
inline void ZOSAPI_Interfaces::ISolvePosition::PutLength ( double pRetVal ) {
    HRESULT _hr = put_Length(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISolveCompensator wrapper method implementations
//

#pragma implementation_key(931)
inline long ZOSAPI_Interfaces::ISolveCompensator::GetRefSurface ( ) {
    long _result = 0;
    HRESULT _hr = get_RefSurface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(932)
inline void ZOSAPI_Interfaces::ISolveCompensator::PutRefSurface ( long pRetVal ) {
    HRESULT _hr = put_RefSurface(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(933)
inline double ZOSAPI_Interfaces::ISolveCompensator::GetSum ( ) {
    double _result = 0;
    HRESULT _hr = get_Sum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(934)
inline void ZOSAPI_Interfaces::ISolveCompensator::PutSum ( double pRetVal ) {
    HRESULT _hr = put_Sum(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISolveCenterOfCurvature wrapper method implementations
//

#pragma implementation_key(935)
inline long ZOSAPI_Interfaces::ISolveCenterOfCurvature::GetRefSurface ( ) {
    long _result = 0;
    HRESULT _hr = get_RefSurface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(936)
inline void ZOSAPI_Interfaces::ISolveCenterOfCurvature::PutRefSurface ( long pRetVal ) {
    HRESULT _hr = put_RefSurface(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISolveMaterialModel wrapper method implementations
//

#pragma implementation_key(937)
inline double ZOSAPI_Interfaces::ISolveMaterialModel::GetIndexNd ( ) {
    double _result = 0;
    HRESULT _hr = get_IndexNd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(938)
inline void ZOSAPI_Interfaces::ISolveMaterialModel::PutIndexNd ( double pRetVal ) {
    HRESULT _hr = put_IndexNd(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(939)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISolveMaterialModel::GetVaryIndex ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_VaryIndex(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(940)
inline void ZOSAPI_Interfaces::ISolveMaterialModel::PutVaryIndex ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_VaryIndex(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(941)
inline double ZOSAPI_Interfaces::ISolveMaterialModel::GetAbbeVd ( ) {
    double _result = 0;
    HRESULT _hr = get_AbbeVd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(942)
inline void ZOSAPI_Interfaces::ISolveMaterialModel::PutAbbeVd ( double pRetVal ) {
    HRESULT _hr = put_AbbeVd(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(943)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISolveMaterialModel::GetVaryAbbe ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_VaryAbbe(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(944)
inline void ZOSAPI_Interfaces::ISolveMaterialModel::PutVaryAbbe ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_VaryAbbe(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(945)
inline double ZOSAPI_Interfaces::ISolveMaterialModel::GetdPgF ( ) {
    double _result = 0;
    HRESULT _hr = get_dPgF(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(946)
inline void ZOSAPI_Interfaces::ISolveMaterialModel::PutdPgF ( double pRetVal ) {
    HRESULT _hr = put_dPgF(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(947)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISolveMaterialModel::GetVarydPgF ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_VarydPgF(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(948)
inline void ZOSAPI_Interfaces::ISolveMaterialModel::PutVarydPgF ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_VarydPgF(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISolveMaterialSubstitute wrapper method implementations
//

#pragma implementation_key(949)
inline _bstr_t ZOSAPI_Interfaces::ISolveMaterialSubstitute::Getcatalog ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_catalog(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(950)
inline void ZOSAPI_Interfaces::ISolveMaterialSubstitute::Putcatalog ( _bstr_t pRetVal ) {
    HRESULT _hr = put_catalog(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISolveMaterialOffset wrapper method implementations
//

#pragma implementation_key(951)
inline double ZOSAPI_Interfaces::ISolveMaterialOffset::GetNdOffset ( ) {
    double _result = 0;
    HRESULT _hr = get_NdOffset(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(952)
inline void ZOSAPI_Interfaces::ISolveMaterialOffset::PutNdOffset ( double pRetVal ) {
    HRESULT _hr = put_NdOffset(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(953)
inline double ZOSAPI_Interfaces::ISolveMaterialOffset::GetVdOffset ( ) {
    double _result = 0;
    HRESULT _hr = get_VdOffset(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(954)
inline void ZOSAPI_Interfaces::ISolveMaterialOffset::PutVdOffset ( double pRetVal ) {
    HRESULT _hr = put_VdOffset(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISolvePickupChiefRay wrapper method implementations
//

#pragma implementation_key(955)
inline long ZOSAPI_Interfaces::ISolvePickupChiefRay::GetField ( ) {
    long _result = 0;
    HRESULT _hr = get_Field(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(956)
inline void ZOSAPI_Interfaces::ISolvePickupChiefRay::PutField ( long pRetVal ) {
    HRESULT _hr = put_Field(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(957)
inline long ZOSAPI_Interfaces::ISolvePickupChiefRay::GetWavelength ( ) {
    long _result = 0;
    HRESULT _hr = get_Wavelength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(958)
inline void ZOSAPI_Interfaces::ISolvePickupChiefRay::PutWavelength ( long pRetVal ) {
    HRESULT _hr = put_Wavelength(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISolveConfigPickup wrapper method implementations
//

#pragma implementation_key(959)
inline long ZOSAPI_Interfaces::ISolveConfigPickup::GetOperand ( ) {
    long _result = 0;
    HRESULT _hr = get_Operand(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(960)
inline void ZOSAPI_Interfaces::ISolveConfigPickup::PutOperand ( long pRetVal ) {
    HRESULT _hr = put_Operand(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(961)
inline double ZOSAPI_Interfaces::ISolveConfigPickup::GetScaleFactor ( ) {
    double _result = 0;
    HRESULT _hr = get_ScaleFactor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(962)
inline void ZOSAPI_Interfaces::ISolveConfigPickup::PutScaleFactor ( double pRetVal ) {
    HRESULT _hr = put_ScaleFactor(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(963)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISolveConfigPickup::GetSupportsScale ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SupportsScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(964)
inline double ZOSAPI_Interfaces::ISolveConfigPickup::GetOffset ( ) {
    double _result = 0;
    HRESULT _hr = get_Offset(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(965)
inline void ZOSAPI_Interfaces::ISolveConfigPickup::PutOffset ( double pRetVal ) {
    HRESULT _hr = put_Offset(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(966)
inline long ZOSAPI_Interfaces::ISolveConfigPickup::GetConfiguration ( ) {
    long _result = 0;
    HRESULT _hr = get_Configuration(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(967)
inline void ZOSAPI_Interfaces::ISolveConfigPickup::PutConfiguration ( long pRetVal ) {
    HRESULT _hr = put_Configuration(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(968)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISolveConfigPickup::GetSupportsOffset ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SupportsOffset(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface ISolveThermalPickup wrapper method implementations
//

#pragma implementation_key(969)
inline long ZOSAPI_Interfaces::ISolveThermalPickup::GetConfiguration ( ) {
    long _result = 0;
    HRESULT _hr = get_Configuration(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(970)
inline void ZOSAPI_Interfaces::ISolveThermalPickup::PutConfiguration ( long pRetVal ) {
    HRESULT _hr = put_Configuration(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISolveObjectPickup wrapper method implementations
//

#pragma implementation_key(971)
inline long ZOSAPI_Interfaces::ISolveObjectPickup::GetObject ( ) {
    long _result = 0;
    HRESULT _hr = get_Object(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(972)
inline void ZOSAPI_Interfaces::ISolveObjectPickup::PutObject ( long pRetVal ) {
    HRESULT _hr = put_Object(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(973)
inline double ZOSAPI_Interfaces::ISolveObjectPickup::GetScaleFactor ( ) {
    double _result = 0;
    HRESULT _hr = get_ScaleFactor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(974)
inline void ZOSAPI_Interfaces::ISolveObjectPickup::PutScaleFactor ( double pRetVal ) {
    HRESULT _hr = put_ScaleFactor(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(975)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISolveObjectPickup::GetSupportsScale ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SupportsScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(976)
inline double ZOSAPI_Interfaces::ISolveObjectPickup::GetOffset ( ) {
    double _result = 0;
    HRESULT _hr = get_Offset(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(977)
inline void ZOSAPI_Interfaces::ISolveObjectPickup::PutOffset ( double pRetVal ) {
    HRESULT _hr = put_Offset(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(978)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISolveObjectPickup::GetSupportsOffset ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SupportsOffset(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(979)
inline enum ZOSAPI_Interfaces::ObjectColumn ZOSAPI_Interfaces::ISolveObjectPickup::GetColumn ( ) {
    enum ObjectColumn _result;
    HRESULT _hr = get_Column(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(980)
inline void ZOSAPI_Interfaces::ISolveObjectPickup::PutColumn ( enum ObjectColumn pRetVal ) {
    HRESULT _hr = put_Column(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectTypeSettings wrapper method implementations
//

#pragma implementation_key(981)
inline enum ZOSAPI_Interfaces::ObjectType ZOSAPI_Interfaces::IObjectTypeSettings::GetType ( ) {
    enum ObjectType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(982)
inline VARIANT_BOOL ZOSAPI_Interfaces::IObjectTypeSettings::GetIsValid ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsValid(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(983)
inline VARIANT_BOOL ZOSAPI_Interfaces::IObjectTypeSettings::GetRequiresFile1 ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_RequiresFile1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(984)
inline _bstr_t ZOSAPI_Interfaces::IObjectTypeSettings::GetFileName1 ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FileName1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(985)
inline void ZOSAPI_Interfaces::IObjectTypeSettings::PutFileName1 ( _bstr_t pRetVal ) {
    HRESULT _hr = put_FileName1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(986)
inline SAFEARRAY * ZOSAPI_Interfaces::IObjectTypeSettings::GetFileNames1 ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_GetFileNames1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(987)
inline VARIANT_BOOL ZOSAPI_Interfaces::IObjectTypeSettings::GetRequiresFile2 ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_RequiresFile2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(988)
inline _bstr_t ZOSAPI_Interfaces::IObjectTypeSettings::GetFileName2 ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FileName2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(989)
inline void ZOSAPI_Interfaces::IObjectTypeSettings::PutFileName2 ( _bstr_t pRetVal ) {
    HRESULT _hr = put_FileName2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(990)
inline SAFEARRAY * ZOSAPI_Interfaces::IObjectTypeSettings::GetFileNames2 ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_GetFileNames2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IFaceData wrapper method implementations
//

#pragma implementation_key(991)
inline long ZOSAPI_Interfaces::IFaceData::GetNumberOfFaces ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfFaces(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(992)
inline long ZOSAPI_Interfaces::IFaceData::GetCurrentFace ( ) {
    long _result = 0;
    HRESULT _hr = get_CurrentFace(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(993)
inline void ZOSAPI_Interfaces::IFaceData::PutCurrentFace ( long pRetVal ) {
    HRESULT _hr = put_CurrentFace(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(994)
inline VARIANT_BOOL ZOSAPI_Interfaces::IFaceData::GetConvertToGlobal ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ConvertToGlobal(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(995)
inline void ZOSAPI_Interfaces::IFaceData::PutConvertToGlobal ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_ConvertToGlobal(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(996)
inline long ZOSAPI_Interfaces::IFaceData::GetNumberOfVertices ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfVertices(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(997)
inline double ZOSAPI_Interfaces::IFaceData::GetFlux ( ) {
    double _result = 0;
    HRESULT _hr = get_Flux(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(998)
inline double ZOSAPI_Interfaces::IFaceData::GetIrradiance ( ) {
    double _result = 0;
    HRESULT _hr = get_Irradiance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(999)
inline VARIANT_BOOL ZOSAPI_Interfaces::IFaceData::GetVertex ( long vertexNumber, double * X, double * Y, double * Z ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_GetVertex(vertexNumber, X, Y, Z, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1000)
inline VARIANT_BOOL ZOSAPI_Interfaces::IFaceData::GetVertexNormal ( long vertexNumber, double * X, double * Y, double * Z ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_GetVertexNormal(vertexNumber, X, Y, Z, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1001)
inline VARIANT_BOOL ZOSAPI_Interfaces::IFaceData::FillData ( long size, double * X, double * Y, double * Z, double * XNorm, double * YNorm, double * ZNorm ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_FillData(size, X, Y, Z, XNorm, YNorm, ZNorm, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IObjectDetector wrapper method implementations
//

#pragma implementation_key(1002)
inline long ZOSAPI_Interfaces::IObjectDetector::GetRowCount ( ) {
    long _result = 0;
    HRESULT _hr = raw_GetRowCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1003)
inline long ZOSAPI_Interfaces::IObjectDetector::GetColCount ( ) {
    long _result = 0;
    HRESULT _hr = raw_GetColCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1004)
inline VARIANT_BOOL ZOSAPI_Interfaces::IObjectDetector::GetDetectorDimensions ( unsigned long * Rows, unsigned long * Cols ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_GetDetectorDimensions(Rows, Cols, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1005)
inline long ZOSAPI_Interfaces::IObjectDetector::GetDetectorSize ( ) {
    long _result = 0;
    HRESULT _hr = raw_GetDetectorSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface ISCS_CIE1931Tristimulus wrapper method implementations
//

#pragma implementation_key(1006)
inline double ZOSAPI_Interfaces::ISCS_CIE1931Tristimulus::GetX ( ) {
    double _result = 0;
    HRESULT _hr = get_X(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1007)
inline void ZOSAPI_Interfaces::ISCS_CIE1931Tristimulus::PutX ( double pRetVal ) {
    HRESULT _hr = put_X(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1008)
inline double ZOSAPI_Interfaces::ISCS_CIE1931Tristimulus::GetY ( ) {
    double _result = 0;
    HRESULT _hr = get_Y(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1009)
inline void ZOSAPI_Interfaces::ISCS_CIE1931Tristimulus::PutY ( double pRetVal ) {
    HRESULT _hr = put_Y(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1010)
inline double ZOSAPI_Interfaces::ISCS_CIE1931Tristimulus::GetZ ( ) {
    double _result = 0;
    HRESULT _hr = get_Z(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1011)
inline void ZOSAPI_Interfaces::ISCS_CIE1931Tristimulus::PutZ ( double pRetVal ) {
    HRESULT _hr = put_Z(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1012)
inline long ZOSAPI_Interfaces::ISCS_CIE1931Tristimulus::GetSpectrumCount ( ) {
    long _result = 0;
    HRESULT _hr = get_SpectrumCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1013)
inline void ZOSAPI_Interfaces::ISCS_CIE1931Tristimulus::PutSpectrumCount ( long pRetVal ) {
    HRESULT _hr = put_SpectrumCount(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1014)
inline double ZOSAPI_Interfaces::ISCS_CIE1931Tristimulus::GetWavelengthFrom ( ) {
    double _result = 0;
    HRESULT _hr = get_WavelengthFrom(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1015)
inline void ZOSAPI_Interfaces::ISCS_CIE1931Tristimulus::PutWavelengthFrom ( double pRetVal ) {
    HRESULT _hr = put_WavelengthFrom(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1016)
inline double ZOSAPI_Interfaces::ISCS_CIE1931Tristimulus::GetWavelengthTo ( ) {
    double _result = 0;
    HRESULT _hr = get_WavelengthTo(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1017)
inline void ZOSAPI_Interfaces::ISCS_CIE1931Tristimulus::PutWavelengthTo ( double pRetVal ) {
    HRESULT _hr = put_WavelengthTo(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1018)
inline _bstr_t ZOSAPI_Interfaces::ISCS_CIE1931Tristimulus::GetFit ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Fit(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

//
// interface ISCS_CIE1931Chromaticity wrapper method implementations
//

#pragma implementation_key(1019)
inline double ZOSAPI_Interfaces::ISCS_CIE1931Chromaticity::Getcx ( ) {
    double _result = 0;
    HRESULT _hr = get_cx(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1020)
inline void ZOSAPI_Interfaces::ISCS_CIE1931Chromaticity::Putcx ( double pRetVal ) {
    HRESULT _hr = put_cx(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1021)
inline double ZOSAPI_Interfaces::ISCS_CIE1931Chromaticity::GetCy ( ) {
    double _result = 0;
    HRESULT _hr = get_Cy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1022)
inline void ZOSAPI_Interfaces::ISCS_CIE1931Chromaticity::PutCy ( double pRetVal ) {
    HRESULT _hr = put_Cy(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1023)
inline long ZOSAPI_Interfaces::ISCS_CIE1931Chromaticity::GetSpectrumCount ( ) {
    long _result = 0;
    HRESULT _hr = get_SpectrumCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1024)
inline void ZOSAPI_Interfaces::ISCS_CIE1931Chromaticity::PutSpectrumCount ( long pRetVal ) {
    HRESULT _hr = put_SpectrumCount(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1025)
inline double ZOSAPI_Interfaces::ISCS_CIE1931Chromaticity::GetWavelengthFrom ( ) {
    double _result = 0;
    HRESULT _hr = get_WavelengthFrom(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1026)
inline void ZOSAPI_Interfaces::ISCS_CIE1931Chromaticity::PutWavelengthFrom ( double pRetVal ) {
    HRESULT _hr = put_WavelengthFrom(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1027)
inline double ZOSAPI_Interfaces::ISCS_CIE1931Chromaticity::GetWavelengthTo ( ) {
    double _result = 0;
    HRESULT _hr = get_WavelengthTo(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1028)
inline void ZOSAPI_Interfaces::ISCS_CIE1931Chromaticity::PutWavelengthTo ( double pRetVal ) {
    HRESULT _hr = put_WavelengthTo(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1029)
inline _bstr_t ZOSAPI_Interfaces::ISCS_CIE1931Chromaticity::GetFit ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Fit(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

//
// interface ISCS_CIE1931RGB wrapper method implementations
//

#pragma implementation_key(1030)
inline double ZOSAPI_Interfaces::ISCS_CIE1931RGB::GetR ( ) {
    double _result = 0;
    HRESULT _hr = get_R(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1031)
inline void ZOSAPI_Interfaces::ISCS_CIE1931RGB::PutR ( double pRetVal ) {
    HRESULT _hr = put_R(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1032)
inline double ZOSAPI_Interfaces::ISCS_CIE1931RGB::GetG ( ) {
    double _result = 0;
    HRESULT _hr = get_G(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1033)
inline void ZOSAPI_Interfaces::ISCS_CIE1931RGB::PutG ( double pRetVal ) {
    HRESULT _hr = put_G(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1034)
inline double ZOSAPI_Interfaces::ISCS_CIE1931RGB::GetB ( ) {
    double _result = 0;
    HRESULT _hr = get_B(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1035)
inline void ZOSAPI_Interfaces::ISCS_CIE1931RGB::PutB ( double pRetVal ) {
    HRESULT _hr = put_B(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1036)
inline long ZOSAPI_Interfaces::ISCS_CIE1931RGB::GetSpectrumCount ( ) {
    long _result = 0;
    HRESULT _hr = get_SpectrumCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1037)
inline void ZOSAPI_Interfaces::ISCS_CIE1931RGB::PutSpectrumCount ( long pRetVal ) {
    HRESULT _hr = put_SpectrumCount(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1038)
inline double ZOSAPI_Interfaces::ISCS_CIE1931RGB::GetWavelengthFrom ( ) {
    double _result = 0;
    HRESULT _hr = get_WavelengthFrom(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1039)
inline void ZOSAPI_Interfaces::ISCS_CIE1931RGB::PutWavelengthFrom ( double pRetVal ) {
    HRESULT _hr = put_WavelengthFrom(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1040)
inline double ZOSAPI_Interfaces::ISCS_CIE1931RGB::GetWavelengthTo ( ) {
    double _result = 0;
    HRESULT _hr = get_WavelengthTo(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1041)
inline void ZOSAPI_Interfaces::ISCS_CIE1931RGB::PutWavelengthTo ( double pRetVal ) {
    HRESULT _hr = put_WavelengthTo(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1042)
inline _bstr_t ZOSAPI_Interfaces::ISCS_CIE1931RGB::GetFit ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Fit(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

//
// interface ISCS_UniformPowerSpectrum wrapper method implementations
//

#pragma implementation_key(1043)
inline long ZOSAPI_Interfaces::ISCS_UniformPowerSpectrum::GetSpectrumCount ( ) {
    long _result = 0;
    HRESULT _hr = get_SpectrumCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1044)
inline void ZOSAPI_Interfaces::ISCS_UniformPowerSpectrum::PutSpectrumCount ( long pRetVal ) {
    HRESULT _hr = put_SpectrumCount(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1045)
inline double ZOSAPI_Interfaces::ISCS_UniformPowerSpectrum::GetWavelengthFrom ( ) {
    double _result = 0;
    HRESULT _hr = get_WavelengthFrom(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1046)
inline void ZOSAPI_Interfaces::ISCS_UniformPowerSpectrum::PutWavelengthFrom ( double pRetVal ) {
    HRESULT _hr = put_WavelengthFrom(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1047)
inline double ZOSAPI_Interfaces::ISCS_UniformPowerSpectrum::GetWavelengthTo ( ) {
    double _result = 0;
    HRESULT _hr = get_WavelengthTo(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1048)
inline void ZOSAPI_Interfaces::ISCS_UniformPowerSpectrum::PutWavelengthTo ( double pRetVal ) {
    HRESULT _hr = put_WavelengthTo(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1049)
inline _bstr_t ZOSAPI_Interfaces::ISCS_UniformPowerSpectrum::GetFit ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Fit(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

//
// interface ISCS_D65White wrapper method implementations
//

#pragma implementation_key(1050)
inline long ZOSAPI_Interfaces::ISCS_D65White::GetSpectrumCount ( ) {
    long _result = 0;
    HRESULT _hr = get_SpectrumCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1051)
inline void ZOSAPI_Interfaces::ISCS_D65White::PutSpectrumCount ( long pRetVal ) {
    HRESULT _hr = put_SpectrumCount(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1052)
inline double ZOSAPI_Interfaces::ISCS_D65White::GetWavelengthFrom ( ) {
    double _result = 0;
    HRESULT _hr = get_WavelengthFrom(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1053)
inline void ZOSAPI_Interfaces::ISCS_D65White::PutWavelengthFrom ( double pRetVal ) {
    HRESULT _hr = put_WavelengthFrom(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1054)
inline double ZOSAPI_Interfaces::ISCS_D65White::GetWavelengthTo ( ) {
    double _result = 0;
    HRESULT _hr = get_WavelengthTo(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1055)
inline void ZOSAPI_Interfaces::ISCS_D65White::PutWavelengthTo ( double pRetVal ) {
    HRESULT _hr = put_WavelengthTo(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1056)
inline _bstr_t ZOSAPI_Interfaces::ISCS_D65White::GetFit ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Fit(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

//
// interface ISCS_ColorTemperature wrapper method implementations
//

#pragma implementation_key(1057)
inline double ZOSAPI_Interfaces::ISCS_ColorTemperature::GetTemperatureK ( ) {
    double _result = 0;
    HRESULT _hr = get_TemperatureK(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1058)
inline void ZOSAPI_Interfaces::ISCS_ColorTemperature::PutTemperatureK ( double pRetVal ) {
    HRESULT _hr = put_TemperatureK(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1059)
inline long ZOSAPI_Interfaces::ISCS_ColorTemperature::GetSpectrumCount ( ) {
    long _result = 0;
    HRESULT _hr = get_SpectrumCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1060)
inline void ZOSAPI_Interfaces::ISCS_ColorTemperature::PutSpectrumCount ( long pRetVal ) {
    HRESULT _hr = put_SpectrumCount(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1061)
inline double ZOSAPI_Interfaces::ISCS_ColorTemperature::GetWavelengthFrom ( ) {
    double _result = 0;
    HRESULT _hr = get_WavelengthFrom(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1062)
inline void ZOSAPI_Interfaces::ISCS_ColorTemperature::PutWavelengthFrom ( double pRetVal ) {
    HRESULT _hr = put_WavelengthFrom(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1063)
inline double ZOSAPI_Interfaces::ISCS_ColorTemperature::GetWavelengthTo ( ) {
    double _result = 0;
    HRESULT _hr = get_WavelengthTo(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1064)
inline void ZOSAPI_Interfaces::ISCS_ColorTemperature::PutWavelengthTo ( double pRetVal ) {
    HRESULT _hr = put_WavelengthTo(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1065)
inline _bstr_t ZOSAPI_Interfaces::ISCS_ColorTemperature::GetFit ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Fit(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

//
// interface ISCS_BlackBodySpectrum wrapper method implementations
//

#pragma implementation_key(1066)
inline double ZOSAPI_Interfaces::ISCS_BlackBodySpectrum::GetTemperatureK ( ) {
    double _result = 0;
    HRESULT _hr = get_TemperatureK(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1067)
inline void ZOSAPI_Interfaces::ISCS_BlackBodySpectrum::PutTemperatureK ( double pRetVal ) {
    HRESULT _hr = put_TemperatureK(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1068)
inline long ZOSAPI_Interfaces::ISCS_BlackBodySpectrum::GetSpectrumCount ( ) {
    long _result = 0;
    HRESULT _hr = get_SpectrumCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1069)
inline void ZOSAPI_Interfaces::ISCS_BlackBodySpectrum::PutSpectrumCount ( long pRetVal ) {
    HRESULT _hr = put_SpectrumCount(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1070)
inline double ZOSAPI_Interfaces::ISCS_BlackBodySpectrum::GetWavelengthFrom ( ) {
    double _result = 0;
    HRESULT _hr = get_WavelengthFrom(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1071)
inline void ZOSAPI_Interfaces::ISCS_BlackBodySpectrum::PutWavelengthFrom ( double pRetVal ) {
    HRESULT _hr = put_WavelengthFrom(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1072)
inline double ZOSAPI_Interfaces::ISCS_BlackBodySpectrum::GetWavelengthTo ( ) {
    double _result = 0;
    HRESULT _hr = get_WavelengthTo(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1073)
inline void ZOSAPI_Interfaces::ISCS_BlackBodySpectrum::PutWavelengthTo ( double pRetVal ) {
    HRESULT _hr = put_WavelengthTo(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1074)
inline _bstr_t ZOSAPI_Interfaces::ISCS_BlackBodySpectrum::GetFit ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Fit(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

//
// interface ISCS_SpectrumFile wrapper method implementations
//

#pragma implementation_key(1075)
inline _bstr_t ZOSAPI_Interfaces::ISCS_SpectrumFile::GetSpectrumFile ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SpectrumFile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1076)
inline void ZOSAPI_Interfaces::ISCS_SpectrumFile::PutSpectrumFile ( _bstr_t pRetVal ) {
    HRESULT _hr = put_SpectrumFile(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1077)
inline SAFEARRAY * ZOSAPI_Interfaces::ISCS_SpectrumFile::GetAvailableSpectrumFiles ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_GetAvailableSpectrumFiles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1078)
inline long ZOSAPI_Interfaces::ISCS_SpectrumFile::GetSpectrumCount ( ) {
    long _result = 0;
    HRESULT _hr = get_SpectrumCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1079)
inline double ZOSAPI_Interfaces::ISCS_SpectrumFile::GetWavelengthFrom ( ) {
    double _result = 0;
    HRESULT _hr = get_WavelengthFrom(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1080)
inline double ZOSAPI_Interfaces::ISCS_SpectrumFile::GetWavelengthTo ( ) {
    double _result = 0;
    HRESULT _hr = get_WavelengthTo(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1081)
inline _bstr_t ZOSAPI_Interfaces::ISCS_SpectrumFile::GetFit ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Fit(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

//
// interface ISCS_CIE1976 wrapper method implementations
//

#pragma implementation_key(1082)
inline double ZOSAPI_Interfaces::ISCS_CIE1976::Getu ( ) {
    double _result = 0;
    HRESULT _hr = get_u(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1083)
inline void ZOSAPI_Interfaces::ISCS_CIE1976::Putu ( double pRetVal ) {
    HRESULT _hr = put_u(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1084)
inline double ZOSAPI_Interfaces::ISCS_CIE1976::Getv ( ) {
    double _result = 0;
    HRESULT _hr = get_v(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1085)
inline void ZOSAPI_Interfaces::ISCS_CIE1976::Putv ( double pRetVal ) {
    HRESULT _hr = put_v(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1086)
inline long ZOSAPI_Interfaces::ISCS_CIE1976::GetSpectrumCount ( ) {
    long _result = 0;
    HRESULT _hr = get_SpectrumCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1087)
inline void ZOSAPI_Interfaces::ISCS_CIE1976::PutSpectrumCount ( long pRetVal ) {
    HRESULT _hr = put_SpectrumCount(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1088)
inline double ZOSAPI_Interfaces::ISCS_CIE1976::GetWavelengthFrom ( ) {
    double _result = 0;
    HRESULT _hr = get_WavelengthFrom(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1089)
inline void ZOSAPI_Interfaces::ISCS_CIE1976::PutWavelengthFrom ( double pRetVal ) {
    HRESULT _hr = put_WavelengthFrom(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1090)
inline double ZOSAPI_Interfaces::ISCS_CIE1976::GetWavelengthTo ( ) {
    double _result = 0;
    HRESULT _hr = get_WavelengthTo(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1091)
inline void ZOSAPI_Interfaces::ISCS_CIE1976::PutWavelengthTo ( double pRetVal ) {
    HRESULT _hr = put_WavelengthTo(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1092)
inline _bstr_t ZOSAPI_Interfaces::ISCS_CIE1976::GetFit ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Fit(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

//
// interface ISourceColorSettings wrapper method implementations
//

#pragma implementation_key(1093)
inline enum ZOSAPI_Interfaces::SourceColorMode ZOSAPI_Interfaces::ISourceColorSettings::GetMode ( ) {
    enum SourceColorMode _result;
    HRESULT _hr = get_Mode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1094)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISourceColorSettings::GetIsValid ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsValid(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1095)
inline ZOSAPI_Interfaces::ISCS_SystemWavelengthsPtr ZOSAPI_Interfaces::ISourceColorSettings::Get_S_SystemWavelengths ( ) {
    struct ISCS_SystemWavelengths * _result = 0;
    HRESULT _hr = get__S_SystemWavelengths(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISCS_SystemWavelengthsPtr(_result, false);
}

#pragma implementation_key(1096)
inline ZOSAPI_Interfaces::ISCS_CIE1931TristimulusPtr ZOSAPI_Interfaces::ISourceColorSettings::Get_S_CIE1931Tristimulus ( ) {
    struct ISCS_CIE1931Tristimulus * _result = 0;
    HRESULT _hr = get__S_CIE1931Tristimulus(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISCS_CIE1931TristimulusPtr(_result, false);
}

#pragma implementation_key(1097)
inline ZOSAPI_Interfaces::ISCS_CIE1931ChromaticityPtr ZOSAPI_Interfaces::ISourceColorSettings::Get_S_CIE1931Chromaticity ( ) {
    struct ISCS_CIE1931Chromaticity * _result = 0;
    HRESULT _hr = get__S_CIE1931Chromaticity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISCS_CIE1931ChromaticityPtr(_result, false);
}

#pragma implementation_key(1098)
inline ZOSAPI_Interfaces::ISCS_CIE1931RGBPtr ZOSAPI_Interfaces::ISourceColorSettings::Get_S_CIE1931RGB ( ) {
    struct ISCS_CIE1931RGB * _result = 0;
    HRESULT _hr = get__S_CIE1931RGB(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISCS_CIE1931RGBPtr(_result, false);
}

#pragma implementation_key(1099)
inline ZOSAPI_Interfaces::ISCS_UniformPowerSpectrumPtr ZOSAPI_Interfaces::ISourceColorSettings::Get_S_UniformPowerSpectrum ( ) {
    struct ISCS_UniformPowerSpectrum * _result = 0;
    HRESULT _hr = get__S_UniformPowerSpectrum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISCS_UniformPowerSpectrumPtr(_result, false);
}

#pragma implementation_key(1100)
inline ZOSAPI_Interfaces::ISCS_D65WhitePtr ZOSAPI_Interfaces::ISourceColorSettings::Get_S_D65White ( ) {
    struct ISCS_D65White * _result = 0;
    HRESULT _hr = get__S_D65White(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISCS_D65WhitePtr(_result, false);
}

#pragma implementation_key(1101)
inline ZOSAPI_Interfaces::ISCS_ColorTemperaturePtr ZOSAPI_Interfaces::ISourceColorSettings::Get_S_ColorTemperature ( ) {
    struct ISCS_ColorTemperature * _result = 0;
    HRESULT _hr = get__S_ColorTemperature(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISCS_ColorTemperaturePtr(_result, false);
}

#pragma implementation_key(1102)
inline ZOSAPI_Interfaces::ISCS_BlackBodySpectrumPtr ZOSAPI_Interfaces::ISourceColorSettings::Get_S_BlackBodySpectrum ( ) {
    struct ISCS_BlackBodySpectrum * _result = 0;
    HRESULT _hr = get__S_BlackBodySpectrum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISCS_BlackBodySpectrumPtr(_result, false);
}

#pragma implementation_key(1103)
inline ZOSAPI_Interfaces::ISCS_SpectrumFilePtr ZOSAPI_Interfaces::ISourceColorSettings::Get_S_SpectrumFile ( ) {
    struct ISCS_SpectrumFile * _result = 0;
    HRESULT _hr = get__S_SpectrumFile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISCS_SpectrumFilePtr(_result, false);
}

#pragma implementation_key(1104)
inline ZOSAPI_Interfaces::ISCS_CIE1976Ptr ZOSAPI_Interfaces::ISourceColorSettings::Get_S_CIE1976 ( ) {
    struct ISCS_CIE1976 * _result = 0;
    HRESULT _hr = get__S_CIE1976(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISCS_CIE1976Ptr(_result, false);
}

//
// interface INCESourcesData wrapper method implementations
//

#pragma implementation_key(1105)
inline VARIANT_BOOL ZOSAPI_Interfaces::INCESourcesData::GetIsSourcesAvailable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsSourcesAvailable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1106)
inline VARIANT_BOOL ZOSAPI_Interfaces::INCESourcesData::GetRandomPolarization ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_RandomPolarization(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1107)
inline void ZOSAPI_Interfaces::INCESourcesData::PutRandomPolarization ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_RandomPolarization(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1108)
inline double ZOSAPI_Interfaces::INCESourcesData::GetInitialPhaseDeg ( ) {
    double _result = 0;
    HRESULT _hr = get_InitialPhaseDeg(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1109)
inline void ZOSAPI_Interfaces::INCESourcesData::PutInitialPhaseDeg ( double pRetVal ) {
    HRESULT _hr = put_InitialPhaseDeg(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1110)
inline double ZOSAPI_Interfaces::INCESourcesData::GetcoherenceLength ( ) {
    double _result = 0;
    HRESULT _hr = get_coherenceLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1111)
inline void ZOSAPI_Interfaces::INCESourcesData::PutcoherenceLength ( double pRetVal ) {
    HRESULT _hr = put_coherenceLength(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1112)
inline double ZOSAPI_Interfaces::INCESourcesData::Getjx ( ) {
    double _result = 0;
    HRESULT _hr = get_jx(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1113)
inline void ZOSAPI_Interfaces::INCESourcesData::Putjx ( double pRetVal ) {
    HRESULT _hr = put_jx(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1114)
inline double ZOSAPI_Interfaces::INCESourcesData::Getjy ( ) {
    double _result = 0;
    HRESULT _hr = get_jy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1115)
inline void ZOSAPI_Interfaces::INCESourcesData::Putjy ( double pRetVal ) {
    HRESULT _hr = put_jy(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1116)
inline double ZOSAPI_Interfaces::INCESourcesData::GetXPhase ( ) {
    double _result = 0;
    HRESULT _hr = get_XPhase(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1117)
inline void ZOSAPI_Interfaces::INCESourcesData::PutXPhase ( double pRetVal ) {
    HRESULT _hr = put_XPhase(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1118)
inline double ZOSAPI_Interfaces::INCESourcesData::GetYPhase ( ) {
    double _result = 0;
    HRESULT _hr = get_YPhase(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1119)
inline void ZOSAPI_Interfaces::INCESourcesData::PutYPhase ( double pRetVal ) {
    HRESULT _hr = put_YPhase(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1120)
inline VARIANT_BOOL ZOSAPI_Interfaces::INCESourcesData::GetReverseRays ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ReverseRays(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1121)
inline void ZOSAPI_Interfaces::INCESourcesData::PutReverseRays ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_ReverseRays(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1122)
inline double ZOSAPI_Interfaces::INCESourcesData::GetPrePropagation ( ) {
    double _result = 0;
    HRESULT _hr = get_PrePropagation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1123)
inline void ZOSAPI_Interfaces::INCESourcesData::PutPrePropagation ( double pRetVal ) {
    HRESULT _hr = put_PrePropagation(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1124)
inline enum ZOSAPI_Interfaces::SourceBulkScatterMode ZOSAPI_Interfaces::INCESourcesData::GetBulkScatter ( ) {
    enum SourceBulkScatterMode _result;
    HRESULT _hr = get_BulkScatter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1125)
inline void ZOSAPI_Interfaces::INCESourcesData::PutBulkScatter ( enum SourceBulkScatterMode pRetVal ) {
    HRESULT _hr = put_BulkScatter(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1126)
inline enum ZOSAPI_Interfaces::SourceSamplingMethod ZOSAPI_Interfaces::INCESourcesData::GetSamplingMethod ( ) {
    enum SourceSamplingMethod _result;
    HRESULT _hr = get_SamplingMethod(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1127)
inline void ZOSAPI_Interfaces::INCESourcesData::PutSamplingMethod ( enum SourceSamplingMethod pRetVal ) {
    HRESULT _hr = put_SamplingMethod(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1128)
inline enum ZOSAPI_Interfaces::ArrayMode ZOSAPI_Interfaces::INCESourcesData::GetArrayType ( ) {
    enum ArrayMode _result;
    HRESULT _hr = get_ArrayType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1129)
inline void ZOSAPI_Interfaces::INCESourcesData::PutArrayType ( enum ArrayMode pRetVal ) {
    HRESULT _hr = put_ArrayType(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1130)
inline long ZOSAPI_Interfaces::INCESourcesData::GetArrayNumberX ( ) {
    long _result = 0;
    HRESULT _hr = get_ArrayNumberX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1131)
inline void ZOSAPI_Interfaces::INCESourcesData::PutArrayNumberX ( long pRetVal ) {
    HRESULT _hr = put_ArrayNumberX(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1132)
inline long ZOSAPI_Interfaces::INCESourcesData::GetArrayNumberY ( ) {
    long _result = 0;
    HRESULT _hr = get_ArrayNumberY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1133)
inline void ZOSAPI_Interfaces::INCESourcesData::PutArrayNumberY ( long pRetVal ) {
    HRESULT _hr = put_ArrayNumberY(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1134)
inline double ZOSAPI_Interfaces::INCESourcesData::GetArraySpacingX ( ) {
    double _result = 0;
    HRESULT _hr = get_ArraySpacingX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1135)
inline void ZOSAPI_Interfaces::INCESourcesData::PutArraySpacingX ( double pRetVal ) {
    HRESULT _hr = put_ArraySpacingX(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1136)
inline double ZOSAPI_Interfaces::INCESourcesData::GetArraySpacingY ( ) {
    double _result = 0;
    HRESULT _hr = get_ArraySpacingY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1137)
inline void ZOSAPI_Interfaces::INCESourcesData::PutArraySpacingY ( double pRetVal ) {
    HRESULT _hr = put_ArraySpacingY(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1138)
inline long ZOSAPI_Interfaces::INCESourcesData::GetArrayNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_ArrayNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1139)
inline void ZOSAPI_Interfaces::INCESourcesData::PutArrayNumber ( long pRetVal ) {
    HRESULT _hr = put_ArrayNumber(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1140)
inline double ZOSAPI_Interfaces::INCESourcesData::GetArrayRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_ArrayRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1141)
inline void ZOSAPI_Interfaces::INCESourcesData::PutArrayRadius ( double pRetVal ) {
    HRESULT _hr = put_ArrayRadius(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1142)
inline long ZOSAPI_Interfaces::INCESourcesData::GetArrayRings ( ) {
    long _result = 0;
    HRESULT _hr = get_ArrayRings(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1143)
inline void ZOSAPI_Interfaces::INCESourcesData::PutArrayRings ( long pRetVal ) {
    HRESULT _hr = put_ArrayRings(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1144)
inline double ZOSAPI_Interfaces::INCESourcesData::GetArraySpacing ( ) {
    double _result = 0;
    HRESULT _hr = get_ArraySpacing(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1145)
inline void ZOSAPI_Interfaces::INCESourcesData::PutArraySpacing ( double pRetVal ) {
    HRESULT _hr = put_ArraySpacing(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1146)
inline enum ZOSAPI_Interfaces::SourceColorMode ZOSAPI_Interfaces::INCESourcesData::GetSourceColor ( ) {
    enum SourceColorMode _result;
    HRESULT _hr = get_SourceColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1147)
inline void ZOSAPI_Interfaces::INCESourcesData::PutSourceColor ( enum SourceColorMode pRetVal ) {
    HRESULT _hr = put_SourceColor(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1148)
inline ZOSAPI_Interfaces::ISourceColorSettingsPtr ZOSAPI_Interfaces::INCESourcesData::GetSourceColorSettings ( ) {
    struct ISourceColorSettings * _result = 0;
    HRESULT _hr = get_SourceColorSettings(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISourceColorSettingsPtr(_result, false);
}

//
// interface IOSS_Lambertian wrapper method implementations
//

#pragma implementation_key(1149)
inline double ZOSAPI_Interfaces::IOSS_Lambertian::GetScatterFraction ( ) {
    double _result = 0;
    HRESULT _hr = get_ScatterFraction(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1150)
inline void ZOSAPI_Interfaces::IOSS_Lambertian::PutScatterFraction ( double pRetVal ) {
    HRESULT _hr = put_ScatterFraction(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IOSS_Gaussian wrapper method implementations
//

#pragma implementation_key(1151)
inline double ZOSAPI_Interfaces::IOSS_Gaussian::GetScatterFraction ( ) {
    double _result = 0;
    HRESULT _hr = get_ScatterFraction(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1152)
inline void ZOSAPI_Interfaces::IOSS_Gaussian::PutScatterFraction ( double pRetVal ) {
    HRESULT _hr = put_ScatterFraction(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1153)
inline double ZOSAPI_Interfaces::IOSS_Gaussian::GetSigma ( ) {
    double _result = 0;
    HRESULT _hr = get_Sigma(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1154)
inline void ZOSAPI_Interfaces::IOSS_Gaussian::PutSigma ( double pRetVal ) {
    HRESULT _hr = put_Sigma(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IOSS_ABg wrapper method implementations
//

#pragma implementation_key(1155)
inline _bstr_t ZOSAPI_Interfaces::IOSS_ABg::GetReflectName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ReflectName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1156)
inline void ZOSAPI_Interfaces::IOSS_ABg::PutReflectName ( _bstr_t pRetVal ) {
    HRESULT _hr = put_ReflectName(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1157)
inline _bstr_t ZOSAPI_Interfaces::IOSS_ABg::GetTransmitName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TransmitName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1158)
inline void ZOSAPI_Interfaces::IOSS_ABg::PutTransmitName ( _bstr_t pRetVal ) {
    HRESULT _hr = put_TransmitName(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1159)
inline SAFEARRAY * ZOSAPI_Interfaces::IOSS_ABg::GetAvailableABgNames ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_GetAvailableABgNames(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IOSS_ABgFile wrapper method implementations
//

#pragma implementation_key(1160)
inline _bstr_t ZOSAPI_Interfaces::IOSS_ABgFile::GetReflectFile ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ReflectFile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1161)
inline void ZOSAPI_Interfaces::IOSS_ABgFile::PutReflectFile ( _bstr_t pRetVal ) {
    HRESULT _hr = put_ReflectFile(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1162)
inline _bstr_t ZOSAPI_Interfaces::IOSS_ABgFile::GetTransmitFile ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TransmitFile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1163)
inline void ZOSAPI_Interfaces::IOSS_ABgFile::PutTransmitFile ( _bstr_t pRetVal ) {
    HRESULT _hr = put_TransmitFile(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1164)
inline SAFEARRAY * ZOSAPI_Interfaces::IOSS_ABgFile::GetAvailableFiles ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_GetAvailableFiles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IOSS_BSDF wrapper method implementations
//

#pragma implementation_key(1165)
inline _bstr_t ZOSAPI_Interfaces::IOSS_BSDF::GetReflectFile ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ReflectFile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1166)
inline void ZOSAPI_Interfaces::IOSS_BSDF::PutReflectFile ( _bstr_t pRetVal ) {
    HRESULT _hr = put_ReflectFile(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1167)
inline _bstr_t ZOSAPI_Interfaces::IOSS_BSDF::GetTransmitFile ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TransmitFile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1168)
inline void ZOSAPI_Interfaces::IOSS_BSDF::PutTransmitFile ( _bstr_t pRetVal ) {
    HRESULT _hr = put_TransmitFile(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1169)
inline SAFEARRAY * ZOSAPI_Interfaces::IOSS_BSDF::GetAvailableFileNames ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_GetAvailableFileNames(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1170)
inline double ZOSAPI_Interfaces::IOSS_BSDF::GetScatterFraction ( ) {
    double _result = 0;
    HRESULT _hr = get_ScatterFraction(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1171)
inline void ZOSAPI_Interfaces::IOSS_BSDF::PutScatterFraction ( double pRetVal ) {
    HRESULT _hr = put_ScatterFraction(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1172)
inline double ZOSAPI_Interfaces::IOSS_BSDF::GetAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_Angle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1173)
inline void ZOSAPI_Interfaces::IOSS_BSDF::PutAngle ( double pRetVal ) {
    HRESULT _hr = put_Angle(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IOSS_User wrapper method implementations
//

#pragma implementation_key(1174)
inline _bstr_t ZOSAPI_Interfaces::IOSS_User::GetDLLName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DLLName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1175)
inline void ZOSAPI_Interfaces::IOSS_User::PutDLLName ( _bstr_t pRetVal ) {
    HRESULT _hr = put_DLLName(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1176)
inline SAFEARRAY * ZOSAPI_Interfaces::IOSS_User::GetAvailableDLLNames ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_GetAvailableDLLNames(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1177)
inline _bstr_t ZOSAPI_Interfaces::IOSS_User::GetfileName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_fileName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1178)
inline void ZOSAPI_Interfaces::IOSS_User::PutfileName ( _bstr_t pRetVal ) {
    HRESULT _hr = put_fileName(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1179)
inline SAFEARRAY * ZOSAPI_Interfaces::IOSS_User::GetAvailableFileNames ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_GetAvailableFileNames(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1180)
inline VARIANT_BOOL ZOSAPI_Interfaces::IOSS_User::GetFileNameRequired ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_FileNameRequired(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1181)
inline long ZOSAPI_Interfaces::IOSS_User::GetNumberOfParameters ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfParameters(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1182)
inline _bstr_t ZOSAPI_Interfaces::IOSS_User::GetParameterName ( long paramIdx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetParameterName(paramIdx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1183)
inline double ZOSAPI_Interfaces::IOSS_User::GetParameterValue ( long paramIdx ) {
    double _result = 0;
    HRESULT _hr = raw_GetParameterValue(paramIdx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1184)
inline VARIANT_BOOL ZOSAPI_Interfaces::IOSS_User::SetParameterValue ( long paramIdx, double Value ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_SetParameterValue(paramIdx, Value, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1185)
inline double ZOSAPI_Interfaces::IOSS_User::GetScatterFraction ( ) {
    double _result = 0;
    HRESULT _hr = get_ScatterFraction(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1186)
inline void ZOSAPI_Interfaces::IOSS_User::PutScatterFraction ( double pRetVal ) {
    HRESULT _hr = put_ScatterFraction(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IOSS_ISScatterCatalog wrapper method implementations
//

#pragma implementation_key(1187)
inline SAFEARRAY * ZOSAPI_Interfaces::IOSS_ISScatterCatalog::GetAvailableISFiles ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_GetAvailableISFiles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1188)
inline _bstr_t ZOSAPI_Interfaces::IOSS_ISScatterCatalog::GetReflectFile ( ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetReflectFile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1189)
inline enum ZOSAPI_Interfaces::ReflectTransmitCode ZOSAPI_Interfaces::IOSS_ISScatterCatalog::SetReflectFile ( _bstr_t File ) {
    enum ReflectTransmitCode _result;
    HRESULT _hr = raw_SetReflectFile(File, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1190)
inline _bstr_t ZOSAPI_Interfaces::IOSS_ISScatterCatalog::GetTransmitFile ( ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetTransmitFile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1191)
inline enum ZOSAPI_Interfaces::ReflectTransmitCode ZOSAPI_Interfaces::IOSS_ISScatterCatalog::SetTransmitFile ( _bstr_t File ) {
    enum ReflectTransmitCode _result;
    HRESULT _hr = raw_SetTransmitFile(File, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1192)
inline enum ZOSAPI_Interfaces::SampleSides ZOSAPI_Interfaces::IOSS_ISScatterCatalog::GetSampleSideR ( ) {
    enum SampleSides _result;
    HRESULT _hr = get_SampleSideR(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1193)
inline void ZOSAPI_Interfaces::IOSS_ISScatterCatalog::PutSampleSideR ( enum SampleSides pRetVal ) {
    HRESULT _hr = put_SampleSideR(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1194)
inline SAFEARRAY * ZOSAPI_Interfaces::IOSS_ISScatterCatalog::GetSampleSidesR ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_GetSampleSidesR(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1195)
inline enum ZOSAPI_Interfaces::Samplings ZOSAPI_Interfaces::IOSS_ISScatterCatalog::GetSamplingR ( ) {
    enum Samplings _result;
    HRESULT _hr = get_SamplingR(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1196)
inline void ZOSAPI_Interfaces::IOSS_ISScatterCatalog::PutSamplingR ( enum Samplings pRetVal ) {
    HRESULT _hr = put_SamplingR(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1197)
inline enum ZOSAPI_Interfaces::SampleSides ZOSAPI_Interfaces::IOSS_ISScatterCatalog::GetSampleSideT ( ) {
    enum SampleSides _result;
    HRESULT _hr = get_SampleSideT(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1198)
inline void ZOSAPI_Interfaces::IOSS_ISScatterCatalog::PutSampleSideT ( enum SampleSides pRetVal ) {
    HRESULT _hr = put_SampleSideT(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1199)
inline SAFEARRAY * ZOSAPI_Interfaces::IOSS_ISScatterCatalog::GetSampleSidesT ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_GetSampleSidesT(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1200)
inline enum ZOSAPI_Interfaces::Samplings ZOSAPI_Interfaces::IOSS_ISScatterCatalog::GetSamplingT ( ) {
    enum Samplings _result;
    HRESULT _hr = get_SamplingT(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1201)
inline void ZOSAPI_Interfaces::IOSS_ISScatterCatalog::PutSamplingT ( enum Samplings pRetVal ) {
    HRESULT _hr = put_SamplingT(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1202)
inline double ZOSAPI_Interfaces::IOSS_ISScatterCatalog::GetAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_Angle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1203)
inline void ZOSAPI_Interfaces::IOSS_ISScatterCatalog::PutAngle ( double pRetVal ) {
    HRESULT _hr = put_Angle(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectScatteringSettings wrapper method implementations
//

#pragma implementation_key(1204)
inline enum ZOSAPI_Interfaces::ObjectScatteringTypes ZOSAPI_Interfaces::IObjectScatteringSettings::GetType ( ) {
    enum ObjectScatteringTypes _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1205)
inline VARIANT_BOOL ZOSAPI_Interfaces::IObjectScatteringSettings::GetIsValid ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsValid(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1206)
inline ZOSAPI_Interfaces::IOSS_NonePtr ZOSAPI_Interfaces::IObjectScatteringSettings::Get_S_None ( ) {
    struct IOSS_None * _result = 0;
    HRESULT _hr = get__S_None(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IOSS_NonePtr(_result, false);
}

#pragma implementation_key(1207)
inline ZOSAPI_Interfaces::IOSS_LambertianPtr ZOSAPI_Interfaces::IObjectScatteringSettings::Get_S_Lambertian ( ) {
    struct IOSS_Lambertian * _result = 0;
    HRESULT _hr = get__S_Lambertian(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IOSS_LambertianPtr(_result, false);
}

#pragma implementation_key(1208)
inline ZOSAPI_Interfaces::IOSS_GaussianPtr ZOSAPI_Interfaces::IObjectScatteringSettings::Get_S_Gaussian ( ) {
    struct IOSS_Gaussian * _result = 0;
    HRESULT _hr = get__S_Gaussian(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IOSS_GaussianPtr(_result, false);
}

#pragma implementation_key(1209)
inline ZOSAPI_Interfaces::IOSS_ABgPtr ZOSAPI_Interfaces::IObjectScatteringSettings::Get_S_ABg ( ) {
    struct IOSS_ABg * _result = 0;
    HRESULT _hr = get__S_ABg(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IOSS_ABgPtr(_result, false);
}

#pragma implementation_key(1210)
inline ZOSAPI_Interfaces::IOSS_ABgFilePtr ZOSAPI_Interfaces::IObjectScatteringSettings::Get_S_ABgFile ( ) {
    struct IOSS_ABgFile * _result = 0;
    HRESULT _hr = get__S_ABgFile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IOSS_ABgFilePtr(_result, false);
}

#pragma implementation_key(1211)
inline ZOSAPI_Interfaces::IOSS_BSDFPtr ZOSAPI_Interfaces::IObjectScatteringSettings::Get_S_BSDF ( ) {
    struct IOSS_BSDF * _result = 0;
    HRESULT _hr = get__S_BSDF(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IOSS_BSDFPtr(_result, false);
}

#pragma implementation_key(1212)
inline ZOSAPI_Interfaces::IOSS_UserPtr ZOSAPI_Interfaces::IObjectScatteringSettings::Get_S_User ( ) {
    struct IOSS_User * _result = 0;
    HRESULT _hr = get__S_User(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IOSS_UserPtr(_result, false);
}

#pragma implementation_key(1213)
inline ZOSAPI_Interfaces::IOSS_ISScatterCatalogPtr ZOSAPI_Interfaces::IObjectScatteringSettings::Get_S_ISScatterCatalog ( ) {
    struct IOSS_ISScatterCatalog * _result = 0;
    HRESULT _hr = get__S_ISScatterCatalog(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IOSS_ISScatterCatalogPtr(_result, false);
}

//
// interface INCECoatScatterFaceData wrapper method implementations
//

#pragma implementation_key(1214)
inline VARIANT_BOOL ZOSAPI_Interfaces::INCECoatScatterFaceData::GetIsValid ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsValid(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1215)
inline long ZOSAPI_Interfaces::INCECoatScatterFaceData::GetfaceNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_faceNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1216)
inline _bstr_t ZOSAPI_Interfaces::INCECoatScatterFaceData::GetFaceName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FaceName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1217)
inline VARIANT_BOOL ZOSAPI_Interfaces::INCECoatScatterFaceData::GetIsReadOnly ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsReadOnly(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1218)
inline VARIANT_BOOL ZOSAPI_Interfaces::INCECoatScatterFaceData::GetIsCustom ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsCustom(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1219)
inline VARIANT_BOOL ZOSAPI_Interfaces::INCECoatScatterFaceData::UseCustomSettings ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_UseCustomSettings(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1220)
inline VARIANT_BOOL ZOSAPI_Interfaces::INCECoatScatterFaceData::GetIsProfile ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsProfile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1221)
inline VARIANT_BOOL ZOSAPI_Interfaces::INCECoatScatterFaceData::UseProfile ( _bstr_t profile ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_UseProfile(profile, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1222)
inline SAFEARRAY * ZOSAPI_Interfaces::INCECoatScatterFaceData::GetAvailableProfiles ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_GetAvailableProfiles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1223)
inline _bstr_t ZOSAPI_Interfaces::INCECoatScatterFaceData::GetProfileName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ProfileName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1224)
inline VARIANT_BOOL ZOSAPI_Interfaces::INCECoatScatterFaceData::DeleteProfile ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_DeleteProfile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1225)
inline VARIANT_BOOL ZOSAPI_Interfaces::INCECoatScatterFaceData::SaveProfile ( _bstr_t ProfileName ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_SaveProfile(ProfileName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1226)
inline enum ZOSAPI_Interfaces::FaceIsType ZOSAPI_Interfaces::INCECoatScatterFaceData::GetFaceIs ( ) {
    enum FaceIsType _result;
    HRESULT _hr = get_FaceIs(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1227)
inline void ZOSAPI_Interfaces::INCECoatScatterFaceData::PutFaceIs ( enum FaceIsType pRetVal ) {
    HRESULT _hr = put_FaceIs(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1228)
inline _bstr_t ZOSAPI_Interfaces::INCECoatScatterFaceData::GetCoating ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Coating(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1229)
inline void ZOSAPI_Interfaces::INCECoatScatterFaceData::PutCoating ( _bstr_t pRetVal ) {
    HRESULT _hr = put_Coating(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1230)
inline SAFEARRAY * ZOSAPI_Interfaces::INCECoatScatterFaceData::GetAvailableCoatings ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_GetAvailableCoatings(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1231)
inline enum ZOSAPI_Interfaces::ObjectScatteringTypes ZOSAPI_Interfaces::INCECoatScatterFaceData::GetCurrentScatterModel ( ) {
    enum ObjectScatteringTypes _result;
    HRESULT _hr = get_CurrentScatterModel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1232)
inline ZOSAPI_Interfaces::IObjectScatteringSettingsPtr ZOSAPI_Interfaces::INCECoatScatterFaceData::GetCurrentScatterModelSettings ( ) {
    struct IObjectScatteringSettings * _result = 0;
    HRESULT _hr = get_CurrentScatterModelSettings(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IObjectScatteringSettingsPtr(_result, false);
}

#pragma implementation_key(1233)
inline ZOSAPI_Interfaces::IObjectScatteringSettingsPtr ZOSAPI_Interfaces::INCECoatScatterFaceData::CreateScatterModelSettings ( enum ObjectScatteringTypes Type ) {
    struct IObjectScatteringSettings * _result = 0;
    HRESULT _hr = raw_CreateScatterModelSettings(Type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IObjectScatteringSettingsPtr(_result, false);
}

#pragma implementation_key(1234)
inline VARIANT_BOOL ZOSAPI_Interfaces::INCECoatScatterFaceData::ChangeScatterModelSettings ( struct IObjectScatteringSettings * newSettings ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_ChangeScatterModelSettings(newSettings, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1235)
inline VARIANT_BOOL ZOSAPI_Interfaces::INCECoatScatterFaceData::GetThinWindowScattering ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ThinWindowScattering(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1236)
inline void ZOSAPI_Interfaces::INCECoatScatterFaceData::PutThinWindowScattering ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_ThinWindowScattering(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1237)
inline long ZOSAPI_Interfaces::INCECoatScatterFaceData::GetNumberOfRays ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfRays(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1238)
inline void ZOSAPI_Interfaces::INCECoatScatterFaceData::PutNumberOfRays ( long pRetVal ) {
    HRESULT _hr = put_NumberOfRays(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface INCECoatScatterData wrapper method implementations
//

#pragma implementation_key(1239)
inline VARIANT_BOOL ZOSAPI_Interfaces::INCECoatScatterData::GetIsCoatScatterAvailable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsCoatScatterAvailable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1240)
inline long ZOSAPI_Interfaces::INCECoatScatterData::GetNumberOfFaces ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfFaces(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1241)
inline ZOSAPI_Interfaces::INCECoatScatterFaceDataPtr ZOSAPI_Interfaces::INCECoatScatterData::GetFaceData ( long faceNumber ) {
    struct INCECoatScatterFaceData * _result = 0;
    HRESULT _hr = raw_GetFaceData(faceNumber, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return INCECoatScatterFaceDataPtr(_result, false);
}

//
// interface IImportanceSamplingSettings wrapper method implementations
//

#pragma implementation_key(1242)
inline long ZOSAPI_Interfaces::IImportanceSamplingSettings::GetTowards ( ) {
    long _result = 0;
    HRESULT _hr = get_Towards(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1243)
inline void ZOSAPI_Interfaces::IImportanceSamplingSettings::PutTowards ( long pRetVal ) {
    HRESULT _hr = put_Towards(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1244)
inline double ZOSAPI_Interfaces::IImportanceSamplingSettings::Getsize ( ) {
    double _result = 0;
    HRESULT _hr = get_size(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1245)
inline void ZOSAPI_Interfaces::IImportanceSamplingSettings::Putsize ( double pRetVal ) {
    HRESULT _hr = put_size(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1246)
inline double ZOSAPI_Interfaces::IImportanceSamplingSettings::GetLimit ( ) {
    double _result = 0;
    HRESULT _hr = get_Limit(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1247)
inline void ZOSAPI_Interfaces::IImportanceSamplingSettings::PutLimit ( double pRetVal ) {
    HRESULT _hr = put_Limit(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface INCEScatterToData wrapper method implementations
//

#pragma implementation_key(1248)
inline VARIANT_BOOL ZOSAPI_Interfaces::INCEScatterToData::GetIsScatterToAvailable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsScatterToAvailable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1249)
inline enum ZOSAPI_Interfaces::ScatterToType ZOSAPI_Interfaces::INCEScatterToData::GetScatterToMethod ( ) {
    enum ScatterToType _result;
    HRESULT _hr = get_ScatterToMethod(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1250)
inline void ZOSAPI_Interfaces::INCEScatterToData::PutScatterToMethod ( enum ScatterToType pRetVal ) {
    HRESULT _hr = put_ScatterToMethod(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1251)
inline _bstr_t ZOSAPI_Interfaces::INCEScatterToData::GetScatterToList ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ScatterToList(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1252)
inline void ZOSAPI_Interfaces::INCEScatterToData::PutScatterToList ( _bstr_t pRetVal ) {
    HRESULT _hr = put_ScatterToList(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1253)
inline long ZOSAPI_Interfaces::INCEScatterToData::GetNumberOfRayData ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfRayData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1254)
inline ZOSAPI_Interfaces::IImportanceSamplingSettingsPtr ZOSAPI_Interfaces::INCEScatterToData::GetRayData ( long rayIndex ) {
    struct IImportanceSamplingSettings * _result = 0;
    HRESULT _hr = raw_GetRayData(rayIndex, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IImportanceSamplingSettingsPtr(_result, false);
}

#pragma implementation_key(1255)
inline VARIANT_BOOL ZOSAPI_Interfaces::INCEScatterToData::SetRayData ( long rayIndex, struct IImportanceSamplingSettings * Data ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_SetRayData(rayIndex, Data, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IVMPS_AngleScattering wrapper method implementations
//

#pragma implementation_key(1256)
inline double ZOSAPI_Interfaces::IVMPS_AngleScattering::GetMeanPath ( ) {
    double _result = 0;
    HRESULT _hr = get_MeanPath(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1257)
inline void ZOSAPI_Interfaces::IVMPS_AngleScattering::PutMeanPath ( double pRetVal ) {
    HRESULT _hr = put_MeanPath(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1258)
inline double ZOSAPI_Interfaces::IVMPS_AngleScattering::GetAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_Angle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1259)
inline void ZOSAPI_Interfaces::IVMPS_AngleScattering::PutAngle ( double pRetVal ) {
    HRESULT _hr = put_Angle(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IVMPS_DLLDefinedScattering wrapper method implementations
//

#pragma implementation_key(1260)
inline _bstr_t ZOSAPI_Interfaces::IVMPS_DLLDefinedScattering::GetDLL ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DLL(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1261)
inline void ZOSAPI_Interfaces::IVMPS_DLLDefinedScattering::PutDLL ( _bstr_t pRetVal ) {
    HRESULT _hr = put_DLL(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1262)
inline SAFEARRAY * ZOSAPI_Interfaces::IVMPS_DLLDefinedScattering::GetAvailableDLLs ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_GetAvailableDLLs(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1263)
inline double ZOSAPI_Interfaces::IVMPS_DLLDefinedScattering::GetMeanPath ( ) {
    double _result = 0;
    HRESULT _hr = get_MeanPath(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1264)
inline void ZOSAPI_Interfaces::IVMPS_DLLDefinedScattering::PutMeanPath ( double pRetVal ) {
    HRESULT _hr = put_MeanPath(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1265)
inline VARIANT_BOOL ZOSAPI_Interfaces::IVMPS_DLLDefinedScattering::GetMeanPathRequired ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_MeanPathRequired(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1266)
inline double ZOSAPI_Interfaces::IVMPS_DLLDefinedScattering::GetAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_Angle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1267)
inline void ZOSAPI_Interfaces::IVMPS_DLLDefinedScattering::PutAngle ( double pRetVal ) {
    HRESULT _hr = put_Angle(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1268)
inline VARIANT_BOOL ZOSAPI_Interfaces::IVMPS_DLLDefinedScattering::GetAngleRequired ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AngleRequired(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1269)
inline long ZOSAPI_Interfaces::IVMPS_DLLDefinedScattering::GetNumberOfParameters ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfParameters(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1270)
inline _bstr_t ZOSAPI_Interfaces::IVMPS_DLLDefinedScattering::GetParameterName ( long paramIdx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetParameterName(paramIdx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1271)
inline double ZOSAPI_Interfaces::IVMPS_DLLDefinedScattering::GetParameterValue ( long paramIdx ) {
    double _result = 0;
    HRESULT _hr = raw_GetParameterValue(paramIdx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1272)
inline VARIANT_BOOL ZOSAPI_Interfaces::IVMPS_DLLDefinedScattering::SetParameterValue ( long paramIdx, double Value ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_SetParameterValue(paramIdx, Value, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IVMPS_PhotoluminscenceModel wrapper method implementations
//

#pragma implementation_key(1273)
inline VARIANT_BOOL ZOSAPI_Interfaces::IVMPS_PhotoluminscenceModel::GetAreSettingsValid ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AreSettingsValid(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1274)
inline _bstr_t ZOSAPI_Interfaces::IVMPS_PhotoluminscenceModel::GetAbsorptionFile ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_AbsorptionFile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1275)
inline void ZOSAPI_Interfaces::IVMPS_PhotoluminscenceModel::PutAbsorptionFile ( _bstr_t pRetVal ) {
    HRESULT _hr = put_AbsorptionFile(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1276)
inline SAFEARRAY * ZOSAPI_Interfaces::IVMPS_PhotoluminscenceModel::GetAvailableAbsorptionFiles ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_GetAvailableAbsorptionFiles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1277)
inline _bstr_t ZOSAPI_Interfaces::IVMPS_PhotoluminscenceModel::GetEmissionFile ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_EmissionFile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1278)
inline void ZOSAPI_Interfaces::IVMPS_PhotoluminscenceModel::PutEmissionFile ( _bstr_t pRetVal ) {
    HRESULT _hr = put_EmissionFile(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1279)
inline SAFEARRAY * ZOSAPI_Interfaces::IVMPS_PhotoluminscenceModel::GetAvailableEmissionFiles ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_GetAvailableEmissionFiles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1280)
inline _bstr_t ZOSAPI_Interfaces::IVMPS_PhotoluminscenceModel::GetExcitationFile ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ExcitationFile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1281)
inline void ZOSAPI_Interfaces::IVMPS_PhotoluminscenceModel::PutExcitationFile ( _bstr_t pRetVal ) {
    HRESULT _hr = put_ExcitationFile(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1282)
inline SAFEARRAY * ZOSAPI_Interfaces::IVMPS_PhotoluminscenceModel::GetAvailableExcitationFiles ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_GetAvailableExcitationFiles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1283)
inline _bstr_t ZOSAPI_Interfaces::IVMPS_PhotoluminscenceModel::GetQuantumYield ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_QuantumYield(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1284)
inline void ZOSAPI_Interfaces::IVMPS_PhotoluminscenceModel::PutQuantumYield ( _bstr_t pRetVal ) {
    HRESULT _hr = put_QuantumYield(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1285)
inline SAFEARRAY * ZOSAPI_Interfaces::IVMPS_PhotoluminscenceModel::GetAvailableQuantumYieldFiles ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_GetAvailableQuantumYieldFiles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1286)
inline double ZOSAPI_Interfaces::IVMPS_PhotoluminscenceModel::GetParticleIndex ( ) {
    double _result = 0;
    HRESULT _hr = get_ParticleIndex(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1287)
inline void ZOSAPI_Interfaces::IVMPS_PhotoluminscenceModel::PutParticleIndex ( double pRetVal ) {
    HRESULT _hr = put_ParticleIndex(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1288)
inline double ZOSAPI_Interfaces::IVMPS_PhotoluminscenceModel::GetParticleDensity ( ) {
    double _result = 0;
    HRESULT _hr = get_ParticleDensity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1289)
inline void ZOSAPI_Interfaces::IVMPS_PhotoluminscenceModel::PutParticleDensity ( double pRetVal ) {
    HRESULT _hr = put_ParticleDensity(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1290)
inline double ZOSAPI_Interfaces::IVMPS_PhotoluminscenceModel::GetParticleRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_ParticleRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1291)
inline void ZOSAPI_Interfaces::IVMPS_PhotoluminscenceModel::PutParticleRadius ( double pRetVal ) {
    HRESULT _hr = put_ParticleRadius(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1292)
inline double ZOSAPI_Interfaces::IVMPS_PhotoluminscenceModel::GetThreshold ( ) {
    double _result = 0;
    HRESULT _hr = get_Threshold(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1293)
inline void ZOSAPI_Interfaces::IVMPS_PhotoluminscenceModel::PutThreshold ( double pRetVal ) {
    HRESULT _hr = put_Threshold(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1294)
inline VARIANT_BOOL ZOSAPI_Interfaces::IVMPS_PhotoluminscenceModel::GetBasicAlgorithm ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_BasicAlgorithm(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1295)
inline void ZOSAPI_Interfaces::IVMPS_PhotoluminscenceModel::PutBasicAlgorithm ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_BasicAlgorithm(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1296)
inline double ZOSAPI_Interfaces::IVMPS_PhotoluminscenceModel::GetPLMeanPath ( ) {
    double _result = 0;
    HRESULT _hr = get_PLMeanPath(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1297)
inline void ZOSAPI_Interfaces::IVMPS_PhotoluminscenceModel::PutPLMeanPath ( double pRetVal ) {
    HRESULT _hr = put_PLMeanPath(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1298)
inline VARIANT_BOOL ZOSAPI_Interfaces::IVMPS_PhotoluminscenceModel::GetUseMieDensity ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseMieDensity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1299)
inline void ZOSAPI_Interfaces::IVMPS_PhotoluminscenceModel::PutUseMieDensity ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UseMieDensity(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1300)
inline double ZOSAPI_Interfaces::IVMPS_PhotoluminscenceModel::GetMieMeanPath ( ) {
    double _result = 0;
    HRESULT _hr = get_MieMeanPath(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1301)
inline void ZOSAPI_Interfaces::IVMPS_PhotoluminscenceModel::PutMieMeanPath ( double pRetVal ) {
    HRESULT _hr = put_MieMeanPath(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1302)
inline enum ZOSAPI_Interfaces::EfficiencySpectrumType ZOSAPI_Interfaces::IVMPS_PhotoluminscenceModel::GetEfficiencySpectrum ( ) {
    enum EfficiencySpectrumType _result;
    HRESULT _hr = get_EfficiencySpectrum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1303)
inline void ZOSAPI_Interfaces::IVMPS_PhotoluminscenceModel::PutEfficiencySpectrum ( enum EfficiencySpectrumType pRetVal ) {
    HRESULT _hr = put_EfficiencySpectrum(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IVolumePhysicsModelSettings wrapper method implementations
//

#pragma implementation_key(1304)
inline enum ZOSAPI_Interfaces::VolumePhysicsModelType ZOSAPI_Interfaces::IVolumePhysicsModelSettings::GetType ( ) {
    enum VolumePhysicsModelType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1305)
inline VARIANT_BOOL ZOSAPI_Interfaces::IVolumePhysicsModelSettings::GetIsValid ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsValid(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1306)
inline ZOSAPI_Interfaces::IVPMS_NonePtr ZOSAPI_Interfaces::IVolumePhysicsModelSettings::Get_S_None ( ) {
    struct IVPMS_None * _result = 0;
    HRESULT _hr = get__S_None(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IVPMS_NonePtr(_result, false);
}

#pragma implementation_key(1307)
inline ZOSAPI_Interfaces::IVMPS_AngleScatteringPtr ZOSAPI_Interfaces::IVolumePhysicsModelSettings::Get_S_AngleScattering ( ) {
    struct IVMPS_AngleScattering * _result = 0;
    HRESULT _hr = get__S_AngleScattering(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IVMPS_AngleScatteringPtr(_result, false);
}

#pragma implementation_key(1308)
inline ZOSAPI_Interfaces::IVMPS_DLLDefinedScatteringPtr ZOSAPI_Interfaces::IVolumePhysicsModelSettings::Get_S_DLLDefinedScattering ( ) {
    struct IVMPS_DLLDefinedScattering * _result = 0;
    HRESULT _hr = get__S_DLLDefinedScattering(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IVMPS_DLLDefinedScatteringPtr(_result, false);
}

#pragma implementation_key(1309)
inline ZOSAPI_Interfaces::IVMPS_PhotoluminscenceModelPtr ZOSAPI_Interfaces::IVolumePhysicsModelSettings::Get_S_PhotoluminescenceModel ( ) {
    struct IVMPS_PhotoluminscenceModel * _result = 0;
    HRESULT _hr = get__S_PhotoluminescenceModel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IVMPS_PhotoluminscenceModelPtr(_result, false);
}

//
// interface INCEVolumePhysicsData wrapper method implementations
//

#pragma implementation_key(1310)
inline VARIANT_BOOL ZOSAPI_Interfaces::INCEVolumePhysicsData::GetIsVolumePhysicsAvailable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsVolumePhysicsAvailable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1311)
inline enum ZOSAPI_Interfaces::VolumePhysicsModelType ZOSAPI_Interfaces::INCEVolumePhysicsData::GetModel ( ) {
    enum VolumePhysicsModelType _result;
    HRESULT _hr = get_Model(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1312)
inline void ZOSAPI_Interfaces::INCEVolumePhysicsData::PutModel ( enum VolumePhysicsModelType pRetVal ) {
    HRESULT _hr = put_Model(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1313)
inline ZOSAPI_Interfaces::IVolumePhysicsModelSettingsPtr ZOSAPI_Interfaces::INCEVolumePhysicsData::GetModelSettings ( ) {
    struct IVolumePhysicsModelSettings * _result = 0;
    HRESULT _hr = get_ModelSettings(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IVolumePhysicsModelSettingsPtr(_result, false);
}

#pragma implementation_key(1314)
inline _bstr_t ZOSAPI_Interfaces::INCEVolumePhysicsData::GetWavelengthShift ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_WavelengthShift(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1315)
inline void ZOSAPI_Interfaces::INCEVolumePhysicsData::PutWavelengthShift ( _bstr_t pRetVal ) {
    HRESULT _hr = put_WavelengthShift(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IIMS_Birefringent wrapper method implementations
//

#pragma implementation_key(1316)
inline enum ZOSAPI_Interfaces::BirefringentMode ZOSAPI_Interfaces::IIMS_Birefringent::GetMode ( ) {
    enum BirefringentMode _result;
    HRESULT _hr = get_Mode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1317)
inline void ZOSAPI_Interfaces::IIMS_Birefringent::PutMode ( enum BirefringentMode pRetVal ) {
    HRESULT _hr = put_Mode(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1318)
inline enum ZOSAPI_Interfaces::BirefringentReflections ZOSAPI_Interfaces::IIMS_Birefringent::GetReflections ( ) {
    enum BirefringentReflections _result;
    HRESULT _hr = get_Reflections(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1319)
inline void ZOSAPI_Interfaces::IIMS_Birefringent::PutReflections ( enum BirefringentReflections pRetVal ) {
    HRESULT _hr = put_Reflections(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1320)
inline double ZOSAPI_Interfaces::IIMS_Birefringent::GetAx ( ) {
    double _result = 0;
    HRESULT _hr = get_Ax(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1321)
inline void ZOSAPI_Interfaces::IIMS_Birefringent::PutAx ( double pRetVal ) {
    HRESULT _hr = put_Ax(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1322)
inline double ZOSAPI_Interfaces::IIMS_Birefringent::GetAy ( ) {
    double _result = 0;
    HRESULT _hr = get_Ay(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1323)
inline void ZOSAPI_Interfaces::IIMS_Birefringent::PutAy ( double pRetVal ) {
    HRESULT _hr = put_Ay(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1324)
inline double ZOSAPI_Interfaces::IIMS_Birefringent::GetAz ( ) {
    double _result = 0;
    HRESULT _hr = get_Az(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1325)
inline void ZOSAPI_Interfaces::IIMS_Birefringent::PutAz ( double pRetVal ) {
    HRESULT _hr = put_Az(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1326)
inline double ZOSAPI_Interfaces::IIMS_Birefringent::GetAxisLength ( ) {
    double _result = 0;
    HRESULT _hr = get_AxisLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1327)
inline void ZOSAPI_Interfaces::IIMS_Birefringent::PutAxisLength ( double pRetVal ) {
    HRESULT _hr = put_AxisLength(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IIMS_GRIN wrapper method implementations
//

#pragma implementation_key(1328)
inline _bstr_t ZOSAPI_Interfaces::IIMS_GRIN::GetDLL ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DLL(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1329)
inline void ZOSAPI_Interfaces::IIMS_GRIN::PutDLL ( _bstr_t pRetVal ) {
    HRESULT _hr = put_DLL(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1330)
inline SAFEARRAY * ZOSAPI_Interfaces::IIMS_GRIN::GetAvailableDLLs ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_GetAvailableDLLs(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1331)
inline _bstr_t ZOSAPI_Interfaces::IIMS_GRIN::GetFile ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_File(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1332)
inline void ZOSAPI_Interfaces::IIMS_GRIN::PutFile ( _bstr_t pRetVal ) {
    HRESULT _hr = put_File(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1333)
inline SAFEARRAY * ZOSAPI_Interfaces::IIMS_GRIN::GetAvailableFiles ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_GetAvailableFiles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1334)
inline VARIANT_BOOL ZOSAPI_Interfaces::IIMS_GRIN::GetUsesFile ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UsesFile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1335)
inline double ZOSAPI_Interfaces::IIMS_GRIN::GetMaximumStepSize ( ) {
    double _result = 0;
    HRESULT _hr = get_MaximumStepSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1336)
inline void ZOSAPI_Interfaces::IIMS_GRIN::PutMaximumStepSize ( double pRetVal ) {
    HRESULT _hr = put_MaximumStepSize(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1337)
inline long ZOSAPI_Interfaces::IIMS_GRIN::GetNumberOfParameters ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfParameters(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1338)
inline _bstr_t ZOSAPI_Interfaces::IIMS_GRIN::GetParameterName ( long paramIdx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetParameterName(paramIdx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1339)
inline double ZOSAPI_Interfaces::IIMS_GRIN::GetParameterValue ( long paramIdx ) {
    double _result = 0;
    HRESULT _hr = raw_GetParameterValue(paramIdx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1340)
inline VARIANT_BOOL ZOSAPI_Interfaces::IIMS_GRIN::SetParameterValue ( long paramIdx, double Value ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_SetParameterValue(paramIdx, Value, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IIndexModelSettings wrapper method implementations
//

#pragma implementation_key(1341)
inline enum ZOSAPI_Interfaces::NCEIndexType ZOSAPI_Interfaces::IIndexModelSettings::GetType ( ) {
    enum NCEIndexType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1342)
inline VARIANT_BOOL ZOSAPI_Interfaces::IIndexModelSettings::GetIsValid ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsValid(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1343)
inline ZOSAPI_Interfaces::IIMS_IsotropicPtr ZOSAPI_Interfaces::IIndexModelSettings::Get_S_Isotropic ( ) {
    struct IIMS_Isotropic * _result = 0;
    HRESULT _hr = get__S_Isotropic(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IIMS_IsotropicPtr(_result, false);
}

#pragma implementation_key(1344)
inline ZOSAPI_Interfaces::IIMS_BirefringentPtr ZOSAPI_Interfaces::IIndexModelSettings::Get_S_Birefringent ( ) {
    struct IIMS_Birefringent * _result = 0;
    HRESULT _hr = get__S_Birefringent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IIMS_BirefringentPtr(_result, false);
}

#pragma implementation_key(1345)
inline ZOSAPI_Interfaces::IIMS_GRINPtr ZOSAPI_Interfaces::IIndexModelSettings::Get_S_GRIN ( ) {
    struct IIMS_GRIN * _result = 0;
    HRESULT _hr = get__S_GRIN(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IIMS_GRINPtr(_result, false);
}

//
// interface INCEIndexData wrapper method implementations
//

#pragma implementation_key(1346)
inline VARIANT_BOOL ZOSAPI_Interfaces::INCEIndexData::GetIsIndexAvailable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsIndexAvailable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1347)
inline enum ZOSAPI_Interfaces::NCEIndexType ZOSAPI_Interfaces::INCEIndexData::GetIndexType ( ) {
    enum NCEIndexType _result;
    HRESULT _hr = get_IndexType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1348)
inline void ZOSAPI_Interfaces::INCEIndexData::PutIndexType ( enum NCEIndexType pRetVal ) {
    HRESULT _hr = put_IndexType(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1349)
inline ZOSAPI_Interfaces::IIndexModelSettingsPtr ZOSAPI_Interfaces::INCEIndexData::GetModelSettings ( ) {
    struct IIndexModelSettings * _result = 0;
    HRESULT _hr = get_ModelSettings(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IIndexModelSettingsPtr(_result, false);
}

//
// interface INCEDiffractionData wrapper method implementations
//

#pragma implementation_key(1350)
inline VARIANT_BOOL ZOSAPI_Interfaces::INCEDiffractionData::GetIsDiffractionAvailable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsDiffractionAvailable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1351)
inline enum ZOSAPI_Interfaces::DiffractionSplitType ZOSAPI_Interfaces::INCEDiffractionData::GetSplit ( ) {
    enum DiffractionSplitType _result;
    HRESULT _hr = get_Split(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1352)
inline void ZOSAPI_Interfaces::INCEDiffractionData::PutSplit ( enum DiffractionSplitType pRetVal ) {
    HRESULT _hr = put_Split(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1353)
inline _bstr_t ZOSAPI_Interfaces::INCEDiffractionData::GetDLL ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DLL(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1354)
inline void ZOSAPI_Interfaces::INCEDiffractionData::PutDLL ( _bstr_t pRetVal ) {
    HRESULT _hr = put_DLL(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1355)
inline VARIANT_BOOL ZOSAPI_Interfaces::INCEDiffractionData::GetIsDLLRequired ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsDLLRequired(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1356)
inline SAFEARRAY * ZOSAPI_Interfaces::INCEDiffractionData::GetAvailableDLLs ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_GetAvailableDLLs(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1357)
inline long ZOSAPI_Interfaces::INCEDiffractionData::GetStartOrder ( ) {
    long _result = 0;
    HRESULT _hr = get_StartOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1358)
inline void ZOSAPI_Interfaces::INCEDiffractionData::PutStartOrder ( long pRetVal ) {
    HRESULT _hr = put_StartOrder(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1359)
inline long ZOSAPI_Interfaces::INCEDiffractionData::GetStopOrder ( ) {
    long _result = 0;
    HRESULT _hr = get_StopOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1360)
inline void ZOSAPI_Interfaces::INCEDiffractionData::PutStopOrder ( long pRetVal ) {
    HRESULT _hr = put_StopOrder(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1361)
inline long ZOSAPI_Interfaces::INCEDiffractionData::GetNumberOfParameters ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfParameters(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1362)
inline _bstr_t ZOSAPI_Interfaces::INCEDiffractionData::GetReflectParameterName ( long paramIdx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetReflectParameterName(paramIdx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1363)
inline double ZOSAPI_Interfaces::INCEDiffractionData::GetReflectParameterValue ( long paramIdx ) {
    double _result = 0;
    HRESULT _hr = raw_GetReflectParameterValue(paramIdx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1364)
inline VARIANT_BOOL ZOSAPI_Interfaces::INCEDiffractionData::SetReflectParameterValue ( long paramIdx, double Value ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_SetReflectParameterValue(paramIdx, Value, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1365)
inline _bstr_t ZOSAPI_Interfaces::INCEDiffractionData::GetTransmitParamaterName ( long paramIdx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetTransmitParamaterName(paramIdx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1366)
inline double ZOSAPI_Interfaces::INCEDiffractionData::GetTransmitParameterValue ( long paramIdx ) {
    double _result = 0;
    HRESULT _hr = raw_GetTransmitParameterValue(paramIdx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1367)
inline VARIANT_BOOL ZOSAPI_Interfaces::INCEDiffractionData::SetTransmitParameterValue ( long paramIdx, double Value ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_SetTransmitParameterValue(paramIdx, Value, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface INCECADData wrapper method implementations
//

#pragma implementation_key(1368)
inline VARIANT_BOOL ZOSAPI_Interfaces::INCECADData::GetIsCADAvailable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsCADAvailable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1369)
inline VARIANT_BOOL ZOSAPI_Interfaces::INCECADData::GetHasChordTolerance ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_HasChordTolerance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1370)
inline double ZOSAPI_Interfaces::INCECADData::GetChordTolerance ( ) {
    double _result = 0;
    HRESULT _hr = get_ChordTolerance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1371)
inline void ZOSAPI_Interfaces::INCECADData::PutChordTolerance ( double pRetVal ) {
    HRESULT _hr = put_ChordTolerance(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1372)
inline VARIANT_BOOL ZOSAPI_Interfaces::INCECADData::GetHasSurfaceTolerance ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_HasSurfaceTolerance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1373)
inline long ZOSAPI_Interfaces::INCECADData::GetSurfaceTolerance ( ) {
    long _result = 0;
    HRESULT _hr = get_SurfaceTolerance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1374)
inline void ZOSAPI_Interfaces::INCECADData::PutSurfaceTolerance ( long pRetVal ) {
    HRESULT _hr = put_SurfaceTolerance(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1375)
inline VARIANT_BOOL ZOSAPI_Interfaces::INCECADData::GetHasFaceParameters ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_HasFaceParameters(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1376)
inline double ZOSAPI_Interfaces::INCECADData::GetFaceAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_FaceAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1377)
inline void ZOSAPI_Interfaces::INCECADData::PutFaceAngle ( double pRetVal ) {
    HRESULT _hr = put_FaceAngle(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1378)
inline long ZOSAPI_Interfaces::INCECADData::GetFaceMode ( ) {
    long _result = 0;
    HRESULT _hr = get_FaceMode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1379)
inline void ZOSAPI_Interfaces::INCECADData::PutFaceMode ( long pRetVal ) {
    HRESULT _hr = put_FaceMode(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1380)
inline VARIANT_BOOL ZOSAPI_Interfaces::INCECADData::GetHasMergeSurfaces ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_HasMergeSurfaces(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1381)
inline VARIANT_BOOL ZOSAPI_Interfaces::INCECADData::GetMergeSurfaces ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_MergeSurfaces(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1382)
inline void ZOSAPI_Interfaces::INCECADData::PutMergeSurfaces ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_MergeSurfaces(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1383)
inline VARIANT_BOOL ZOSAPI_Interfaces::INCECADData::GetHasFaceData ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_HasFaceData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1384)
inline long ZOSAPI_Interfaces::INCECADData::GetNumberOfSurfaces ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfSurfaces(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1385)
inline long ZOSAPI_Interfaces::INCECADData::GetSurfaceFace ( long surfaceIdx ) {
    long _result = 0;
    HRESULT _hr = raw_GetSurfaceFace(surfaceIdx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1386)
inline VARIANT_BOOL ZOSAPI_Interfaces::INCECADData::SetSurfaceFace ( long surfaceIdx, long face ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_SetSurfaceFace(surfaceIdx, face, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1387)
inline _bstr_t ZOSAPI_Interfaces::INCECADData::GetSurfaceName ( long surfaceIdx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetSurfaceName(surfaceIdx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1388)
inline VARIANT_BOOL ZOSAPI_Interfaces::INCECADData::SetSurfaceName ( long surfaceIdx, _bstr_t name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_SetSurfaceName(surfaceIdx, name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1389)
inline VARIANT_BOOL ZOSAPI_Interfaces::INCECADData::GetHasPartData ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_HasPartData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1390)
inline long ZOSAPI_Interfaces::INCECADData::GetNumberOfConfigurations ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfConfigurations(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1391)
inline long ZOSAPI_Interfaces::INCECADData::GetCurrentConfiguration ( ) {
    long _result = 0;
    HRESULT _hr = get_CurrentConfiguration(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1392)
inline void ZOSAPI_Interfaces::INCECADData::PutCurrentConfiguration ( long pRetVal ) {
    HRESULT _hr = put_CurrentConfiguration(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1393)
inline _bstr_t ZOSAPI_Interfaces::INCECADData::GetConfigurationName ( long configIdx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetConfigurationName(configIdx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1394)
inline long ZOSAPI_Interfaces::INCECADData::GetNumberOfParts ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfParts(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1395)
inline _bstr_t ZOSAPI_Interfaces::INCECADData::GetPartName ( long partIdx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetPartName(partIdx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1396)
inline VARIANT_BOOL ZOSAPI_Interfaces::INCECADData::GetPartExposed ( long partIdx ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_GetPartExposed(partIdx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1397)
inline VARIANT_BOOL ZOSAPI_Interfaces::INCECADData::SetPartExposed ( long partIdx, VARIANT_BOOL exposed ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_SetPartExposed(partIdx, exposed, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1398)
inline VARIANT_BOOL ZOSAPI_Interfaces::INCECADData::SetAllPartsExposed ( VARIANT_BOOL exposed ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_SetAllPartsExposed(exposed, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface ISolveSurfacePickup wrapper method implementations
//

#pragma implementation_key(1399)
inline long ZOSAPI_Interfaces::ISolveSurfacePickup::GetSurface ( ) {
    long _result = 0;
    HRESULT _hr = get_Surface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1400)
inline void ZOSAPI_Interfaces::ISolveSurfacePickup::PutSurface ( long pRetVal ) {
    HRESULT _hr = put_Surface(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1401)
inline double ZOSAPI_Interfaces::ISolveSurfacePickup::GetScaleFactor ( ) {
    double _result = 0;
    HRESULT _hr = get_ScaleFactor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1402)
inline void ZOSAPI_Interfaces::ISolveSurfacePickup::PutScaleFactor ( double pRetVal ) {
    HRESULT _hr = put_ScaleFactor(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1403)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISolveSurfacePickup::GetSupportsScale ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SupportsScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1404)
inline double ZOSAPI_Interfaces::ISolveSurfacePickup::GetOffset ( ) {
    double _result = 0;
    HRESULT _hr = get_Offset(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1405)
inline void ZOSAPI_Interfaces::ISolveSurfacePickup::PutOffset ( double pRetVal ) {
    HRESULT _hr = put_Offset(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1406)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISolveSurfacePickup::GetSupportsOffset ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SupportsOffset(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1407)
inline enum ZOSAPI_Interfaces::SurfaceColumn ZOSAPI_Interfaces::ISolveSurfacePickup::GetColumn ( ) {
    enum SurfaceColumn _result;
    HRESULT _hr = get_Column(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1408)
inline void ZOSAPI_Interfaces::ISolveSurfacePickup::PutColumn ( enum SurfaceColumn pRetVal ) {
    HRESULT _hr = put_Column(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISolveData wrapper method implementations
//

#pragma implementation_key(1409)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISolveData::GetIsValid ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsValid(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1410)
inline enum ZOSAPI_Interfaces::SolveType ZOSAPI_Interfaces::ISolveData::GetType ( ) {
    enum SolveType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1411)
inline ZOSAPI_Interfaces::ISolveNonePtr ZOSAPI_Interfaces::ISolveData::Get_S_None ( ) {
    struct ISolveNone * _result = 0;
    HRESULT _hr = get__S_None(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISolveNonePtr(_result, false);
}

#pragma implementation_key(1412)
inline ZOSAPI_Interfaces::ISolveFixedPtr ZOSAPI_Interfaces::ISolveData::Get_S_Fixed ( ) {
    struct ISolveFixed * _result = 0;
    HRESULT _hr = get__S_Fixed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISolveFixedPtr(_result, false);
}

#pragma implementation_key(1413)
inline ZOSAPI_Interfaces::ISolveVariablePtr ZOSAPI_Interfaces::ISolveData::Get_S_Variable ( ) {
    struct ISolveVariable * _result = 0;
    HRESULT _hr = get__S_Variable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISolveVariablePtr(_result, false);
}

#pragma implementation_key(1414)
inline ZOSAPI_Interfaces::ISolveSurfacePickupPtr ZOSAPI_Interfaces::ISolveData::Get_S_SurfacePickup ( ) {
    struct ISolveSurfacePickup * _result = 0;
    HRESULT _hr = get__S_SurfacePickup(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISolveSurfacePickupPtr(_result, false);
}

#pragma implementation_key(1415)
inline ZOSAPI_Interfaces::ISolveZPLMacroPtr ZOSAPI_Interfaces::ISolveData::Get_S_ZPLMacro ( ) {
    struct ISolveZPLMacro * _result = 0;
    HRESULT _hr = get__S_ZPLMacro(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISolveZPLMacroPtr(_result, false);
}

#pragma implementation_key(1416)
inline ZOSAPI_Interfaces::ISolveMarginalRayAnglePtr ZOSAPI_Interfaces::ISolveData::Get_S_MarginalRayAngle ( ) {
    struct ISolveMarginalRayAngle * _result = 0;
    HRESULT _hr = get__S_MarginalRayAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISolveMarginalRayAnglePtr(_result, false);
}

#pragma implementation_key(1417)
inline ZOSAPI_Interfaces::ISolveMarginalRayHeightPtr ZOSAPI_Interfaces::ISolveData::Get_S_MarginalRayHeight ( ) {
    struct ISolveMarginalRayHeight * _result = 0;
    HRESULT _hr = get__S_MarginalRayHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISolveMarginalRayHeightPtr(_result, false);
}

#pragma implementation_key(1418)
inline ZOSAPI_Interfaces::ISolveChiefRayAnglePtr ZOSAPI_Interfaces::ISolveData::Get_S_ChiefRayAngle ( ) {
    struct ISolveChiefRayAngle * _result = 0;
    HRESULT _hr = get__S_ChiefRayAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISolveChiefRayAnglePtr(_result, false);
}

#pragma implementation_key(1419)
inline ZOSAPI_Interfaces::ISolveMarginalRayNormalPtr ZOSAPI_Interfaces::ISolveData::Get_S_MarginalRayNormal ( ) {
    struct ISolveMarginalRayNormal * _result = 0;
    HRESULT _hr = get__S_MarginalRayNormal(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISolveMarginalRayNormalPtr(_result, false);
}

#pragma implementation_key(1420)
inline ZOSAPI_Interfaces::ISolveChiefRayNormalPtr ZOSAPI_Interfaces::ISolveData::Get_S_ChiefRayNormal ( ) {
    struct ISolveChiefRayNormal * _result = 0;
    HRESULT _hr = get__S_ChiefRayNormal(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISolveChiefRayNormalPtr(_result, false);
}

#pragma implementation_key(1421)
inline ZOSAPI_Interfaces::ISolveAplanaticPtr ZOSAPI_Interfaces::ISolveData::Get_S_Aplanatic ( ) {
    struct ISolveAplanatic * _result = 0;
    HRESULT _hr = get__S_Aplanatic(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISolveAplanaticPtr(_result, false);
}

#pragma implementation_key(1422)
inline ZOSAPI_Interfaces::ISolveElementPowerPtr ZOSAPI_Interfaces::ISolveData::Get_S_ElementPower ( ) {
    struct ISolveElementPower * _result = 0;
    HRESULT _hr = get__S_ElementPower(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISolveElementPowerPtr(_result, false);
}

#pragma implementation_key(1423)
inline ZOSAPI_Interfaces::ISolveCocentricSurfacePtr ZOSAPI_Interfaces::ISolveData::Get_S_CocentricSurface ( ) {
    struct ISolveCocentricSurface * _result = 0;
    HRESULT _hr = get__S_CocentricSurface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISolveCocentricSurfacePtr(_result, false);
}

#pragma implementation_key(1424)
inline ZOSAPI_Interfaces::ISolveCocentricRadiusPtr ZOSAPI_Interfaces::ISolveData::Get_S_CocentricRadius ( ) {
    struct ISolveCocentricRadius * _result = 0;
    HRESULT _hr = get__S_CocentricRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISolveCocentricRadiusPtr(_result, false);
}

#pragma implementation_key(1425)
inline ZOSAPI_Interfaces::ISolveFNumberPtr ZOSAPI_Interfaces::ISolveData::Get_S_FNumber ( ) {
    struct ISolveFNumber * _result = 0;
    HRESULT _hr = get__S_FNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISolveFNumberPtr(_result, false);
}

#pragma implementation_key(1426)
inline ZOSAPI_Interfaces::ISolveChiefRayHeightPtr ZOSAPI_Interfaces::ISolveData::Get_S_ChiefRayHeight ( ) {
    struct ISolveChiefRayHeight * _result = 0;
    HRESULT _hr = get__S_ChiefRayHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISolveChiefRayHeightPtr(_result, false);
}

#pragma implementation_key(1427)
inline ZOSAPI_Interfaces::ISolveEdgeThicknessPtr ZOSAPI_Interfaces::ISolveData::Get_S_EdgeThickness ( ) {
    struct ISolveEdgeThickness * _result = 0;
    HRESULT _hr = get__S_EdgeThickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISolveEdgeThicknessPtr(_result, false);
}

#pragma implementation_key(1428)
inline ZOSAPI_Interfaces::ISolveOpticalPathDifferencePtr ZOSAPI_Interfaces::ISolveData::Get_S_OpticalPathDifference ( ) {
    struct ISolveOpticalPathDifference * _result = 0;
    HRESULT _hr = get__S_OpticalPathDifference(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISolveOpticalPathDifferencePtr(_result, false);
}

#pragma implementation_key(1429)
inline ZOSAPI_Interfaces::ISolvePositionPtr ZOSAPI_Interfaces::ISolveData::Get_S_Position ( ) {
    struct ISolvePosition * _result = 0;
    HRESULT _hr = get__S_Position(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISolvePositionPtr(_result, false);
}

#pragma implementation_key(1430)
inline ZOSAPI_Interfaces::ISolveCompensatorPtr ZOSAPI_Interfaces::ISolveData::Get_S_Compensator ( ) {
    struct ISolveCompensator * _result = 0;
    HRESULT _hr = get__S_Compensator(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISolveCompensatorPtr(_result, false);
}

#pragma implementation_key(1431)
inline ZOSAPI_Interfaces::ISolveCenterOfCurvaturePtr ZOSAPI_Interfaces::ISolveData::Get_S_CenterOfCurvature ( ) {
    struct ISolveCenterOfCurvature * _result = 0;
    HRESULT _hr = get__S_CenterOfCurvature(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISolveCenterOfCurvaturePtr(_result, false);
}

#pragma implementation_key(1432)
inline ZOSAPI_Interfaces::ISolvePupilPositionPtr ZOSAPI_Interfaces::ISolveData::Get_S_PupilPosition ( ) {
    struct ISolvePupilPosition * _result = 0;
    HRESULT _hr = get__S_PupilPosition(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISolvePupilPositionPtr(_result, false);
}

#pragma implementation_key(1433)
inline ZOSAPI_Interfaces::ISolveMaterialModelPtr ZOSAPI_Interfaces::ISolveData::Get_S_MaterialModel ( ) {
    struct ISolveMaterialModel * _result = 0;
    HRESULT _hr = get__S_MaterialModel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISolveMaterialModelPtr(_result, false);
}

#pragma implementation_key(1434)
inline ZOSAPI_Interfaces::ISolveMaterialSubstitutePtr ZOSAPI_Interfaces::ISolveData::Get_S_MaterialSubstitute ( ) {
    struct ISolveMaterialSubstitute * _result = 0;
    HRESULT _hr = get__S_MaterialSubstitute(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISolveMaterialSubstitutePtr(_result, false);
}

#pragma implementation_key(1435)
inline ZOSAPI_Interfaces::ISolveMaterialOffsetPtr ZOSAPI_Interfaces::ISolveData::Get_S_MaterialOffset ( ) {
    struct ISolveMaterialOffset * _result = 0;
    HRESULT _hr = get__S_MaterialOffset(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISolveMaterialOffsetPtr(_result, false);
}

#pragma implementation_key(1436)
inline ZOSAPI_Interfaces::ISolveAutomaticPtr ZOSAPI_Interfaces::ISolveData::Get_S_Automatic ( ) {
    struct ISolveAutomatic * _result = 0;
    HRESULT _hr = get__S_Automatic(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISolveAutomaticPtr(_result, false);
}

#pragma implementation_key(1437)
inline ZOSAPI_Interfaces::ISolveMaximumPtr ZOSAPI_Interfaces::ISolveData::Get_S_Maximum ( ) {
    struct ISolveMaximum * _result = 0;
    HRESULT _hr = get__S_Maximum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISolveMaximumPtr(_result, false);
}

#pragma implementation_key(1438)
inline ZOSAPI_Interfaces::ISolvePickupChiefRayPtr ZOSAPI_Interfaces::ISolveData::Get_S_PickupChiefRay ( ) {
    struct ISolvePickupChiefRay * _result = 0;
    HRESULT _hr = get__S_PickupChiefRay(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISolvePickupChiefRayPtr(_result, false);
}

#pragma implementation_key(1439)
inline ZOSAPI_Interfaces::ISolveObjectPickupPtr ZOSAPI_Interfaces::ISolveData::Get_S_ObjectPickup ( ) {
    struct ISolveObjectPickup * _result = 0;
    HRESULT _hr = get__S_ObjectPickup(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISolveObjectPickupPtr(_result, false);
}

#pragma implementation_key(1440)
inline ZOSAPI_Interfaces::ISolveConfigPickupPtr ZOSAPI_Interfaces::ISolveData::Get_S_ConfigPickup ( ) {
    struct ISolveConfigPickup * _result = 0;
    HRESULT _hr = get__S_ConfigPickup(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISolveConfigPickupPtr(_result, false);
}

#pragma implementation_key(1441)
inline ZOSAPI_Interfaces::ISolveThermalPickupPtr ZOSAPI_Interfaces::ISolveData::Get_S_ThermalPickup ( ) {
    struct ISolveThermalPickup * _result = 0;
    HRESULT _hr = get__S_ThermalPickup(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISolveThermalPickupPtr(_result, false);
}

//
// interface ISurfaceTypeSettings wrapper method implementations
//

#pragma implementation_key(1442)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISurfaceTypeSettings::GetIsValid ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsValid(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1443)
inline enum ZOSAPI_Interfaces::SurfaceType ZOSAPI_Interfaces::ISurfaceTypeSettings::GetType ( ) {
    enum SurfaceType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1444)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISurfaceTypeSettings::GetRequiresFile ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_RequiresFile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1445)
inline _bstr_t ZOSAPI_Interfaces::ISurfaceTypeSettings::GetfileName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_fileName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1446)
inline void ZOSAPI_Interfaces::ISurfaceTypeSettings::PutfileName ( _bstr_t pRetVal ) {
    HRESULT _hr = put_fileName(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1447)
inline SAFEARRAY * ZOSAPI_Interfaces::ISurfaceTypeSettings::GetFileNames ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_GetFileNames(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface ISurfaceBlackBoxLens wrapper method implementations
//

#pragma implementation_key(1448)
inline long ZOSAPI_Interfaces::ISurfaceBlackBoxLens::GetNumberOfAvailableBlackBoxLensFilenames ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfAvailableBlackBoxLensFilenames(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1449)
inline _bstr_t ZOSAPI_Interfaces::ISurfaceBlackBoxLens::GetBlackBoxLensFilenameAt ( long idx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetBlackBoxLensFilenameAt(idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1450)
inline _bstr_t ZOSAPI_Interfaces::ISurfaceBlackBoxLens::GetBlackBoxLensFilename ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BlackBoxLensFilename(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1451)
inline void ZOSAPI_Interfaces::ISurfaceBlackBoxLens::PutBlackBoxLensFilename ( _bstr_t pRetVal ) {
    HRESULT _hr = put_BlackBoxLensFilename(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ILDEDrawData wrapper method implementations
//

#pragma implementation_key(1452)
inline VARIANT_BOOL ZOSAPI_Interfaces::ILDEDrawData::GetHideRaysToThisSurface ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_HideRaysToThisSurface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1453)
inline void ZOSAPI_Interfaces::ILDEDrawData::PutHideRaysToThisSurface ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_HideRaysToThisSurface(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1454)
inline VARIANT_BOOL ZOSAPI_Interfaces::ILDEDrawData::GetSkipRaysToThisSurface ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SkipRaysToThisSurface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1455)
inline void ZOSAPI_Interfaces::ILDEDrawData::PutSkipRaysToThisSurface ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_SkipRaysToThisSurface(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1456)
inline VARIANT_BOOL ZOSAPI_Interfaces::ILDEDrawData::GetDoNotDrawThisSurface ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DoNotDrawThisSurface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1457)
inline void ZOSAPI_Interfaces::ILDEDrawData::PutDoNotDrawThisSurface ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_DoNotDrawThisSurface(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1458)
inline VARIANT_BOOL ZOSAPI_Interfaces::ILDEDrawData::GetDoNotDrawEdgesFromThisSurface ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DoNotDrawEdgesFromThisSurface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1459)
inline void ZOSAPI_Interfaces::ILDEDrawData::PutDoNotDrawEdgesFromThisSurface ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_DoNotDrawEdgesFromThisSurface(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1460)
inline VARIANT_BOOL ZOSAPI_Interfaces::ILDEDrawData::GetDrawLocalAxis ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DrawLocalAxis(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1461)
inline void ZOSAPI_Interfaces::ILDEDrawData::PutDrawLocalAxis ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_DrawLocalAxis(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1462)
inline enum ZOSAPI_Interfaces::SurfaceEdgeDraw ZOSAPI_Interfaces::ILDEDrawData::GetDrawEdgesAs ( ) {
    enum SurfaceEdgeDraw _result;
    HRESULT _hr = get_DrawEdgesAs(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1463)
inline void ZOSAPI_Interfaces::ILDEDrawData::PutDrawEdgesAs ( enum SurfaceEdgeDraw pRetVal ) {
    HRESULT _hr = put_DrawEdgesAs(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1464)
inline VARIANT_BOOL ZOSAPI_Interfaces::ILDEDrawData::GetHasMirrorSettings ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_HasMirrorSettings(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1465)
inline enum ZOSAPI_Interfaces::SubstrateType ZOSAPI_Interfaces::ILDEDrawData::GetMirrorSubstrate ( ) {
    enum SubstrateType _result;
    HRESULT _hr = get_MirrorSubstrate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1466)
inline void ZOSAPI_Interfaces::ILDEDrawData::PutMirrorSubstrate ( enum SubstrateType pRetVal ) {
    HRESULT _hr = put_MirrorSubstrate(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1467)
inline double ZOSAPI_Interfaces::ILDEDrawData::GetMirrorThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_MirrorThickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1468)
inline void ZOSAPI_Interfaces::ILDEDrawData::PutMirrorThickness ( double pRetVal ) {
    HRESULT _hr = put_MirrorThickness(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceApertureCircular wrapper method implementations
//

#pragma implementation_key(1469)
inline double ZOSAPI_Interfaces::ISurfaceApertureCircular::GetMinimumRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_MinimumRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1470)
inline void ZOSAPI_Interfaces::ISurfaceApertureCircular::PutMinimumRadius ( double pRetVal ) {
    HRESULT _hr = put_MinimumRadius(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1471)
inline double ZOSAPI_Interfaces::ISurfaceApertureCircular::GetMaximumRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_MaximumRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1472)
inline void ZOSAPI_Interfaces::ISurfaceApertureCircular::PutMaximumRadius ( double pRetVal ) {
    HRESULT _hr = put_MaximumRadius(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1473)
inline double ZOSAPI_Interfaces::ISurfaceApertureCircular::GetApertureXDecenter ( ) {
    double _result = 0;
    HRESULT _hr = get_ApertureXDecenter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1474)
inline void ZOSAPI_Interfaces::ISurfaceApertureCircular::PutApertureXDecenter ( double pRetVal ) {
    HRESULT _hr = put_ApertureXDecenter(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1475)
inline double ZOSAPI_Interfaces::ISurfaceApertureCircular::GetApertureYDecenter ( ) {
    double _result = 0;
    HRESULT _hr = get_ApertureYDecenter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1476)
inline void ZOSAPI_Interfaces::ISurfaceApertureCircular::PutApertureYDecenter ( double pRetVal ) {
    HRESULT _hr = put_ApertureYDecenter(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceApertureUser wrapper method implementations
//

#pragma implementation_key(1477)
inline double ZOSAPI_Interfaces::ISurfaceApertureUser::GetUDAScale ( ) {
    double _result = 0;
    HRESULT _hr = get_UDAScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1478)
inline void ZOSAPI_Interfaces::ISurfaceApertureUser::PutUDAScale ( double pRetVal ) {
    HRESULT _hr = put_UDAScale(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1479)
inline double ZOSAPI_Interfaces::ISurfaceApertureUser::GetApertureXDecenter ( ) {
    double _result = 0;
    HRESULT _hr = get_ApertureXDecenter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1480)
inline void ZOSAPI_Interfaces::ISurfaceApertureUser::PutApertureXDecenter ( double pRetVal ) {
    HRESULT _hr = put_ApertureXDecenter(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1481)
inline double ZOSAPI_Interfaces::ISurfaceApertureUser::GetApertureYDecenter ( ) {
    double _result = 0;
    HRESULT _hr = get_ApertureYDecenter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1482)
inline void ZOSAPI_Interfaces::ISurfaceApertureUser::PutApertureYDecenter ( double pRetVal ) {
    HRESULT _hr = put_ApertureYDecenter(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1483)
inline _bstr_t ZOSAPI_Interfaces::ISurfaceApertureUser::GetApertureFile ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ApertureFile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1484)
inline void ZOSAPI_Interfaces::ISurfaceApertureUser::PutApertureFile ( _bstr_t pRetVal ) {
    HRESULT _hr = put_ApertureFile(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1485)
inline SAFEARRAY * ZOSAPI_Interfaces::ISurfaceApertureUser::GetAvailableFiles ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_GetAvailableFiles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface ISurfaceApertureSpider wrapper method implementations
//

#pragma implementation_key(1486)
inline double ZOSAPI_Interfaces::ISurfaceApertureSpider::GetWidthOfArms ( ) {
    double _result = 0;
    HRESULT _hr = get_WidthOfArms(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1487)
inline void ZOSAPI_Interfaces::ISurfaceApertureSpider::PutWidthOfArms ( double pRetVal ) {
    HRESULT _hr = put_WidthOfArms(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1488)
inline long ZOSAPI_Interfaces::ISurfaceApertureSpider::GetNumberOfArms ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfArms(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1489)
inline void ZOSAPI_Interfaces::ISurfaceApertureSpider::PutNumberOfArms ( long pRetVal ) {
    HRESULT _hr = put_NumberOfArms(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1490)
inline double ZOSAPI_Interfaces::ISurfaceApertureSpider::GetApertureXDecenter ( ) {
    double _result = 0;
    HRESULT _hr = get_ApertureXDecenter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1491)
inline void ZOSAPI_Interfaces::ISurfaceApertureSpider::PutApertureXDecenter ( double pRetVal ) {
    HRESULT _hr = put_ApertureXDecenter(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1492)
inline double ZOSAPI_Interfaces::ISurfaceApertureSpider::GetApertureYDecenter ( ) {
    double _result = 0;
    HRESULT _hr = get_ApertureYDecenter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1493)
inline void ZOSAPI_Interfaces::ISurfaceApertureSpider::PutApertureYDecenter ( double pRetVal ) {
    HRESULT _hr = put_ApertureYDecenter(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceApertureRectangular wrapper method implementations
//

#pragma implementation_key(1494)
inline double ZOSAPI_Interfaces::ISurfaceApertureRectangular::GetXHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_XHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1495)
inline void ZOSAPI_Interfaces::ISurfaceApertureRectangular::PutXHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_XHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1496)
inline double ZOSAPI_Interfaces::ISurfaceApertureRectangular::GetYHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_YHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1497)
inline void ZOSAPI_Interfaces::ISurfaceApertureRectangular::PutYHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_YHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1498)
inline double ZOSAPI_Interfaces::ISurfaceApertureRectangular::GetApertureXDecenter ( ) {
    double _result = 0;
    HRESULT _hr = get_ApertureXDecenter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1499)
inline void ZOSAPI_Interfaces::ISurfaceApertureRectangular::PutApertureXDecenter ( double pRetVal ) {
    HRESULT _hr = put_ApertureXDecenter(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1500)
inline double ZOSAPI_Interfaces::ISurfaceApertureRectangular::GetApertureYDecenter ( ) {
    double _result = 0;
    HRESULT _hr = get_ApertureYDecenter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1501)
inline void ZOSAPI_Interfaces::ISurfaceApertureRectangular::PutApertureYDecenter ( double pRetVal ) {
    HRESULT _hr = put_ApertureYDecenter(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceApertureElliptical wrapper method implementations
//

#pragma implementation_key(1502)
inline double ZOSAPI_Interfaces::ISurfaceApertureElliptical::GetXHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_XHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1503)
inline void ZOSAPI_Interfaces::ISurfaceApertureElliptical::PutXHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_XHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1504)
inline double ZOSAPI_Interfaces::ISurfaceApertureElliptical::GetYHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_YHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1505)
inline void ZOSAPI_Interfaces::ISurfaceApertureElliptical::PutYHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_YHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1506)
inline double ZOSAPI_Interfaces::ISurfaceApertureElliptical::GetApertureXDecenter ( ) {
    double _result = 0;
    HRESULT _hr = get_ApertureXDecenter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1507)
inline void ZOSAPI_Interfaces::ISurfaceApertureElliptical::PutApertureXDecenter ( double pRetVal ) {
    HRESULT _hr = put_ApertureXDecenter(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1508)
inline double ZOSAPI_Interfaces::ISurfaceApertureElliptical::GetApertureYDecenter ( ) {
    double _result = 0;
    HRESULT _hr = get_ApertureYDecenter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1509)
inline void ZOSAPI_Interfaces::ISurfaceApertureElliptical::PutApertureYDecenter ( double pRetVal ) {
    HRESULT _hr = put_ApertureYDecenter(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceApertureType wrapper method implementations
//

#pragma implementation_key(1510)
inline enum ZOSAPI_Interfaces::SurfaceApertureTypes ZOSAPI_Interfaces::ISurfaceApertureType::GetType ( ) {
    enum SurfaceApertureTypes _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1511)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISurfaceApertureType::GetIsReadOnly ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsReadOnly(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1512)
inline ZOSAPI_Interfaces::ISurfaceApertureNonePtr ZOSAPI_Interfaces::ISurfaceApertureType::Get_S_None ( ) {
    struct ISurfaceApertureNone * _result = 0;
    HRESULT _hr = get__S_None(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISurfaceApertureNonePtr(_result, false);
}

#pragma implementation_key(1513)
inline ZOSAPI_Interfaces::ISurfaceApertureCircularPtr ZOSAPI_Interfaces::ISurfaceApertureType::Get_S_CircularAperture ( ) {
    struct ISurfaceApertureCircular * _result = 0;
    HRESULT _hr = get__S_CircularAperture(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISurfaceApertureCircularPtr(_result, false);
}

#pragma implementation_key(1514)
inline ZOSAPI_Interfaces::ISurfaceApertureCircularPtr ZOSAPI_Interfaces::ISurfaceApertureType::Get_S_CircularObscuration ( ) {
    struct ISurfaceApertureCircular * _result = 0;
    HRESULT _hr = get__S_CircularObscuration(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISurfaceApertureCircularPtr(_result, false);
}

#pragma implementation_key(1515)
inline ZOSAPI_Interfaces::ISurfaceApertureSpiderPtr ZOSAPI_Interfaces::ISurfaceApertureType::Get_S_Spider ( ) {
    struct ISurfaceApertureSpider * _result = 0;
    HRESULT _hr = get__S_Spider(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISurfaceApertureSpiderPtr(_result, false);
}

#pragma implementation_key(1516)
inline ZOSAPI_Interfaces::ISurfaceApertureRectangularPtr ZOSAPI_Interfaces::ISurfaceApertureType::Get_S_RectangularAperture ( ) {
    struct ISurfaceApertureRectangular * _result = 0;
    HRESULT _hr = get__S_RectangularAperture(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISurfaceApertureRectangularPtr(_result, false);
}

#pragma implementation_key(1517)
inline ZOSAPI_Interfaces::ISurfaceApertureRectangularPtr ZOSAPI_Interfaces::ISurfaceApertureType::Get_S_RectangularObscuration ( ) {
    struct ISurfaceApertureRectangular * _result = 0;
    HRESULT _hr = get__S_RectangularObscuration(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISurfaceApertureRectangularPtr(_result, false);
}

#pragma implementation_key(1518)
inline ZOSAPI_Interfaces::ISurfaceApertureEllipticalPtr ZOSAPI_Interfaces::ISurfaceApertureType::Get_S_EllipticalAperture ( ) {
    struct ISurfaceApertureElliptical * _result = 0;
    HRESULT _hr = get__S_EllipticalAperture(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISurfaceApertureEllipticalPtr(_result, false);
}

#pragma implementation_key(1519)
inline ZOSAPI_Interfaces::ISurfaceApertureEllipticalPtr ZOSAPI_Interfaces::ISurfaceApertureType::Get_S_EllipticalObscuration ( ) {
    struct ISurfaceApertureElliptical * _result = 0;
    HRESULT _hr = get__S_EllipticalObscuration(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISurfaceApertureEllipticalPtr(_result, false);
}

#pragma implementation_key(1520)
inline ZOSAPI_Interfaces::ISurfaceApertureUserPtr ZOSAPI_Interfaces::ISurfaceApertureType::Get_S_UserAperture ( ) {
    struct ISurfaceApertureUser * _result = 0;
    HRESULT _hr = get__S_UserAperture(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISurfaceApertureUserPtr(_result, false);
}

#pragma implementation_key(1521)
inline ZOSAPI_Interfaces::ISurfaceApertureUserPtr ZOSAPI_Interfaces::ISurfaceApertureType::Get_S_UserObscuration ( ) {
    struct ISurfaceApertureUser * _result = 0;
    HRESULT _hr = get__S_UserObscuration(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISurfaceApertureUserPtr(_result, false);
}

#pragma implementation_key(1522)
inline ZOSAPI_Interfaces::ISurfaceApertureFloatingPtr ZOSAPI_Interfaces::ISurfaceApertureType::Get_S_FloatingAperture ( ) {
    struct ISurfaceApertureFloating * _result = 0;
    HRESULT _hr = get__S_FloatingAperture(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISurfaceApertureFloatingPtr(_result, false);
}

//
// interface ILDEApertureData wrapper method implementations
//

#pragma implementation_key(1523)
inline long ZOSAPI_Interfaces::ILDEApertureData::GetPickupFrom ( ) {
    long _result = 0;
    HRESULT _hr = get_PickupFrom(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1524)
inline void ZOSAPI_Interfaces::ILDEApertureData::PutPickupFrom ( long pRetVal ) {
    HRESULT _hr = put_PickupFrom(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1525)
inline HRESULT ZOSAPI_Interfaces::ILDEApertureData::SetPickupNone ( ) {
    HRESULT _hr = raw_SetPickupNone();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1526)
inline VARIANT_BOOL ZOSAPI_Interfaces::ILDEApertureData::GetIsPickedUp ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsPickedUp(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1527)
inline enum ZOSAPI_Interfaces::SurfaceApertureTypes ZOSAPI_Interfaces::ILDEApertureData::GetCurrentType ( ) {
    enum SurfaceApertureTypes _result;
    HRESULT _hr = get_CurrentType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1528)
inline ZOSAPI_Interfaces::ISurfaceApertureTypePtr ZOSAPI_Interfaces::ILDEApertureData::GetCurrentTypeSettings ( ) {
    struct ISurfaceApertureType * _result = 0;
    HRESULT _hr = get_CurrentTypeSettings(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISurfaceApertureTypePtr(_result, false);
}

#pragma implementation_key(1529)
inline ZOSAPI_Interfaces::ISurfaceApertureTypePtr ZOSAPI_Interfaces::ILDEApertureData::CreateApertureTypeSettings ( enum SurfaceApertureTypes Type ) {
    struct ISurfaceApertureType * _result = 0;
    HRESULT _hr = raw_CreateApertureTypeSettings(Type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISurfaceApertureTypePtr(_result, false);
}

#pragma implementation_key(1530)
inline VARIANT_BOOL ZOSAPI_Interfaces::ILDEApertureData::ChangeApertureTypeSettings ( struct ISurfaceApertureType * settings ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_ChangeApertureTypeSettings(settings, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1531)
inline VARIANT_BOOL ZOSAPI_Interfaces::ILDEApertureData::GetDisableClearSemiDiameterMarginsForThisSurface ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisableClearSemiDiameterMarginsForThisSurface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1532)
inline void ZOSAPI_Interfaces::ILDEApertureData::PutDisableClearSemiDiameterMarginsForThisSurface ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_DisableClearSemiDiameterMarginsForThisSurface(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceScatteringLambertian wrapper method implementations
//

#pragma implementation_key(1533)
inline double ZOSAPI_Interfaces::ISurfaceScatteringLambertian::GetScatterFraction ( ) {
    double _result = 0;
    HRESULT _hr = get_ScatterFraction(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1534)
inline void ZOSAPI_Interfaces::ISurfaceScatteringLambertian::PutScatterFraction ( double pRetVal ) {
    HRESULT _hr = put_ScatterFraction(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceScatteringGaussian wrapper method implementations
//

#pragma implementation_key(1535)
inline double ZOSAPI_Interfaces::ISurfaceScatteringGaussian::GetScatterFraction ( ) {
    double _result = 0;
    HRESULT _hr = get_ScatterFraction(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1536)
inline void ZOSAPI_Interfaces::ISurfaceScatteringGaussian::PutScatterFraction ( double pRetVal ) {
    HRESULT _hr = put_ScatterFraction(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1537)
inline double ZOSAPI_Interfaces::ISurfaceScatteringGaussian::GetSigma ( ) {
    double _result = 0;
    HRESULT _hr = get_Sigma(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1538)
inline void ZOSAPI_Interfaces::ISurfaceScatteringGaussian::PutSigma ( double pRetVal ) {
    HRESULT _hr = put_Sigma(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceScatteringABg wrapper method implementations
//

#pragma implementation_key(1539)
inline _bstr_t ZOSAPI_Interfaces::ISurfaceScatteringABg::GetABgName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ABgName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1540)
inline void ZOSAPI_Interfaces::ISurfaceScatteringABg::PutABgName ( _bstr_t pRetVal ) {
    HRESULT _hr = put_ABgName(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1541)
inline SAFEARRAY * ZOSAPI_Interfaces::ISurfaceScatteringABg::GetAvailableABgNames ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_GetAvailableABgNames(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface ISurfaceScatteringABgFile wrapper method implementations
//

#pragma implementation_key(1542)
inline _bstr_t ZOSAPI_Interfaces::ISurfaceScatteringABgFile::GetfileName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_fileName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1543)
inline void ZOSAPI_Interfaces::ISurfaceScatteringABgFile::PutfileName ( _bstr_t pRetVal ) {
    HRESULT _hr = put_fileName(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1544)
inline SAFEARRAY * ZOSAPI_Interfaces::ISurfaceScatteringABgFile::GetAvailableFileNames ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_GetAvailableFileNames(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface ISurfaceScatteringBSDF wrapper method implementations
//

#pragma implementation_key(1545)
inline _bstr_t ZOSAPI_Interfaces::ISurfaceScatteringBSDF::GetfileName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_fileName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1546)
inline void ZOSAPI_Interfaces::ISurfaceScatteringBSDF::PutfileName ( _bstr_t pRetVal ) {
    HRESULT _hr = put_fileName(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1547)
inline SAFEARRAY * ZOSAPI_Interfaces::ISurfaceScatteringBSDF::GetAvailableFileNames ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_GetAvailableFileNames(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1548)
inline double ZOSAPI_Interfaces::ISurfaceScatteringBSDF::GetScatterFraction ( ) {
    double _result = 0;
    HRESULT _hr = get_ScatterFraction(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1549)
inline void ZOSAPI_Interfaces::ISurfaceScatteringBSDF::PutScatterFraction ( double pRetVal ) {
    HRESULT _hr = put_ScatterFraction(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1550)
inline double ZOSAPI_Interfaces::ISurfaceScatteringBSDF::GetAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_Angle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1551)
inline void ZOSAPI_Interfaces::ISurfaceScatteringBSDF::PutAngle ( double pRetVal ) {
    HRESULT _hr = put_Angle(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceScatteringUser wrapper method implementations
//

#pragma implementation_key(1552)
inline _bstr_t ZOSAPI_Interfaces::ISurfaceScatteringUser::GetDLLName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DLLName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1553)
inline void ZOSAPI_Interfaces::ISurfaceScatteringUser::PutDLLName ( _bstr_t pRetVal ) {
    HRESULT _hr = put_DLLName(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1554)
inline SAFEARRAY * ZOSAPI_Interfaces::ISurfaceScatteringUser::GetAvailableDLLNames ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_GetAvailableDLLNames(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1555)
inline long ZOSAPI_Interfaces::ISurfaceScatteringUser::GetNumberOfParameters ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfParameters(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1556)
inline _bstr_t ZOSAPI_Interfaces::ISurfaceScatteringUser::GetParameterName ( long paramIdx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetParameterName(paramIdx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1557)
inline double ZOSAPI_Interfaces::ISurfaceScatteringUser::GetParameterValue ( long paramIdx ) {
    double _result = 0;
    HRESULT _hr = raw_GetParameterValue(paramIdx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1558)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISurfaceScatteringUser::SetParameterValue ( long paramIdx, double Value ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_SetParameterValue(paramIdx, Value, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface ISurfaceScatteringCatalog wrapper method implementations
//

#pragma implementation_key(1559)
inline double ZOSAPI_Interfaces::ISurfaceScatteringCatalog::GetAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_Angle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1560)
inline void ZOSAPI_Interfaces::ISurfaceScatteringCatalog::PutAngle ( double pRetVal ) {
    HRESULT _hr = put_Angle(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1561)
inline _bstr_t ZOSAPI_Interfaces::ISurfaceScatteringCatalog::GetFile ( ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetFile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1562)
inline enum ZOSAPI_Interfaces::ReflectTransmitCode ZOSAPI_Interfaces::ISurfaceScatteringCatalog::SetFile ( _bstr_t File ) {
    enum ReflectTransmitCode _result;
    HRESULT _hr = raw_SetFile(File, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1563)
inline SAFEARRAY * ZOSAPI_Interfaces::ISurfaceScatteringCatalog::GetAvailableFiles ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_GetAvailableFiles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1564)
inline enum ZOSAPI_Interfaces::SampleSides ZOSAPI_Interfaces::ISurfaceScatteringCatalog::GetSampleSide ( ) {
    enum SampleSides _result;
    HRESULT _hr = get_SampleSide(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1565)
inline void ZOSAPI_Interfaces::ISurfaceScatteringCatalog::PutSampleSide ( enum SampleSides pRetVal ) {
    HRESULT _hr = put_SampleSide(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1566)
inline SAFEARRAY * ZOSAPI_Interfaces::ISurfaceScatteringCatalog::GetSampleSides ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_GetSampleSides(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1567)
inline enum ZOSAPI_Interfaces::Samplings ZOSAPI_Interfaces::ISurfaceScatteringCatalog::GetSampling ( ) {
    enum Samplings _result;
    HRESULT _hr = get_Sampling(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1568)
inline void ZOSAPI_Interfaces::ISurfaceScatteringCatalog::PutSampling ( enum Samplings pRetVal ) {
    HRESULT _hr = put_Sampling(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceScatteringType wrapper method implementations
//

#pragma implementation_key(1569)
inline enum ZOSAPI_Interfaces::SurfaceScatteringTypes ZOSAPI_Interfaces::ISurfaceScatteringType::GetType ( ) {
    enum SurfaceScatteringTypes _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1570)
inline ZOSAPI_Interfaces::ISurfaceScatteringNonePtr ZOSAPI_Interfaces::ISurfaceScatteringType::Get_S_None ( ) {
    struct ISurfaceScatteringNone * _result = 0;
    HRESULT _hr = get__S_None(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISurfaceScatteringNonePtr(_result, false);
}

#pragma implementation_key(1571)
inline ZOSAPI_Interfaces::ISurfaceScatteringLambertianPtr ZOSAPI_Interfaces::ISurfaceScatteringType::Get_S_Lambertian ( ) {
    struct ISurfaceScatteringLambertian * _result = 0;
    HRESULT _hr = get__S_Lambertian(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISurfaceScatteringLambertianPtr(_result, false);
}

#pragma implementation_key(1572)
inline ZOSAPI_Interfaces::ISurfaceScatteringGaussianPtr ZOSAPI_Interfaces::ISurfaceScatteringType::Get_S_Gaussian ( ) {
    struct ISurfaceScatteringGaussian * _result = 0;
    HRESULT _hr = get__S_Gaussian(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISurfaceScatteringGaussianPtr(_result, false);
}

#pragma implementation_key(1573)
inline ZOSAPI_Interfaces::ISurfaceScatteringABgPtr ZOSAPI_Interfaces::ISurfaceScatteringType::Get_S_ABg ( ) {
    struct ISurfaceScatteringABg * _result = 0;
    HRESULT _hr = get__S_ABg(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISurfaceScatteringABgPtr(_result, false);
}

#pragma implementation_key(1574)
inline ZOSAPI_Interfaces::ISurfaceScatteringABgFilePtr ZOSAPI_Interfaces::ISurfaceScatteringType::Get_S_ABgFile ( ) {
    struct ISurfaceScatteringABgFile * _result = 0;
    HRESULT _hr = get__S_ABgFile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISurfaceScatteringABgFilePtr(_result, false);
}

#pragma implementation_key(1575)
inline ZOSAPI_Interfaces::ISurfaceScatteringBSDFPtr ZOSAPI_Interfaces::ISurfaceScatteringType::Get_S_BSDF ( ) {
    struct ISurfaceScatteringBSDF * _result = 0;
    HRESULT _hr = get__S_BSDF(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISurfaceScatteringBSDFPtr(_result, false);
}

#pragma implementation_key(1576)
inline ZOSAPI_Interfaces::ISurfaceScatteringUserPtr ZOSAPI_Interfaces::ISurfaceScatteringType::Get_S_User ( ) {
    struct ISurfaceScatteringUser * _result = 0;
    HRESULT _hr = get__S_User(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISurfaceScatteringUserPtr(_result, false);
}

#pragma implementation_key(1577)
inline ZOSAPI_Interfaces::ISurfaceScatteringCatalogPtr ZOSAPI_Interfaces::ISurfaceScatteringType::Get_S_Catalog ( ) {
    struct ISurfaceScatteringCatalog * _result = 0;
    HRESULT _hr = get__S_Catalog(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISurfaceScatteringCatalogPtr(_result, false);
}

//
// interface ILDEScatteringData wrapper method implementations
//

#pragma implementation_key(1578)
inline enum ZOSAPI_Interfaces::SurfaceScatteringTypes ZOSAPI_Interfaces::ILDEScatteringData::GetCurrentType ( ) {
    enum SurfaceScatteringTypes _result;
    HRESULT _hr = get_CurrentType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1579)
inline ZOSAPI_Interfaces::ISurfaceScatteringTypePtr ZOSAPI_Interfaces::ILDEScatteringData::GetCurrentTypeSettings ( ) {
    struct ISurfaceScatteringType * _result = 0;
    HRESULT _hr = get_CurrentTypeSettings(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISurfaceScatteringTypePtr(_result, false);
}

#pragma implementation_key(1580)
inline ZOSAPI_Interfaces::ISurfaceScatteringTypePtr ZOSAPI_Interfaces::ILDEScatteringData::CreateScatteringTypeSettings ( enum SurfaceScatteringTypes Type ) {
    struct ISurfaceScatteringType * _result = 0;
    HRESULT _hr = raw_CreateScatteringTypeSettings(Type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISurfaceScatteringTypePtr(_result, false);
}

#pragma implementation_key(1581)
inline VARIANT_BOOL ZOSAPI_Interfaces::ILDEScatteringData::ChangeScatteringTypeSettings ( struct ISurfaceScatteringType * settings ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_ChangeScatteringTypeSettings(settings, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface ILDETiltDecenterData wrapper method implementations
//

#pragma implementation_key(1582)
inline enum ZOSAPI_Interfaces::TiltDecenterOrderType ZOSAPI_Interfaces::ILDETiltDecenterData::GetBeforeSurfaceOrder ( ) {
    enum TiltDecenterOrderType _result;
    HRESULT _hr = get_BeforeSurfaceOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1583)
inline void ZOSAPI_Interfaces::ILDETiltDecenterData::PutBeforeSurfaceOrder ( enum TiltDecenterOrderType pRetVal ) {
    HRESULT _hr = put_BeforeSurfaceOrder(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1584)
inline double ZOSAPI_Interfaces::ILDETiltDecenterData::GetBeforeSurfaceDecenterX ( ) {
    double _result = 0;
    HRESULT _hr = get_BeforeSurfaceDecenterX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1585)
inline void ZOSAPI_Interfaces::ILDETiltDecenterData::PutBeforeSurfaceDecenterX ( double pRetVal ) {
    HRESULT _hr = put_BeforeSurfaceDecenterX(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1586)
inline double ZOSAPI_Interfaces::ILDETiltDecenterData::GetBeforeSurfaceDecenterY ( ) {
    double _result = 0;
    HRESULT _hr = get_BeforeSurfaceDecenterY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1587)
inline void ZOSAPI_Interfaces::ILDETiltDecenterData::PutBeforeSurfaceDecenterY ( double pRetVal ) {
    HRESULT _hr = put_BeforeSurfaceDecenterY(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1588)
inline double ZOSAPI_Interfaces::ILDETiltDecenterData::GetBeforeSurfaceTiltX ( ) {
    double _result = 0;
    HRESULT _hr = get_BeforeSurfaceTiltX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1589)
inline void ZOSAPI_Interfaces::ILDETiltDecenterData::PutBeforeSurfaceTiltX ( double pRetVal ) {
    HRESULT _hr = put_BeforeSurfaceTiltX(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1590)
inline double ZOSAPI_Interfaces::ILDETiltDecenterData::GetBeforeSurfaceTiltY ( ) {
    double _result = 0;
    HRESULT _hr = get_BeforeSurfaceTiltY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1591)
inline void ZOSAPI_Interfaces::ILDETiltDecenterData::PutBeforeSurfaceTiltY ( double pRetVal ) {
    HRESULT _hr = put_BeforeSurfaceTiltY(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1592)
inline double ZOSAPI_Interfaces::ILDETiltDecenterData::GetBeforeSurfaceTiltZ ( ) {
    double _result = 0;
    HRESULT _hr = get_BeforeSurfaceTiltZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1593)
inline void ZOSAPI_Interfaces::ILDETiltDecenterData::PutBeforeSurfaceTiltZ ( double pRetVal ) {
    HRESULT _hr = put_BeforeSurfaceTiltZ(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1594)
inline enum ZOSAPI_Interfaces::TiltDecenterPickupType ZOSAPI_Interfaces::ILDETiltDecenterData::GetAfterSurfaceMode ( ) {
    enum TiltDecenterPickupType _result;
    HRESULT _hr = get_AfterSurfaceMode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1595)
inline long ZOSAPI_Interfaces::ILDETiltDecenterData::GetAfterSurfaceModeSurface ( ) {
    long _result = 0;
    HRESULT _hr = get_AfterSurfaceModeSurface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1596)
inline VARIANT_BOOL ZOSAPI_Interfaces::ILDETiltDecenterData::GetAfterSurfaceModeSurfaceIsThis ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AfterSurfaceModeSurfaceIsThis(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1597)
inline HRESULT ZOSAPI_Interfaces::ILDETiltDecenterData::SetAfterSurfaceModeExplicit ( ) {
    HRESULT _hr = raw_SetAfterSurfaceModeExplicit();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1598)
inline VARIANT_BOOL ZOSAPI_Interfaces::ILDETiltDecenterData::SetAfterSurfaceModePickup ( long FromSurface ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_SetAfterSurfaceModePickup(FromSurface, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1599)
inline VARIANT_BOOL ZOSAPI_Interfaces::ILDETiltDecenterData::SetAfterSurfaceModeReverse ( long FromSurface ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_SetAfterSurfaceModeReverse(FromSurface, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1600)
inline VARIANT_BOOL ZOSAPI_Interfaces::ILDETiltDecenterData::SetAfterSurfaceModePickupThis ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_SetAfterSurfaceModePickupThis(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1601)
inline VARIANT_BOOL ZOSAPI_Interfaces::ILDETiltDecenterData::SetAfterSurfaceModeReverseThis ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_SetAfterSurfaceModeReverseThis(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1602)
inline enum ZOSAPI_Interfaces::TiltDecenterOrderType ZOSAPI_Interfaces::ILDETiltDecenterData::GetAfterSurfaceOrder ( ) {
    enum TiltDecenterOrderType _result;
    HRESULT _hr = get_AfterSurfaceOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1603)
inline void ZOSAPI_Interfaces::ILDETiltDecenterData::PutAfterSurfaceOrder ( enum TiltDecenterOrderType pRetVal ) {
    HRESULT _hr = put_AfterSurfaceOrder(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1604)
inline double ZOSAPI_Interfaces::ILDETiltDecenterData::GetAfterSurfaceDecenterX ( ) {
    double _result = 0;
    HRESULT _hr = get_AfterSurfaceDecenterX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1605)
inline void ZOSAPI_Interfaces::ILDETiltDecenterData::PutAfterSurfaceDecenterX ( double pRetVal ) {
    HRESULT _hr = put_AfterSurfaceDecenterX(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1606)
inline double ZOSAPI_Interfaces::ILDETiltDecenterData::GetAfterSurfaceDecenterY ( ) {
    double _result = 0;
    HRESULT _hr = get_AfterSurfaceDecenterY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1607)
inline void ZOSAPI_Interfaces::ILDETiltDecenterData::PutAfterSurfaceDecenterY ( double pRetVal ) {
    HRESULT _hr = put_AfterSurfaceDecenterY(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1608)
inline double ZOSAPI_Interfaces::ILDETiltDecenterData::GetAfterSurfaceTiltX ( ) {
    double _result = 0;
    HRESULT _hr = get_AfterSurfaceTiltX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1609)
inline void ZOSAPI_Interfaces::ILDETiltDecenterData::PutAfterSurfaceTiltX ( double pRetVal ) {
    HRESULT _hr = put_AfterSurfaceTiltX(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1610)
inline double ZOSAPI_Interfaces::ILDETiltDecenterData::GetAfterSurfaceTiltY ( ) {
    double _result = 0;
    HRESULT _hr = get_AfterSurfaceTiltY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1611)
inline void ZOSAPI_Interfaces::ILDETiltDecenterData::PutAfterSurfaceTiltY ( double pRetVal ) {
    HRESULT _hr = put_AfterSurfaceTiltY(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1612)
inline double ZOSAPI_Interfaces::ILDETiltDecenterData::GetAfterSurfaceTiltZ ( ) {
    double _result = 0;
    HRESULT _hr = get_AfterSurfaceTiltZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1613)
inline void ZOSAPI_Interfaces::ILDETiltDecenterData::PutAfterSurfaceTiltZ ( double pRetVal ) {
    HRESULT _hr = put_AfterSurfaceTiltZ(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1614)
inline VARIANT_BOOL ZOSAPI_Interfaces::ILDETiltDecenterData::GetBeforeAfterSurfaceEnabled ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_BeforeAfterSurfaceEnabled(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1615)
inline VARIANT_BOOL ZOSAPI_Interfaces::ILDETiltDecenterData::GetCoordinateReturnEnabled ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_CoordinateReturnEnabled(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1616)
inline enum ZOSAPI_Interfaces::CoordinateReturnType ZOSAPI_Interfaces::ILDETiltDecenterData::GetCoordinateReturn ( ) {
    enum CoordinateReturnType _result;
    HRESULT _hr = get_CoordinateReturn(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1617)
inline void ZOSAPI_Interfaces::ILDETiltDecenterData::PutCoordinateReturn ( enum CoordinateReturnType pRetVal ) {
    HRESULT _hr = put_CoordinateReturn(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1618)
inline long ZOSAPI_Interfaces::ILDETiltDecenterData::GetCoordinateReturnToSurface ( ) {
    long _result = 0;
    HRESULT _hr = get_CoordinateReturnToSurface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1619)
inline void ZOSAPI_Interfaces::ILDETiltDecenterData::PutCoordinateReturnToSurface ( long pRetVal ) {
    HRESULT _hr = put_CoordinateReturnToSurface(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ILDEPhysicalOpticsData wrapper method implementations
//

#pragma implementation_key(1620)
inline VARIANT_BOOL ZOSAPI_Interfaces::ILDEPhysicalOpticsData::GetUseRaysToPropagateToNextSurface ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseRaysToPropagateToNextSurface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1621)
inline void ZOSAPI_Interfaces::ILDEPhysicalOpticsData::PutUseRaysToPropagateToNextSurface ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UseRaysToPropagateToNextSurface(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1622)
inline VARIANT_BOOL ZOSAPI_Interfaces::ILDEPhysicalOpticsData::GetDoNotRescaleBeamSizeUsingRayData ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DoNotRescaleBeamSizeUsingRayData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1623)
inline void ZOSAPI_Interfaces::ILDEPhysicalOpticsData::PutDoNotRescaleBeamSizeUsingRayData ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_DoNotRescaleBeamSizeUsingRayData(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1624)
inline VARIANT_BOOL ZOSAPI_Interfaces::ILDEPhysicalOpticsData::GetUseAngularSpectrumPropagator ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseAngularSpectrumPropagator(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1625)
inline void ZOSAPI_Interfaces::ILDEPhysicalOpticsData::PutUseAngularSpectrumPropagator ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UseAngularSpectrumPropagator(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1626)
inline VARIANT_BOOL ZOSAPI_Interfaces::ILDEPhysicalOpticsData::GetDrawThisLensOnShadedModel ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DrawThisLensOnShadedModel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1627)
inline void ZOSAPI_Interfaces::ILDEPhysicalOpticsData::PutDrawThisLensOnShadedModel ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_DrawThisLensOnShadedModel(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1628)
inline VARIANT_BOOL ZOSAPI_Interfaces::ILDEPhysicalOpticsData::GetReComputePilotBeamParameters ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ReComputePilotBeamParameters(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1629)
inline void ZOSAPI_Interfaces::ILDEPhysicalOpticsData::PutReComputePilotBeamParameters ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_ReComputePilotBeamParameters(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1630)
inline VARIANT_BOOL ZOSAPI_Interfaces::ILDEPhysicalOpticsData::GetUseXaxisReference ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseXaxisReference(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1631)
inline void ZOSAPI_Interfaces::ILDEPhysicalOpticsData::PutUseXaxisReference ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UseXaxisReference(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1632)
inline VARIANT_BOOL ZOSAPI_Interfaces::ILDEPhysicalOpticsData::GetResampleAfterRefraction ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ResampleAfterRefraction(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1633)
inline void ZOSAPI_Interfaces::ILDEPhysicalOpticsData::PutResampleAfterRefraction ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_ResampleAfterRefraction(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1634)
inline VARIANT_BOOL ZOSAPI_Interfaces::ILDEPhysicalOpticsData::GetAutoResample ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AutoResample(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1635)
inline void ZOSAPI_Interfaces::ILDEPhysicalOpticsData::PutAutoResample ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_AutoResample(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1636)
inline enum ZOSAPI_Interfaces::XYSampling ZOSAPI_Interfaces::ILDEPhysicalOpticsData::GetXSampling ( ) {
    enum XYSampling _result;
    HRESULT _hr = get_XSampling(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1637)
inline void ZOSAPI_Interfaces::ILDEPhysicalOpticsData::PutXSampling ( enum XYSampling pRetVal ) {
    HRESULT _hr = put_XSampling(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1638)
inline enum ZOSAPI_Interfaces::XYSampling ZOSAPI_Interfaces::ILDEPhysicalOpticsData::GetYSampling ( ) {
    enum XYSampling _result;
    HRESULT _hr = get_YSampling(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1639)
inline void ZOSAPI_Interfaces::ILDEPhysicalOpticsData::PutYSampling ( enum XYSampling pRetVal ) {
    HRESULT _hr = put_YSampling(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1640)
inline double ZOSAPI_Interfaces::ILDEPhysicalOpticsData::GetXWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_XWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1641)
inline void ZOSAPI_Interfaces::ILDEPhysicalOpticsData::PutXWidth ( double pRetVal ) {
    HRESULT _hr = put_XWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1642)
inline double ZOSAPI_Interfaces::ILDEPhysicalOpticsData::GetYWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_YWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1643)
inline void ZOSAPI_Interfaces::ILDEPhysicalOpticsData::PutYWidth ( double pRetVal ) {
    HRESULT _hr = put_YWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1644)
inline enum ZOSAPI_Interfaces::PilotRadiusMode ZOSAPI_Interfaces::ILDEPhysicalOpticsData::GetOutputPilotRadius ( ) {
    enum PilotRadiusMode _result;
    HRESULT _hr = get_OutputPilotRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1645)
inline void ZOSAPI_Interfaces::ILDEPhysicalOpticsData::PutOutputPilotRadius ( enum PilotRadiusMode pRetVal ) {
    HRESULT _hr = put_OutputPilotRadius(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1646)
inline double ZOSAPI_Interfaces::ILDEPhysicalOpticsData::GetXRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_XRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1647)
inline void ZOSAPI_Interfaces::ILDEPhysicalOpticsData::PutXRadius ( double pRetVal ) {
    HRESULT _hr = put_XRadius(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1648)
inline double ZOSAPI_Interfaces::ILDEPhysicalOpticsData::GetYRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_YRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1649)
inline void ZOSAPI_Interfaces::ILDEPhysicalOpticsData::PutYRadius ( double pRetVal ) {
    HRESULT _hr = put_YRadius(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ILDECoatingSettings wrapper method implementations
//

#pragma implementation_key(1650)
inline long ZOSAPI_Interfaces::ILDECoatingSettings::GetLayer ( ) {
    long _result = 0;
    HRESULT _hr = get_Layer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1651)
inline double ZOSAPI_Interfaces::ILDECoatingSettings::GetThicknessMultiplier ( ) {
    double _result = 0;
    HRESULT _hr = get_ThicknessMultiplier(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1652)
inline void ZOSAPI_Interfaces::ILDECoatingSettings::PutThicknessMultiplier ( double pRetVal ) {
    HRESULT _hr = put_ThicknessMultiplier(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1653)
inline enum ZOSAPI_Interfaces::CoatingStatusType ZOSAPI_Interfaces::ILDECoatingSettings::GetThicknessStatus ( ) {
    enum CoatingStatusType _result;
    HRESULT _hr = get_ThicknessStatus(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1654)
inline long ZOSAPI_Interfaces::ILDECoatingSettings::GetThicknessPickupFrom ( ) {
    long _result = 0;
    HRESULT _hr = get_ThicknessPickupFrom(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1655)
inline HRESULT ZOSAPI_Interfaces::ILDECoatingSettings::SetThicknessStatusFixed ( ) {
    HRESULT _hr = raw_SetThicknessStatusFixed();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1656)
inline HRESULT ZOSAPI_Interfaces::ILDECoatingSettings::SetThicknessStatusVariable ( ) {
    HRESULT _hr = raw_SetThicknessStatusVariable();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1657)
inline VARIANT_BOOL ZOSAPI_Interfaces::ILDECoatingSettings::SetThicknessStatusPickup ( long fromLayer ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_SetThicknessStatusPickup(fromLayer, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1658)
inline double ZOSAPI_Interfaces::ILDECoatingSettings::GetIndexOffset ( ) {
    double _result = 0;
    HRESULT _hr = get_IndexOffset(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1659)
inline void ZOSAPI_Interfaces::ILDECoatingSettings::PutIndexOffset ( double pRetVal ) {
    HRESULT _hr = put_IndexOffset(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1660)
inline enum ZOSAPI_Interfaces::CoatingStatusType ZOSAPI_Interfaces::ILDECoatingSettings::GetIndexStatus ( ) {
    enum CoatingStatusType _result;
    HRESULT _hr = get_IndexStatus(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1661)
inline long ZOSAPI_Interfaces::ILDECoatingSettings::GetIndexPickupFrom ( ) {
    long _result = 0;
    HRESULT _hr = get_IndexPickupFrom(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1662)
inline HRESULT ZOSAPI_Interfaces::ILDECoatingSettings::SetIndexStatusFixed ( ) {
    HRESULT _hr = raw_SetIndexStatusFixed();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1663)
inline HRESULT ZOSAPI_Interfaces::ILDECoatingSettings::SetIndexStatusVariable ( ) {
    HRESULT _hr = raw_SetIndexStatusVariable();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1664)
inline VARIANT_BOOL ZOSAPI_Interfaces::ILDECoatingSettings::SetIndexStatusPickup ( long fromLayer ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_SetIndexStatusPickup(fromLayer, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1665)
inline double ZOSAPI_Interfaces::ILDECoatingSettings::GetExtinctionOffset ( ) {
    double _result = 0;
    HRESULT _hr = get_ExtinctionOffset(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1666)
inline void ZOSAPI_Interfaces::ILDECoatingSettings::PutExtinctionOffset ( double pRetVal ) {
    HRESULT _hr = put_ExtinctionOffset(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1667)
inline enum ZOSAPI_Interfaces::CoatingStatusType ZOSAPI_Interfaces::ILDECoatingSettings::GetExtinctionStatus ( ) {
    enum CoatingStatusType _result;
    HRESULT _hr = get_ExtinctionStatus(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1668)
inline long ZOSAPI_Interfaces::ILDECoatingSettings::GetExtinctionPickupFrom ( ) {
    long _result = 0;
    HRESULT _hr = get_ExtinctionPickupFrom(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1669)
inline HRESULT ZOSAPI_Interfaces::ILDECoatingSettings::SetExtinctionStatusFixed ( ) {
    HRESULT _hr = raw_SetExtinctionStatusFixed();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1670)
inline HRESULT ZOSAPI_Interfaces::ILDECoatingSettings::SetExtinctionStatusVariable ( ) {
    HRESULT _hr = raw_SetExtinctionStatusVariable();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1671)
inline VARIANT_BOOL ZOSAPI_Interfaces::ILDECoatingSettings::SetExtinctionStatusPickup ( long fromLayer ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_SetExtinctionStatusPickup(fromLayer, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface ILDECoatingData wrapper method implementations
//

#pragma implementation_key(1672)
inline _bstr_t ZOSAPI_Interfaces::ILDECoatingData::GetCoating ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Coating(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1673)
inline void ZOSAPI_Interfaces::ILDECoatingData::PutCoating ( _bstr_t pRetVal ) {
    HRESULT _hr = put_Coating(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1674)
inline SAFEARRAY * ZOSAPI_Interfaces::ILDECoatingData::GetAvailableCoatings ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_GetAvailableCoatings(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1675)
inline VARIANT_BOOL ZOSAPI_Interfaces::ILDECoatingData::GetUseLayerMultiplierAndOffsets ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseLayerMultiplierAndOffsets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1676)
inline void ZOSAPI_Interfaces::ILDECoatingData::PutUseLayerMultiplierAndOffsets ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UseLayerMultiplierAndOffsets(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1677)
inline long ZOSAPI_Interfaces::ILDECoatingData::GetNumberOfLayers ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfLayers(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1678)
inline ZOSAPI_Interfaces::ILDECoatingSettingsPtr ZOSAPI_Interfaces::ILDECoatingData::GetLayerSettings ( long Layer ) {
    struct ILDECoatingSettings * _result = 0;
    HRESULT _hr = raw_GetLayerSettings(Layer, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ILDECoatingSettingsPtr(_result, false);
}

#pragma implementation_key(1679)
inline VARIANT_BOOL ZOSAPI_Interfaces::ILDECoatingData::SetLayerSettings ( long Layer, struct ILDECoatingSettings * settings ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_SetLayerSettings(Layer, settings, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1680)
inline HRESULT ZOSAPI_Interfaces::ILDECoatingData::SetAllThicknessVariable ( ) {
    HRESULT _hr = raw_SetAllThicknessVariable();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1681)
inline HRESULT ZOSAPI_Interfaces::ILDECoatingData::SetAllThicknessFixed ( ) {
    HRESULT _hr = raw_SetAllThicknessFixed();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1682)
inline HRESULT ZOSAPI_Interfaces::ILDECoatingData::SetAllThicknessOne ( ) {
    HRESULT _hr = raw_SetAllThicknessOne();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1683)
inline HRESULT ZOSAPI_Interfaces::ILDECoatingData::SetAllIndexVariable ( ) {
    HRESULT _hr = raw_SetAllIndexVariable();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1684)
inline HRESULT ZOSAPI_Interfaces::ILDECoatingData::SetAllIndexFixed ( ) {
    HRESULT _hr = raw_SetAllIndexFixed();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1685)
inline HRESULT ZOSAPI_Interfaces::ILDECoatingData::SetAllIndexZero ( ) {
    HRESULT _hr = raw_SetAllIndexZero();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1686)
inline HRESULT ZOSAPI_Interfaces::ILDECoatingData::SetAllExtinctionVariable ( ) {
    HRESULT _hr = raw_SetAllExtinctionVariable();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1687)
inline HRESULT ZOSAPI_Interfaces::ILDECoatingData::SetAllExtinctionFixed ( ) {
    HRESULT _hr = raw_SetAllExtinctionFixed();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1688)
inline HRESULT ZOSAPI_Interfaces::ILDECoatingData::SetAllExtinctionZero ( ) {
    HRESULT _hr = raw_SetAllExtinctionZero();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ILDEImportData wrapper method implementations
//

#pragma implementation_key(1689)
inline VARIANT_BOOL ZOSAPI_Interfaces::ILDEImportData::ImportDataFile ( _bstr_t dataFile ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_ImportDataFile(dataFile, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1690)
inline _bstr_t ZOSAPI_Interfaces::ILDEImportData::GetDefaultImportDirectory ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DefaultImportDirectory(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1691)
inline SAFEARRAY * ZOSAPI_Interfaces::ILDEImportData::GetImportFiles ( _bstr_t directory ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_GetImportFiles(directory, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1692)
inline VARIANT_BOOL ZOSAPI_Interfaces::ILDEImportData::CopyImportDataFrom ( struct ILDEImportData * source ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_CopyImportDataFrom(source, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface INCETypeData wrapper method implementations
//

#pragma implementation_key(1693)
inline VARIANT_BOOL ZOSAPI_Interfaces::INCETypeData::GetAreUDASettingsAvailable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AreUDASettingsAvailable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1694)
inline VARIANT_BOOL ZOSAPI_Interfaces::INCETypeData::GetUserDefinedAperture ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UserDefinedAperture(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1695)
inline void ZOSAPI_Interfaces::INCETypeData::PutUserDefinedAperture ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UserDefinedAperture(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1696)
inline double ZOSAPI_Interfaces::INCETypeData::GetUDAScale ( ) {
    double _result = 0;
    HRESULT _hr = get_UDAScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1697)
inline void ZOSAPI_Interfaces::INCETypeData::PutUDAScale ( double pRetVal ) {
    HRESULT _hr = put_UDAScale(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1698)
inline _bstr_t ZOSAPI_Interfaces::INCETypeData::GetUDAFile ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_UDAFile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1699)
inline void ZOSAPI_Interfaces::INCETypeData::PutUDAFile ( _bstr_t pRetVal ) {
    HRESULT _hr = put_UDAFile(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1700)
inline SAFEARRAY * ZOSAPI_Interfaces::INCETypeData::GetAvailableUDAFiles ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_GetAvailableUDAFiles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1701)
inline _bstr_t ZOSAPI_Interfaces::INCETypeData::GetUDAFileFullPath ( ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetUDAFileFullPath(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1702)
inline enum ZOSAPI_Interfaces::ZemaxColor ZOSAPI_Interfaces::INCETypeData::GetRowColor ( ) {
    enum ZemaxColor _result;
    HRESULT _hr = get_RowColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1703)
inline void ZOSAPI_Interfaces::INCETypeData::PutRowColor ( enum ZemaxColor pRetVal ) {
    HRESULT _hr = put_RowColor(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1704)
inline VARIANT_BOOL ZOSAPI_Interfaces::INCETypeData::GetUseGlobalXYZRotationOrder ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseGlobalXYZRotationOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1705)
inline void ZOSAPI_Interfaces::INCETypeData::PutUseGlobalXYZRotationOrder ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UseGlobalXYZRotationOrder(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1706)
inline VARIANT_BOOL ZOSAPI_Interfaces::INCETypeData::GetConvertImportedFilesToZOF ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ConvertImportedFilesToZOF(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1707)
inline void ZOSAPI_Interfaces::INCETypeData::PutConvertImportedFilesToZOF ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_ConvertImportedFilesToZOF(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1708)
inline _bstr_t ZOSAPI_Interfaces::INCETypeData::GetConsiderObjects ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ConsiderObjects(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1709)
inline void ZOSAPI_Interfaces::INCETypeData::PutConsiderObjects ( _bstr_t pRetVal ) {
    HRESULT _hr = put_ConsiderObjects(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1710)
inline _bstr_t ZOSAPI_Interfaces::INCETypeData::GetIgnoreObjects ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_IgnoreObjects(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1711)
inline void ZOSAPI_Interfaces::INCETypeData::PutIgnoreObjects ( _bstr_t pRetVal ) {
    HRESULT _hr = put_IgnoreObjects(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1712)
inline enum ZOSAPI_Interfaces::RaysIgnoreObjectType ZOSAPI_Interfaces::INCETypeData::GetRaysIgnoreObject ( ) {
    enum RaysIgnoreObjectType _result;
    HRESULT _hr = get_RaysIgnoreObject(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1713)
inline void ZOSAPI_Interfaces::INCETypeData::PutRaysIgnoreObject ( enum RaysIgnoreObjectType pRetVal ) {
    HRESULT _hr = put_RaysIgnoreObject(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1714)
inline VARIANT_BOOL ZOSAPI_Interfaces::INCETypeData::GetUseConsiderIgnoreWhenSplitting ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseConsiderIgnoreWhenSplitting(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1715)
inline void ZOSAPI_Interfaces::INCETypeData::PutUseConsiderIgnoreWhenSplitting ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UseConsiderIgnoreWhenSplitting(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1716)
inline VARIANT_BOOL ZOSAPI_Interfaces::INCETypeData::GetFastRayTrace ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_FastRayTrace(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1717)
inline void ZOSAPI_Interfaces::INCETypeData::PutFastRayTrace ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_FastRayTrace(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1718)
inline VARIANT_BOOL ZOSAPI_Interfaces::INCETypeData::GetUseFastApproximateRayTrace ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseFastApproximateRayTrace(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1719)
inline void ZOSAPI_Interfaces::INCETypeData::PutUseFastApproximateRayTrace ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UseFastApproximateRayTrace(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1720)
inline VARIANT_BOOL ZOSAPI_Interfaces::INCETypeData::GetObjectIsADetector ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ObjectIsADetector(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1721)
inline void ZOSAPI_Interfaces::INCETypeData::PutObjectIsADetector ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_ObjectIsADetector(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1722)
inline enum ZOSAPI_Interfaces::DetectorShowAsType ZOSAPI_Interfaces::INCETypeData::GetDetectorShowAs ( ) {
    enum DetectorShowAsType _result;
    HRESULT _hr = get_DetectorShowAs(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1723)
inline void ZOSAPI_Interfaces::INCETypeData::PutDetectorShowAs ( enum DetectorShowAsType pRetVal ) {
    HRESULT _hr = put_DetectorShowAs(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1724)
inline VARIANT_BOOL ZOSAPI_Interfaces::INCETypeData::GetUsePixelInterpolation ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UsePixelInterpolation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1725)
inline void ZOSAPI_Interfaces::INCETypeData::PutUsePixelInterpolation ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UsePixelInterpolation(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1726)
inline VARIANT_BOOL ZOSAPI_Interfaces::INCETypeData::GetNormalizeCoherentPower ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_NormalizeCoherentPower(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1727)
inline void ZOSAPI_Interfaces::INCETypeData::PutNormalizeCoherentPower ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_NormalizeCoherentPower(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1728)
inline VARIANT_BOOL ZOSAPI_Interfaces::INCETypeData::GetRecordSpectralData ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_RecordSpectralData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1729)
inline void ZOSAPI_Interfaces::INCETypeData::PutRecordSpectralData ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_RecordSpectralData(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1730)
inline long ZOSAPI_Interfaces::INCETypeData::GetNumberOfSpectralData ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfSpectralData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1731)
inline void ZOSAPI_Interfaces::INCETypeData::PutNumberOfSpectralData ( long pRetVal ) {
    HRESULT _hr = put_NumberOfSpectralData(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1732)
inline double ZOSAPI_Interfaces::INCETypeData::GetSpectralDataMinWave ( ) {
    double _result = 0;
    HRESULT _hr = get_SpectralDataMinWave(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1733)
inline void ZOSAPI_Interfaces::INCETypeData::PutSpectralDataMinWave ( double pRetVal ) {
    HRESULT _hr = put_SpectralDataMinWave(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1734)
inline double ZOSAPI_Interfaces::INCETypeData::GetSpectralDataMaxWave ( ) {
    double _result = 0;
    HRESULT _hr = get_SpectralDataMaxWave(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1735)
inline void ZOSAPI_Interfaces::INCETypeData::PutSpectralDataMaxWave ( double pRetVal ) {
    HRESULT _hr = put_SpectralDataMaxWave(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface INCEDrawData wrapper method implementations
//

#pragma implementation_key(1736)
inline VARIANT_BOOL ZOSAPI_Interfaces::INCEDrawData::GetDoNotDrawObject ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DoNotDrawObject(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1737)
inline void ZOSAPI_Interfaces::INCEDrawData::PutDoNotDrawObject ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_DoNotDrawObject(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1738)
inline VARIANT_BOOL ZOSAPI_Interfaces::INCEDrawData::GetDrawLocalAxis ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DrawLocalAxis(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1739)
inline void ZOSAPI_Interfaces::INCEDrawData::PutDrawLocalAxis ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_DrawLocalAxis(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1740)
inline VARIANT_BOOL ZOSAPI_Interfaces::INCEDrawData::GetSupportsDrawingResolution ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SupportsDrawingResolution(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1741)
inline enum ZOSAPI_Interfaces::DrawingResolutionType ZOSAPI_Interfaces::INCEDrawData::GetDrawingResolution ( ) {
    enum DrawingResolutionType _result;
    HRESULT _hr = get_DrawingResolution(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1742)
inline void ZOSAPI_Interfaces::INCEDrawData::PutDrawingResolution ( enum DrawingResolutionType pRetVal ) {
    HRESULT _hr = put_DrawingResolution(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1743)
inline long ZOSAPI_Interfaces::INCEDrawData::GetNumSegments1 ( ) {
    long _result = 0;
    HRESULT _hr = get_NumSegments1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1744)
inline void ZOSAPI_Interfaces::INCEDrawData::PutNumSegments1 ( long pRetVal ) {
    HRESULT _hr = put_NumSegments1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1745)
inline _bstr_t ZOSAPI_Interfaces::INCEDrawData::GetSegments1Type ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Segments1Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1746)
inline long ZOSAPI_Interfaces::INCEDrawData::GetNumSegments2 ( ) {
    long _result = 0;
    HRESULT _hr = get_NumSegments2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1747)
inline void ZOSAPI_Interfaces::INCEDrawData::PutNumSegments2 ( long pRetVal ) {
    HRESULT _hr = put_NumSegments2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1748)
inline _bstr_t ZOSAPI_Interfaces::INCEDrawData::GetSegments2Type ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Segments2Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1749)
inline VARIANT_BOOL ZOSAPI_Interfaces::INCEDrawData::MakeAllObjectsDrawLikeThisOne ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_MakeAllObjectsDrawLikeThisOne(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1750)
inline VARIANT_BOOL ZOSAPI_Interfaces::INCEDrawData::GetExportAsTriangles ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ExportAsTriangles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1751)
inline void ZOSAPI_Interfaces::INCEDrawData::PutExportAsTriangles ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_ExportAsTriangles(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1752)
inline VARIANT_BOOL ZOSAPI_Interfaces::INCEDrawData::GetIncreaseResolutionOnShadedModelLayouts ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IncreaseResolutionOnShadedModelLayouts(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1753)
inline void ZOSAPI_Interfaces::INCEDrawData::PutIncreaseResolutionOnShadedModelLayouts ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IncreaseResolutionOnShadedModelLayouts(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1754)
inline enum ZOSAPI_Interfaces::ZemaxOpacity ZOSAPI_Interfaces::INCEDrawData::GetOpacity ( ) {
    enum ZemaxOpacity _result;
    HRESULT _hr = get_Opacity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1755)
inline void ZOSAPI_Interfaces::INCEDrawData::PutOpacity ( enum ZemaxOpacity pRetVal ) {
    HRESULT _hr = put_Opacity(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1756)
inline enum ZOSAPI_Interfaces::ZemaxColor ZOSAPI_Interfaces::INCEDrawData::GetObjectColor ( ) {
    enum ZemaxColor _result;
    HRESULT _hr = get_ObjectColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1757)
inline void ZOSAPI_Interfaces::INCEDrawData::PutObjectColor ( enum ZemaxColor pRetVal ) {
    HRESULT _hr = put_ObjectColor(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ILDETypeData wrapper method implementations
//

#pragma implementation_key(1758)
inline enum ZOSAPI_Interfaces::ZemaxColor ZOSAPI_Interfaces::ILDETypeData::GetSurfaceColor ( ) {
    enum ZemaxColor _result;
    HRESULT _hr = get_SurfaceColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1759)
inline void ZOSAPI_Interfaces::ILDETypeData::PutSurfaceColor ( enum ZemaxColor pRetVal ) {
    HRESULT _hr = put_SurfaceColor(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1760)
inline enum ZOSAPI_Interfaces::ZemaxOpacity ZOSAPI_Interfaces::ILDETypeData::GetSurfaceOpacity ( ) {
    enum ZemaxOpacity _result;
    HRESULT _hr = get_SurfaceOpacity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1761)
inline void ZOSAPI_Interfaces::ILDETypeData::PutSurfaceOpacity ( enum ZemaxOpacity pRetVal ) {
    HRESULT _hr = put_SurfaceOpacity(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1762)
inline enum ZOSAPI_Interfaces::ZemaxColor ZOSAPI_Interfaces::ILDETypeData::GetRowColor ( ) {
    enum ZemaxColor _result;
    HRESULT _hr = get_RowColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1763)
inline void ZOSAPI_Interfaces::ILDETypeData::PutRowColor ( enum ZemaxColor pRetVal ) {
    HRESULT _hr = put_RowColor(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1764)
inline VARIANT_BOOL ZOSAPI_Interfaces::ILDETypeData::GetIsStop ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsStop(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1765)
inline void ZOSAPI_Interfaces::ILDETypeData::PutIsStop ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsStop(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1766)
inline VARIANT_BOOL ZOSAPI_Interfaces::ILDETypeData::GetCanBeStop ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_CanBeStop(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1767)
inline VARIANT_BOOL ZOSAPI_Interfaces::ILDETypeData::GetIsGlobalCoordinateReference ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsGlobalCoordinateReference(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1768)
inline void ZOSAPI_Interfaces::ILDETypeData::PutIsGlobalCoordinateReference ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsGlobalCoordinateReference(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1769)
inline VARIANT_BOOL ZOSAPI_Interfaces::ILDETypeData::GetCanBeGCR ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_CanBeGCR(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1770)
inline VARIANT_BOOL ZOSAPI_Interfaces::ILDETypeData::GetIgnoreSurface ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IgnoreSurface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1771)
inline void ZOSAPI_Interfaces::ILDETypeData::PutIgnoreSurface ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IgnoreSurface(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1772)
inline VARIANT_BOOL ZOSAPI_Interfaces::ILDETypeData::GetSurfaceCannotBeHyperhemispheric ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SurfaceCannotBeHyperhemispheric(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1773)
inline void ZOSAPI_Interfaces::ILDETypeData::PutSurfaceCannotBeHyperhemispheric ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_SurfaceCannotBeHyperhemispheric(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IVectorData wrapper method implementations
//

#pragma implementation_key(1774)
inline VARIANT_BOOL ZOSAPI_Interfaces::IVectorData::GetIsReadOnly ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsReadOnly(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1775)
inline long ZOSAPI_Interfaces::IVectorData::GetLength ( ) {
    long _result = 0;
    HRESULT _hr = get_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1776)
inline SAFEARRAY * ZOSAPI_Interfaces::IVectorData::GetData ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = get_Data(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1777)
inline void ZOSAPI_Interfaces::IVectorData::PutData ( SAFEARRAY * pRetVal ) {
    HRESULT _hr = put_Data(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1778)
inline HRESULT ZOSAPI_Interfaces::IVectorData::ReadData ( long size, double * Data ) {
    HRESULT _hr = raw_ReadData(size, Data);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1779)
inline HRESULT ZOSAPI_Interfaces::IVectorData::WriteData ( long size, double * Data ) {
    HRESULT _hr = raw_WriteData(size, Data);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1780)
inline double ZOSAPI_Interfaces::IVectorData::GetValueAt ( long position ) {
    double _result = 0;
    HRESULT _hr = raw_GetValueAt(position, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1781)
inline HRESULT ZOSAPI_Interfaces::IVectorData::SetValueAt ( long position, double Value ) {
    HRESULT _hr = raw_SetValueAt(position, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IMatrixData wrapper method implementations
//

#pragma implementation_key(1782)
inline VARIANT_BOOL ZOSAPI_Interfaces::IMatrixData::GetIsReadOnly ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsReadOnly(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1783)
inline long ZOSAPI_Interfaces::IMatrixData::GetRows ( ) {
    long _result = 0;
    HRESULT _hr = get_Rows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1784)
inline long ZOSAPI_Interfaces::IMatrixData::GetCols ( ) {
    long _result = 0;
    HRESULT _hr = get_Cols(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1785)
inline long ZOSAPI_Interfaces::IMatrixData::GetTotalLength ( ) {
    long _result = 0;
    HRESULT _hr = get_TotalLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1786)
inline SAFEARRAY * ZOSAPI_Interfaces::IMatrixData::GetData ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = get_Data(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1787)
inline void ZOSAPI_Interfaces::IMatrixData::PutData ( SAFEARRAY * pRetVal ) {
    HRESULT _hr = put_Data(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1788)
inline HRESULT ZOSAPI_Interfaces::IMatrixData::ReadData ( long size, double * Data ) {
    HRESULT _hr = raw_ReadData(size, Data);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1789)
inline HRESULT ZOSAPI_Interfaces::IMatrixData::WriteData ( long size, double * Data ) {
    HRESULT _hr = raw_WriteData(size, Data);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1790)
inline double ZOSAPI_Interfaces::IMatrixData::GetValueAt ( long Row, long Col ) {
    double _result = 0;
    HRESULT _hr = raw_GetValueAt(Row, Col, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1791)
inline HRESULT ZOSAPI_Interfaces::IMatrixData::SetValueAt ( long Row, long Col, double Value ) {
    HRESULT _hr = raw_SetValueAt(Row, Col, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISettingsData wrapper method implementations
//

#pragma implementation_key(1792)
inline long ZOSAPI_Interfaces::ISettingsData::GetNumberOfSettings ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfSettings(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1793)
inline SAFEARRAY * ZOSAPI_Interfaces::ISettingsData::GetKeys ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_GetKeys(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1794)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISettingsData::GetEntryType ( _bstr_t key, enum SettingsDataType * Type, VARIANT_BOOL * isArray, long * arraySize ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_GetEntryType(key, Type, isArray, arraySize, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1795)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISettingsData::GetDoubleValue ( _bstr_t key, double * val ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_GetDoubleValue(key, val, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1796)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISettingsData::GetIntegerValue ( _bstr_t key, long * val ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_GetIntegerValue(key, val, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1797)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISettingsData::GetFloatValue ( _bstr_t key, float * val ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_GetFloatValue(key, val, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1798)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISettingsData::GetStringValue ( _bstr_t key, BSTR * val ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_GetStringValue(key, val, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1799)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISettingsData::GetByteValue ( _bstr_t key, unsigned char * val ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_GetByteValue(key, val, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1800)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISettingsData::GetBooleanValue ( _bstr_t key, VARIANT_BOOL * val ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_GetBooleanValue(key, val, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1801)
inline HRESULT ZOSAPI_Interfaces::ISettingsData::SetDoubleValue ( _bstr_t key, double val ) {
    HRESULT _hr = raw_SetDoubleValue(key, val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1802)
inline HRESULT ZOSAPI_Interfaces::ISettingsData::SetIntegerValue ( _bstr_t key, long val ) {
    HRESULT _hr = raw_SetIntegerValue(key, val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1803)
inline HRESULT ZOSAPI_Interfaces::ISettingsData::SetFloatValue ( _bstr_t key, float val ) {
    HRESULT _hr = raw_SetFloatValue(key, val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1804)
inline HRESULT ZOSAPI_Interfaces::ISettingsData::SetStringValue ( _bstr_t key, _bstr_t val ) {
    HRESULT _hr = raw_SetStringValue(key, val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1805)
inline HRESULT ZOSAPI_Interfaces::ISettingsData::SetByteValue ( _bstr_t key, unsigned char val ) {
    HRESULT _hr = raw_SetByteValue(key, val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1806)
inline HRESULT ZOSAPI_Interfaces::ISettingsData::SetBooleanValue ( _bstr_t key, VARIANT_BOOL val ) {
    HRESULT _hr = raw_SetBooleanValue(key, val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1807)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISettingsData::GetDoubleArray ( _bstr_t key, long size, double * val ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_GetDoubleArray(key, size, val, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1808)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISettingsData::GetIntegerArray ( _bstr_t key, long size, long * val ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_GetIntegerArray(key, size, val, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1809)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISettingsData::GetFloatArray ( _bstr_t key, long size, float * val ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_GetFloatArray(key, size, val, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1810)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISettingsData::GetByteArray ( _bstr_t key, long size, unsigned char * val ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_GetByteArray(key, size, val, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1811)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISettingsData::GetBooleanArray ( _bstr_t key, long size, VARIANT_BOOL * val ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_GetBooleanArray(key, size, val, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1812)
inline HRESULT ZOSAPI_Interfaces::ISettingsData::SetDoubleArray ( _bstr_t key, long size, double * val ) {
    HRESULT _hr = raw_SetDoubleArray(key, size, val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1813)
inline HRESULT ZOSAPI_Interfaces::ISettingsData::SetIntegerArray ( _bstr_t key, long size, long * val ) {
    HRESULT _hr = raw_SetIntegerArray(key, size, val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1814)
inline HRESULT ZOSAPI_Interfaces::ISettingsData::SetFloatArray ( _bstr_t key, long size, float * val ) {
    HRESULT _hr = raw_SetFloatArray(key, size, val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1815)
inline HRESULT ZOSAPI_Interfaces::ISettingsData::SetByteArray ( _bstr_t key, long size, unsigned char * val ) {
    HRESULT _hr = raw_SetByteArray(key, size, val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1816)
inline HRESULT ZOSAPI_Interfaces::ISettingsData::SetBooleanArray ( _bstr_t key, long size, VARIANT_BOOL * val ) {
    HRESULT _hr = raw_SetBooleanArray(key, size, val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface INSCRayTrace wrapper method implementations
//

#pragma implementation_key(1817)
inline enum ZOSAPI_Interfaces::ErrorType ZOSAPI_Interfaces::INSCRayTrace::ClearDetectors ( long DetectorNumber ) {
    enum ErrorType _result;
    HRESULT _hr = raw_ClearDetectors(DetectorNumber, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1818)
inline enum ZOSAPI_Interfaces::ErrorType ZOSAPI_Interfaces::INSCRayTrace::ClearDetectorObject ( long ObjectNumber ) {
    enum ErrorType _result;
    HRESULT _hr = raw_ClearDetectorObject(ObjectNumber, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1819)
inline VARIANT_BOOL ZOSAPI_Interfaces::INSCRayTrace::GetAutoUpdate ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AutoUpdate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1820)
inline void ZOSAPI_Interfaces::INSCRayTrace::PutAutoUpdate ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_AutoUpdate(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1821)
inline long ZOSAPI_Interfaces::INSCRayTrace::GetNumberOfCores ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfCores(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1822)
inline void ZOSAPI_Interfaces::INSCRayTrace::PutNumberOfCores ( long pRetVal ) {
    HRESULT _hr = put_NumberOfCores(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1823)
inline VARIANT_BOOL ZOSAPI_Interfaces::INSCRayTrace::GetUsePolarization ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UsePolarization(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1824)
inline void ZOSAPI_Interfaces::INSCRayTrace::PutUsePolarization ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UsePolarization(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1825)
inline VARIANT_BOOL ZOSAPI_Interfaces::INSCRayTrace::GetIgnoreErrors ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IgnoreErrors(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1826)
inline void ZOSAPI_Interfaces::INSCRayTrace::PutIgnoreErrors ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IgnoreErrors(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1827)
inline VARIANT_BOOL ZOSAPI_Interfaces::INSCRayTrace::GetSplitNSCRays ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SplitNSCRays(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1828)
inline void ZOSAPI_Interfaces::INSCRayTrace::PutSplitNSCRays ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_SplitNSCRays(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1829)
inline VARIANT_BOOL ZOSAPI_Interfaces::INSCRayTrace::GetScatterNSCRays ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ScatterNSCRays(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1830)
inline void ZOSAPI_Interfaces::INSCRayTrace::PutScatterNSCRays ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_ScatterNSCRays(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1831)
inline VARIANT_BOOL ZOSAPI_Interfaces::INSCRayTrace::GetSaveRays ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SaveRays(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1832)
inline void ZOSAPI_Interfaces::INSCRayTrace::PutSaveRays ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_SaveRays(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1833)
inline _bstr_t ZOSAPI_Interfaces::INSCRayTrace::GetSaveRaysFile ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SaveRaysFile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1834)
inline void ZOSAPI_Interfaces::INSCRayTrace::PutSaveRaysFile ( _bstr_t pRetVal ) {
    HRESULT _hr = put_SaveRaysFile(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1835)
inline enum ZOSAPI_Interfaces::ZRDFormatType ZOSAPI_Interfaces::INSCRayTrace::GetZRDFormat ( ) {
    enum ZRDFormatType _result;
    HRESULT _hr = get_ZRDFormat(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1836)
inline void ZOSAPI_Interfaces::INSCRayTrace::PutZRDFormat ( enum ZRDFormatType pRetVal ) {
    HRESULT _hr = put_ZRDFormat(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1837)
inline _bstr_t ZOSAPI_Interfaces::INSCRayTrace::GetFilter ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Filter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1838)
inline void ZOSAPI_Interfaces::INSCRayTrace::PutFilter ( _bstr_t pRetVal ) {
    HRESULT _hr = put_Filter(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IOpticalSystemTools wrapper method implementations
//

#pragma implementation_key(1839)
inline ZOSAPI_Interfaces::ISystemToolPtr ZOSAPI_Interfaces::IOpticalSystemTools::GetCurrentTool ( ) {
    struct ISystemTool * _result = 0;
    HRESULT _hr = get_CurrentTool(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISystemToolPtr(_result, false);
}

#pragma implementation_key(1840)
inline long ZOSAPI_Interfaces::IOpticalSystemTools::GetProgress ( ) {
    long _result = 0;
    HRESULT _hr = get_Progress(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1841)
inline _bstr_t ZOSAPI_Interfaces::IOpticalSystemTools::GetStatus ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Status(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1842)
inline VARIANT_BOOL ZOSAPI_Interfaces::IOpticalSystemTools::GetIsRunning ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsRunning(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1843)
inline ZOSAPI_Interfaces::IBatchRayTracePtr ZOSAPI_Interfaces::IOpticalSystemTools::OpenBatchRayTrace ( ) {
    struct IBatchRayTrace * _result = 0;
    HRESULT _hr = raw_OpenBatchRayTrace(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IBatchRayTracePtr(_result, false);
}

#pragma implementation_key(1844)
inline ZOSAPI_Interfaces::INSCRayTracePtr ZOSAPI_Interfaces::IOpticalSystemTools::OpenNSCRayTrace ( ) {
    struct INSCRayTrace * _result = 0;
    HRESULT _hr = raw_OpenNSCRayTrace(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return INSCRayTracePtr(_result, false);
}

#pragma implementation_key(1845)
inline ZOSAPI_Interfaces::IQuickAdjustPtr ZOSAPI_Interfaces::IOpticalSystemTools::OpenQuickAdjust ( ) {
    struct IQuickAdjust * _result = 0;
    HRESULT _hr = raw_OpenQuickAdjust(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IQuickAdjustPtr(_result, false);
}

#pragma implementation_key(1846)
inline ZOSAPI_Interfaces::IQuickFocusPtr ZOSAPI_Interfaces::IOpticalSystemTools::OpenQuickFocus ( ) {
    struct IQuickFocus * _result = 0;
    HRESULT _hr = raw_OpenQuickFocus(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IQuickFocusPtr(_result, false);
}

#pragma implementation_key(1847)
inline ZOSAPI_Interfaces::ILightningTracePtr ZOSAPI_Interfaces::IOpticalSystemTools::OpenLightningTrace ( ) {
    struct ILightningTrace * _result = 0;
    HRESULT _hr = raw_OpenLightningTrace(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ILightningTracePtr(_result, false);
}

#pragma implementation_key(1848)
inline ZOSAPI_Interfaces::ILocalOptimizationPtr ZOSAPI_Interfaces::IOpticalSystemTools::OpenLocalOptimization ( ) {
    struct ILocalOptimization * _result = 0;
    HRESULT _hr = raw_OpenLocalOptimization(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ILocalOptimizationPtr(_result, false);
}

#pragma implementation_key(1849)
inline ZOSAPI_Interfaces::IGlobalOptimizationPtr ZOSAPI_Interfaces::IOpticalSystemTools::OpenGlobalOptimization ( ) {
    struct IGlobalOptimization * _result = 0;
    HRESULT _hr = raw_OpenGlobalOptimization(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IGlobalOptimizationPtr(_result, false);
}

#pragma implementation_key(1850)
inline ZOSAPI_Interfaces::IHammerOptimizationPtr ZOSAPI_Interfaces::IOpticalSystemTools::OpenHammerOptimization ( ) {
    struct IHammerOptimization * _result = 0;
    HRESULT _hr = raw_OpenHammerOptimization(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IHammerOptimizationPtr(_result, false);
}

#pragma implementation_key(1851)
inline ZOSAPI_Interfaces::ITolerancingPtr ZOSAPI_Interfaces::IOpticalSystemTools::OpenTolerancing ( ) {
    struct ITolerancing * _result = 0;
    HRESULT _hr = raw_OpenTolerancing(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ITolerancingPtr(_result, false);
}

#pragma implementation_key(1852)
inline ZOSAPI_Interfaces::IRestoreArchivePtr ZOSAPI_Interfaces::IOpticalSystemTools::OpenRestoreZAR ( ) {
    struct IRestoreArchive * _result = 0;
    HRESULT _hr = raw_OpenRestoreZAR(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IRestoreArchivePtr(_result, false);
}

#pragma implementation_key(1853)
inline ZOSAPI_Interfaces::ICreateArchivePtr ZOSAPI_Interfaces::IOpticalSystemTools::OpenCreateZAR ( ) {
    struct ICreateArchive * _result = 0;
    HRESULT _hr = raw_OpenCreateZAR(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ICreateArchivePtr(_result, false);
}

#pragma implementation_key(1854)
inline ZOSAPI_Interfaces::IExportCADPtr ZOSAPI_Interfaces::IOpticalSystemTools::OpenExportCAD ( ) {
    struct IExportCAD * _result = 0;
    HRESULT _hr = raw_OpenExportCAD(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IExportCADPtr(_result, false);
}

#pragma implementation_key(1855)
inline ZOSAPI_Interfaces::IScalePtr ZOSAPI_Interfaces::IOpticalSystemTools::OpenScale ( ) {
    struct IScale * _result = 0;
    HRESULT _hr = raw_OpenScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IScalePtr(_result, false);
}

#pragma implementation_key(1856)
inline ZOSAPI_Interfaces::IMFCalculatorPtr ZOSAPI_Interfaces::IOpticalSystemTools::OpenMeritFunctionCalculator ( ) {
    struct IMFCalculator * _result = 0;
    HRESULT _hr = raw_OpenMeritFunctionCalculator(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IMFCalculatorPtr(_result, false);
}

#pragma implementation_key(1857)
inline IUnknownPtr ZOSAPI_Interfaces::IOpticalSystemTools::OpenLensCatalogs ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = raw_OpenLensCatalogs(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(1858)
inline ZOSAPI_Interfaces::IConvertToNSCGroupPtr ZOSAPI_Interfaces::IOpticalSystemTools::OpenConvertToNSCGroup ( ) {
    struct IConvertToNSCGroup * _result = 0;
    HRESULT _hr = raw_OpenConvertToNSCGroup(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IConvertToNSCGroupPtr(_result, false);
}

#pragma implementation_key(1859)
inline ZOSAPI_Interfaces::IDesignLockdownPtr ZOSAPI_Interfaces::IOpticalSystemTools::OpenDesignLockdown ( ) {
    struct IDesignLockdown * _result = 0;
    HRESULT _hr = raw_OpenDesignLockdown(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDesignLockdownPtr(_result, false);
}

#pragma implementation_key(1860)
inline ZOSAPI_Interfaces::ICriticalRaysetGeneratorPtr ZOSAPI_Interfaces::IOpticalSystemTools::OpenCriticalRaysetGenerator ( ) {
    struct ICriticalRaysetGenerator * _result = 0;
    HRESULT _hr = raw_OpenCriticalRaysetGenerator(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ICriticalRaysetGeneratorPtr(_result, false);
}

#pragma implementation_key(1861)
inline VARIANT_BOOL ZOSAPI_Interfaces::IOpticalSystemTools::RemoveAllVariables ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_RemoveAllVariables(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1862)
inline long ZOSAPI_Interfaces::IOpticalSystemTools::SetAllRadiiVariable ( ) {
    long _result = 0;
    HRESULT _hr = raw_SetAllRadiiVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1863)
inline long ZOSAPI_Interfaces::IOpticalSystemTools::SetAllThicknessesVariable ( ) {
    long _result = 0;
    HRESULT _hr = raw_SetAllThicknessesVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1864)
inline SAFEARRAY * ZOSAPI_Interfaces::IOpticalSystemTools::CreateDoubleVector ( long numElements ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_CreateDoubleVector(numElements, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1865)
inline SAFEARRAY * ZOSAPI_Interfaces::IOpticalSystemTools::CreateDoubleMatrix ( long Rows, long Cols ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_CreateDoubleMatrix(Rows, Cols, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1866)
inline ZOSAPI_Interfaces::IZRDReaderPtr ZOSAPI_Interfaces::IOpticalSystemTools::OpenRayDatabaseReader ( ) {
    struct IZRDReader * _result = 0;
    HRESULT _hr = raw_OpenRayDatabaseReader(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IZRDReaderPtr(_result, false);
}

#pragma implementation_key(1867)
inline ZOSAPI_Interfaces::IComputeRMSSpotSizePtr ZOSAPI_Interfaces::IOpticalSystemTools::OpenRMSSpotRadiusCalculator ( ) {
    struct IComputeRMSSpotSize * _result = 0;
    HRESULT _hr = raw_OpenRMSSpotRadiusCalculator(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IComputeRMSSpotSizePtr(_result, false);
}

#pragma implementation_key(1868)
inline double ZOSAPI_Interfaces::IOpticalSystemTools::GetConversionToSystemUnits ( enum ZemaxSystemUnits fromUnits ) {
    double _result = 0;
    HRESULT _hr = raw_GetConversionToSystemUnits(fromUnits, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1869)
inline double ZOSAPI_Interfaces::IOpticalSystemTools::GetConversionFromSystemUnits ( enum ZemaxSystemUnits toUnits ) {
    double _result = 0;
    HRESULT _hr = raw_GetConversionFromSystemUnits(toUnits, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IMessage wrapper method implementations
//

#pragma implementation_key(1870)
inline enum ZOSAPI_Interfaces::ErrorType ZOSAPI_Interfaces::IMessage::GetErrorCode ( ) {
    enum ErrorType _result;
    HRESULT _hr = get_ErrorCode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1871)
inline _bstr_t ZOSAPI_Interfaces::IMessage::GetText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Text(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

//
// interface IMessages wrapper method implementations
//

#pragma implementation_key(1872)
inline HRESULT ZOSAPI_Interfaces::IMessages::WriteLine ( _bstr_t s, long userV, long settingsV ) {
    HRESULT _hr = raw_WriteLine(s, userV, settingsV);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1873)
inline HRESULT ZOSAPI_Interfaces::IMessages::WriteLine_2 ( _bstr_t s, VARIANT_BOOL userV, VARIANT_BOOL settingsV ) {
    HRESULT _hr = raw_WriteLine_2(s, userV, settingsV);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1874)
inline HRESULT ZOSAPI_Interfaces::IMessages::WriteLine_3 ( _bstr_t s, double userV, double settingsV ) {
    HRESULT _hr = raw_WriteLine_3(s, userV, settingsV);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1875)
inline HRESULT ZOSAPI_Interfaces::IMessages::WriteLine_4 ( _bstr_t s, _bstr_t userV, _bstr_t settingsV ) {
    HRESULT _hr = raw_WriteLine_4(s, userV, settingsV);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1876)
inline _bstr_t ZOSAPI_Interfaces::IMessages::AllToString ( ) {
    BSTR _result = 0;
    HRESULT _hr = raw_AllToString(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

//
// interface IUser2DLineData wrapper method implementations
//

#pragma implementation_key(1877)
inline _bstr_t ZOSAPI_Interfaces::IUser2DLineData::GetPlotDescription ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PlotDescription(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1878)
inline _bstr_t ZOSAPI_Interfaces::IUser2DLineData::GetXLabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_XLabel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1879)
inline void ZOSAPI_Interfaces::IUser2DLineData::PutXLabel ( _bstr_t pRetVal ) {
    HRESULT _hr = put_XLabel(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1880)
inline _bstr_t ZOSAPI_Interfaces::IUser2DLineData::GetYLabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_YLabel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1881)
inline void ZOSAPI_Interfaces::IUser2DLineData::PutYLabel ( _bstr_t pRetVal ) {
    HRESULT _hr = put_YLabel(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1882)
inline unsigned long ZOSAPI_Interfaces::IUser2DLineData::GetNumberOfXValues ( ) {
    unsigned long _result = 0;
    HRESULT _hr = get_NumberOfXValues(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1883)
inline unsigned long ZOSAPI_Interfaces::IUser2DLineData::GetNumberOfYValues ( ) {
    unsigned long _result = 0;
    HRESULT _hr = get_NumberOfYValues(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1884)
inline unsigned long ZOSAPI_Interfaces::IUser2DLineData::GetNumberOfSeries ( ) {
    unsigned long _result = 0;
    HRESULT _hr = get_NumberOfSeries(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1885)
inline HRESULT ZOSAPI_Interfaces::IUser2DLineData::AddSeries ( _bstr_t seriesName, enum ZemaxColor seriesColor, unsigned long NumberOfYValues, double * yValues ) {
    HRESULT _hr = raw_AddSeries(seriesName, seriesColor, NumberOfYValues, yValues);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1886)
inline HRESULT ZOSAPI_Interfaces::IUser2DLineData::AddSeriesSafe ( _bstr_t seriesName, enum ZemaxColor seriesColor, SAFEARRAY * yValues ) {
    HRESULT _hr = raw_AddSeriesSafe(seriesName, seriesColor, yValues);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1887)
inline double ZOSAPI_Interfaces::IUser2DLineData::GetXAxisMin ( ) {
    double _result = 0;
    HRESULT _hr = get_XAxisMin(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1888)
inline void ZOSAPI_Interfaces::IUser2DLineData::PutXAxisMin ( double pRetVal ) {
    HRESULT _hr = put_XAxisMin(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1889)
inline VARIANT_BOOL ZOSAPI_Interfaces::IUser2DLineData::GetXAxisMinAuto ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_XAxisMinAuto(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1890)
inline void ZOSAPI_Interfaces::IUser2DLineData::PutXAxisMinAuto ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_XAxisMinAuto(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1891)
inline double ZOSAPI_Interfaces::IUser2DLineData::GetXAxisMax ( ) {
    double _result = 0;
    HRESULT _hr = get_XAxisMax(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1892)
inline void ZOSAPI_Interfaces::IUser2DLineData::PutXAxisMax ( double pRetVal ) {
    HRESULT _hr = put_XAxisMax(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1893)
inline VARIANT_BOOL ZOSAPI_Interfaces::IUser2DLineData::GetXAxisMaxAuto ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_XAxisMaxAuto(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1894)
inline void ZOSAPI_Interfaces::IUser2DLineData::PutXAxisMaxAuto ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_XAxisMaxAuto(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1895)
inline VARIANT_BOOL ZOSAPI_Interfaces::IUser2DLineData::GetXAxisLog ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_XAxisLog(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1896)
inline void ZOSAPI_Interfaces::IUser2DLineData::PutXAxisLog ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_XAxisLog(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1897)
inline VARIANT_BOOL ZOSAPI_Interfaces::IUser2DLineData::GetXAxisReversed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_XAxisReversed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1898)
inline void ZOSAPI_Interfaces::IUser2DLineData::PutXAxisReversed ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_XAxisReversed(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1899)
inline VARIANT_BOOL ZOSAPI_Interfaces::IUser2DLineData::GetXAxisSymmetric ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_XAxisSymmetric(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1900)
inline void ZOSAPI_Interfaces::IUser2DLineData::PutXAxisSymmetric ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_XAxisSymmetric(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1901)
inline double ZOSAPI_Interfaces::IUser2DLineData::GetYAxisMin ( ) {
    double _result = 0;
    HRESULT _hr = get_YAxisMin(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1902)
inline void ZOSAPI_Interfaces::IUser2DLineData::PutYAxisMin ( double pRetVal ) {
    HRESULT _hr = put_YAxisMin(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1903)
inline VARIANT_BOOL ZOSAPI_Interfaces::IUser2DLineData::GetYAxisMinAuto ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_YAxisMinAuto(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1904)
inline void ZOSAPI_Interfaces::IUser2DLineData::PutYAxisMinAuto ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_YAxisMinAuto(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1905)
inline double ZOSAPI_Interfaces::IUser2DLineData::GetYAxisMax ( ) {
    double _result = 0;
    HRESULT _hr = get_YAxisMax(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1906)
inline void ZOSAPI_Interfaces::IUser2DLineData::PutYAxisMax ( double pRetVal ) {
    HRESULT _hr = put_YAxisMax(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1907)
inline VARIANT_BOOL ZOSAPI_Interfaces::IUser2DLineData::GetYAxisMaxAuto ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_YAxisMaxAuto(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1908)
inline void ZOSAPI_Interfaces::IUser2DLineData::PutYAxisMaxAuto ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_YAxisMaxAuto(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1909)
inline VARIANT_BOOL ZOSAPI_Interfaces::IUser2DLineData::GetYAxisLog ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_YAxisLog(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1910)
inline void ZOSAPI_Interfaces::IUser2DLineData::PutYAxisLog ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_YAxisLog(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1911)
inline VARIANT_BOOL ZOSAPI_Interfaces::IUser2DLineData::GetYAxisReversed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_YAxisReversed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1912)
inline void ZOSAPI_Interfaces::IUser2DLineData::PutYAxisReversed ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_YAxisReversed(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1913)
inline VARIANT_BOOL ZOSAPI_Interfaces::IUser2DLineData::GetYAxisSymmetric ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_YAxisSymmetric(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1914)
inline void ZOSAPI_Interfaces::IUser2DLineData::PutYAxisSymmetric ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_YAxisSymmetric(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IUserGridData wrapper method implementations
//

#pragma implementation_key(1915)
inline _bstr_t ZOSAPI_Interfaces::IUserGridData::GetPlotDescription ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PlotDescription(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1916)
inline _bstr_t ZOSAPI_Interfaces::IUserGridData::GetXLabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_XLabel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1917)
inline void ZOSAPI_Interfaces::IUserGridData::PutXLabel ( _bstr_t pRetVal ) {
    HRESULT _hr = put_XLabel(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1918)
inline _bstr_t ZOSAPI_Interfaces::IUserGridData::GetYLabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_YLabel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1919)
inline void ZOSAPI_Interfaces::IUserGridData::PutYLabel ( _bstr_t pRetVal ) {
    HRESULT _hr = put_YLabel(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1920)
inline _bstr_t ZOSAPI_Interfaces::IUserGridData::GetValueLabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ValueLabel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1921)
inline void ZOSAPI_Interfaces::IUserGridData::PutValueLabel ( _bstr_t pRetVal ) {
    HRESULT _hr = put_ValueLabel(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1922)
inline enum ZOSAPI_Interfaces::GridPlotType ZOSAPI_Interfaces::IUserGridData::GetShowAsType ( ) {
    enum GridPlotType _result;
    HRESULT _hr = get_ShowAsType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1923)
inline void ZOSAPI_Interfaces::IUserGridData::PutShowAsType ( enum GridPlotType pRetVal ) {
    HRESULT _hr = put_ShowAsType(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1924)
inline unsigned long ZOSAPI_Interfaces::IUserGridData::GetNumberOfXDataValues ( ) {
    unsigned long _result = 0;
    HRESULT _hr = get_NumberOfXDataValues(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1925)
inline double ZOSAPI_Interfaces::IUserGridData::GetXDataMin ( ) {
    double _result = 0;
    HRESULT _hr = get_XDataMin(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1926)
inline double ZOSAPI_Interfaces::IUserGridData::GetXDataMax ( ) {
    double _result = 0;
    HRESULT _hr = get_XDataMax(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1927)
inline double ZOSAPI_Interfaces::IUserGridData::GetDataDX ( ) {
    double _result = 0;
    HRESULT _hr = get_DataDX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1928)
inline HRESULT ZOSAPI_Interfaces::IUserGridData::SetXDataDimensions ( double XDataMin, double XDataMax ) {
    HRESULT _hr = raw_SetXDataDimensions(XDataMin, XDataMax);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1929)
inline unsigned long ZOSAPI_Interfaces::IUserGridData::GetNumberOfYDataValues ( ) {
    unsigned long _result = 0;
    HRESULT _hr = get_NumberOfYDataValues(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1930)
inline double ZOSAPI_Interfaces::IUserGridData::GetYDataMin ( ) {
    double _result = 0;
    HRESULT _hr = get_YDataMin(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1931)
inline double ZOSAPI_Interfaces::IUserGridData::GetYDataMax ( ) {
    double _result = 0;
    HRESULT _hr = get_YDataMax(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1932)
inline double ZOSAPI_Interfaces::IUserGridData::GetDataDY ( ) {
    double _result = 0;
    HRESULT _hr = get_DataDY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1933)
inline HRESULT ZOSAPI_Interfaces::IUserGridData::SetYDataDimensions ( double YDataMin, double YDataMax ) {
    HRESULT _hr = raw_SetYDataDimensions(YDataMin, YDataMax);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1934)
inline double ZOSAPI_Interfaces::IUserGridData::GetXAxisMin ( ) {
    double _result = 0;
    HRESULT _hr = get_XAxisMin(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1935)
inline void ZOSAPI_Interfaces::IUserGridData::PutXAxisMin ( double pRetVal ) {
    HRESULT _hr = put_XAxisMin(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1936)
inline VARIANT_BOOL ZOSAPI_Interfaces::IUserGridData::GetXAxisMinAuto ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_XAxisMinAuto(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1937)
inline void ZOSAPI_Interfaces::IUserGridData::PutXAxisMinAuto ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_XAxisMinAuto(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1938)
inline double ZOSAPI_Interfaces::IUserGridData::GetXAxisMax ( ) {
    double _result = 0;
    HRESULT _hr = get_XAxisMax(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1939)
inline void ZOSAPI_Interfaces::IUserGridData::PutXAxisMax ( double pRetVal ) {
    HRESULT _hr = put_XAxisMax(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1940)
inline VARIANT_BOOL ZOSAPI_Interfaces::IUserGridData::GetXAxisMaxAuto ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_XAxisMaxAuto(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1941)
inline void ZOSAPI_Interfaces::IUserGridData::PutXAxisMaxAuto ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_XAxisMaxAuto(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1942)
inline VARIANT_BOOL ZOSAPI_Interfaces::IUserGridData::GetXAxisSymmetric ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_XAxisSymmetric(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1943)
inline void ZOSAPI_Interfaces::IUserGridData::PutXAxisSymmetric ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_XAxisSymmetric(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1944)
inline double ZOSAPI_Interfaces::IUserGridData::GetYAxisMin ( ) {
    double _result = 0;
    HRESULT _hr = get_YAxisMin(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1945)
inline void ZOSAPI_Interfaces::IUserGridData::PutYAxisMin ( double pRetVal ) {
    HRESULT _hr = put_YAxisMin(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1946)
inline VARIANT_BOOL ZOSAPI_Interfaces::IUserGridData::GetYAxisMinAuto ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_YAxisMinAuto(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1947)
inline void ZOSAPI_Interfaces::IUserGridData::PutYAxisMinAuto ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_YAxisMinAuto(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1948)
inline double ZOSAPI_Interfaces::IUserGridData::GetYAxisMax ( ) {
    double _result = 0;
    HRESULT _hr = get_YAxisMax(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1949)
inline void ZOSAPI_Interfaces::IUserGridData::PutYAxisMax ( double pRetVal ) {
    HRESULT _hr = put_YAxisMax(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1950)
inline VARIANT_BOOL ZOSAPI_Interfaces::IUserGridData::GetYAxisMaxAuto ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_YAxisMaxAuto(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1951)
inline void ZOSAPI_Interfaces::IUserGridData::PutYAxisMaxAuto ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_YAxisMaxAuto(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1952)
inline VARIANT_BOOL ZOSAPI_Interfaces::IUserGridData::GetYAxisSymmetric ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_YAxisSymmetric(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1953)
inline void ZOSAPI_Interfaces::IUserGridData::PutYAxisSymmetric ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_YAxisSymmetric(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1954)
inline double ZOSAPI_Interfaces::IUserGridData::GetZAxisMin ( ) {
    double _result = 0;
    HRESULT _hr = get_ZAxisMin(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1955)
inline void ZOSAPI_Interfaces::IUserGridData::PutZAxisMin ( double pRetVal ) {
    HRESULT _hr = put_ZAxisMin(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1956)
inline VARIANT_BOOL ZOSAPI_Interfaces::IUserGridData::GetZAxisMinAuto ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ZAxisMinAuto(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1957)
inline void ZOSAPI_Interfaces::IUserGridData::PutZAxisMinAuto ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_ZAxisMinAuto(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1958)
inline double ZOSAPI_Interfaces::IUserGridData::GetZAxisMax ( ) {
    double _result = 0;
    HRESULT _hr = get_ZAxisMax(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1959)
inline void ZOSAPI_Interfaces::IUserGridData::PutZAxisMax ( double pRetVal ) {
    HRESULT _hr = put_ZAxisMax(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1960)
inline VARIANT_BOOL ZOSAPI_Interfaces::IUserGridData::GetZAxisMaxAuto ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ZAxisMaxAuto(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1961)
inline void ZOSAPI_Interfaces::IUserGridData::PutZAxisMaxAuto ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_ZAxisMaxAuto(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1962)
inline VARIANT_BOOL ZOSAPI_Interfaces::IUserGridData::GetZAxisLog ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ZAxisLog(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1963)
inline void ZOSAPI_Interfaces::IUserGridData::PutZAxisLog ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_ZAxisLog(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1964)
inline VARIANT_BOOL ZOSAPI_Interfaces::IUserGridData::GetLogColorMap ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_LogColorMap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1965)
inline void ZOSAPI_Interfaces::IUserGridData::PutLogColorMap ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_LogColorMap(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1966)
inline VARIANT_BOOL ZOSAPI_Interfaces::IUserGridData::GetInterpolateLowResolutionContours ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_InterpolateLowResolutionContours(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1967)
inline void ZOSAPI_Interfaces::IUserGridData::PutInterpolateLowResolutionContours ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_InterpolateLowResolutionContours(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1968)
inline double ZOSAPI_Interfaces::IUserGridData::GetXYAspectRatio ( ) {
    double _result = 0;
    HRESULT _hr = get_XYAspectRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1969)
inline void ZOSAPI_Interfaces::IUserGridData::PutXYAspectRatio ( double pRetVal ) {
    HRESULT _hr = put_XYAspectRatio(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1970)
inline HRESULT ZOSAPI_Interfaces::IUserGridData::SetData ( unsigned long totalSize, unsigned long numXValues, unsigned long numYValues, double * Data ) {
    HRESULT _hr = raw_SetData(totalSize, numXValues, numYValues, Data);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1971)
inline HRESULT ZOSAPI_Interfaces::IUserGridData::SetDataSafe ( SAFEARRAY * Data ) {
    HRESULT _hr = raw_SetDataSafe(Data);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IUserGridRGBData wrapper method implementations
//

#pragma implementation_key(1972)
inline _bstr_t ZOSAPI_Interfaces::IUserGridRGBData::GetPlotDescription ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PlotDescription(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1973)
inline _bstr_t ZOSAPI_Interfaces::IUserGridRGBData::GetXLabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_XLabel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1974)
inline void ZOSAPI_Interfaces::IUserGridRGBData::PutXLabel ( _bstr_t pRetVal ) {
    HRESULT _hr = put_XLabel(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1975)
inline _bstr_t ZOSAPI_Interfaces::IUserGridRGBData::GetYLabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_YLabel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1976)
inline void ZOSAPI_Interfaces::IUserGridRGBData::PutYLabel ( _bstr_t pRetVal ) {
    HRESULT _hr = put_YLabel(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1977)
inline _bstr_t ZOSAPI_Interfaces::IUserGridRGBData::GetValueLabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ValueLabel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1978)
inline void ZOSAPI_Interfaces::IUserGridRGBData::PutValueLabel ( _bstr_t pRetVal ) {
    HRESULT _hr = put_ValueLabel(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1979)
inline unsigned long ZOSAPI_Interfaces::IUserGridRGBData::GetNumberOfXDataValues ( ) {
    unsigned long _result = 0;
    HRESULT _hr = get_NumberOfXDataValues(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1980)
inline double ZOSAPI_Interfaces::IUserGridRGBData::GetXDataMin ( ) {
    double _result = 0;
    HRESULT _hr = get_XDataMin(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1981)
inline double ZOSAPI_Interfaces::IUserGridRGBData::GetXDataMax ( ) {
    double _result = 0;
    HRESULT _hr = get_XDataMax(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1982)
inline double ZOSAPI_Interfaces::IUserGridRGBData::GetDataDX ( ) {
    double _result = 0;
    HRESULT _hr = get_DataDX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1983)
inline HRESULT ZOSAPI_Interfaces::IUserGridRGBData::SetXDataDimensions ( double XDataMin, double XDataMax ) {
    HRESULT _hr = raw_SetXDataDimensions(XDataMin, XDataMax);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1984)
inline unsigned long ZOSAPI_Interfaces::IUserGridRGBData::GetNumberOfYDataValues ( ) {
    unsigned long _result = 0;
    HRESULT _hr = get_NumberOfYDataValues(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1985)
inline double ZOSAPI_Interfaces::IUserGridRGBData::GetYDataMin ( ) {
    double _result = 0;
    HRESULT _hr = get_YDataMin(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1986)
inline double ZOSAPI_Interfaces::IUserGridRGBData::GetYDataMax ( ) {
    double _result = 0;
    HRESULT _hr = get_YDataMax(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1987)
inline double ZOSAPI_Interfaces::IUserGridRGBData::GetDataDY ( ) {
    double _result = 0;
    HRESULT _hr = get_DataDY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1988)
inline HRESULT ZOSAPI_Interfaces::IUserGridRGBData::SetYDataDimensions ( double YDataMin, double YDataMax ) {
    HRESULT _hr = raw_SetYDataDimensions(YDataMin, YDataMax);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1989)
inline HRESULT ZOSAPI_Interfaces::IUserGridRGBData::SetDataRGB ( unsigned long fullSize, unsigned long numXValues, unsigned long numYValues, double * rData, double * gData, double * bData ) {
    HRESULT _hr = raw_SetDataRGB(fullSize, numXValues, numYValues, rData, gData, bData);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1990)
inline HRESULT ZOSAPI_Interfaces::IUserGridRGBData::SetDataRGBSafe ( SAFEARRAY * rData, SAFEARRAY * gData, SAFEARRAY * bData ) {
    HRESULT _hr = raw_SetDataRGBSafe(rData, gData, bData);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1991)
inline HRESULT ZOSAPI_Interfaces::IUserGridRGBData::SetData ( unsigned long fullSize, unsigned long numXValues, unsigned long numYValues, double * rgbData ) {
    HRESULT _hr = raw_SetData(fullSize, numXValues, numYValues, rgbData);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1992)
inline HRESULT ZOSAPI_Interfaces::IUserGridRGBData::SetDataSafe ( SAFEARRAY * rgbData ) {
    HRESULT _hr = raw_SetDataSafe(rgbData);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1993)
inline double ZOSAPI_Interfaces::IUserGridRGBData::GetXAxisMin ( ) {
    double _result = 0;
    HRESULT _hr = get_XAxisMin(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1994)
inline void ZOSAPI_Interfaces::IUserGridRGBData::PutXAxisMin ( double pRetVal ) {
    HRESULT _hr = put_XAxisMin(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1995)
inline VARIANT_BOOL ZOSAPI_Interfaces::IUserGridRGBData::GetXAxisMinAuto ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_XAxisMinAuto(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1996)
inline void ZOSAPI_Interfaces::IUserGridRGBData::PutXAxisMinAuto ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_XAxisMinAuto(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1997)
inline double ZOSAPI_Interfaces::IUserGridRGBData::GetXAxisMax ( ) {
    double _result = 0;
    HRESULT _hr = get_XAxisMax(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1998)
inline void ZOSAPI_Interfaces::IUserGridRGBData::PutXAxisMax ( double pRetVal ) {
    HRESULT _hr = put_XAxisMax(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1999)
inline VARIANT_BOOL ZOSAPI_Interfaces::IUserGridRGBData::GetXAxisMaxAuto ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_XAxisMaxAuto(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2000)
inline void ZOSAPI_Interfaces::IUserGridRGBData::PutXAxisMaxAuto ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_XAxisMaxAuto(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2001)
inline VARIANT_BOOL ZOSAPI_Interfaces::IUserGridRGBData::GetXAxisSymmetric ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_XAxisSymmetric(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2002)
inline void ZOSAPI_Interfaces::IUserGridRGBData::PutXAxisSymmetric ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_XAxisSymmetric(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2003)
inline double ZOSAPI_Interfaces::IUserGridRGBData::GetYAxisMin ( ) {
    double _result = 0;
    HRESULT _hr = get_YAxisMin(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2004)
inline void ZOSAPI_Interfaces::IUserGridRGBData::PutYAxisMin ( double pRetVal ) {
    HRESULT _hr = put_YAxisMin(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2005)
inline VARIANT_BOOL ZOSAPI_Interfaces::IUserGridRGBData::GetYAxisMinAuto ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_YAxisMinAuto(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2006)
inline void ZOSAPI_Interfaces::IUserGridRGBData::PutYAxisMinAuto ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_YAxisMinAuto(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2007)
inline double ZOSAPI_Interfaces::IUserGridRGBData::GetYAxisMax ( ) {
    double _result = 0;
    HRESULT _hr = get_YAxisMax(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2008)
inline void ZOSAPI_Interfaces::IUserGridRGBData::PutYAxisMax ( double pRetVal ) {
    HRESULT _hr = put_YAxisMax(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2009)
inline VARIANT_BOOL ZOSAPI_Interfaces::IUserGridRGBData::GetYAxisMaxAuto ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_YAxisMaxAuto(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2010)
inline void ZOSAPI_Interfaces::IUserGridRGBData::PutYAxisMaxAuto ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_YAxisMaxAuto(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2011)
inline VARIANT_BOOL ZOSAPI_Interfaces::IUserGridRGBData::GetYAxisSymmetric ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_YAxisSymmetric(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2012)
inline void ZOSAPI_Interfaces::IUserGridRGBData::PutYAxisSymmetric ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_YAxisSymmetric(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2013)
inline double ZOSAPI_Interfaces::IUserGridRGBData::GetXYAspectRatio ( ) {
    double _result = 0;
    HRESULT _hr = get_XYAspectRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2014)
inline void ZOSAPI_Interfaces::IUserGridRGBData::PutXYAspectRatio ( double pRetVal ) {
    HRESULT _hr = put_XYAspectRatio(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IUserTextData wrapper method implementations
//

#pragma implementation_key(2015)
inline _bstr_t ZOSAPI_Interfaces::IUserTextData::GetData ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Data(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2016)
inline void ZOSAPI_Interfaces::IUserTextData::PutData ( _bstr_t pRetVal ) {
    HRESULT _hr = put_Data(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IUserAnalysisData wrapper method implementations
//

#pragma implementation_key(2017)
inline long ZOSAPI_Interfaces::IUserAnalysisData::GetAnalysisNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_AnalysisNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2018)
inline enum ZOSAPI_Interfaces::UserAnalysisDataType ZOSAPI_Interfaces::IUserAnalysisData::GetPlotType ( ) {
    enum UserAnalysisDataType _result;
    HRESULT _hr = get_PlotType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2019)
inline _bstr_t ZOSAPI_Interfaces::IUserAnalysisData::GetWindowTitle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_WindowTitle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2020)
inline void ZOSAPI_Interfaces::IUserAnalysisData::PutWindowTitle ( _bstr_t pRetVal ) {
    HRESULT _hr = put_WindowTitle(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2021)
inline _bstr_t ZOSAPI_Interfaces::IUserAnalysisData::GetFeatureDescription ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FeatureDescription(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2022)
inline void ZOSAPI_Interfaces::IUserAnalysisData::PutFeatureDescription ( _bstr_t pRetVal ) {
    HRESULT _hr = put_FeatureDescription(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2023)
inline SAFEARRAY * ZOSAPI_Interfaces::IUserAnalysisData::GetHeaderData ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = get_HeaderData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2024)
inline void ZOSAPI_Interfaces::IUserAnalysisData::PutHeaderData ( SAFEARRAY * pRetVal ) {
    HRESULT _hr = put_HeaderData(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2025)
inline VARIANT_BOOL ZOSAPI_Interfaces::IUserAnalysisData::GetShowLegend ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowLegend(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2026)
inline void ZOSAPI_Interfaces::IUserAnalysisData::PutShowLegend ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_ShowLegend(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2027)
inline ZOSAPI_Interfaces::ISettingsDataPtr ZOSAPI_Interfaces::IUserAnalysisData::GetUserSettings ( ) {
    struct ISettingsData * _result = 0;
    HRESULT _hr = get_UserSettings(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISettingsDataPtr(_result, false);
}

#pragma implementation_key(2028)
inline VARIANT_BOOL ZOSAPI_Interfaces::IUserAnalysisData::GetRunAnalysisOnSettingsClosed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_RunAnalysisOnSettingsClosed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2029)
inline void ZOSAPI_Interfaces::IUserAnalysisData::PutRunAnalysisOnSettingsClosed ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_RunAnalysisOnSettingsClosed(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2030)
inline ZOSAPI_Interfaces::IUser2DLineDataPtr ZOSAPI_Interfaces::IUserAnalysisData::Make2DLinePlot ( _bstr_t PlotDescription, unsigned long numValues, double * xValues ) {
    struct IUser2DLineData * _result = 0;
    HRESULT _hr = raw_Make2DLinePlot(PlotDescription, numValues, xValues, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUser2DLineDataPtr(_result, false);
}

#pragma implementation_key(2031)
inline ZOSAPI_Interfaces::IUser2DLineDataPtr ZOSAPI_Interfaces::IUserAnalysisData::Make2DLinePlotSafe ( _bstr_t PlotDescription, SAFEARRAY * xValues ) {
    struct IUser2DLineData * _result = 0;
    HRESULT _hr = raw_Make2DLinePlotSafe(PlotDescription, xValues, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUser2DLineDataPtr(_result, false);
}

#pragma implementation_key(2032)
inline ZOSAPI_Interfaces::IUserGridDataPtr ZOSAPI_Interfaces::IUserAnalysisData::MakeGridPlot ( _bstr_t PlotDescription ) {
    struct IUserGridData * _result = 0;
    HRESULT _hr = raw_MakeGridPlot(PlotDescription, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUserGridDataPtr(_result, false);
}

#pragma implementation_key(2033)
inline ZOSAPI_Interfaces::IUserGridRGBDataPtr ZOSAPI_Interfaces::IUserAnalysisData::MakeGridRGBPlot ( _bstr_t PlotDescription ) {
    struct IUserGridRGBData * _result = 0;
    HRESULT _hr = raw_MakeGridRGBPlot(PlotDescription, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUserGridRGBDataPtr(_result, false);
}

#pragma implementation_key(2034)
inline ZOSAPI_Interfaces::IUserTextDataPtr ZOSAPI_Interfaces::IUserAnalysisData::MakeText ( ) {
    struct IUserTextData * _result = 0;
    HRESULT _hr = raw_MakeText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUserTextDataPtr(_result, false);
}

//
// interface IAR_Rgb wrapper method implementations
//

#pragma implementation_key(2035)
inline float ZOSAPI_Interfaces::IAR_Rgb::GetR ( ) {
    float _result = 0;
    HRESULT _hr = get_R(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2036)
inline float ZOSAPI_Interfaces::IAR_Rgb::GetG ( ) {
    float _result = 0;
    HRESULT _hr = get_G(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2037)
inline float ZOSAPI_Interfaces::IAR_Rgb::GetB ( ) {
    float _result = 0;
    HRESULT _hr = get_B(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IAR_ScatterPoint wrapper method implementations
//

#pragma implementation_key(2038)
inline double ZOSAPI_Interfaces::IAR_ScatterPoint::GetX ( ) {
    double _result = 0;
    HRESULT _hr = get_X(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2039)
inline double ZOSAPI_Interfaces::IAR_ScatterPoint::GetY ( ) {
    double _result = 0;
    HRESULT _hr = get_Y(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2040)
inline double ZOSAPI_Interfaces::IAR_ScatterPoint::GetValue ( ) {
    double _result = 0;
    HRESULT _hr = get_Value(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IAR_ScatterPointRgb wrapper method implementations
//

#pragma implementation_key(2041)
inline double ZOSAPI_Interfaces::IAR_ScatterPointRgb::GetX ( ) {
    double _result = 0;
    HRESULT _hr = get_X(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2042)
inline double ZOSAPI_Interfaces::IAR_ScatterPointRgb::GetY ( ) {
    double _result = 0;
    HRESULT _hr = get_Y(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2043)
inline ZOSAPI_Interfaces::IAR_RgbPtr ZOSAPI_Interfaces::IAR_ScatterPointRgb::GetValue ( ) {
    struct IAR_Rgb * _result = 0;
    HRESULT _hr = get_Value(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAR_RgbPtr(_result, false);
}

//
// interface IAR_MetaData wrapper method implementations
//

#pragma implementation_key(2044)
inline _bstr_t ZOSAPI_Interfaces::IAR_MetaData::GetFeatureDescription ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FeatureDescription(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2045)
inline _bstr_t ZOSAPI_Interfaces::IAR_MetaData::GetLensFile ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_LensFile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2046)
inline _bstr_t ZOSAPI_Interfaces::IAR_MetaData::GetLensTitle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_LensTitle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2047)
inline DATE ZOSAPI_Interfaces::IAR_MetaData::GetDate ( ) {
    DATE _result = 0;
    HRESULT _hr = get_Date(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IAR_HeaderData wrapper method implementations
//

#pragma implementation_key(2048)
inline SAFEARRAY * ZOSAPI_Interfaces::IAR_HeaderData::GetLines ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = get_Lines(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IAR_XYZ wrapper method implementations
//

#pragma implementation_key(2049)
inline double ZOSAPI_Interfaces::IAR_XYZ::GetX ( ) {
    double _result = 0;
    HRESULT _hr = get_X(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2050)
inline double ZOSAPI_Interfaces::IAR_XYZ::GetY ( ) {
    double _result = 0;
    HRESULT _hr = get_Y(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2051)
inline double ZOSAPI_Interfaces::IAR_XYZ::GetZ ( ) {
    double _result = 0;
    HRESULT _hr = get_Z(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IAR_DataGrid wrapper method implementations
//

#pragma implementation_key(2052)
inline _bstr_t ZOSAPI_Interfaces::IAR_DataGrid::GetDescription ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Description(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2053)
inline _bstr_t ZOSAPI_Interfaces::IAR_DataGrid::GetXLabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_XLabel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2054)
inline _bstr_t ZOSAPI_Interfaces::IAR_DataGrid::GetYLabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_YLabel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2055)
inline _bstr_t ZOSAPI_Interfaces::IAR_DataGrid::GetValueLabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ValueLabel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2056)
inline unsigned long ZOSAPI_Interfaces::IAR_DataGrid::GetNx ( ) {
    unsigned long _result = 0;
    HRESULT _hr = get_Nx(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2057)
inline unsigned long ZOSAPI_Interfaces::IAR_DataGrid::GetNy ( ) {
    unsigned long _result = 0;
    HRESULT _hr = get_Ny(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2058)
inline double ZOSAPI_Interfaces::IAR_DataGrid::GetDx ( ) {
    double _result = 0;
    HRESULT _hr = get_Dx(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2059)
inline double ZOSAPI_Interfaces::IAR_DataGrid::GetDy ( ) {
    double _result = 0;
    HRESULT _hr = get_Dy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2060)
inline double ZOSAPI_Interfaces::IAR_DataGrid::GetMinX ( ) {
    double _result = 0;
    HRESULT _hr = get_MinX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2061)
inline double ZOSAPI_Interfaces::IAR_DataGrid::GetMinY ( ) {
    double _result = 0;
    HRESULT _hr = get_MinY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2062)
inline SAFEARRAY * ZOSAPI_Interfaces::IAR_DataGrid::GetValues ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = get_Values(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2063)
inline ZOSAPI_Interfaces::IMatrixDataPtr ZOSAPI_Interfaces::IAR_DataGrid::GetValueData ( ) {
    struct IMatrixData * _result = 0;
    HRESULT _hr = get_ValueData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IMatrixDataPtr(_result, false);
}

#pragma implementation_key(2064)
inline double ZOSAPI_Interfaces::IAR_DataGrid::X ( long rowX ) {
    double _result = 0;
    HRESULT _hr = raw_X(rowX, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2065)
inline double ZOSAPI_Interfaces::IAR_DataGrid::Y ( long colY ) {
    double _result = 0;
    HRESULT _hr = raw_Y(colY, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2066)
inline double ZOSAPI_Interfaces::IAR_DataGrid::Z ( long rowX, long colY ) {
    double _result = 0;
    HRESULT _hr = raw_Z(rowX, colY, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2067)
inline ZOSAPI_Interfaces::IAR_XYZPtr ZOSAPI_Interfaces::IAR_DataGrid::XYZ ( long rowX, long colY ) {
    struct IAR_XYZ * _result = 0;
    HRESULT _hr = raw_XYZ(rowX, colY, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAR_XYZPtr(_result, false);
}

//
// interface IAR_DataGridRgb wrapper method implementations
//

#pragma implementation_key(2068)
inline _bstr_t ZOSAPI_Interfaces::IAR_DataGridRgb::GetDescription ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Description(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2069)
inline _bstr_t ZOSAPI_Interfaces::IAR_DataGridRgb::GetXLabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_XLabel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2070)
inline _bstr_t ZOSAPI_Interfaces::IAR_DataGridRgb::GetYLabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_YLabel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2071)
inline _bstr_t ZOSAPI_Interfaces::IAR_DataGridRgb::GetValueLabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ValueLabel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2072)
inline unsigned long ZOSAPI_Interfaces::IAR_DataGridRgb::GetNx ( ) {
    unsigned long _result = 0;
    HRESULT _hr = get_Nx(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2073)
inline unsigned long ZOSAPI_Interfaces::IAR_DataGridRgb::GetNy ( ) {
    unsigned long _result = 0;
    HRESULT _hr = get_Ny(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2074)
inline double ZOSAPI_Interfaces::IAR_DataGridRgb::GetDx ( ) {
    double _result = 0;
    HRESULT _hr = get_Dx(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2075)
inline double ZOSAPI_Interfaces::IAR_DataGridRgb::GetDy ( ) {
    double _result = 0;
    HRESULT _hr = get_Dy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2076)
inline double ZOSAPI_Interfaces::IAR_DataGridRgb::GetMinX ( ) {
    double _result = 0;
    HRESULT _hr = get_MinX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2077)
inline double ZOSAPI_Interfaces::IAR_DataGridRgb::GetMinY ( ) {
    double _result = 0;
    HRESULT _hr = get_MinY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2078)
inline SAFEARRAY * ZOSAPI_Interfaces::IAR_DataGridRgb::GetValues ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = get_Values(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2079)
inline ZOSAPI_Interfaces::IAR_RgbPtr ZOSAPI_Interfaces::IAR_DataGridRgb::GetValue ( long X, long Y ) {
    struct IAR_Rgb * _result = 0;
    HRESULT _hr = raw_GetValue(X, Y, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAR_RgbPtr(_result, false);
}

#pragma implementation_key(2080)
inline HRESULT ZOSAPI_Interfaces::IAR_DataGridRgb::FillValues ( unsigned long fullSize, float * rData, float * gData, float * bData ) {
    HRESULT _hr = raw_FillValues(fullSize, rData, gData, bData);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IAR_DataSeries wrapper method implementations
//

#pragma implementation_key(2081)
inline _bstr_t ZOSAPI_Interfaces::IAR_DataSeries::GetDescription ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Description(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2082)
inline _bstr_t ZOSAPI_Interfaces::IAR_DataSeries::GetXLabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_XLabel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2083)
inline ZOSAPI_Interfaces::IVectorDataPtr ZOSAPI_Interfaces::IAR_DataSeries::GetXData ( ) {
    struct IVectorData * _result = 0;
    HRESULT _hr = get_XData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IVectorDataPtr(_result, false);
}

#pragma implementation_key(2084)
inline SAFEARRAY * ZOSAPI_Interfaces::IAR_DataSeries::GetSeriesLabels ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = get_SeriesLabels(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2085)
inline long ZOSAPI_Interfaces::IAR_DataSeries::GetNumSeries ( ) {
    long _result = 0;
    HRESULT _hr = get_NumSeries(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2086)
inline ZOSAPI_Interfaces::IMatrixDataPtr ZOSAPI_Interfaces::IAR_DataSeries::GetYData ( ) {
    struct IMatrixData * _result = 0;
    HRESULT _hr = get_YData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IMatrixDataPtr(_result, false);
}

//
// interface IAR_DataSeriesRgb wrapper method implementations
//

#pragma implementation_key(2087)
inline _bstr_t ZOSAPI_Interfaces::IAR_DataSeriesRgb::GetDescription ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Description(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2088)
inline unsigned long ZOSAPI_Interfaces::IAR_DataSeriesRgb::GetNumSeries ( ) {
    unsigned long _result = 0;
    HRESULT _hr = get_NumSeries(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2089)
inline ZOSAPI_Interfaces::IVectorDataPtr ZOSAPI_Interfaces::IAR_DataSeriesRgb::GetXData ( ) {
    struct IVectorData * _result = 0;
    HRESULT _hr = get_XData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IVectorDataPtr(_result, false);
}

#pragma implementation_key(2090)
inline unsigned long ZOSAPI_Interfaces::IAR_DataSeriesRgb::GetNumberOfRows ( ) {
    unsigned long _result = 0;
    HRESULT _hr = get_NumberOfRows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2091)
inline SAFEARRAY * ZOSAPI_Interfaces::IAR_DataSeriesRgb::GetYVals ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = get_YVals(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2092)
inline ZOSAPI_Interfaces::IAR_RgbPtr ZOSAPI_Interfaces::IAR_DataSeriesRgb::GetYPoint ( long Row, long Col ) {
    struct IAR_Rgb * _result = 0;
    HRESULT _hr = raw_GetYPoint(Row, Col, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAR_RgbPtr(_result, false);
}

#pragma implementation_key(2093)
inline HRESULT ZOSAPI_Interfaces::IAR_DataSeriesRgb::FillYValues ( unsigned long fullSize, float * rData, float * gData, float * bData ) {
    HRESULT _hr = raw_FillYValues(fullSize, rData, gData, bData);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2094)
inline _bstr_t ZOSAPI_Interfaces::IAR_DataSeriesRgb::GetXLabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_XLabel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2095)
inline SAFEARRAY * ZOSAPI_Interfaces::IAR_DataSeriesRgb::GetSeriesLabels ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = get_SeriesLabels(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IAR_DataScatterPoints wrapper method implementations
//

#pragma implementation_key(2096)
inline _bstr_t ZOSAPI_Interfaces::IAR_DataScatterPoints::GetDescription ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Description(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2097)
inline unsigned long ZOSAPI_Interfaces::IAR_DataScatterPoints::GetNumPoints ( ) {
    unsigned long _result = 0;
    HRESULT _hr = get_NumPoints(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2098)
inline SAFEARRAY * ZOSAPI_Interfaces::IAR_DataScatterPoints::GetPoints ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = get_Points(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2099)
inline ZOSAPI_Interfaces::IAR_ScatterPointPtr ZOSAPI_Interfaces::IAR_DataScatterPoints::GetPoint ( long idx ) {
    struct IAR_ScatterPoint * _result = 0;
    HRESULT _hr = raw_GetPoint(idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAR_ScatterPointPtr(_result, false);
}

#pragma implementation_key(2100)
inline HRESULT ZOSAPI_Interfaces::IAR_DataScatterPoints::FillPointValues ( unsigned long fullSize, double * XData, double * YData, double * ValueData ) {
    HRESULT _hr = raw_FillPointValues(fullSize, XData, YData, ValueData);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2101)
inline _bstr_t ZOSAPI_Interfaces::IAR_DataScatterPoints::GetXLabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_XLabel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2102)
inline _bstr_t ZOSAPI_Interfaces::IAR_DataScatterPoints::GetYLabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_YLabel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2103)
inline _bstr_t ZOSAPI_Interfaces::IAR_DataScatterPoints::GetValueLabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ValueLabel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

//
// interface IAR_DataScatterPointsRgb wrapper method implementations
//

#pragma implementation_key(2104)
inline _bstr_t ZOSAPI_Interfaces::IAR_DataScatterPointsRgb::GetDescription ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Description(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2105)
inline unsigned long ZOSAPI_Interfaces::IAR_DataScatterPointsRgb::GetNumPoints ( ) {
    unsigned long _result = 0;
    HRESULT _hr = get_NumPoints(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2106)
inline SAFEARRAY * ZOSAPI_Interfaces::IAR_DataScatterPointsRgb::GetPoints ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = get_Points(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2107)
inline ZOSAPI_Interfaces::IAR_ScatterPointRgbPtr ZOSAPI_Interfaces::IAR_DataScatterPointsRgb::GetPoint ( long idx ) {
    struct IAR_ScatterPointRgb * _result = 0;
    HRESULT _hr = raw_GetPoint(idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAR_ScatterPointRgbPtr(_result, false);
}

#pragma implementation_key(2108)
inline HRESULT ZOSAPI_Interfaces::IAR_DataScatterPointsRgb::FillPointValues ( unsigned long fullSize, double * XData, double * YData, float * rData, float * gData, float * bData ) {
    HRESULT _hr = raw_FillPointValues(fullSize, XData, YData, rData, gData, bData);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2109)
inline _bstr_t ZOSAPI_Interfaces::IAR_DataScatterPointsRgb::GetXLabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_XLabel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2110)
inline _bstr_t ZOSAPI_Interfaces::IAR_DataScatterPointsRgb::GetYLabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_YLabel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2111)
inline _bstr_t ZOSAPI_Interfaces::IAR_DataScatterPointsRgb::GetValueLabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ValueLabel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

//
// interface IAR_RayInfo wrapper method implementations
//

#pragma implementation_key(2112)
inline long ZOSAPI_Interfaces::IAR_RayInfo::GetrayIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_rayIndex(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2113)
inline long ZOSAPI_Interfaces::IAR_RayInfo::GetSegment ( ) {
    long _result = 0;
    HRESULT _hr = get_Segment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2114)
inline long ZOSAPI_Interfaces::IAR_RayInfo::Getparent ( ) {
    long _result = 0;
    HRESULT _hr = get_parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2115)
inline long ZOSAPI_Interfaces::IAR_RayInfo::Getlevel ( ) {
    long _result = 0;
    HRESULT _hr = get_level(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2116)
inline long ZOSAPI_Interfaces::IAR_RayInfo::Getin_object ( ) {
    long _result = 0;
    HRESULT _hr = get_in_object(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2117)
inline long ZOSAPI_Interfaces::IAR_RayInfo::Gethit_object ( ) {
    long _result = 0;
    HRESULT _hr = get_hit_object(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2118)
inline long ZOSAPI_Interfaces::IAR_RayInfo::Gethit_face ( ) {
    long _result = 0;
    HRESULT _hr = get_hit_face(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2119)
inline double ZOSAPI_Interfaces::IAR_RayInfo::GetX ( ) {
    double _result = 0;
    HRESULT _hr = get_X(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2120)
inline double ZOSAPI_Interfaces::IAR_RayInfo::GetY ( ) {
    double _result = 0;
    HRESULT _hr = get_Y(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2121)
inline double ZOSAPI_Interfaces::IAR_RayInfo::GetZ ( ) {
    double _result = 0;
    HRESULT _hr = get_Z(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2122)
inline double ZOSAPI_Interfaces::IAR_RayInfo::GetL ( ) {
    double _result = 0;
    HRESULT _hr = get_L(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2123)
inline double ZOSAPI_Interfaces::IAR_RayInfo::GetM ( ) {
    double _result = 0;
    HRESULT _hr = get_M(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2124)
inline double ZOSAPI_Interfaces::IAR_RayInfo::GetN ( ) {
    double _result = 0;
    HRESULT _hr = get_N(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2125)
inline double ZOSAPI_Interfaces::IAR_RayInfo::GetNx ( ) {
    double _result = 0;
    HRESULT _hr = get_Nx(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2126)
inline double ZOSAPI_Interfaces::IAR_RayInfo::GetNy ( ) {
    double _result = 0;
    HRESULT _hr = get_Ny(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2127)
inline double ZOSAPI_Interfaces::IAR_RayInfo::GetNz ( ) {
    double _result = 0;
    HRESULT _hr = get_Nz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2128)
inline double ZOSAPI_Interfaces::IAR_RayInfo::GetEx ( ) {
    double _result = 0;
    HRESULT _hr = get_Ex(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2129)
inline double ZOSAPI_Interfaces::IAR_RayInfo::GetEy ( ) {
    double _result = 0;
    HRESULT _hr = get_Ey(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2130)
inline double ZOSAPI_Interfaces::IAR_RayInfo::GetEz ( ) {
    double _result = 0;
    HRESULT _hr = get_Ez(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2131)
inline double ZOSAPI_Interfaces::IAR_RayInfo::GetpathLength ( ) {
    double _result = 0;
    HRESULT _hr = get_pathLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2132)
inline double ZOSAPI_Interfaces::IAR_RayInfo::GetOpticalPathLength ( ) {
    double _result = 0;
    HRESULT _hr = get_OpticalPathLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2133)
inline double ZOSAPI_Interfaces::IAR_RayInfo::GetWavelength ( ) {
    double _result = 0;
    HRESULT _hr = get_Wavelength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2134)
inline long ZOSAPI_Interfaces::IAR_RayInfo::GetVignetted ( ) {
    long _result = 0;
    HRESULT _hr = get_Vignetted(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2135)
inline long ZOSAPI_Interfaces::IAR_RayInfo::Geterror ( ) {
    long _result = 0;
    HRESULT _hr = get_error(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IAR_RayData wrapper method implementations
//

#pragma implementation_key(2136)
inline _bstr_t ZOSAPI_Interfaces::IAR_RayData::GetDescription ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Description(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2137)
inline unsigned long ZOSAPI_Interfaces::IAR_RayData::GetNumRays ( ) {
    unsigned long _result = 0;
    HRESULT _hr = get_NumRays(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2138)
inline SAFEARRAY * ZOSAPI_Interfaces::IAR_RayData::GetRays ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = get_Rays(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2139)
inline ZOSAPI_Interfaces::IAR_RayInfoPtr ZOSAPI_Interfaces::IAR_RayData::GetRay ( long idx ) {
    struct IAR_RayInfo * _result = 0;
    HRESULT _hr = raw_GetRay(idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAR_RayInfoPtr(_result, false);
}

//
// interface IAR_CriticalRayInfo wrapper method implementations
//

#pragma implementation_key(2140)
inline long ZOSAPI_Interfaces::IAR_CriticalRayInfo::GetFieldPoint ( ) {
    long _result = 0;
    HRESULT _hr = get_FieldPoint(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2141)
inline enum ZOSAPI_Interfaces::CriticalRayType ZOSAPI_Interfaces::IAR_CriticalRayInfo::GetrayType ( ) {
    enum CriticalRayType _result;
    HRESULT _hr = get_rayType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2142)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAR_CriticalRayInfo::GetPass ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Pass(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2143)
inline long ZOSAPI_Interfaces::IAR_CriticalRayInfo::GetTerminationObject ( ) {
    long _result = 0;
    HRESULT _hr = get_TerminationObject(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2144)
inline double ZOSAPI_Interfaces::IAR_CriticalRayInfo::GetWavelength ( ) {
    double _result = 0;
    HRESULT _hr = get_Wavelength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2145)
inline double ZOSAPI_Interfaces::IAR_CriticalRayInfo::GetXIn ( ) {
    double _result = 0;
    HRESULT _hr = get_XIn(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2146)
inline double ZOSAPI_Interfaces::IAR_CriticalRayInfo::GetYIn ( ) {
    double _result = 0;
    HRESULT _hr = get_YIn(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2147)
inline double ZOSAPI_Interfaces::IAR_CriticalRayInfo::GetZIn ( ) {
    double _result = 0;
    HRESULT _hr = get_ZIn(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2148)
inline double ZOSAPI_Interfaces::IAR_CriticalRayInfo::GetLIn ( ) {
    double _result = 0;
    HRESULT _hr = get_LIn(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2149)
inline double ZOSAPI_Interfaces::IAR_CriticalRayInfo::GetMin ( ) {
    double _result = 0;
    HRESULT _hr = get_Min(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2150)
inline double ZOSAPI_Interfaces::IAR_CriticalRayInfo::GetNIn ( ) {
    double _result = 0;
    HRESULT _hr = get_NIn(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2151)
inline double ZOSAPI_Interfaces::IAR_CriticalRayInfo::GetXTarget ( ) {
    double _result = 0;
    HRESULT _hr = get_XTarget(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2152)
inline double ZOSAPI_Interfaces::IAR_CriticalRayInfo::GetYTarget ( ) {
    double _result = 0;
    HRESULT _hr = get_YTarget(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2153)
inline double ZOSAPI_Interfaces::IAR_CriticalRayInfo::GetZTarget ( ) {
    double _result = 0;
    HRESULT _hr = get_ZTarget(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2154)
inline double ZOSAPI_Interfaces::IAR_CriticalRayInfo::GetLTarget ( ) {
    double _result = 0;
    HRESULT _hr = get_LTarget(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2155)
inline double ZOSAPI_Interfaces::IAR_CriticalRayInfo::GetMTarget ( ) {
    double _result = 0;
    HRESULT _hr = get_MTarget(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2156)
inline double ZOSAPI_Interfaces::IAR_CriticalRayInfo::GetNTarget ( ) {
    double _result = 0;
    HRESULT _hr = get_NTarget(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2157)
inline double ZOSAPI_Interfaces::IAR_CriticalRayInfo::GetXActual ( ) {
    double _result = 0;
    HRESULT _hr = get_XActual(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2158)
inline double ZOSAPI_Interfaces::IAR_CriticalRayInfo::GetYActual ( ) {
    double _result = 0;
    HRESULT _hr = get_YActual(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2159)
inline double ZOSAPI_Interfaces::IAR_CriticalRayInfo::GetZActual ( ) {
    double _result = 0;
    HRESULT _hr = get_ZActual(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2160)
inline double ZOSAPI_Interfaces::IAR_CriticalRayInfo::GetLActual ( ) {
    double _result = 0;
    HRESULT _hr = get_LActual(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2161)
inline double ZOSAPI_Interfaces::IAR_CriticalRayInfo::GetMActual ( ) {
    double _result = 0;
    HRESULT _hr = get_MActual(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2162)
inline double ZOSAPI_Interfaces::IAR_CriticalRayInfo::GetNActual ( ) {
    double _result = 0;
    HRESULT _hr = get_NActual(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IAR_CriticalRayData wrapper method implementations
//

#pragma implementation_key(2163)
inline unsigned long ZOSAPI_Interfaces::IAR_CriticalRayData::GetNumRays ( ) {
    unsigned long _result = 0;
    HRESULT _hr = get_NumRays(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2164)
inline SAFEARRAY * ZOSAPI_Interfaces::IAR_CriticalRayData::GetHeaderLabels ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = get_HeaderLabels(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2165)
inline SAFEARRAY * ZOSAPI_Interfaces::IAR_CriticalRayData::GetRays ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = get_Rays(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2166)
inline ZOSAPI_Interfaces::IAR_CriticalRayInfoPtr ZOSAPI_Interfaces::IAR_CriticalRayData::GetRay ( unsigned long idx ) {
    struct IAR_CriticalRayInfo * _result = 0;
    HRESULT _hr = raw_GetRay(idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAR_CriticalRayInfoPtr(_result, false);
}

//
// interface IAR_SpotDataResult wrapper method implementations
//

#pragma implementation_key(2167)
inline double ZOSAPI_Interfaces::IAR_SpotDataResult::GetX ( ) {
    double _result = 0;
    HRESULT _hr = get_X(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2168)
inline void ZOSAPI_Interfaces::IAR_SpotDataResult::PutX ( double pRetVal ) {
    HRESULT _hr = put_X(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2169)
inline double ZOSAPI_Interfaces::IAR_SpotDataResult::GetY ( ) {
    double _result = 0;
    HRESULT _hr = get_Y(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2170)
inline void ZOSAPI_Interfaces::IAR_SpotDataResult::PutY ( double pRetVal ) {
    HRESULT _hr = put_Y(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2171)
inline double ZOSAPI_Interfaces::IAR_SpotDataResult::GetZ ( ) {
    double _result = 0;
    HRESULT _hr = get_Z(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2172)
inline void ZOSAPI_Interfaces::IAR_SpotDataResult::PutZ ( double pRetVal ) {
    HRESULT _hr = put_Z(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2173)
inline double ZOSAPI_Interfaces::IAR_SpotDataResult::GetL ( ) {
    double _result = 0;
    HRESULT _hr = get_L(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2174)
inline void ZOSAPI_Interfaces::IAR_SpotDataResult::PutL ( double pRetVal ) {
    HRESULT _hr = put_L(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2175)
inline double ZOSAPI_Interfaces::IAR_SpotDataResult::GetM ( ) {
    double _result = 0;
    HRESULT _hr = get_M(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2176)
inline void ZOSAPI_Interfaces::IAR_SpotDataResult::PutM ( double pRetVal ) {
    HRESULT _hr = put_M(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2177)
inline double ZOSAPI_Interfaces::IAR_SpotDataResult::GetN ( ) {
    double _result = 0;
    HRESULT _hr = get_N(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2178)
inline void ZOSAPI_Interfaces::IAR_SpotDataResult::PutN ( double pRetVal ) {
    HRESULT _hr = put_N(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2179)
inline double ZOSAPI_Interfaces::IAR_SpotDataResult::GetDetector_X ( ) {
    double _result = 0;
    HRESULT _hr = get_Detector_X(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2180)
inline void ZOSAPI_Interfaces::IAR_SpotDataResult::PutDetector_X ( double pRetVal ) {
    HRESULT _hr = put_Detector_X(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2181)
inline double ZOSAPI_Interfaces::IAR_SpotDataResult::GetDetector_Y ( ) {
    double _result = 0;
    HRESULT _hr = get_Detector_Y(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2182)
inline void ZOSAPI_Interfaces::IAR_SpotDataResult::PutDetector_Y ( double pRetVal ) {
    HRESULT _hr = put_Detector_Y(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2183)
inline double ZOSAPI_Interfaces::IAR_SpotDataResult::GetDetector_Z ( ) {
    double _result = 0;
    HRESULT _hr = get_Detector_Z(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2184)
inline void ZOSAPI_Interfaces::IAR_SpotDataResult::PutDetector_Z ( double pRetVal ) {
    HRESULT _hr = put_Detector_Z(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2185)
inline double ZOSAPI_Interfaces::IAR_SpotDataResult::GetRefCoord_X ( ) {
    double _result = 0;
    HRESULT _hr = get_RefCoord_X(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2186)
inline void ZOSAPI_Interfaces::IAR_SpotDataResult::PutRefCoord_X ( double pRetVal ) {
    HRESULT _hr = put_RefCoord_X(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2187)
inline double ZOSAPI_Interfaces::IAR_SpotDataResult::GetRefCoord_Y ( ) {
    double _result = 0;
    HRESULT _hr = get_RefCoord_Y(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2188)
inline void ZOSAPI_Interfaces::IAR_SpotDataResult::PutRefCoord_Y ( double pRetVal ) {
    HRESULT _hr = put_RefCoord_Y(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2189)
inline double ZOSAPI_Interfaces::IAR_SpotDataResult::GetRMSSpot_X ( ) {
    double _result = 0;
    HRESULT _hr = get_RMSSpot_X(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2190)
inline void ZOSAPI_Interfaces::IAR_SpotDataResult::PutRMSSpot_X ( double pRetVal ) {
    HRESULT _hr = put_RMSSpot_X(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2191)
inline double ZOSAPI_Interfaces::IAR_SpotDataResult::GetRMSSpot_Y ( ) {
    double _result = 0;
    HRESULT _hr = get_RMSSpot_Y(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2192)
inline void ZOSAPI_Interfaces::IAR_SpotDataResult::PutRMSSpot_Y ( double pRetVal ) {
    HRESULT _hr = put_RMSSpot_Y(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2193)
inline double ZOSAPI_Interfaces::IAR_SpotDataResult::GetRMSSpotSize ( ) {
    double _result = 0;
    HRESULT _hr = get_RMSSpotSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2194)
inline void ZOSAPI_Interfaces::IAR_SpotDataResult::PutRMSSpotSize ( double pRetVal ) {
    HRESULT _hr = put_RMSSpotSize(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2195)
inline double ZOSAPI_Interfaces::IAR_SpotDataResult::GetGeoSpotSize ( ) {
    double _result = 0;
    HRESULT _hr = get_GeoSpotSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2196)
inline void ZOSAPI_Interfaces::IAR_SpotDataResult::PutGeoSpotSize ( double pRetVal ) {
    HRESULT _hr = put_GeoSpotSize(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IAR_SpotDataResultMatrix wrapper method implementations
//

#pragma implementation_key(2197)
inline double ZOSAPI_Interfaces::IAR_SpotDataResultMatrix::Get_X_For ( long fieldN, long waveN ) {
    double _result = 0;
    HRESULT _hr = raw_Get_X_For(fieldN, waveN, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2198)
inline double ZOSAPI_Interfaces::IAR_SpotDataResultMatrix::Get_Y_For ( long fieldN, long waveN ) {
    double _result = 0;
    HRESULT _hr = raw_Get_Y_For(fieldN, waveN, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2199)
inline double ZOSAPI_Interfaces::IAR_SpotDataResultMatrix::Get_Z_For ( long fieldN, long waveN ) {
    double _result = 0;
    HRESULT _hr = raw_Get_Z_For(fieldN, waveN, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2200)
inline double ZOSAPI_Interfaces::IAR_SpotDataResultMatrix::Get_L_For ( long fieldN, long waveN ) {
    double _result = 0;
    HRESULT _hr = raw_Get_L_For(fieldN, waveN, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2201)
inline double ZOSAPI_Interfaces::IAR_SpotDataResultMatrix::Get_M_For ( long fieldN, long waveN ) {
    double _result = 0;
    HRESULT _hr = raw_Get_M_For(fieldN, waveN, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2202)
inline double ZOSAPI_Interfaces::IAR_SpotDataResultMatrix::Get_N_For ( long fieldN, long waveN ) {
    double _result = 0;
    HRESULT _hr = raw_Get_N_For(fieldN, waveN, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2203)
inline double ZOSAPI_Interfaces::IAR_SpotDataResultMatrix::GetDetector_X_For ( long fieldN, long waveN ) {
    double _result = 0;
    HRESULT _hr = raw_GetDetector_X_For(fieldN, waveN, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2204)
inline double ZOSAPI_Interfaces::IAR_SpotDataResultMatrix::GetDetector_Y_For ( long fieldN, long waveN ) {
    double _result = 0;
    HRESULT _hr = raw_GetDetector_Y_For(fieldN, waveN, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2205)
inline double ZOSAPI_Interfaces::IAR_SpotDataResultMatrix::GetDetector_Z_For ( long fieldN, long waveN ) {
    double _result = 0;
    HRESULT _hr = raw_GetDetector_Z_For(fieldN, waveN, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2206)
inline double ZOSAPI_Interfaces::IAR_SpotDataResultMatrix::GetGeoSpotSizeFor ( long fieldN, long waveN ) {
    double _result = 0;
    HRESULT _hr = raw_GetGeoSpotSizeFor(fieldN, waveN, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2207)
inline double ZOSAPI_Interfaces::IAR_SpotDataResultMatrix::GetRMSSpotSizeFor ( long fieldN, long waveN ) {
    double _result = 0;
    HRESULT _hr = raw_GetRMSSpotSizeFor(fieldN, waveN, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2208)
inline double ZOSAPI_Interfaces::IAR_SpotDataResultMatrix::GetRMSSpot_X_For ( long fieldN, long waveN ) {
    double _result = 0;
    HRESULT _hr = raw_GetRMSSpot_X_For(fieldN, waveN, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2209)
inline double ZOSAPI_Interfaces::IAR_SpotDataResultMatrix::GetRMSSpot_Y_For ( long fieldN, long waveN ) {
    double _result = 0;
    HRESULT _hr = raw_GetRMSSpot_Y_For(fieldN, waveN, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2210)
inline double ZOSAPI_Interfaces::IAR_SpotDataResultMatrix::GetReferenceCoordinate_X_For ( long fieldN, long waveN ) {
    double _result = 0;
    HRESULT _hr = raw_GetReferenceCoordinate_X_For(fieldN, waveN, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2211)
inline double ZOSAPI_Interfaces::IAR_SpotDataResultMatrix::GetReferenceCoordinate_Y_For ( long fieldN, long waveN ) {
    double _result = 0;
    HRESULT _hr = raw_GetReferenceCoordinate_Y_For(fieldN, waveN, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2212)
inline double ZOSAPI_Interfaces::IAR_SpotDataResultMatrix::GetHalfWidth_X ( ) {
    double _result = 0;
    HRESULT _hr = get_HalfWidth_X(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2213)
inline double ZOSAPI_Interfaces::IAR_SpotDataResultMatrix::GetHalfWidth_Y ( ) {
    double _result = 0;
    HRESULT _hr = get_HalfWidth_Y(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2214)
inline double ZOSAPI_Interfaces::IAR_SpotDataResultMatrix::GetMaxRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_MaxRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2215)
inline double ZOSAPI_Interfaces::IAR_SpotDataResultMatrix::GetMeanRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_MeanRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2216)
inline long ZOSAPI_Interfaces::IAR_SpotDataResultMatrix::GetNumberOfFields ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfFields(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2217)
inline long ZOSAPI_Interfaces::IAR_SpotDataResultMatrix::GetNumberOfWavelengths ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfWavelengths(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IAR_PathAnalysisEntry wrapper method implementations
//

#pragma implementation_key(2218)
inline unsigned long ZOSAPI_Interfaces::IAR_PathAnalysisEntry::GetPathNumber ( ) {
    unsigned long _result = 0;
    HRESULT _hr = get_PathNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2219)
inline unsigned __int64 ZOSAPI_Interfaces::IAR_PathAnalysisEntry::GetRaysInPath ( ) {
    unsigned __int64 _result = 0;
    HRESULT _hr = get_RaysInPath(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2220)
inline unsigned long ZOSAPI_Interfaces::IAR_PathAnalysisEntry::GetHitsInPath ( ) {
    unsigned long _result = 0;
    HRESULT _hr = get_HitsInPath(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2221)
inline unsigned long ZOSAPI_Interfaces::IAR_PathAnalysisEntry::GetGhostsInPath ( ) {
    unsigned long _result = 0;
    HRESULT _hr = get_GhostsInPath(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2222)
inline unsigned long ZOSAPI_Interfaces::IAR_PathAnalysisEntry::GetUniqueObjectsInPath ( ) {
    unsigned long _result = 0;
    HRESULT _hr = get_UniqueObjectsInPath(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2223)
inline double ZOSAPI_Interfaces::IAR_PathAnalysisEntry::GetTotalPathFlux ( ) {
    double _result = 0;
    HRESULT _hr = get_TotalPathFlux(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2224)
inline unsigned long ZOSAPI_Interfaces::IAR_PathAnalysisEntry::GetNumberOfObjectsInPath ( ) {
    unsigned long _result = 0;
    HRESULT _hr = get_NumberOfObjectsInPath(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2225)
inline SAFEARRAY * ZOSAPI_Interfaces::IAR_PathAnalysisEntry::GetPathObjectList ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = get_PathObjectList(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2226)
inline long ZOSAPI_Interfaces::IAR_PathAnalysisEntry::GetPathObjectNumber ( long ObjectNumber ) {
    long _result = 0;
    HRESULT _hr = raw_GetPathObjectNumber(ObjectNumber, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2227)
inline long ZOSAPI_Interfaces::IAR_PathAnalysisEntry::GetPathSource ( ) {
    long _result = 0;
    HRESULT _hr = get_PathSource(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IAR_PathAnalysisData wrapper method implementations
//

#pragma implementation_key(2228)
inline double ZOSAPI_Interfaces::IAR_PathAnalysisData::GetTotalFluxIn ( ) {
    double _result = 0;
    HRESULT _hr = get_TotalFluxIn(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2229)
inline double ZOSAPI_Interfaces::IAR_PathAnalysisData::GetTotalFluxOut ( ) {
    double _result = 0;
    HRESULT _hr = get_TotalFluxOut(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2230)
inline unsigned long ZOSAPI_Interfaces::IAR_PathAnalysisData::GetTotalRays ( ) {
    unsigned long _result = 0;
    HRESULT _hr = get_TotalRays(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2231)
inline unsigned long ZOSAPI_Interfaces::IAR_PathAnalysisData::GetTotalHits ( ) {
    unsigned long _result = 0;
    HRESULT _hr = get_TotalHits(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2232)
inline unsigned long ZOSAPI_Interfaces::IAR_PathAnalysisData::GetNumPaths ( ) {
    unsigned long _result = 0;
    HRESULT _hr = get_NumPaths(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2233)
inline SAFEARRAY * ZOSAPI_Interfaces::IAR_PathAnalysisData::GetPaths ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = get_Paths(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2234)
inline ZOSAPI_Interfaces::IAR_PathAnalysisEntryPtr ZOSAPI_Interfaces::IAR_PathAnalysisData::GetPathNumber ( unsigned long idx ) {
    struct IAR_PathAnalysisEntry * _result = 0;
    HRESULT _hr = raw_GetPathNumber(idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAR_PathAnalysisEntryPtr(_result, false);
}

//
// interface IAR_ wrapper method implementations
//

#pragma implementation_key(2235)
inline ZOSAPI_Interfaces::IAR_MetaDataPtr ZOSAPI_Interfaces::IAR_::GetMetaData ( ) {
    struct IAR_MetaData * _result = 0;
    HRESULT _hr = get_MetaData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAR_MetaDataPtr(_result, false);
}

#pragma implementation_key(2236)
inline ZOSAPI_Interfaces::IAR_HeaderDataPtr ZOSAPI_Interfaces::IAR_::GetHeaderData ( ) {
    struct IAR_HeaderData * _result = 0;
    HRESULT _hr = get_HeaderData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAR_HeaderDataPtr(_result, false);
}

#pragma implementation_key(2237)
inline long ZOSAPI_Interfaces::IAR_::GetNumberOfDataGrids ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfDataGrids(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2238)
inline ZOSAPI_Interfaces::IAR_DataGridPtr ZOSAPI_Interfaces::IAR_::GetDataGrid ( long index ) {
    struct IAR_DataGrid * _result = 0;
    HRESULT _hr = raw_GetDataGrid(index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAR_DataGridPtr(_result, false);
}

#pragma implementation_key(2239)
inline SAFEARRAY * ZOSAPI_Interfaces::IAR_::GetDataGrids ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = get_DataGrids(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2240)
inline long ZOSAPI_Interfaces::IAR_::GetNumberOfDataGridsRgb ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfDataGridsRgb(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2241)
inline ZOSAPI_Interfaces::IAR_DataGridRgbPtr ZOSAPI_Interfaces::IAR_::GetDataGridRgb ( long index ) {
    struct IAR_DataGridRgb * _result = 0;
    HRESULT _hr = raw_GetDataGridRgb(index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAR_DataGridRgbPtr(_result, false);
}

#pragma implementation_key(2242)
inline SAFEARRAY * ZOSAPI_Interfaces::IAR_::GetDataGridsRgb ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = get_DataGridsRgb(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2243)
inline long ZOSAPI_Interfaces::IAR_::GetNumberOfDataSeries ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfDataSeries(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2244)
inline ZOSAPI_Interfaces::IAR_DataSeriesPtr ZOSAPI_Interfaces::IAR_::GetDataSeries ( long index ) {
    struct IAR_DataSeries * _result = 0;
    HRESULT _hr = raw_GetDataSeries(index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAR_DataSeriesPtr(_result, false);
}

#pragma implementation_key(2245)
inline SAFEARRAY * ZOSAPI_Interfaces::IAR_::GetDataSeries ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = get_DataSeries(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2246)
inline long ZOSAPI_Interfaces::IAR_::GetNumberOfDataSeriesRgb ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfDataSeriesRgb(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2247)
inline ZOSAPI_Interfaces::IAR_DataSeriesRgbPtr ZOSAPI_Interfaces::IAR_::GetDataSeriesRgb ( long index ) {
    struct IAR_DataSeriesRgb * _result = 0;
    HRESULT _hr = raw_GetDataSeriesRgb(index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAR_DataSeriesRgbPtr(_result, false);
}

#pragma implementation_key(2248)
inline SAFEARRAY * ZOSAPI_Interfaces::IAR_::GetDataSeriesRgb ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = get_DataSeriesRgb(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2249)
inline long ZOSAPI_Interfaces::IAR_::GetNumberOfDataScatterPoints ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfDataScatterPoints(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2250)
inline ZOSAPI_Interfaces::IAR_DataScatterPointsPtr ZOSAPI_Interfaces::IAR_::GetDataScatterPoint ( long index ) {
    struct IAR_DataScatterPoints * _result = 0;
    HRESULT _hr = raw_GetDataScatterPoint(index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAR_DataScatterPointsPtr(_result, false);
}

#pragma implementation_key(2251)
inline SAFEARRAY * ZOSAPI_Interfaces::IAR_::GetDataScatterPoints ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = get_DataScatterPoints(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2252)
inline long ZOSAPI_Interfaces::IAR_::GetNumberOfDataScatterPointsRgb ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfDataScatterPointsRgb(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2253)
inline ZOSAPI_Interfaces::IAR_DataScatterPointsRgbPtr ZOSAPI_Interfaces::IAR_::GetDataScatterPointRgb ( long index ) {
    struct IAR_DataScatterPointsRgb * _result = 0;
    HRESULT _hr = raw_GetDataScatterPointRgb(index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAR_DataScatterPointsRgbPtr(_result, false);
}

#pragma implementation_key(2254)
inline SAFEARRAY * ZOSAPI_Interfaces::IAR_::GetDataScatterPointsRgb ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = get_DataScatterPointsRgb(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2255)
inline long ZOSAPI_Interfaces::IAR_::GetNumberOfRayData ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfRayData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2256)
inline ZOSAPI_Interfaces::IAR_RayDataPtr ZOSAPI_Interfaces::IAR_::GetRayData ( long index ) {
    struct IAR_RayData * _result = 0;
    HRESULT _hr = raw_GetRayData(index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAR_RayDataPtr(_result, false);
}

#pragma implementation_key(2257)
inline SAFEARRAY * ZOSAPI_Interfaces::IAR_::GetRayData ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = get_RayData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2258)
inline ZOSAPI_Interfaces::IAR_CriticalRayDataPtr ZOSAPI_Interfaces::IAR_::GetCriticalRayData ( ) {
    struct IAR_CriticalRayData * _result = 0;
    HRESULT _hr = get_CriticalRayData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAR_CriticalRayDataPtr(_result, false);
}

#pragma implementation_key(2259)
inline ZOSAPI_Interfaces::IAR_PathAnalysisDataPtr ZOSAPI_Interfaces::IAR_::GetPathAnalysisData ( ) {
    struct IAR_PathAnalysisData * _result = 0;
    HRESULT _hr = get_PathAnalysisData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAR_PathAnalysisDataPtr(_result, false);
}

#pragma implementation_key(2260)
inline ZOSAPI_Interfaces::IAR_SpotDataResultMatrixPtr ZOSAPI_Interfaces::IAR_::GetSpotData ( ) {
    struct IAR_SpotDataResultMatrix * _result = 0;
    HRESULT _hr = get_SpotData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAR_SpotDataResultMatrixPtr(_result, false);
}

#pragma implementation_key(2261)
inline long ZOSAPI_Interfaces::IAR_::GetNumberOfMessages ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfMessages(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2262)
inline ZOSAPI_Interfaces::IMessagePtr ZOSAPI_Interfaces::IAR_::GetMessageAt ( long index ) {
    struct IMessage * _result = 0;
    HRESULT _hr = raw_GetMessageAt(index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IMessagePtr(_result, false);
}

#pragma implementation_key(2263)
inline SAFEARRAY * ZOSAPI_Interfaces::IAR_::GetMessages ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = get_Messages(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2264)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAR_::GetTextFile ( _bstr_t fileName ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_GetTextFile(fileName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IAS_ wrapper method implementations
//

#pragma implementation_key(2265)
inline ZOSAPI_Interfaces::IMessagesPtr ZOSAPI_Interfaces::IAS_::verify ( ) {
    struct IMessages * _result = 0;
    HRESULT _hr = raw_verify(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IMessagesPtr(_result, false);
}

#pragma implementation_key(2266)
inline HRESULT ZOSAPI_Interfaces::IAS_::Save ( ) {
    HRESULT _hr = raw_Save();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2267)
inline HRESULT ZOSAPI_Interfaces::IAS_::Load ( ) {
    HRESULT _hr = raw_Load();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2268)
inline HRESULT ZOSAPI_Interfaces::IAS_::Reset ( ) {
    HRESULT _hr = raw_Reset();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2269)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_::SaveTo ( _bstr_t settingsFile ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_SaveTo(settingsFile, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2270)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_::LoadFrom ( _bstr_t settingsFile ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_LoadFrom(settingsFile, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2271)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_::ModifySettings ( _bstr_t settingsFile, _bstr_t typeCode, _bstr_t newValue ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_ModifySettings(settingsFile, typeCode, newValue, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IA_ wrapper method implementations
//

#pragma implementation_key(2272)
inline _bstr_t ZOSAPI_Interfaces::IA_::GetTitle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Title(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2273)
inline _bstr_t ZOSAPI_Interfaces::IA_::GetGetAnalysisName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_GetAnalysisName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2274)
inline enum ZOSAPI_Interfaces::AnalysisIDM ZOSAPI_Interfaces::IA_::GetAnalysisType ( ) {
    enum AnalysisIDM _result;
    HRESULT _hr = get_AnalysisType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2275)
inline ZOSAPI_Interfaces::IMessagesPtr ZOSAPI_Interfaces::IA_::GetStatusMessages ( ) {
    struct IMessages * _result = 0;
    HRESULT _hr = get_StatusMessages(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IMessagesPtr(_result, false);
}

#pragma implementation_key(2276)
inline VARIANT_BOOL ZOSAPI_Interfaces::IA_::GetHasAnalysisSpecificSettings ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_HasAnalysisSpecificSettings(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2277)
inline ZOSAPI_Interfaces::IAS_Ptr ZOSAPI_Interfaces::IA_::GetSettings ( ) {
    struct IAS_ * _result = 0;
    HRESULT _hr = raw_GetSettings(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_Ptr(_result, false);
}

#pragma implementation_key(2278)
inline ZOSAPI_Interfaces::IAR_Ptr ZOSAPI_Interfaces::IA_::GetResults ( ) {
    struct IAR_ * _result = 0;
    HRESULT _hr = raw_GetResults(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAR_Ptr(_result, false);
}

#pragma implementation_key(2279)
inline VARIANT_BOOL ZOSAPI_Interfaces::IA_::IsRunning ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_IsRunning(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2280)
inline ZOSAPI_Interfaces::IMessagePtr ZOSAPI_Interfaces::IA_::Apply ( ) {
    struct IMessage * _result = 0;
    HRESULT _hr = raw_Apply(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IMessagePtr(_result, false);
}

#pragma implementation_key(2281)
inline ZOSAPI_Interfaces::IMessagePtr ZOSAPI_Interfaces::IA_::ApplyAndWaitForCompletion ( ) {
    struct IMessage * _result = 0;
    HRESULT _hr = raw_ApplyAndWaitForCompletion(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IMessagePtr(_result, false);
}

#pragma implementation_key(2282)
inline VARIANT_BOOL ZOSAPI_Interfaces::IA_::Terminate ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_Terminate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2283)
inline HRESULT ZOSAPI_Interfaces::IA_::WaitForCompletion ( ) {
    HRESULT _hr = raw_WaitForCompletion();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2284)
inline HRESULT ZOSAPI_Interfaces::IA_::Close ( ) {
    HRESULT _hr = raw_Close();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2285)
inline HRESULT ZOSAPI_Interfaces::IA_::Release_2 ( ) {
    HRESULT _hr = raw_Release_2();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2286)
inline HRESULT ZOSAPI_Interfaces::IA_::ToFile ( _bstr_t fileName, VARIANT_BOOL showSettings, VARIANT_BOOL verify ) {
    HRESULT _hr = raw_ToFile(fileName, showSettings, verify);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface I_Analyses wrapper method implementations
//

#pragma implementation_key(2287)
inline long ZOSAPI_Interfaces::I_Analyses::GetNumberOfAnalyses ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfAnalyses(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2288)
inline VARIANT_BOOL ZOSAPI_Interfaces::I_Analyses::CloseAnalysis ( long index ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_CloseAnalysis(index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2289)
inline VARIANT_BOOL ZOSAPI_Interfaces::I_Analyses::CloseAnalysis_2 ( struct IA_ * analysis ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_CloseAnalysis_2(analysis, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2290)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::Get_AnalysisAtIndex ( long index ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_Get_AnalysisAtIndex(index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

#pragma implementation_key(2291)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::New_Analysis ( enum AnalysisIDM AnalysisType ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_New_Analysis(AnalysisType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

#pragma implementation_key(2292)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::New_Analysis_SettingsFirst ( enum AnalysisIDM AnalysisType ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_New_Analysis_SettingsFirst(AnalysisType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

#pragma implementation_key(2293)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::New_RayFan ( ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_New_RayFan(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

#pragma implementation_key(2294)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::New_OpticalPathFan ( ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_New_OpticalPathFan(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

#pragma implementation_key(2295)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::New_PupilAberrationFan ( ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_New_PupilAberrationFan(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

#pragma implementation_key(2296)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::New_FieldCurvatureAndDistortion ( ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_New_FieldCurvatureAndDistortion(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

#pragma implementation_key(2297)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::New_FocalShiftDiagram ( ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_New_FocalShiftDiagram(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

#pragma implementation_key(2298)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::New_GridDistortion ( ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_New_GridDistortion(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

#pragma implementation_key(2299)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::New_LateralColor ( ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_New_LateralColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

#pragma implementation_key(2300)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::New_LongitudinalAberration ( ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_New_LongitudinalAberration(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

#pragma implementation_key(2301)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::New_RayTrace ( ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_New_RayTrace(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

#pragma implementation_key(2302)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::New_SeidelCoefficients ( ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_New_SeidelCoefficients(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

#pragma implementation_key(2303)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::New_SeidelDiagram ( ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_New_SeidelDiagram(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

#pragma implementation_key(2304)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::New_ZernikeAnnularCoefficients ( ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_New_ZernikeAnnularCoefficients(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

#pragma implementation_key(2305)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::New_ZernikeCoefficientsVsField ( ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_New_ZernikeCoefficientsVsField(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

#pragma implementation_key(2306)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::New_ZernikeFringeCoefficients ( ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_New_ZernikeFringeCoefficients(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

#pragma implementation_key(2307)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::New_ZernikeStandardCoefficients ( ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_New_ZernikeStandardCoefficients(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

#pragma implementation_key(2308)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::New_FftMtf ( ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_New_FftMtf(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

#pragma implementation_key(2309)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::New_FftThroughFocusMtf ( ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_New_FftThroughFocusMtf(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

#pragma implementation_key(2310)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::New_GeometricThroughFocusMtf ( ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_New_GeometricThroughFocusMtf(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

#pragma implementation_key(2311)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::New_GeometricMtf ( ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_New_GeometricMtf(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

#pragma implementation_key(2312)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::New_FftMtfMap ( ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_New_FftMtfMap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

#pragma implementation_key(2313)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::New_GeometricMtfMap ( ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_New_GeometricMtfMap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

#pragma implementation_key(2314)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::New_FftSurfaceMtf ( ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_New_FftSurfaceMtf(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

#pragma implementation_key(2315)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::New_FftMtfvsField ( ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_New_FftMtfvsField(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

#pragma implementation_key(2316)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::New_GeometricMtfvsField ( ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_New_GeometricMtfvsField(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

#pragma implementation_key(2317)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::New_HuygensMtfvsField ( ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_New_HuygensMtfvsField(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

#pragma implementation_key(2318)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::New_HuygensMtf ( ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_New_HuygensMtf(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

#pragma implementation_key(2319)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::New_HuygensSurfaceMtf ( ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_New_HuygensSurfaceMtf(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

#pragma implementation_key(2320)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::New_HuygensThroughFocusMtf ( ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_New_HuygensThroughFocusMtf(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

#pragma implementation_key(2321)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::New_FftPsf ( ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_New_FftPsf(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

#pragma implementation_key(2322)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::New_FftPsfCrossSection ( ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_New_FftPsfCrossSection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

#pragma implementation_key(2323)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::New_FftPsfLineEdgeSpread ( ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_New_FftPsfLineEdgeSpread(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

#pragma implementation_key(2324)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::New_HuygensPsfCrossSection ( ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_New_HuygensPsfCrossSection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

#pragma implementation_key(2325)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::New_HuygensPsf ( ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_New_HuygensPsf(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

#pragma implementation_key(2326)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::New_DiffractionEncircledEnergy ( ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_New_DiffractionEncircledEnergy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

#pragma implementation_key(2327)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::New_GeometricEncircledEnergy ( ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_New_GeometricEncircledEnergy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

#pragma implementation_key(2328)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::New_GeometricLineEdgeSpread ( ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_New_GeometricLineEdgeSpread(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

#pragma implementation_key(2329)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::New_ExtendedSourceEncircledEnergy ( ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_New_ExtendedSourceEncircledEnergy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

#pragma implementation_key(2330)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::New_SurfaceCurvatureCross ( ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_New_SurfaceCurvatureCross(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

#pragma implementation_key(2331)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::New_SurfacePhaseCross ( ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_New_SurfacePhaseCross(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

#pragma implementation_key(2332)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::New_SurfaceSagCross ( ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_New_SurfaceSagCross(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

#pragma implementation_key(2333)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::New_SurfaceCurvature ( ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_New_SurfaceCurvature(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

#pragma implementation_key(2334)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::New_SurfacePhase ( ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_New_SurfacePhase(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

#pragma implementation_key(2335)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::New_SurfaceSag ( ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_New_SurfaceSag(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

#pragma implementation_key(2336)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::New_StandardSpot ( ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_New_StandardSpot(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

#pragma implementation_key(2337)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::New_ThroughFocusSpot ( ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_New_ThroughFocusSpot(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

#pragma implementation_key(2338)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::New_FullFieldSpot ( ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_New_FullFieldSpot(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

#pragma implementation_key(2339)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::New_MatrixSpot ( ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_New_MatrixSpot(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

#pragma implementation_key(2340)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::New_ConfigurationMatrixSpot ( ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_New_ConfigurationMatrixSpot(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

#pragma implementation_key(2341)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::New_RMSField ( ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_New_RMSField(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

#pragma implementation_key(2342)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::New_RMSFieldMap ( ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_New_RMSFieldMap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

#pragma implementation_key(2343)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::New_RMSLambdaDiagram ( ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_New_RMSLambdaDiagram(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

#pragma implementation_key(2344)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::New_RMSFocus ( ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_New_RMSFocus(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

#pragma implementation_key(2345)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::New_Foucault ( ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_New_Foucault(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

#pragma implementation_key(2346)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::New_Interferogram ( ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_New_Interferogram(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

#pragma implementation_key(2347)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::New_WavefrontMap ( ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_New_WavefrontMap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

#pragma implementation_key(2348)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::New_DetectorViewer ( ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_New_DetectorViewer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

#pragma implementation_key(2349)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::New_CriticalRayTracer ( ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_New_CriticalRayTracer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

#pragma implementation_key(2350)
inline ZOSAPI_Interfaces::IA_Ptr ZOSAPI_Interfaces::I_Analyses::New_PathAnalysis ( ) {
    struct IA_ * _result = 0;
    HRESULT _hr = raw_New_PathAnalysis(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IA_Ptr(_result, false);
}

//
// interface IAS_Field wrapper method implementations
//

#pragma implementation_key(2351)
inline long ZOSAPI_Interfaces::IAS_Field::GetFieldNumber ( ) {
    long _result = 0;
    HRESULT _hr = raw_GetFieldNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2352)
inline ZOSAPI_Interfaces::IMessagePtr ZOSAPI_Interfaces::IAS_Field::SetFieldNumber ( long N ) {
    struct IMessage * _result = 0;
    HRESULT _hr = raw_SetFieldNumber(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IMessagePtr(_result, false);
}

#pragma implementation_key(2353)
inline ZOSAPI_Interfaces::IMessagePtr ZOSAPI_Interfaces::IAS_Field::UseAllFields ( ) {
    struct IMessage * _result = 0;
    HRESULT _hr = raw_UseAllFields(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IMessagePtr(_result, false);
}

//
// interface IAS_Surface wrapper method implementations
//

#pragma implementation_key(2354)
inline long ZOSAPI_Interfaces::IAS_Surface::GetSurfaceNumber ( ) {
    long _result = 0;
    HRESULT _hr = raw_GetSurfaceNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2355)
inline ZOSAPI_Interfaces::IMessagePtr ZOSAPI_Interfaces::IAS_Surface::SetSurfaceNumber ( long N ) {
    struct IMessage * _result = 0;
    HRESULT _hr = raw_SetSurfaceNumber(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IMessagePtr(_result, false);
}

#pragma implementation_key(2356)
inline ZOSAPI_Interfaces::IMessagePtr ZOSAPI_Interfaces::IAS_Surface::UseImageSurface ( ) {
    struct IMessage * _result = 0;
    HRESULT _hr = raw_UseImageSurface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IMessagePtr(_result, false);
}

#pragma implementation_key(2357)
inline ZOSAPI_Interfaces::IMessagePtr ZOSAPI_Interfaces::IAS_Surface::UseObjectiveSurface ( ) {
    struct IMessage * _result = 0;
    HRESULT _hr = raw_UseObjectiveSurface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IMessagePtr(_result, false);
}

//
// interface IAS_Detector wrapper method implementations
//

#pragma implementation_key(2358)
inline long ZOSAPI_Interfaces::IAS_Detector::GetDetectorNumber ( ) {
    long _result = 0;
    HRESULT _hr = raw_GetDetectorNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2359)
inline ZOSAPI_Interfaces::IMessagePtr ZOSAPI_Interfaces::IAS_Detector::SetDetectorNumber ( long N ) {
    struct IMessage * _result = 0;
    HRESULT _hr = raw_SetDetectorNumber(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IMessagePtr(_result, false);
}

#pragma implementation_key(2360)
inline ZOSAPI_Interfaces::IMessagePtr ZOSAPI_Interfaces::IAS_Detector::SummarizeAll ( ) {
    struct IMessage * _result = 0;
    HRESULT _hr = raw_SummarizeAll(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IMessagePtr(_result, false);
}

//
// interface IAS_Wavelength wrapper method implementations
//

#pragma implementation_key(2361)
inline long ZOSAPI_Interfaces::IAS_Wavelength::GetWavelengthNumber ( ) {
    long _result = 0;
    HRESULT _hr = raw_GetWavelengthNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2362)
inline ZOSAPI_Interfaces::IMessagePtr ZOSAPI_Interfaces::IAS_Wavelength::SetWavelengthNumber ( long N ) {
    struct IMessage * _result = 0;
    HRESULT _hr = raw_SetWavelengthNumber(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IMessagePtr(_result, false);
}

#pragma implementation_key(2363)
inline ZOSAPI_Interfaces::IMessagePtr ZOSAPI_Interfaces::IAS_Wavelength::UseAllWavelengths ( ) {
    struct IMessage * _result = 0;
    HRESULT _hr = raw_UseAllWavelengths(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IMessagePtr(_result, false);
}

//
// interface IAS_CriticalRayTracer wrapper method implementations
//

#pragma implementation_key(2364)
inline double ZOSAPI_Interfaces::IAS_CriticalRayTracer::GetPositionTolerance ( ) {
    double _result = 0;
    HRESULT _hr = get_PositionTolerance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2365)
inline void ZOSAPI_Interfaces::IAS_CriticalRayTracer::PutPositionTolerance ( double pRetVal ) {
    HRESULT _hr = put_PositionTolerance(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2366)
inline double ZOSAPI_Interfaces::IAS_CriticalRayTracer::GetAngleTolerance ( ) {
    double _result = 0;
    HRESULT _hr = get_AngleTolerance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2367)
inline void ZOSAPI_Interfaces::IAS_CriticalRayTracer::PutAngleTolerance ( double pRetVal ) {
    HRESULT _hr = put_AngleTolerance(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2368)
inline _bstr_t ZOSAPI_Interfaces::IAS_CriticalRayTracer::GetfileName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_fileName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2369)
inline void ZOSAPI_Interfaces::IAS_CriticalRayTracer::PutfileName ( _bstr_t pRetVal ) {
    HRESULT _hr = put_fileName(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2370)
inline enum ZOSAPI_Interfaces::DisplayOption ZOSAPI_Interfaces::IAS_CriticalRayTracer::GetRaysToDisplay ( ) {
    enum DisplayOption _result;
    HRESULT _hr = get_RaysToDisplay(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2371)
inline void ZOSAPI_Interfaces::IAS_CriticalRayTracer::PutRaysToDisplay ( enum DisplayOption pRetVal ) {
    HRESULT _hr = put_RaysToDisplay(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2372)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_CriticalRayTracer::GetDisplayXYZ ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayXYZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2373)
inline void ZOSAPI_Interfaces::IAS_CriticalRayTracer::PutDisplayXYZ ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_DisplayXYZ(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2374)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_CriticalRayTracer::GetDisplayLMN ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayLMN(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2375)
inline void ZOSAPI_Interfaces::IAS_CriticalRayTracer::PutDisplayLMN ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_DisplayLMN(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2376)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_CriticalRayTracer::GetDisplayActualEndData ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayActualEndData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2377)
inline void ZOSAPI_Interfaces::IAS_CriticalRayTracer::PutDisplayActualEndData ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_DisplayActualEndData(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2378)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_CriticalRayTracer::GetDisplayTargetEndData ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayTargetEndData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2379)
inline void ZOSAPI_Interfaces::IAS_CriticalRayTracer::PutDisplayTargetEndData ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_DisplayTargetEndData(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2380)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_CriticalRayTracer::GetDisplayStartData ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayStartData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2381)
inline void ZOSAPI_Interfaces::IAS_CriticalRayTracer::PutDisplayStartData ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_DisplayStartData(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IAS_Interferogram wrapper method implementations
//

#pragma implementation_key(2382)
inline ZOSAPI_Interfaces::IAS_FieldPtr ZOSAPI_Interfaces::IAS_Interferogram::GetField ( ) {
    struct IAS_Field * _result = 0;
    HRESULT _hr = get_Field(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_FieldPtr(_result, false);
}

#pragma implementation_key(2383)
inline ZOSAPI_Interfaces::IAS_SurfacePtr ZOSAPI_Interfaces::IAS_Interferogram::GetSurface ( ) {
    struct IAS_Surface * _result = 0;
    HRESULT _hr = get_Surface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_SurfacePtr(_result, false);
}

#pragma implementation_key(2384)
inline ZOSAPI_Interfaces::IAS_WavelengthPtr ZOSAPI_Interfaces::IAS_Interferogram::GetWavelength ( ) {
    struct IAS_Wavelength * _result = 0;
    HRESULT _hr = get_Wavelength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_WavelengthPtr(_result, false);
}

#pragma implementation_key(2385)
inline enum ZOSAPI_Interfaces::SampleSizes ZOSAPI_Interfaces::IAS_Interferogram::GetSampling ( ) {
    enum SampleSizes _result;
    HRESULT _hr = get_Sampling(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2386)
inline void ZOSAPI_Interfaces::IAS_Interferogram::PutSampling ( enum SampleSizes pRetVal ) {
    HRESULT _hr = put_Sampling(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2387)
inline enum ZOSAPI_Interfaces::ShowAs ZOSAPI_Interfaces::IAS_Interferogram::GetShowAs ( ) {
    enum ShowAs _result;
    HRESULT _hr = get_ShowAs(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2388)
inline void ZOSAPI_Interfaces::IAS_Interferogram::PutShowAs ( enum ShowAs pRetVal ) {
    HRESULT _hr = put_ShowAs(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2389)
inline enum ZOSAPI_Interfaces::Beam ZOSAPI_Interfaces::IAS_Interferogram::GetBeam_1 ( ) {
    enum Beam _result;
    HRESULT _hr = get_Beam_1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2390)
inline void ZOSAPI_Interfaces::IAS_Interferogram::PutBeam_1 ( enum Beam pRetVal ) {
    HRESULT _hr = put_Beam_1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2391)
inline enum ZOSAPI_Interfaces::Beam ZOSAPI_Interfaces::IAS_Interferogram::GetBeam_2 ( ) {
    enum Beam _result;
    HRESULT _hr = get_Beam_2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2392)
inline void ZOSAPI_Interfaces::IAS_Interferogram::PutBeam_2 ( enum Beam pRetVal ) {
    HRESULT _hr = put_Beam_2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2393)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_Interferogram::GetRef_Beam_1_To_Vertex ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Ref_Beam_1_To_Vertex(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2394)
inline void ZOSAPI_Interfaces::IAS_Interferogram::PutRef_Beam_1_To_Vertex ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_Ref_Beam_1_To_Vertex(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2395)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_Interferogram::GetRef_Beam_2_To_Vertex ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Ref_Beam_2_To_Vertex(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2396)
inline void ZOSAPI_Interfaces::IAS_Interferogram::PutRef_Beam_2_To_Vertex ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_Ref_Beam_2_To_Vertex(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2397)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_Interferogram::GetUseExitPupil ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseExitPupil(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2398)
inline void ZOSAPI_Interfaces::IAS_Interferogram::PutUseExitPupil ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UseExitPupil(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2399)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_Interferogram::GetConsiderOPL ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ConsiderOPL(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2400)
inline void ZOSAPI_Interfaces::IAS_Interferogram::PutConsiderOPL ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_ConsiderOPL(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2401)
inline double ZOSAPI_Interfaces::IAS_Interferogram::GetScaleFactor ( ) {
    double _result = 0;
    HRESULT _hr = get_ScaleFactor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2402)
inline void ZOSAPI_Interfaces::IAS_Interferogram::PutScaleFactor ( double pRetVal ) {
    HRESULT _hr = put_ScaleFactor(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2403)
inline double ZOSAPI_Interfaces::IAS_Interferogram::GetX_Tilt ( ) {
    double _result = 0;
    HRESULT _hr = get_X_Tilt(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2404)
inline void ZOSAPI_Interfaces::IAS_Interferogram::PutX_Tilt ( double pRetVal ) {
    HRESULT _hr = put_X_Tilt(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2405)
inline double ZOSAPI_Interfaces::IAS_Interferogram::GetY_Tilt ( ) {
    double _result = 0;
    HRESULT _hr = get_Y_Tilt(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2406)
inline void ZOSAPI_Interfaces::IAS_Interferogram::PutY_Tilt ( double pRetVal ) {
    HRESULT _hr = put_Y_Tilt(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2407)
inline double ZOSAPI_Interfaces::IAS_Interferogram::GetSubaperture_X ( ) {
    double _result = 0;
    HRESULT _hr = get_Subaperture_X(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2408)
inline void ZOSAPI_Interfaces::IAS_Interferogram::PutSubaperture_X ( double pRetVal ) {
    HRESULT _hr = put_Subaperture_X(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2409)
inline double ZOSAPI_Interfaces::IAS_Interferogram::GetSubaperture_Y ( ) {
    double _result = 0;
    HRESULT _hr = get_Subaperture_Y(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2410)
inline void ZOSAPI_Interfaces::IAS_Interferogram::PutSubaperture_Y ( double pRetVal ) {
    HRESULT _hr = put_Subaperture_Y(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2411)
inline double ZOSAPI_Interfaces::IAS_Interferogram::GetSubaperture_R ( ) {
    double _result = 0;
    HRESULT _hr = get_Subaperture_R(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2412)
inline void ZOSAPI_Interfaces::IAS_Interferogram::PutSubaperture_R ( double pRetVal ) {
    HRESULT _hr = put_Subaperture_R(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2413)
inline _bstr_t ZOSAPI_Interfaces::IAS_Interferogram::GetContourFormat ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ContourFormat(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2414)
inline void ZOSAPI_Interfaces::IAS_Interferogram::PutContourFormat ( _bstr_t pRetVal ) {
    HRESULT _hr = put_ContourFormat(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IAS_WavefrontMap wrapper method implementations
//

#pragma implementation_key(2415)
inline ZOSAPI_Interfaces::IAS_FieldPtr ZOSAPI_Interfaces::IAS_WavefrontMap::GetField ( ) {
    struct IAS_Field * _result = 0;
    HRESULT _hr = get_Field(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_FieldPtr(_result, false);
}

#pragma implementation_key(2416)
inline ZOSAPI_Interfaces::IAS_SurfacePtr ZOSAPI_Interfaces::IAS_WavefrontMap::GetSurface ( ) {
    struct IAS_Surface * _result = 0;
    HRESULT _hr = get_Surface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_SurfacePtr(_result, false);
}

#pragma implementation_key(2417)
inline ZOSAPI_Interfaces::IAS_WavelengthPtr ZOSAPI_Interfaces::IAS_WavefrontMap::GetWavelength ( ) {
    struct IAS_Wavelength * _result = 0;
    HRESULT _hr = get_Wavelength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_WavelengthPtr(_result, false);
}

#pragma implementation_key(2418)
inline enum ZOSAPI_Interfaces::ShowAs ZOSAPI_Interfaces::IAS_WavefrontMap::GetShowAs ( ) {
    enum ShowAs _result;
    HRESULT _hr = get_ShowAs(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2419)
inline void ZOSAPI_Interfaces::IAS_WavefrontMap::PutShowAs ( enum ShowAs pRetVal ) {
    HRESULT _hr = put_ShowAs(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2420)
inline enum ZOSAPI_Interfaces::Rotations ZOSAPI_Interfaces::IAS_WavefrontMap::GetRotation ( ) {
    enum Rotations _result;
    HRESULT _hr = get_Rotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2421)
inline void ZOSAPI_Interfaces::IAS_WavefrontMap::PutRotation ( enum Rotations pRetVal ) {
    HRESULT _hr = put_Rotation(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2422)
inline enum ZOSAPI_Interfaces::SampleSizes ZOSAPI_Interfaces::IAS_WavefrontMap::GetSampling ( ) {
    enum SampleSizes _result;
    HRESULT _hr = get_Sampling(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2423)
inline void ZOSAPI_Interfaces::IAS_WavefrontMap::PutSampling ( enum SampleSizes pRetVal ) {
    HRESULT _hr = put_Sampling(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2424)
inline enum ZOSAPI_Interfaces::Polarizations ZOSAPI_Interfaces::IAS_WavefrontMap::GetPolarization ( ) {
    enum Polarizations _result;
    HRESULT _hr = get_Polarization(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2425)
inline void ZOSAPI_Interfaces::IAS_WavefrontMap::PutPolarization ( enum Polarizations pRetVal ) {
    HRESULT _hr = put_Polarization(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2426)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_WavefrontMap::GetReferenceToPrimary ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ReferenceToPrimary(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2427)
inline void ZOSAPI_Interfaces::IAS_WavefrontMap::PutReferenceToPrimary ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_ReferenceToPrimary(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2428)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_WavefrontMap::GetUseExitPupil ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseExitPupil(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2429)
inline void ZOSAPI_Interfaces::IAS_WavefrontMap::PutUseExitPupil ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UseExitPupil(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2430)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_WavefrontMap::GetRemoveTilt ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_RemoveTilt(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2431)
inline void ZOSAPI_Interfaces::IAS_WavefrontMap::PutRemoveTilt ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_RemoveTilt(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2432)
inline double ZOSAPI_Interfaces::IAS_WavefrontMap::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2433)
inline void ZOSAPI_Interfaces::IAS_WavefrontMap::PutScale ( double pRetVal ) {
    HRESULT _hr = put_Scale(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2434)
inline double ZOSAPI_Interfaces::IAS_WavefrontMap::GetSubaperture_X ( ) {
    double _result = 0;
    HRESULT _hr = get_Subaperture_X(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2435)
inline void ZOSAPI_Interfaces::IAS_WavefrontMap::PutSubaperture_X ( double pRetVal ) {
    HRESULT _hr = put_Subaperture_X(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2436)
inline double ZOSAPI_Interfaces::IAS_WavefrontMap::GetSubaperture_Y ( ) {
    double _result = 0;
    HRESULT _hr = get_Subaperture_Y(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2437)
inline void ZOSAPI_Interfaces::IAS_WavefrontMap::PutSubaperture_Y ( double pRetVal ) {
    HRESULT _hr = put_Subaperture_Y(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2438)
inline double ZOSAPI_Interfaces::IAS_WavefrontMap::GetSubaperture_R ( ) {
    double _result = 0;
    HRESULT _hr = get_Subaperture_R(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2439)
inline void ZOSAPI_Interfaces::IAS_WavefrontMap::PutSubaperture_R ( double pRetVal ) {
    HRESULT _hr = put_Subaperture_R(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2440)
inline _bstr_t ZOSAPI_Interfaces::IAS_WavefrontMap::GetContourFormat ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ContourFormat(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2441)
inline void ZOSAPI_Interfaces::IAS_WavefrontMap::PutContourFormat ( _bstr_t pRetVal ) {
    HRESULT _hr = put_ContourFormat(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IAS_Foucault wrapper method implementations
//

#pragma implementation_key(2442)
inline ZOSAPI_Interfaces::IAS_FieldPtr ZOSAPI_Interfaces::IAS_Foucault::GetField ( ) {
    struct IAS_Field * _result = 0;
    HRESULT _hr = get_Field(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_FieldPtr(_result, false);
}

#pragma implementation_key(2443)
inline ZOSAPI_Interfaces::IAS_WavelengthPtr ZOSAPI_Interfaces::IAS_Foucault::GetWavelength ( ) {
    struct IAS_Wavelength * _result = 0;
    HRESULT _hr = get_Wavelength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_WavelengthPtr(_result, false);
}

#pragma implementation_key(2444)
inline enum ZOSAPI_Interfaces::Types ZOSAPI_Interfaces::IAS_Foucault::GetType ( ) {
    enum Types _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2445)
inline void ZOSAPI_Interfaces::IAS_Foucault::PutType ( enum Types pRetVal ) {
    HRESULT _hr = put_Type(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2446)
inline enum ZOSAPI_Interfaces::SampleSizes ZOSAPI_Interfaces::IAS_Foucault::GetSampling ( ) {
    enum SampleSizes _result;
    HRESULT _hr = get_Sampling(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2447)
inline void ZOSAPI_Interfaces::IAS_Foucault::PutSampling ( enum SampleSizes pRetVal ) {
    HRESULT _hr = put_Sampling(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2448)
inline enum ZOSAPI_Interfaces::FoucaultShowAs ZOSAPI_Interfaces::IAS_Foucault::GetShowAs ( ) {
    enum FoucaultShowAs _result;
    HRESULT _hr = get_ShowAs(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2449)
inline void ZOSAPI_Interfaces::IAS_Foucault::PutShowAs ( enum FoucaultShowAs pRetVal ) {
    HRESULT _hr = put_ShowAs(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2450)
inline enum ZOSAPI_Interfaces::KnifeType ZOSAPI_Interfaces::IAS_Foucault::GetKnife ( ) {
    enum KnifeType _result;
    HRESULT _hr = get_Knife(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2451)
inline void ZOSAPI_Interfaces::IAS_Foucault::PutKnife ( enum KnifeType pRetVal ) {
    HRESULT _hr = put_Knife(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2452)
inline enum ZOSAPI_Interfaces::ZOSAPI_Analysis_Settings_Wavefront_DataType ZOSAPI_Interfaces::IAS_Foucault::GetData ( ) {
    enum ZOSAPI_Analysis_Settings_Wavefront_DataType _result;
    HRESULT _hr = get_Data(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2453)
inline void ZOSAPI_Interfaces::IAS_Foucault::PutData ( enum ZOSAPI_Analysis_Settings_Wavefront_DataType pRetVal ) {
    HRESULT _hr = put_Data(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2454)
inline long ZOSAPI_Interfaces::IAS_Foucault::GetRowColumn ( ) {
    long _result = 0;
    HRESULT _hr = get_RowColumn(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2455)
inline void ZOSAPI_Interfaces::IAS_Foucault::PutRowColumn ( long pRetVal ) {
    HRESULT _hr = put_RowColumn(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2456)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_Foucault::GetUsePolarization ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UsePolarization(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2457)
inline void ZOSAPI_Interfaces::IAS_Foucault::PutUsePolarization ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UsePolarization(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2458)
inline double ZOSAPI_Interfaces::IAS_Foucault::GetY_Position ( ) {
    double _result = 0;
    HRESULT _hr = get_Y_Position(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2459)
inline void ZOSAPI_Interfaces::IAS_Foucault::PutY_Position ( double pRetVal ) {
    HRESULT _hr = put_Y_Position(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2460)
inline double ZOSAPI_Interfaces::IAS_Foucault::GetDecenter_X ( ) {
    double _result = 0;
    HRESULT _hr = get_Decenter_X(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2461)
inline void ZOSAPI_Interfaces::IAS_Foucault::PutDecenter_X ( double pRetVal ) {
    HRESULT _hr = put_Decenter_X(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2462)
inline double ZOSAPI_Interfaces::IAS_Foucault::GetDecenter_Y ( ) {
    double _result = 0;
    HRESULT _hr = get_Decenter_Y(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2463)
inline void ZOSAPI_Interfaces::IAS_Foucault::PutDecenter_Y ( double pRetVal ) {
    HRESULT _hr = put_Decenter_Y(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2464)
inline double ZOSAPI_Interfaces::IAS_Foucault::GetScale_X ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale_X(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2465)
inline void ZOSAPI_Interfaces::IAS_Foucault::PutScale_X ( double pRetVal ) {
    HRESULT _hr = put_Scale_X(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2466)
inline double ZOSAPI_Interfaces::IAS_Foucault::GetScale_Y ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale_Y(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2467)
inline void ZOSAPI_Interfaces::IAS_Foucault::PutScale_Y ( double pRetVal ) {
    HRESULT _hr = put_Scale_Y(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2468)
inline _bstr_t ZOSAPI_Interfaces::IAS_Foucault::Getsource ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_source(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2469)
inline void ZOSAPI_Interfaces::IAS_Foucault::Putsource ( _bstr_t pRetVal ) {
    HRESULT _hr = put_source(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2470)
inline _bstr_t ZOSAPI_Interfaces::IAS_Foucault::GetSaveBMP ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SaveBMP(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2471)
inline void ZOSAPI_Interfaces::IAS_Foucault::PutSaveBMP ( _bstr_t pRetVal ) {
    HRESULT _hr = put_SaveBMP(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IAS_SurfaceSag wrapper method implementations
//

#pragma implementation_key(2472)
inline ZOSAPI_Interfaces::IAS_SurfacePtr ZOSAPI_Interfaces::IAS_SurfaceSag::GetSurface ( ) {
    struct IAS_Surface * _result = 0;
    HRESULT _hr = get_Surface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_SurfacePtr(_result, false);
}

#pragma implementation_key(2473)
inline enum ZOSAPI_Interfaces::SampleSizes_Pow2Plus1_X ZOSAPI_Interfaces::IAS_SurfaceSag::GetSampling ( ) {
    enum SampleSizes_Pow2Plus1_X _result;
    HRESULT _hr = get_Sampling(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2474)
inline void ZOSAPI_Interfaces::IAS_SurfaceSag::PutSampling ( enum SampleSizes_Pow2Plus1_X pRetVal ) {
    HRESULT _hr = put_Sampling(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2475)
inline enum ZOSAPI_Interfaces::SurfaceSagData ZOSAPI_Interfaces::IAS_SurfaceSag::GetData ( ) {
    enum SurfaceSagData _result;
    HRESULT _hr = get_Data(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2476)
inline void ZOSAPI_Interfaces::IAS_SurfaceSag::PutData ( enum SurfaceSagData pRetVal ) {
    HRESULT _hr = put_Data(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2477)
inline enum ZOSAPI_Interfaces::ShowAs ZOSAPI_Interfaces::IAS_SurfaceSag::GetShowAs ( ) {
    enum ShowAs _result;
    HRESULT _hr = get_ShowAs(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2478)
inline void ZOSAPI_Interfaces::IAS_SurfaceSag::PutShowAs ( enum ShowAs pRetVal ) {
    HRESULT _hr = put_ShowAs(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2479)
inline _bstr_t ZOSAPI_Interfaces::IAS_SurfaceSag::GetContourFormat ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ContourFormat(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2480)
inline void ZOSAPI_Interfaces::IAS_SurfaceSag::PutContourFormat ( _bstr_t pRetVal ) {
    HRESULT _hr = put_ContourFormat(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IAS_SurfacePhase wrapper method implementations
//

#pragma implementation_key(2481)
inline ZOSAPI_Interfaces::IAS_SurfacePtr ZOSAPI_Interfaces::IAS_SurfacePhase::GetSurface ( ) {
    struct IAS_Surface * _result = 0;
    HRESULT _hr = get_Surface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_SurfacePtr(_result, false);
}

#pragma implementation_key(2482)
inline enum ZOSAPI_Interfaces::SampleSizes_Pow2Plus1_X ZOSAPI_Interfaces::IAS_SurfacePhase::GetSampling ( ) {
    enum SampleSizes_Pow2Plus1_X _result;
    HRESULT _hr = get_Sampling(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2483)
inline void ZOSAPI_Interfaces::IAS_SurfacePhase::PutSampling ( enum SampleSizes_Pow2Plus1_X pRetVal ) {
    HRESULT _hr = put_Sampling(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2484)
inline enum ZOSAPI_Interfaces::SurfacePhaseData ZOSAPI_Interfaces::IAS_SurfacePhase::GetData ( ) {
    enum SurfacePhaseData _result;
    HRESULT _hr = get_Data(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2485)
inline void ZOSAPI_Interfaces::IAS_SurfacePhase::PutData ( enum SurfacePhaseData pRetVal ) {
    HRESULT _hr = put_Data(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2486)
inline enum ZOSAPI_Interfaces::ShowAs ZOSAPI_Interfaces::IAS_SurfacePhase::GetShowAs ( ) {
    enum ShowAs _result;
    HRESULT _hr = get_ShowAs(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2487)
inline void ZOSAPI_Interfaces::IAS_SurfacePhase::PutShowAs ( enum ShowAs pRetVal ) {
    HRESULT _hr = put_ShowAs(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2488)
inline _bstr_t ZOSAPI_Interfaces::IAS_SurfacePhase::GetContourFormat ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ContourFormat(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2489)
inline void ZOSAPI_Interfaces::IAS_SurfacePhase::PutContourFormat ( _bstr_t pRetVal ) {
    HRESULT _hr = put_ContourFormat(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IAS_SurfaceCurvature wrapper method implementations
//

#pragma implementation_key(2490)
inline ZOSAPI_Interfaces::IAS_SurfacePtr ZOSAPI_Interfaces::IAS_SurfaceCurvature::GetSurface ( ) {
    struct IAS_Surface * _result = 0;
    HRESULT _hr = get_Surface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_SurfacePtr(_result, false);
}

#pragma implementation_key(2491)
inline enum ZOSAPI_Interfaces::SampleSizes_Pow2Plus1_X ZOSAPI_Interfaces::IAS_SurfaceCurvature::GetSampling ( ) {
    enum SampleSizes_Pow2Plus1_X _result;
    HRESULT _hr = get_Sampling(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2492)
inline void ZOSAPI_Interfaces::IAS_SurfaceCurvature::PutSampling ( enum SampleSizes_Pow2Plus1_X pRetVal ) {
    HRESULT _hr = put_Sampling(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2493)
inline enum ZOSAPI_Interfaces::SurfaceCurvatureData ZOSAPI_Interfaces::IAS_SurfaceCurvature::GetData ( ) {
    enum SurfaceCurvatureData _result;
    HRESULT _hr = get_Data(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2494)
inline void ZOSAPI_Interfaces::IAS_SurfaceCurvature::PutData ( enum SurfaceCurvatureData pRetVal ) {
    HRESULT _hr = put_Data(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2495)
inline enum ZOSAPI_Interfaces::ShowAs ZOSAPI_Interfaces::IAS_SurfaceCurvature::GetShowAs ( ) {
    enum ShowAs _result;
    HRESULT _hr = get_ShowAs(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2496)
inline void ZOSAPI_Interfaces::IAS_SurfaceCurvature::PutShowAs ( enum ShowAs pRetVal ) {
    HRESULT _hr = put_ShowAs(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2497)
inline _bstr_t ZOSAPI_Interfaces::IAS_SurfaceCurvature::GetContourFormat ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ContourFormat(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2498)
inline void ZOSAPI_Interfaces::IAS_SurfaceCurvature::PutContourFormat ( _bstr_t pRetVal ) {
    HRESULT _hr = put_ContourFormat(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IAS_SurfaceSagCross wrapper method implementations
//

#pragma implementation_key(2499)
inline ZOSAPI_Interfaces::IAS_SurfacePtr ZOSAPI_Interfaces::IAS_SurfaceSagCross::GetSurface ( ) {
    struct IAS_Surface * _result = 0;
    HRESULT _hr = get_Surface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_SurfacePtr(_result, false);
}

#pragma implementation_key(2500)
inline enum ZOSAPI_Interfaces::SurfaceSagData ZOSAPI_Interfaces::IAS_SurfaceSagCross::GetData ( ) {
    enum SurfaceSagData _result;
    HRESULT _hr = get_Data(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2501)
inline void ZOSAPI_Interfaces::IAS_SurfaceSagCross::PutData ( enum SurfaceSagData pRetVal ) {
    HRESULT _hr = put_Data(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2502)
inline enum ZOSAPI_Interfaces::SampleSizes_Pow2Plus1 ZOSAPI_Interfaces::IAS_SurfaceSagCross::GetSampling ( ) {
    enum SampleSizes_Pow2Plus1 _result;
    HRESULT _hr = get_Sampling(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2503)
inline void ZOSAPI_Interfaces::IAS_SurfaceSagCross::PutSampling ( enum SampleSizes_Pow2Plus1 pRetVal ) {
    HRESULT _hr = put_Sampling(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2504)
inline double ZOSAPI_Interfaces::IAS_SurfaceSagCross::GetAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_Angle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2505)
inline void ZOSAPI_Interfaces::IAS_SurfaceSagCross::PutAngle ( double pRetVal ) {
    HRESULT _hr = put_Angle(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IAS_SurfacePhaseCross wrapper method implementations
//

#pragma implementation_key(2506)
inline ZOSAPI_Interfaces::IAS_SurfacePtr ZOSAPI_Interfaces::IAS_SurfacePhaseCross::GetSurface ( ) {
    struct IAS_Surface * _result = 0;
    HRESULT _hr = get_Surface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_SurfacePtr(_result, false);
}

#pragma implementation_key(2507)
inline enum ZOSAPI_Interfaces::SurfacePhaseData ZOSAPI_Interfaces::IAS_SurfacePhaseCross::GetData ( ) {
    enum SurfacePhaseData _result;
    HRESULT _hr = get_Data(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2508)
inline void ZOSAPI_Interfaces::IAS_SurfacePhaseCross::PutData ( enum SurfacePhaseData pRetVal ) {
    HRESULT _hr = put_Data(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2509)
inline enum ZOSAPI_Interfaces::SampleSizes_Pow2Plus1 ZOSAPI_Interfaces::IAS_SurfacePhaseCross::GetSampling ( ) {
    enum SampleSizes_Pow2Plus1 _result;
    HRESULT _hr = get_Sampling(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2510)
inline void ZOSAPI_Interfaces::IAS_SurfacePhaseCross::PutSampling ( enum SampleSizes_Pow2Plus1 pRetVal ) {
    HRESULT _hr = put_Sampling(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2511)
inline double ZOSAPI_Interfaces::IAS_SurfacePhaseCross::GetAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_Angle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2512)
inline void ZOSAPI_Interfaces::IAS_SurfacePhaseCross::PutAngle ( double pRetVal ) {
    HRESULT _hr = put_Angle(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IAS_SurfaceCurvatureCross wrapper method implementations
//

#pragma implementation_key(2513)
inline ZOSAPI_Interfaces::IAS_SurfacePtr ZOSAPI_Interfaces::IAS_SurfaceCurvatureCross::GetSurface ( ) {
    struct IAS_Surface * _result = 0;
    HRESULT _hr = get_Surface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_SurfacePtr(_result, false);
}

#pragma implementation_key(2514)
inline enum ZOSAPI_Interfaces::SurfaceCurvatureCrossData ZOSAPI_Interfaces::IAS_SurfaceCurvatureCross::GetData ( ) {
    enum SurfaceCurvatureCrossData _result;
    HRESULT _hr = get_Data(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2515)
inline void ZOSAPI_Interfaces::IAS_SurfaceCurvatureCross::PutData ( enum SurfaceCurvatureCrossData pRetVal ) {
    HRESULT _hr = put_Data(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2516)
inline enum ZOSAPI_Interfaces::SampleSizes_Pow2Plus1 ZOSAPI_Interfaces::IAS_SurfaceCurvatureCross::GetSampling ( ) {
    enum SampleSizes_Pow2Plus1 _result;
    HRESULT _hr = get_Sampling(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2517)
inline void ZOSAPI_Interfaces::IAS_SurfaceCurvatureCross::PutSampling ( enum SampleSizes_Pow2Plus1 pRetVal ) {
    HRESULT _hr = put_Sampling(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2518)
inline double ZOSAPI_Interfaces::IAS_SurfaceCurvatureCross::GetAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_Angle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2519)
inline void ZOSAPI_Interfaces::IAS_SurfaceCurvatureCross::PutAngle ( double pRetVal ) {
    HRESULT _hr = put_Angle(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IAS_Spot wrapper method implementations
//

#pragma implementation_key(2520)
inline ZOSAPI_Interfaces::IAS_FieldPtr ZOSAPI_Interfaces::IAS_Spot::GetField ( ) {
    struct IAS_Field * _result = 0;
    HRESULT _hr = get_Field(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_FieldPtr(_result, false);
}

#pragma implementation_key(2521)
inline ZOSAPI_Interfaces::IAS_SurfacePtr ZOSAPI_Interfaces::IAS_Spot::GetSurface ( ) {
    struct IAS_Surface * _result = 0;
    HRESULT _hr = get_Surface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_SurfacePtr(_result, false);
}

#pragma implementation_key(2522)
inline ZOSAPI_Interfaces::IAS_WavelengthPtr ZOSAPI_Interfaces::IAS_Spot::GetWavelength ( ) {
    struct IAS_Wavelength * _result = 0;
    HRESULT _hr = get_Wavelength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_WavelengthPtr(_result, false);
}

#pragma implementation_key(2523)
inline enum ZOSAPI_Interfaces::Patterns ZOSAPI_Interfaces::IAS_Spot::GetPattern ( ) {
    enum Patterns _result;
    HRESULT _hr = get_Pattern(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2524)
inline void ZOSAPI_Interfaces::IAS_Spot::PutPattern ( enum Patterns pRetVal ) {
    HRESULT _hr = put_Pattern(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2525)
inline enum ZOSAPI_Interfaces::Reference ZOSAPI_Interfaces::IAS_Spot::GetReferTo ( ) {
    enum Reference _result;
    HRESULT _hr = get_ReferTo(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2526)
inline void ZOSAPI_Interfaces::IAS_Spot::PutReferTo ( enum Reference pRetVal ) {
    HRESULT _hr = put_ReferTo(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2527)
inline enum ZOSAPI_Interfaces::ShowScales ZOSAPI_Interfaces::IAS_Spot::GetShowScale ( ) {
    enum ShowScales _result;
    HRESULT _hr = get_ShowScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2528)
inline void ZOSAPI_Interfaces::IAS_Spot::PutShowScale ( enum ShowScales pRetVal ) {
    HRESULT _hr = put_ShowScale(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2529)
inline enum ZOSAPI_Interfaces::ColorRaysBy ZOSAPI_Interfaces::IAS_Spot::GetColorRaysBy ( ) {
    enum ColorRaysBy _result;
    HRESULT _hr = get_ColorRaysBy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2530)
inline void ZOSAPI_Interfaces::IAS_Spot::PutColorRaysBy ( enum ColorRaysBy pRetVal ) {
    HRESULT _hr = put_ColorRaysBy(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2531)
inline long ZOSAPI_Interfaces::IAS_Spot::GetRayDensity ( ) {
    long _result = 0;
    HRESULT _hr = get_RayDensity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2532)
inline void ZOSAPI_Interfaces::IAS_Spot::PutRayDensity ( long pRetVal ) {
    HRESULT _hr = put_RayDensity(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2533)
inline long ZOSAPI_Interfaces::IAS_Spot::GetConfiguration ( ) {
    long _result = 0;
    HRESULT _hr = get_Configuration(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2534)
inline void ZOSAPI_Interfaces::IAS_Spot::PutConfiguration ( long pRetVal ) {
    HRESULT _hr = put_Configuration(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2535)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_Spot::GetDirectionCosines ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DirectionCosines(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2536)
inline void ZOSAPI_Interfaces::IAS_Spot::PutDirectionCosines ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_DirectionCosines(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2537)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_Spot::GetUseSymbols ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseSymbols(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2538)
inline void ZOSAPI_Interfaces::IAS_Spot::PutUseSymbols ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UseSymbols(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2539)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_Spot::GetUsePolarization ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UsePolarization(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2540)
inline void ZOSAPI_Interfaces::IAS_Spot::PutUsePolarization ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UsePolarization(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2541)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_Spot::GetScatterRays ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ScatterRays(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2542)
inline void ZOSAPI_Interfaces::IAS_Spot::PutScatterRays ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_ScatterRays(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2543)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_Spot::GetShowAiryDisk ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowAiryDisk(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2544)
inline void ZOSAPI_Interfaces::IAS_Spot::PutShowAiryDisk ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_ShowAiryDisk(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2545)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_Spot::GetIgnoreLateralColor ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IgnoreLateralColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2546)
inline void ZOSAPI_Interfaces::IAS_Spot::PutIgnoreLateralColor ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IgnoreLateralColor(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2547)
inline double ZOSAPI_Interfaces::IAS_Spot::GetPlotScale ( ) {
    double _result = 0;
    HRESULT _hr = get_PlotScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2548)
inline void ZOSAPI_Interfaces::IAS_Spot::PutPlotScale ( double pRetVal ) {
    HRESULT _hr = put_PlotScale(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2549)
inline double ZOSAPI_Interfaces::IAS_Spot::GetDeltaFocus ( ) {
    double _result = 0;
    HRESULT _hr = get_DeltaFocus(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2550)
inline void ZOSAPI_Interfaces::IAS_Spot::PutDeltaFocus ( double pRetVal ) {
    HRESULT _hr = put_DeltaFocus(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2551)
inline double ZOSAPI_Interfaces::IAS_Spot::GetExaggerate ( ) {
    double _result = 0;
    HRESULT _hr = get_Exaggerate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2552)
inline void ZOSAPI_Interfaces::IAS_Spot::PutExaggerate ( double pRetVal ) {
    HRESULT _hr = put_Exaggerate(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IAS_RMSField wrapper method implementations
//

#pragma implementation_key(2553)
inline ZOSAPI_Interfaces::IAS_WavelengthPtr ZOSAPI_Interfaces::IAS_RMSField::GetWavelength ( ) {
    struct IAS_Wavelength * _result = 0;
    HRESULT _hr = get_Wavelength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_WavelengthPtr(_result, false);
}

#pragma implementation_key(2554)
inline enum ZOSAPI_Interfaces::ZOSAPI_Analysis_Settings_RMS_RMSField_DataType ZOSAPI_Interfaces::IAS_RMSField::GetData ( ) {
    enum ZOSAPI_Analysis_Settings_RMS_RMSField_DataType _result;
    HRESULT _hr = get_Data(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2555)
inline void ZOSAPI_Interfaces::IAS_RMSField::PutData ( enum ZOSAPI_Analysis_Settings_RMS_RMSField_DataType pRetVal ) {
    HRESULT _hr = put_Data(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2556)
inline enum ZOSAPI_Interfaces::FieldDensities ZOSAPI_Interfaces::IAS_RMSField::GetFieldDensity ( ) {
    enum FieldDensities _result;
    HRESULT _hr = get_FieldDensity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2557)
inline void ZOSAPI_Interfaces::IAS_RMSField::PutFieldDensity ( enum FieldDensities pRetVal ) {
    HRESULT _hr = put_FieldDensity(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2558)
inline enum ZOSAPI_Interfaces::RayDensities ZOSAPI_Interfaces::IAS_RMSField::GetRayDensity ( ) {
    enum RayDensities _result;
    HRESULT _hr = get_RayDensity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2559)
inline void ZOSAPI_Interfaces::IAS_RMSField::PutRayDensity ( enum RayDensities pRetVal ) {
    HRESULT _hr = put_RayDensity(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2560)
inline enum ZOSAPI_Interfaces::ReferTo ZOSAPI_Interfaces::IAS_RMSField::GetReferTo ( ) {
    enum ReferTo _result;
    HRESULT _hr = get_ReferTo(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2561)
inline void ZOSAPI_Interfaces::IAS_RMSField::PutReferTo ( enum ReferTo pRetVal ) {
    HRESULT _hr = put_ReferTo(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2562)
inline enum ZOSAPI_Interfaces::Method ZOSAPI_Interfaces::IAS_RMSField::GetMethod ( ) {
    enum Method _result;
    HRESULT _hr = get_Method(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2563)
inline void ZOSAPI_Interfaces::IAS_RMSField::PutMethod ( enum Method pRetVal ) {
    HRESULT _hr = put_Method(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2564)
inline enum ZOSAPI_Interfaces::Orientations ZOSAPI_Interfaces::IAS_RMSField::GetOrientation ( ) {
    enum Orientations _result;
    HRESULT _hr = get_Orientation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2565)
inline void ZOSAPI_Interfaces::IAS_RMSField::PutOrientation ( enum Orientations pRetVal ) {
    HRESULT _hr = put_Orientation(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2566)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_RMSField::GetShowDiffractionLimit ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowDiffractionLimit(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2567)
inline void ZOSAPI_Interfaces::IAS_RMSField::PutShowDiffractionLimit ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_ShowDiffractionLimit(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2568)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_RMSField::GetUseDashes ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseDashes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2569)
inline void ZOSAPI_Interfaces::IAS_RMSField::PutUseDashes ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UseDashes(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2570)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_RMSField::GetUsePolarization ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UsePolarization(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2571)
inline void ZOSAPI_Interfaces::IAS_RMSField::PutUsePolarization ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UsePolarization(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2572)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_RMSField::GetRemoveVignettingFactors ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_RemoveVignettingFactors(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2573)
inline void ZOSAPI_Interfaces::IAS_RMSField::PutRemoveVignettingFactors ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_RemoveVignettingFactors(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2574)
inline double ZOSAPI_Interfaces::IAS_RMSField::GetPlotScale ( ) {
    double _result = 0;
    HRESULT _hr = get_PlotScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2575)
inline void ZOSAPI_Interfaces::IAS_RMSField::PutPlotScale ( double pRetVal ) {
    HRESULT _hr = put_PlotScale(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IAS_RMSLambdaDiagram wrapper method implementations
//

#pragma implementation_key(2576)
inline ZOSAPI_Interfaces::IAS_FieldPtr ZOSAPI_Interfaces::IAS_RMSLambdaDiagram::GetField ( ) {
    struct IAS_Field * _result = 0;
    HRESULT _hr = get_Field(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_FieldPtr(_result, false);
}

#pragma implementation_key(2577)
inline enum ZOSAPI_Interfaces::RayDensities ZOSAPI_Interfaces::IAS_RMSLambdaDiagram::GetRayDensity ( ) {
    enum RayDensities _result;
    HRESULT _hr = get_RayDensity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2578)
inline void ZOSAPI_Interfaces::IAS_RMSLambdaDiagram::PutRayDensity ( enum RayDensities pRetVal ) {
    HRESULT _hr = put_RayDensity(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2579)
inline enum ZOSAPI_Interfaces::WaveDensities ZOSAPI_Interfaces::IAS_RMSLambdaDiagram::GetWaveDensity ( ) {
    enum WaveDensities _result;
    HRESULT _hr = get_WaveDensity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2580)
inline void ZOSAPI_Interfaces::IAS_RMSLambdaDiagram::PutWaveDensity ( enum WaveDensities pRetVal ) {
    HRESULT _hr = put_WaveDensity(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2581)
inline enum ZOSAPI_Interfaces::ZOSAPI_Analysis_Settings_RMS_RMSField_DataType ZOSAPI_Interfaces::IAS_RMSLambdaDiagram::GetData ( ) {
    enum ZOSAPI_Analysis_Settings_RMS_RMSField_DataType _result;
    HRESULT _hr = get_Data(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2582)
inline void ZOSAPI_Interfaces::IAS_RMSLambdaDiagram::PutData ( enum ZOSAPI_Analysis_Settings_RMS_RMSField_DataType pRetVal ) {
    HRESULT _hr = put_Data(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2583)
inline enum ZOSAPI_Interfaces::ReferTo ZOSAPI_Interfaces::IAS_RMSLambdaDiagram::GetReferTo ( ) {
    enum ReferTo _result;
    HRESULT _hr = get_ReferTo(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2584)
inline void ZOSAPI_Interfaces::IAS_RMSLambdaDiagram::PutReferTo ( enum ReferTo pRetVal ) {
    HRESULT _hr = put_ReferTo(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2585)
inline enum ZOSAPI_Interfaces::Method ZOSAPI_Interfaces::IAS_RMSLambdaDiagram::GetMethod ( ) {
    enum Method _result;
    HRESULT _hr = get_Method(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2586)
inline void ZOSAPI_Interfaces::IAS_RMSLambdaDiagram::PutMethod ( enum Method pRetVal ) {
    HRESULT _hr = put_Method(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2587)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_RMSLambdaDiagram::GetUseDashes ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseDashes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2588)
inline void ZOSAPI_Interfaces::IAS_RMSLambdaDiagram::PutUseDashes ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UseDashes(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2589)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_RMSLambdaDiagram::GetShowDiffractionLimit ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowDiffractionLimit(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2590)
inline void ZOSAPI_Interfaces::IAS_RMSLambdaDiagram::PutShowDiffractionLimit ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_ShowDiffractionLimit(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2591)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_RMSLambdaDiagram::GetUsePolarization ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UsePolarization(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2592)
inline void ZOSAPI_Interfaces::IAS_RMSLambdaDiagram::PutUsePolarization ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UsePolarization(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2593)
inline double ZOSAPI_Interfaces::IAS_RMSLambdaDiagram::GetPlotScale ( ) {
    double _result = 0;
    HRESULT _hr = get_PlotScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2594)
inline void ZOSAPI_Interfaces::IAS_RMSLambdaDiagram::PutPlotScale ( double pRetVal ) {
    HRESULT _hr = put_PlotScale(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IAS_RMSFocus wrapper method implementations
//

#pragma implementation_key(2595)
inline ZOSAPI_Interfaces::IAS_WavelengthPtr ZOSAPI_Interfaces::IAS_RMSFocus::GetWavelength ( ) {
    struct IAS_Wavelength * _result = 0;
    HRESULT _hr = get_Wavelength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_WavelengthPtr(_result, false);
}

#pragma implementation_key(2596)
inline enum ZOSAPI_Interfaces::RayDensities ZOSAPI_Interfaces::IAS_RMSFocus::GetRayDensity ( ) {
    enum RayDensities _result;
    HRESULT _hr = get_RayDensity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2597)
inline void ZOSAPI_Interfaces::IAS_RMSFocus::PutRayDensity ( enum RayDensities pRetVal ) {
    HRESULT _hr = put_RayDensity(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2598)
inline enum ZOSAPI_Interfaces::FocusDensities ZOSAPI_Interfaces::IAS_RMSFocus::GetFocusDensity ( ) {
    enum FocusDensities _result;
    HRESULT _hr = get_FocusDensity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2599)
inline void ZOSAPI_Interfaces::IAS_RMSFocus::PutFocusDensity ( enum FocusDensities pRetVal ) {
    HRESULT _hr = put_FocusDensity(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2600)
inline enum ZOSAPI_Interfaces::ZOSAPI_Analysis_Settings_RMS_RMSField_DataType ZOSAPI_Interfaces::IAS_RMSFocus::GetData ( ) {
    enum ZOSAPI_Analysis_Settings_RMS_RMSField_DataType _result;
    HRESULT _hr = get_Data(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2601)
inline void ZOSAPI_Interfaces::IAS_RMSFocus::PutData ( enum ZOSAPI_Analysis_Settings_RMS_RMSField_DataType pRetVal ) {
    HRESULT _hr = put_Data(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2602)
inline enum ZOSAPI_Interfaces::ReferTo ZOSAPI_Interfaces::IAS_RMSFocus::GetReferTo ( ) {
    enum ReferTo _result;
    HRESULT _hr = get_ReferTo(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2603)
inline void ZOSAPI_Interfaces::IAS_RMSFocus::PutReferTo ( enum ReferTo pRetVal ) {
    HRESULT _hr = put_ReferTo(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2604)
inline enum ZOSAPI_Interfaces::Method ZOSAPI_Interfaces::IAS_RMSFocus::GetMethod ( ) {
    enum Method _result;
    HRESULT _hr = get_Method(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2605)
inline void ZOSAPI_Interfaces::IAS_RMSFocus::PutMethod ( enum Method pRetVal ) {
    HRESULT _hr = put_Method(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2606)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_RMSFocus::GetUseDashes ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseDashes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2607)
inline void ZOSAPI_Interfaces::IAS_RMSFocus::PutUseDashes ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UseDashes(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2608)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_RMSFocus::GetShowDiffractionLimit ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowDiffractionLimit(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2609)
inline void ZOSAPI_Interfaces::IAS_RMSFocus::PutShowDiffractionLimit ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_ShowDiffractionLimit(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2610)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_RMSFocus::GetUsePolarization ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UsePolarization(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2611)
inline void ZOSAPI_Interfaces::IAS_RMSFocus::PutUsePolarization ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UsePolarization(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2612)
inline double ZOSAPI_Interfaces::IAS_RMSFocus::GetPlotScale ( ) {
    double _result = 0;
    HRESULT _hr = get_PlotScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2613)
inline void ZOSAPI_Interfaces::IAS_RMSFocus::PutPlotScale ( double pRetVal ) {
    HRESULT _hr = put_PlotScale(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2614)
inline double ZOSAPI_Interfaces::IAS_RMSFocus::GetMinimumFocus ( ) {
    double _result = 0;
    HRESULT _hr = get_MinimumFocus(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2615)
inline void ZOSAPI_Interfaces::IAS_RMSFocus::PutMinimumFocus ( double pRetVal ) {
    HRESULT _hr = put_MinimumFocus(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2616)
inline double ZOSAPI_Interfaces::IAS_RMSFocus::GetMaximumFocus ( ) {
    double _result = 0;
    HRESULT _hr = get_MaximumFocus(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2617)
inline void ZOSAPI_Interfaces::IAS_RMSFocus::PutMaximumFocus ( double pRetVal ) {
    HRESULT _hr = put_MaximumFocus(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IAS_RMSFieldMap wrapper method implementations
//

#pragma implementation_key(2618)
inline ZOSAPI_Interfaces::IAS_FieldPtr ZOSAPI_Interfaces::IAS_RMSFieldMap::GetField ( ) {
    struct IAS_Field * _result = 0;
    HRESULT _hr = get_Field(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_FieldPtr(_result, false);
}

#pragma implementation_key(2619)
inline ZOSAPI_Interfaces::IAS_SurfacePtr ZOSAPI_Interfaces::IAS_RMSFieldMap::GetSurface ( ) {
    struct IAS_Surface * _result = 0;
    HRESULT _hr = get_Surface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_SurfacePtr(_result, false);
}

#pragma implementation_key(2620)
inline ZOSAPI_Interfaces::IAS_WavelengthPtr ZOSAPI_Interfaces::IAS_RMSFieldMap::GetWavelength ( ) {
    struct IAS_Wavelength * _result = 0;
    HRESULT _hr = get_Wavelength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_WavelengthPtr(_result, false);
}

#pragma implementation_key(2621)
inline enum ZOSAPI_Interfaces::ZOSAPI_Analysis_Settings_RMS_RMSFieldMap_DataType ZOSAPI_Interfaces::IAS_RMSFieldMap::GetData ( ) {
    enum ZOSAPI_Analysis_Settings_RMS_RMSFieldMap_DataType _result;
    HRESULT _hr = get_Data(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2622)
inline void ZOSAPI_Interfaces::IAS_RMSFieldMap::PutData ( enum ZOSAPI_Analysis_Settings_RMS_RMSFieldMap_DataType pRetVal ) {
    HRESULT _hr = put_Data(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2623)
inline enum ZOSAPI_Interfaces::Method ZOSAPI_Interfaces::IAS_RMSFieldMap::GetMethodType ( ) {
    enum Method _result;
    HRESULT _hr = get_MethodType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2624)
inline void ZOSAPI_Interfaces::IAS_RMSFieldMap::PutMethodType ( enum Method pRetVal ) {
    HRESULT _hr = put_MethodType(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2625)
inline enum ZOSAPI_Interfaces::RayDensities ZOSAPI_Interfaces::IAS_RMSFieldMap::GetRayDensity ( ) {
    enum RayDensities _result;
    HRESULT _hr = get_RayDensity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2626)
inline void ZOSAPI_Interfaces::IAS_RMSFieldMap::PutRayDensity ( enum RayDensities pRetVal ) {
    HRESULT _hr = put_RayDensity(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2627)
inline enum ZOSAPI_Interfaces::ReferTo ZOSAPI_Interfaces::IAS_RMSFieldMap::GetReferTo ( ) {
    enum ReferTo _result;
    HRESULT _hr = get_ReferTo(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2628)
inline void ZOSAPI_Interfaces::IAS_RMSFieldMap::PutReferTo ( enum ReferTo pRetVal ) {
    HRESULT _hr = put_ReferTo(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2629)
inline enum ZOSAPI_Interfaces::ShowAs ZOSAPI_Interfaces::IAS_RMSFieldMap::GetShowAs ( ) {
    enum ShowAs _result;
    HRESULT _hr = get_ShowAs(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2630)
inline void ZOSAPI_Interfaces::IAS_RMSFieldMap::PutShowAs ( enum ShowAs pRetVal ) {
    HRESULT _hr = put_ShowAs(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2631)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_RMSFieldMap::GetUsePolarization ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UsePolarization(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2632)
inline void ZOSAPI_Interfaces::IAS_RMSFieldMap::PutUsePolarization ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UsePolarization(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2633)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_RMSFieldMap::GetRemoveVignettingFactors ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_RemoveVignettingFactors(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2634)
inline void ZOSAPI_Interfaces::IAS_RMSFieldMap::PutRemoveVignettingFactors ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_RemoveVignettingFactors(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2635)
inline long ZOSAPI_Interfaces::IAS_RMSFieldMap::GetX_FieldSampling ( ) {
    long _result = 0;
    HRESULT _hr = get_X_FieldSampling(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2636)
inline void ZOSAPI_Interfaces::IAS_RMSFieldMap::PutX_FieldSampling ( long pRetVal ) {
    HRESULT _hr = put_X_FieldSampling(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2637)
inline long ZOSAPI_Interfaces::IAS_RMSFieldMap::GetY_FieldSampling ( ) {
    long _result = 0;
    HRESULT _hr = get_Y_FieldSampling(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2638)
inline void ZOSAPI_Interfaces::IAS_RMSFieldMap::PutY_FieldSampling ( long pRetVal ) {
    HRESULT _hr = put_Y_FieldSampling(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2639)
inline double ZOSAPI_Interfaces::IAS_RMSFieldMap::GetX_FieldSize ( ) {
    double _result = 0;
    HRESULT _hr = get_X_FieldSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2640)
inline void ZOSAPI_Interfaces::IAS_RMSFieldMap::PutX_FieldSize ( double pRetVal ) {
    HRESULT _hr = put_X_FieldSize(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2641)
inline double ZOSAPI_Interfaces::IAS_RMSFieldMap::GetY_FieldSize ( ) {
    double _result = 0;
    HRESULT _hr = get_Y_FieldSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2642)
inline void ZOSAPI_Interfaces::IAS_RMSFieldMap::PutY_FieldSize ( double pRetVal ) {
    HRESULT _hr = put_Y_FieldSize(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2643)
inline double ZOSAPI_Interfaces::IAS_RMSFieldMap::GetPlotScale ( ) {
    double _result = 0;
    HRESULT _hr = get_PlotScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2644)
inline void ZOSAPI_Interfaces::IAS_RMSFieldMap::PutPlotScale ( double pRetVal ) {
    HRESULT _hr = put_PlotScale(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2645)
inline _bstr_t ZOSAPI_Interfaces::IAS_RMSFieldMap::GetContourFormat ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ContourFormat(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2646)
inline void ZOSAPI_Interfaces::IAS_RMSFieldMap::PutContourFormat ( _bstr_t pRetVal ) {
    HRESULT _hr = put_ContourFormat(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IAS_DetectorViewer wrapper method implementations
//

#pragma implementation_key(2647)
inline ZOSAPI_Interfaces::IAS_SurfacePtr ZOSAPI_Interfaces::IAS_DetectorViewer::GetSurface ( ) {
    struct IAS_Surface * _result = 0;
    HRESULT _hr = get_Surface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_SurfacePtr(_result, false);
}

#pragma implementation_key(2648)
inline ZOSAPI_Interfaces::IAS_DetectorPtr ZOSAPI_Interfaces::IAS_DetectorViewer::GetDetector ( ) {
    struct IAS_Detector * _result = 0;
    HRESULT _hr = get_Detector(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_DetectorPtr(_result, false);
}

#pragma implementation_key(2649)
inline enum ZOSAPI_Interfaces::DetectorViewerShowAsTypes ZOSAPI_Interfaces::IAS_DetectorViewer::GetShowAs ( ) {
    enum DetectorViewerShowAsTypes _result;
    HRESULT _hr = get_ShowAs(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2650)
inline void ZOSAPI_Interfaces::IAS_DetectorViewer::PutShowAs ( enum DetectorViewerShowAsTypes pRetVal ) {
    HRESULT _hr = put_ShowAs(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2651)
inline enum ZOSAPI_Interfaces::DetectorViewerScaleTypes ZOSAPI_Interfaces::IAS_DetectorViewer::GetScale ( ) {
    enum DetectorViewerScaleTypes _result;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2652)
inline void ZOSAPI_Interfaces::IAS_DetectorViewer::PutScale ( enum DetectorViewerScaleTypes pRetVal ) {
    HRESULT _hr = put_Scale(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2653)
inline enum ZOSAPI_Interfaces::DetectorViewerShowDataTypes ZOSAPI_Interfaces::IAS_DetectorViewer::GetDataType ( ) {
    enum DetectorViewerShowDataTypes _result;
    HRESULT _hr = get_DataType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2654)
inline void ZOSAPI_Interfaces::IAS_DetectorViewer::PutDataType ( enum DetectorViewerShowDataTypes pRetVal ) {
    HRESULT _hr = put_DataType(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2655)
inline long ZOSAPI_Interfaces::IAS_DetectorViewer::GetSymbolType ( ) {
    long _result = 0;
    HRESULT _hr = get_SymbolType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2656)
inline void ZOSAPI_Interfaces::IAS_DetectorViewer::PutSymbolType ( long pRetVal ) {
    HRESULT _hr = put_SymbolType(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2657)
inline long ZOSAPI_Interfaces::IAS_DetectorViewer::GetConfiguration ( ) {
    long _result = 0;
    HRESULT _hr = get_Configuration(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2658)
inline void ZOSAPI_Interfaces::IAS_DetectorViewer::PutConfiguration ( long pRetVal ) {
    HRESULT _hr = put_Configuration(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2659)
inline long ZOSAPI_Interfaces::IAS_DetectorViewer::GetExtraProperty ( ) {
    long _result = 0;
    HRESULT _hr = get_ExtraProperty(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2660)
inline void ZOSAPI_Interfaces::IAS_DetectorViewer::PutExtraProperty ( long pRetVal ) {
    HRESULT _hr = put_ExtraProperty(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2661)
inline long ZOSAPI_Interfaces::IAS_DetectorViewer::GetSmoothing ( ) {
    long _result = 0;
    HRESULT _hr = get_Smoothing(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2662)
inline void ZOSAPI_Interfaces::IAS_DetectorViewer::PutSmoothing ( long pRetVal ) {
    HRESULT _hr = put_Smoothing(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2663)
inline long ZOSAPI_Interfaces::IAS_DetectorViewer::GetRowCol ( ) {
    long _result = 0;
    HRESULT _hr = get_RowCol(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2664)
inline void ZOSAPI_Interfaces::IAS_DetectorViewer::PutRowCol ( long pRetVal ) {
    HRESULT _hr = put_RowCol(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2665)
inline long ZOSAPI_Interfaces::IAS_DetectorViewer::GetZplane ( ) {
    long _result = 0;
    HRESULT _hr = get_Zplane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2666)
inline void ZOSAPI_Interfaces::IAS_DetectorViewer::PutZplane ( long pRetVal ) {
    HRESULT _hr = put_Zplane(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2667)
inline unsigned short ZOSAPI_Interfaces::IAS_DetectorViewer::GetContrast ( ) {
    unsigned short _result = 0;
    HRESULT _hr = get_Contrast(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2668)
inline void ZOSAPI_Interfaces::IAS_DetectorViewer::PutContrast ( unsigned short pRetVal ) {
    HRESULT _hr = put_Contrast(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2669)
inline SAFEARRAY * ZOSAPI_Interfaces::IAS_DetectorViewer::GetAngleList ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = get_AngleList(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2670)
inline void ZOSAPI_Interfaces::IAS_DetectorViewer::PutAngleList ( SAFEARRAY * pRetVal ) {
    HRESULT _hr = put_AngleList(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2671)
inline double ZOSAPI_Interfaces::IAS_DetectorViewer::GetPlotScaleMinimum ( ) {
    double _result = 0;
    HRESULT _hr = get_PlotScaleMinimum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2672)
inline void ZOSAPI_Interfaces::IAS_DetectorViewer::PutPlotScaleMinimum ( double pRetVal ) {
    HRESULT _hr = put_PlotScaleMinimum(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2673)
inline double ZOSAPI_Interfaces::IAS_DetectorViewer::GetPlotScaleMaximum ( ) {
    double _result = 0;
    HRESULT _hr = get_PlotScaleMaximum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2674)
inline void ZOSAPI_Interfaces::IAS_DetectorViewer::PutPlotScaleMaximum ( double pRetVal ) {
    HRESULT _hr = put_PlotScaleMaximum(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2675)
inline _bstr_t ZOSAPI_Interfaces::IAS_DetectorViewer::GetRayDatabaseFilename ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_RayDatabaseFilename(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2676)
inline void ZOSAPI_Interfaces::IAS_DetectorViewer::PutRayDatabaseFilename ( _bstr_t pRetVal ) {
    HRESULT _hr = put_RayDatabaseFilename(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2677)
inline _bstr_t ZOSAPI_Interfaces::IAS_DetectorViewer::GetFilter ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Filter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2678)
inline void ZOSAPI_Interfaces::IAS_DetectorViewer::PutFilter ( _bstr_t pRetVal ) {
    HRESULT _hr = put_Filter(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2679)
inline _bstr_t ZOSAPI_Interfaces::IAS_DetectorViewer::GetOutFile ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_OutFile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2680)
inline void ZOSAPI_Interfaces::IAS_DetectorViewer::PutOutFile ( _bstr_t pRetVal ) {
    HRESULT _hr = put_OutFile(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2681)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_DetectorViewer::GetSuppressFrame ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SuppressFrame(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2682)
inline void ZOSAPI_Interfaces::IAS_DetectorViewer::PutSuppressFrame ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_SuppressFrame(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2683)
inline long ZOSAPI_Interfaces::IAS_DetectorViewer::GetNumberOfNonSequentialSurfaces ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfNonSequentialSurfaces(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2684)
inline _bstr_t ZOSAPI_Interfaces::IAS_DetectorViewer::GetNonSequentialSurfaceName ( long index ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetNonSequentialSurfaceName(index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2685)
inline long ZOSAPI_Interfaces::IAS_DetectorViewer::GetNonSequentialSurfaceNumber ( long index ) {
    long _result = 0;
    HRESULT _hr = raw_GetNonSequentialSurfaceNumber(index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2686)
inline long ZOSAPI_Interfaces::IAS_DetectorViewer::GetNumberOfDetectorsOnSurface ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfDetectorsOnSurface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2687)
inline _bstr_t ZOSAPI_Interfaces::IAS_DetectorViewer::GetDetectorName ( long index ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetDetectorName(index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2688)
inline long ZOSAPI_Interfaces::IAS_DetectorViewer::GetDetectorObjectNumber ( long index ) {
    long _result = 0;
    HRESULT _hr = raw_GetDetectorObjectNumber(index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2689)
inline long ZOSAPI_Interfaces::IAS_DetectorViewer::GetNumberOfShowAsTypes ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfShowAsTypes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2690)
inline _bstr_t ZOSAPI_Interfaces::IAS_DetectorViewer::GetShowAsTypeNameAt ( long idx ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetShowAsTypeNameAt(idx, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2691)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_DetectorViewer::IsValidDetector ( long N ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_IsValidDetector(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IAS_FftPsfCrossSection wrapper method implementations
//

#pragma implementation_key(2692)
inline ZOSAPI_Interfaces::IAS_FieldPtr ZOSAPI_Interfaces::IAS_FftPsfCrossSection::GetField ( ) {
    struct IAS_Field * _result = 0;
    HRESULT _hr = get_Field(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_FieldPtr(_result, false);
}

#pragma implementation_key(2693)
inline ZOSAPI_Interfaces::IAS_WavelengthPtr ZOSAPI_Interfaces::IAS_FftPsfCrossSection::GetWavelength ( ) {
    struct IAS_Wavelength * _result = 0;
    HRESULT _hr = get_Wavelength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_WavelengthPtr(_result, false);
}

#pragma implementation_key(2694)
inline enum ZOSAPI_Interfaces::SampleSizes ZOSAPI_Interfaces::IAS_FftPsfCrossSection::GetSampleSize ( ) {
    enum SampleSizes _result;
    HRESULT _hr = get_SampleSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2695)
inline void ZOSAPI_Interfaces::IAS_FftPsfCrossSection::PutSampleSize ( enum SampleSizes pRetVal ) {
    HRESULT _hr = put_SampleSize(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2696)
inline enum ZOSAPI_Interfaces::PsfTypes ZOSAPI_Interfaces::IAS_FftPsfCrossSection::GetType ( ) {
    enum PsfTypes _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2697)
inline void ZOSAPI_Interfaces::IAS_FftPsfCrossSection::PutType ( enum PsfTypes pRetVal ) {
    HRESULT _hr = put_Type(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2698)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_FftPsfCrossSection::GetUsePolarization ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UsePolarization(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2699)
inline void ZOSAPI_Interfaces::IAS_FftPsfCrossSection::PutUsePolarization ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UsePolarization(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2700)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_FftPsfCrossSection::GetNormalize ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Normalize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2701)
inline void ZOSAPI_Interfaces::IAS_FftPsfCrossSection::PutNormalize ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_Normalize(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2702)
inline double ZOSAPI_Interfaces::IAS_FftPsfCrossSection::GetPlotScale ( ) {
    double _result = 0;
    HRESULT _hr = get_PlotScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2703)
inline void ZOSAPI_Interfaces::IAS_FftPsfCrossSection::PutPlotScale ( double pRetVal ) {
    HRESULT _hr = put_PlotScale(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2704)
inline long ZOSAPI_Interfaces::IAS_FftPsfCrossSection::GetRowCol ( ) {
    long _result = 0;
    HRESULT _hr = get_RowCol(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2705)
inline void ZOSAPI_Interfaces::IAS_FftPsfCrossSection::PutRowCol ( long pRetVal ) {
    HRESULT _hr = put_RowCol(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IAS_FftPsfLineEdgeSpread wrapper method implementations
//

#pragma implementation_key(2706)
inline ZOSAPI_Interfaces::IAS_FieldPtr ZOSAPI_Interfaces::IAS_FftPsfLineEdgeSpread::GetField ( ) {
    struct IAS_Field * _result = 0;
    HRESULT _hr = get_Field(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_FieldPtr(_result, false);
}

#pragma implementation_key(2707)
inline ZOSAPI_Interfaces::IAS_WavelengthPtr ZOSAPI_Interfaces::IAS_FftPsfLineEdgeSpread::GetWavelength ( ) {
    struct IAS_Wavelength * _result = 0;
    HRESULT _hr = get_Wavelength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_WavelengthPtr(_result, false);
}

#pragma implementation_key(2708)
inline enum ZOSAPI_Interfaces::SampleSizes ZOSAPI_Interfaces::IAS_FftPsfLineEdgeSpread::GetSampleSize ( ) {
    enum SampleSizes _result;
    HRESULT _hr = get_SampleSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2709)
inline void ZOSAPI_Interfaces::IAS_FftPsfLineEdgeSpread::PutSampleSize ( enum SampleSizes pRetVal ) {
    HRESULT _hr = put_SampleSize(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2710)
inline enum ZOSAPI_Interfaces::PsfSpread ZOSAPI_Interfaces::IAS_FftPsfLineEdgeSpread::GetSpread ( ) {
    enum PsfSpread _result;
    HRESULT _hr = get_Spread(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2711)
inline void ZOSAPI_Interfaces::IAS_FftPsfLineEdgeSpread::PutSpread ( enum PsfSpread pRetVal ) {
    HRESULT _hr = put_Spread(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2712)
inline enum ZOSAPI_Interfaces::PsfTypes ZOSAPI_Interfaces::IAS_FftPsfLineEdgeSpread::GetType ( ) {
    enum PsfTypes _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2713)
inline void ZOSAPI_Interfaces::IAS_FftPsfLineEdgeSpread::PutType ( enum PsfTypes pRetVal ) {
    HRESULT _hr = put_Type(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2714)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_FftPsfLineEdgeSpread::GetUseCoherentPSF ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseCoherentPSF(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2715)
inline void ZOSAPI_Interfaces::IAS_FftPsfLineEdgeSpread::PutUseCoherentPSF ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UseCoherentPSF(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2716)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_FftPsfLineEdgeSpread::GetUsePolarization ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UsePolarization(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2717)
inline void ZOSAPI_Interfaces::IAS_FftPsfLineEdgeSpread::PutUsePolarization ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UsePolarization(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2718)
inline double ZOSAPI_Interfaces::IAS_FftPsfLineEdgeSpread::GetPlotScale ( ) {
    double _result = 0;
    HRESULT _hr = get_PlotScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2719)
inline void ZOSAPI_Interfaces::IAS_FftPsfLineEdgeSpread::PutPlotScale ( double pRetVal ) {
    HRESULT _hr = put_PlotScale(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IAS_HuygensPsfCrossSection wrapper method implementations
//

#pragma implementation_key(2720)
inline ZOSAPI_Interfaces::IAS_FieldPtr ZOSAPI_Interfaces::IAS_HuygensPsfCrossSection::GetField ( ) {
    struct IAS_Field * _result = 0;
    HRESULT _hr = get_Field(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_FieldPtr(_result, false);
}

#pragma implementation_key(2721)
inline ZOSAPI_Interfaces::IAS_WavelengthPtr ZOSAPI_Interfaces::IAS_HuygensPsfCrossSection::GetWavelength ( ) {
    struct IAS_Wavelength * _result = 0;
    HRESULT _hr = get_Wavelength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_WavelengthPtr(_result, false);
}

#pragma implementation_key(2722)
inline enum ZOSAPI_Interfaces::SampleSizes ZOSAPI_Interfaces::IAS_HuygensPsfCrossSection::GetPupilSampleSize ( ) {
    enum SampleSizes _result;
    HRESULT _hr = get_PupilSampleSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2723)
inline void ZOSAPI_Interfaces::IAS_HuygensPsfCrossSection::PutPupilSampleSize ( enum SampleSizes pRetVal ) {
    HRESULT _hr = put_PupilSampleSize(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2724)
inline enum ZOSAPI_Interfaces::SampleSizes ZOSAPI_Interfaces::IAS_HuygensPsfCrossSection::GetImageSampleSize ( ) {
    enum SampleSizes _result;
    HRESULT _hr = get_ImageSampleSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2725)
inline void ZOSAPI_Interfaces::IAS_HuygensPsfCrossSection::PutImageSampleSize ( enum SampleSizes pRetVal ) {
    HRESULT _hr = put_ImageSampleSize(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2726)
inline enum ZOSAPI_Interfaces::PsfTypes ZOSAPI_Interfaces::IAS_HuygensPsfCrossSection::GetType ( ) {
    enum PsfTypes _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2727)
inline void ZOSAPI_Interfaces::IAS_HuygensPsfCrossSection::PutType ( enum PsfTypes pRetVal ) {
    HRESULT _hr = put_Type(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2728)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_HuygensPsfCrossSection::GetNormalize ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Normalize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2729)
inline void ZOSAPI_Interfaces::IAS_HuygensPsfCrossSection::PutNormalize ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_Normalize(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2730)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_HuygensPsfCrossSection::GetUseCentroid ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseCentroid(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2731)
inline void ZOSAPI_Interfaces::IAS_HuygensPsfCrossSection::PutUseCentroid ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UseCentroid(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2732)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_HuygensPsfCrossSection::GetUsePolarization ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UsePolarization(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2733)
inline void ZOSAPI_Interfaces::IAS_HuygensPsfCrossSection::PutUsePolarization ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UsePolarization(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2734)
inline double ZOSAPI_Interfaces::IAS_HuygensPsfCrossSection::GetImageDelta ( ) {
    double _result = 0;
    HRESULT _hr = get_ImageDelta(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2735)
inline void ZOSAPI_Interfaces::IAS_HuygensPsfCrossSection::PutImageDelta ( double pRetVal ) {
    HRESULT _hr = put_ImageDelta(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2736)
inline long ZOSAPI_Interfaces::IAS_HuygensPsfCrossSection::GetConfiguration ( ) {
    long _result = 0;
    HRESULT _hr = get_Configuration(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2737)
inline void ZOSAPI_Interfaces::IAS_HuygensPsfCrossSection::PutConfiguration ( long pRetVal ) {
    HRESULT _hr = put_Configuration(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2738)
inline long ZOSAPI_Interfaces::IAS_HuygensPsfCrossSection::GetRowCol ( ) {
    long _result = 0;
    HRESULT _hr = get_RowCol(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2739)
inline void ZOSAPI_Interfaces::IAS_HuygensPsfCrossSection::PutRowCol ( long pRetVal ) {
    HRESULT _hr = put_RowCol(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IAS_HuygensPsf wrapper method implementations
//

#pragma implementation_key(2740)
inline ZOSAPI_Interfaces::IAS_FieldPtr ZOSAPI_Interfaces::IAS_HuygensPsf::GetField ( ) {
    struct IAS_Field * _result = 0;
    HRESULT _hr = get_Field(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_FieldPtr(_result, false);
}

#pragma implementation_key(2741)
inline ZOSAPI_Interfaces::IAS_WavelengthPtr ZOSAPI_Interfaces::IAS_HuygensPsf::GetWavelength ( ) {
    struct IAS_Wavelength * _result = 0;
    HRESULT _hr = get_Wavelength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_WavelengthPtr(_result, false);
}

#pragma implementation_key(2742)
inline enum ZOSAPI_Interfaces::SampleSizes ZOSAPI_Interfaces::IAS_HuygensPsf::GetPupilSampleSize ( ) {
    enum SampleSizes _result;
    HRESULT _hr = get_PupilSampleSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2743)
inline void ZOSAPI_Interfaces::IAS_HuygensPsf::PutPupilSampleSize ( enum SampleSizes pRetVal ) {
    HRESULT _hr = put_PupilSampleSize(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2744)
inline enum ZOSAPI_Interfaces::SampleSizes ZOSAPI_Interfaces::IAS_HuygensPsf::GetImageSampleSize ( ) {
    enum SampleSizes _result;
    HRESULT _hr = get_ImageSampleSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2745)
inline void ZOSAPI_Interfaces::IAS_HuygensPsf::PutImageSampleSize ( enum SampleSizes pRetVal ) {
    HRESULT _hr = put_ImageSampleSize(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2746)
inline enum ZOSAPI_Interfaces::HuygensPsfTypes ZOSAPI_Interfaces::IAS_HuygensPsf::GetType ( ) {
    enum HuygensPsfTypes _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2747)
inline void ZOSAPI_Interfaces::IAS_HuygensPsf::PutType ( enum HuygensPsfTypes pRetVal ) {
    HRESULT _hr = put_Type(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2748)
inline enum ZOSAPI_Interfaces::HuygensShowAsTypes ZOSAPI_Interfaces::IAS_HuygensPsf::GetShowAsType ( ) {
    enum HuygensShowAsTypes _result;
    HRESULT _hr = get_ShowAsType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2749)
inline void ZOSAPI_Interfaces::IAS_HuygensPsf::PutShowAsType ( enum HuygensShowAsTypes pRetVal ) {
    HRESULT _hr = put_ShowAsType(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2750)
inline enum ZOSAPI_Interfaces::Rotations ZOSAPI_Interfaces::IAS_HuygensPsf::GetRotation ( ) {
    enum Rotations _result;
    HRESULT _hr = get_Rotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2751)
inline void ZOSAPI_Interfaces::IAS_HuygensPsf::PutRotation ( enum Rotations pRetVal ) {
    HRESULT _hr = put_Rotation(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2752)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_HuygensPsf::GetNormalize ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Normalize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2753)
inline void ZOSAPI_Interfaces::IAS_HuygensPsf::PutNormalize ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_Normalize(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2754)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_HuygensPsf::GetUseCentroid ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseCentroid(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2755)
inline void ZOSAPI_Interfaces::IAS_HuygensPsf::PutUseCentroid ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UseCentroid(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2756)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_HuygensPsf::GetUsePolarization ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UsePolarization(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2757)
inline void ZOSAPI_Interfaces::IAS_HuygensPsf::PutUsePolarization ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UsePolarization(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2758)
inline double ZOSAPI_Interfaces::IAS_HuygensPsf::GetImageDelta ( ) {
    double _result = 0;
    HRESULT _hr = get_ImageDelta(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2759)
inline void ZOSAPI_Interfaces::IAS_HuygensPsf::PutImageDelta ( double pRetVal ) {
    HRESULT _hr = put_ImageDelta(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2760)
inline long ZOSAPI_Interfaces::IAS_HuygensPsf::GetConfiguration ( ) {
    long _result = 0;
    HRESULT _hr = get_Configuration(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2761)
inline void ZOSAPI_Interfaces::IAS_HuygensPsf::PutConfiguration ( long pRetVal ) {
    HRESULT _hr = put_Configuration(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IAS_FftPsf wrapper method implementations
//

#pragma implementation_key(2762)
inline ZOSAPI_Interfaces::IAS_FieldPtr ZOSAPI_Interfaces::IAS_FftPsf::GetField ( ) {
    struct IAS_Field * _result = 0;
    HRESULT _hr = get_Field(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_FieldPtr(_result, false);
}

#pragma implementation_key(2763)
inline ZOSAPI_Interfaces::IAS_SurfacePtr ZOSAPI_Interfaces::IAS_FftPsf::GetSurface ( ) {
    struct IAS_Surface * _result = 0;
    HRESULT _hr = get_Surface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_SurfacePtr(_result, false);
}

#pragma implementation_key(2764)
inline ZOSAPI_Interfaces::IAS_WavelengthPtr ZOSAPI_Interfaces::IAS_FftPsf::GetWavelength ( ) {
    struct IAS_Wavelength * _result = 0;
    HRESULT _hr = get_Wavelength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_WavelengthPtr(_result, false);
}

#pragma implementation_key(2765)
inline enum ZOSAPI_Interfaces::PsfSampling ZOSAPI_Interfaces::IAS_FftPsf::GetSampleSize ( ) {
    enum PsfSampling _result;
    HRESULT _hr = get_SampleSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2766)
inline void ZOSAPI_Interfaces::IAS_FftPsf::PutSampleSize ( enum PsfSampling pRetVal ) {
    HRESULT _hr = put_SampleSize(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2767)
inline enum ZOSAPI_Interfaces::PsfSampling ZOSAPI_Interfaces::IAS_FftPsf::GetOutputSize ( ) {
    enum PsfSampling _result;
    HRESULT _hr = get_OutputSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2768)
inline void ZOSAPI_Interfaces::IAS_FftPsf::PutOutputSize ( enum PsfSampling pRetVal ) {
    HRESULT _hr = put_OutputSize(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2769)
inline enum ZOSAPI_Interfaces::PsfRotation ZOSAPI_Interfaces::IAS_FftPsf::GetRotation ( ) {
    enum PsfRotation _result;
    HRESULT _hr = get_Rotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2770)
inline void ZOSAPI_Interfaces::IAS_FftPsf::PutRotation ( enum PsfRotation pRetVal ) {
    HRESULT _hr = put_Rotation(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2771)
inline double ZOSAPI_Interfaces::IAS_FftPsf::GetImageDelta ( ) {
    double _result = 0;
    HRESULT _hr = get_ImageDelta(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2772)
inline void ZOSAPI_Interfaces::IAS_FftPsf::PutImageDelta ( double pRetVal ) {
    HRESULT _hr = put_ImageDelta(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2773)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_FftPsf::GetUsePolarization ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UsePolarization(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2774)
inline void ZOSAPI_Interfaces::IAS_FftPsf::PutUsePolarization ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UsePolarization(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2775)
inline enum ZOSAPI_Interfaces::FftPsfType ZOSAPI_Interfaces::IAS_FftPsf::GetType ( ) {
    enum FftPsfType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2776)
inline void ZOSAPI_Interfaces::IAS_FftPsf::PutType ( enum FftPsfType pRetVal ) {
    HRESULT _hr = put_Type(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2777)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_FftPsf::GetNormalize ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Normalize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2778)
inline void ZOSAPI_Interfaces::IAS_FftPsf::PutNormalize ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_Normalize(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IAS_HuygensMtfvsField wrapper method implementations
//

#pragma implementation_key(2779)
inline ZOSAPI_Interfaces::IAS_WavelengthPtr ZOSAPI_Interfaces::IAS_HuygensMtfvsField::GetWavelength ( ) {
    struct IAS_Wavelength * _result = 0;
    HRESULT _hr = get_Wavelength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_WavelengthPtr(_result, false);
}

#pragma implementation_key(2780)
inline enum ZOSAPI_Interfaces::SampleSizes ZOSAPI_Interfaces::IAS_HuygensMtfvsField::GetSampleSize ( ) {
    enum SampleSizes _result;
    HRESULT _hr = get_SampleSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2781)
inline void ZOSAPI_Interfaces::IAS_HuygensMtfvsField::PutSampleSize ( enum SampleSizes pRetVal ) {
    HRESULT _hr = put_SampleSize(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2782)
inline enum ZOSAPI_Interfaces::ScanTypes ZOSAPI_Interfaces::IAS_HuygensMtfvsField::GetScanType ( ) {
    enum ScanTypes _result;
    HRESULT _hr = get_ScanType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2783)
inline void ZOSAPI_Interfaces::IAS_HuygensMtfvsField::PutScanType ( enum ScanTypes pRetVal ) {
    HRESULT _hr = put_ScanType(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2784)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_HuygensMtfvsField::GetRemoveVignetting ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_RemoveVignetting(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2785)
inline void ZOSAPI_Interfaces::IAS_HuygensMtfvsField::PutRemoveVignetting ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_RemoveVignetting(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2786)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_HuygensMtfvsField::GetUseDashes ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseDashes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2787)
inline void ZOSAPI_Interfaces::IAS_HuygensMtfvsField::PutUseDashes ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UseDashes(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2788)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_HuygensMtfvsField::GetUsePolarization ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UsePolarization(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2789)
inline void ZOSAPI_Interfaces::IAS_HuygensMtfvsField::PutUsePolarization ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UsePolarization(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2790)
inline double ZOSAPI_Interfaces::IAS_HuygensMtfvsField::GetFreq_1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Freq_1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2791)
inline void ZOSAPI_Interfaces::IAS_HuygensMtfvsField::PutFreq_1 ( double pRetVal ) {
    HRESULT _hr = put_Freq_1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2792)
inline double ZOSAPI_Interfaces::IAS_HuygensMtfvsField::GetFreq_2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Freq_2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2793)
inline void ZOSAPI_Interfaces::IAS_HuygensMtfvsField::PutFreq_2 ( double pRetVal ) {
    HRESULT _hr = put_Freq_2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2794)
inline double ZOSAPI_Interfaces::IAS_HuygensMtfvsField::GetFreq_3 ( ) {
    double _result = 0;
    HRESULT _hr = get_Freq_3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2795)
inline void ZOSAPI_Interfaces::IAS_HuygensMtfvsField::PutFreq_3 ( double pRetVal ) {
    HRESULT _hr = put_Freq_3(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2796)
inline double ZOSAPI_Interfaces::IAS_HuygensMtfvsField::GetFreq_4 ( ) {
    double _result = 0;
    HRESULT _hr = get_Freq_4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2797)
inline void ZOSAPI_Interfaces::IAS_HuygensMtfvsField::PutFreq_4 ( double pRetVal ) {
    HRESULT _hr = put_Freq_4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2798)
inline double ZOSAPI_Interfaces::IAS_HuygensMtfvsField::GetFreq_5 ( ) {
    double _result = 0;
    HRESULT _hr = get_Freq_5(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2799)
inline void ZOSAPI_Interfaces::IAS_HuygensMtfvsField::PutFreq_5 ( double pRetVal ) {
    HRESULT _hr = put_Freq_5(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2800)
inline double ZOSAPI_Interfaces::IAS_HuygensMtfvsField::GetFreq_6 ( ) {
    double _result = 0;
    HRESULT _hr = get_Freq_6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2801)
inline void ZOSAPI_Interfaces::IAS_HuygensMtfvsField::PutFreq_6 ( double pRetVal ) {
    HRESULT _hr = put_Freq_6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2802)
inline long ZOSAPI_Interfaces::IAS_HuygensMtfvsField::GetFieldDensity ( ) {
    long _result = 0;
    HRESULT _hr = get_FieldDensity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2803)
inline void ZOSAPI_Interfaces::IAS_HuygensMtfvsField::PutFieldDensity ( long pRetVal ) {
    HRESULT _hr = put_FieldDensity(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IAS_GeometricMtfvsField wrapper method implementations
//

#pragma implementation_key(2804)
inline ZOSAPI_Interfaces::IAS_WavelengthPtr ZOSAPI_Interfaces::IAS_GeometricMtfvsField::GetWavelength ( ) {
    struct IAS_Wavelength * _result = 0;
    HRESULT _hr = get_Wavelength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_WavelengthPtr(_result, false);
}

#pragma implementation_key(2805)
inline enum ZOSAPI_Interfaces::SampleSizes ZOSAPI_Interfaces::IAS_GeometricMtfvsField::GetSampleSize ( ) {
    enum SampleSizes _result;
    HRESULT _hr = get_SampleSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2806)
inline void ZOSAPI_Interfaces::IAS_GeometricMtfvsField::PutSampleSize ( enum SampleSizes pRetVal ) {
    HRESULT _hr = put_SampleSize(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2807)
inline enum ZOSAPI_Interfaces::ScanTypes ZOSAPI_Interfaces::IAS_GeometricMtfvsField::GetScanType ( ) {
    enum ScanTypes _result;
    HRESULT _hr = get_ScanType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2808)
inline void ZOSAPI_Interfaces::IAS_GeometricMtfvsField::PutScanType ( enum ScanTypes pRetVal ) {
    HRESULT _hr = put_ScanType(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2809)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_GeometricMtfvsField::GetMultiplyByDiffractionLimit ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_MultiplyByDiffractionLimit(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2810)
inline void ZOSAPI_Interfaces::IAS_GeometricMtfvsField::PutMultiplyByDiffractionLimit ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_MultiplyByDiffractionLimit(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2811)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_GeometricMtfvsField::GetScatterRays ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ScatterRays(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2812)
inline void ZOSAPI_Interfaces::IAS_GeometricMtfvsField::PutScatterRays ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_ScatterRays(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2813)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_GeometricMtfvsField::GetRemoveVignetting ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_RemoveVignetting(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2814)
inline void ZOSAPI_Interfaces::IAS_GeometricMtfvsField::PutRemoveVignetting ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_RemoveVignetting(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2815)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_GeometricMtfvsField::GetUseDashes ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseDashes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2816)
inline void ZOSAPI_Interfaces::IAS_GeometricMtfvsField::PutUseDashes ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UseDashes(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2817)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_GeometricMtfvsField::GetUsePolarization ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UsePolarization(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2818)
inline void ZOSAPI_Interfaces::IAS_GeometricMtfvsField::PutUsePolarization ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UsePolarization(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2819)
inline double ZOSAPI_Interfaces::IAS_GeometricMtfvsField::GetFreq_1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Freq_1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2820)
inline void ZOSAPI_Interfaces::IAS_GeometricMtfvsField::PutFreq_1 ( double pRetVal ) {
    HRESULT _hr = put_Freq_1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2821)
inline double ZOSAPI_Interfaces::IAS_GeometricMtfvsField::GetFreq_2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Freq_2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2822)
inline void ZOSAPI_Interfaces::IAS_GeometricMtfvsField::PutFreq_2 ( double pRetVal ) {
    HRESULT _hr = put_Freq_2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2823)
inline double ZOSAPI_Interfaces::IAS_GeometricMtfvsField::GetFreq_3 ( ) {
    double _result = 0;
    HRESULT _hr = get_Freq_3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2824)
inline void ZOSAPI_Interfaces::IAS_GeometricMtfvsField::PutFreq_3 ( double pRetVal ) {
    HRESULT _hr = put_Freq_3(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2825)
inline double ZOSAPI_Interfaces::IAS_GeometricMtfvsField::GetFreq_4 ( ) {
    double _result = 0;
    HRESULT _hr = get_Freq_4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2826)
inline void ZOSAPI_Interfaces::IAS_GeometricMtfvsField::PutFreq_4 ( double pRetVal ) {
    HRESULT _hr = put_Freq_4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2827)
inline double ZOSAPI_Interfaces::IAS_GeometricMtfvsField::GetFreq_5 ( ) {
    double _result = 0;
    HRESULT _hr = get_Freq_5(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2828)
inline void ZOSAPI_Interfaces::IAS_GeometricMtfvsField::PutFreq_5 ( double pRetVal ) {
    HRESULT _hr = put_Freq_5(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2829)
inline double ZOSAPI_Interfaces::IAS_GeometricMtfvsField::GetFreq_6 ( ) {
    double _result = 0;
    HRESULT _hr = get_Freq_6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2830)
inline void ZOSAPI_Interfaces::IAS_GeometricMtfvsField::PutFreq_6 ( double pRetVal ) {
    HRESULT _hr = put_Freq_6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2831)
inline long ZOSAPI_Interfaces::IAS_GeometricMtfvsField::GetFieldDensity ( ) {
    long _result = 0;
    HRESULT _hr = get_FieldDensity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2832)
inline void ZOSAPI_Interfaces::IAS_GeometricMtfvsField::PutFieldDensity ( long pRetVal ) {
    HRESULT _hr = put_FieldDensity(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IAS_GeometricMtf wrapper method implementations
//

#pragma implementation_key(2833)
inline ZOSAPI_Interfaces::IAS_FieldPtr ZOSAPI_Interfaces::IAS_GeometricMtf::GetField ( ) {
    struct IAS_Field * _result = 0;
    HRESULT _hr = get_Field(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_FieldPtr(_result, false);
}

#pragma implementation_key(2834)
inline ZOSAPI_Interfaces::IAS_WavelengthPtr ZOSAPI_Interfaces::IAS_GeometricMtf::GetWavelength ( ) {
    struct IAS_Wavelength * _result = 0;
    HRESULT _hr = get_Wavelength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_WavelengthPtr(_result, false);
}

#pragma implementation_key(2835)
inline enum ZOSAPI_Interfaces::SampleSizes ZOSAPI_Interfaces::IAS_GeometricMtf::GetSampleSize ( ) {
    enum SampleSizes _result;
    HRESULT _hr = get_SampleSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2836)
inline void ZOSAPI_Interfaces::IAS_GeometricMtf::PutSampleSize ( enum SampleSizes pRetVal ) {
    HRESULT _hr = put_SampleSize(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2837)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_GeometricMtf::GetMultiplyByDiffractionLimit ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_MultiplyByDiffractionLimit(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2838)
inline void ZOSAPI_Interfaces::IAS_GeometricMtf::PutMultiplyByDiffractionLimit ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_MultiplyByDiffractionLimit(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2839)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_GeometricMtf::GetScatterRays ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ScatterRays(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2840)
inline void ZOSAPI_Interfaces::IAS_GeometricMtf::PutScatterRays ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_ScatterRays(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2841)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_GeometricMtf::GetUseDashes ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseDashes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2842)
inline void ZOSAPI_Interfaces::IAS_GeometricMtf::PutUseDashes ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UseDashes(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2843)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_GeometricMtf::GetUsePolarization ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UsePolarization(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2844)
inline void ZOSAPI_Interfaces::IAS_GeometricMtf::PutUsePolarization ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UsePolarization(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2845)
inline double ZOSAPI_Interfaces::IAS_GeometricMtf::GetMaximumFrequency ( ) {
    double _result = 0;
    HRESULT _hr = get_MaximumFrequency(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2846)
inline void ZOSAPI_Interfaces::IAS_GeometricMtf::PutMaximumFrequency ( double pRetVal ) {
    HRESULT _hr = put_MaximumFrequency(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IAS_GeometricThroughFocusMtf wrapper method implementations
//

#pragma implementation_key(2847)
inline ZOSAPI_Interfaces::IAS_FieldPtr ZOSAPI_Interfaces::IAS_GeometricThroughFocusMtf::GetField ( ) {
    struct IAS_Field * _result = 0;
    HRESULT _hr = get_Field(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_FieldPtr(_result, false);
}

#pragma implementation_key(2848)
inline ZOSAPI_Interfaces::IAS_WavelengthPtr ZOSAPI_Interfaces::IAS_GeometricThroughFocusMtf::GetWavelength ( ) {
    struct IAS_Wavelength * _result = 0;
    HRESULT _hr = get_Wavelength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_WavelengthPtr(_result, false);
}

#pragma implementation_key(2849)
inline enum ZOSAPI_Interfaces::SampleSizes ZOSAPI_Interfaces::IAS_GeometricThroughFocusMtf::GetSampleSize ( ) {
    enum SampleSizes _result;
    HRESULT _hr = get_SampleSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2850)
inline void ZOSAPI_Interfaces::IAS_GeometricThroughFocusMtf::PutSampleSize ( enum SampleSizes pRetVal ) {
    HRESULT _hr = put_SampleSize(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2851)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_GeometricThroughFocusMtf::GetMultiplyByDiffractionLimit ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_MultiplyByDiffractionLimit(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2852)
inline void ZOSAPI_Interfaces::IAS_GeometricThroughFocusMtf::PutMultiplyByDiffractionLimit ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_MultiplyByDiffractionLimit(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2853)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_GeometricThroughFocusMtf::GetScatterRays ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ScatterRays(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2854)
inline void ZOSAPI_Interfaces::IAS_GeometricThroughFocusMtf::PutScatterRays ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_ScatterRays(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2855)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_GeometricThroughFocusMtf::GetUseDashes ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseDashes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2856)
inline void ZOSAPI_Interfaces::IAS_GeometricThroughFocusMtf::PutUseDashes ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UseDashes(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2857)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_GeometricThroughFocusMtf::GetUsePolarization ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UsePolarization(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2858)
inline void ZOSAPI_Interfaces::IAS_GeometricThroughFocusMtf::PutUsePolarization ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UsePolarization(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2859)
inline double ZOSAPI_Interfaces::IAS_GeometricThroughFocusMtf::GetDeltaFocus ( ) {
    double _result = 0;
    HRESULT _hr = get_DeltaFocus(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2860)
inline void ZOSAPI_Interfaces::IAS_GeometricThroughFocusMtf::PutDeltaFocus ( double pRetVal ) {
    HRESULT _hr = put_DeltaFocus(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2861)
inline double ZOSAPI_Interfaces::IAS_GeometricThroughFocusMtf::GetFrequency ( ) {
    double _result = 0;
    HRESULT _hr = get_Frequency(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2862)
inline void ZOSAPI_Interfaces::IAS_GeometricThroughFocusMtf::PutFrequency ( double pRetVal ) {
    HRESULT _hr = put_Frequency(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2863)
inline long ZOSAPI_Interfaces::IAS_GeometricThroughFocusMtf::GetNumberOfSteps ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfSteps(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2864)
inline void ZOSAPI_Interfaces::IAS_GeometricThroughFocusMtf::PutNumberOfSteps ( long pRetVal ) {
    HRESULT _hr = put_NumberOfSteps(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IAS_FftThroughFocusMtf wrapper method implementations
//

#pragma implementation_key(2865)
inline ZOSAPI_Interfaces::IAS_FieldPtr ZOSAPI_Interfaces::IAS_FftThroughFocusMtf::GetField ( ) {
    struct IAS_Field * _result = 0;
    HRESULT _hr = get_Field(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_FieldPtr(_result, false);
}

#pragma implementation_key(2866)
inline ZOSAPI_Interfaces::IAS_WavelengthPtr ZOSAPI_Interfaces::IAS_FftThroughFocusMtf::GetWavelength ( ) {
    struct IAS_Wavelength * _result = 0;
    HRESULT _hr = get_Wavelength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_WavelengthPtr(_result, false);
}

#pragma implementation_key(2867)
inline enum ZOSAPI_Interfaces::MtfTypes ZOSAPI_Interfaces::IAS_FftThroughFocusMtf::GetType ( ) {
    enum MtfTypes _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2868)
inline void ZOSAPI_Interfaces::IAS_FftThroughFocusMtf::PutType ( enum MtfTypes pRetVal ) {
    HRESULT _hr = put_Type(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2869)
inline enum ZOSAPI_Interfaces::SampleSizes ZOSAPI_Interfaces::IAS_FftThroughFocusMtf::GetSampleSize ( ) {
    enum SampleSizes _result;
    HRESULT _hr = get_SampleSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2870)
inline void ZOSAPI_Interfaces::IAS_FftThroughFocusMtf::PutSampleSize ( enum SampleSizes pRetVal ) {
    HRESULT _hr = put_SampleSize(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2871)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_FftThroughFocusMtf::GetUseDashes ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseDashes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2872)
inline void ZOSAPI_Interfaces::IAS_FftThroughFocusMtf::PutUseDashes ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UseDashes(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2873)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_FftThroughFocusMtf::GetUsePolarization ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UsePolarization(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2874)
inline void ZOSAPI_Interfaces::IAS_FftThroughFocusMtf::PutUsePolarization ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UsePolarization(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2875)
inline double ZOSAPI_Interfaces::IAS_FftThroughFocusMtf::GetDeltaFocus ( ) {
    double _result = 0;
    HRESULT _hr = get_DeltaFocus(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2876)
inline void ZOSAPI_Interfaces::IAS_FftThroughFocusMtf::PutDeltaFocus ( double pRetVal ) {
    HRESULT _hr = put_DeltaFocus(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2877)
inline double ZOSAPI_Interfaces::IAS_FftThroughFocusMtf::GetFrequency ( ) {
    double _result = 0;
    HRESULT _hr = get_Frequency(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2878)
inline void ZOSAPI_Interfaces::IAS_FftThroughFocusMtf::PutFrequency ( double pRetVal ) {
    HRESULT _hr = put_Frequency(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2879)
inline long ZOSAPI_Interfaces::IAS_FftThroughFocusMtf::GetNumberOfSteps ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfSteps(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2880)
inline void ZOSAPI_Interfaces::IAS_FftThroughFocusMtf::PutNumberOfSteps ( long pRetVal ) {
    HRESULT _hr = put_NumberOfSteps(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IAS_FftMtf wrapper method implementations
//

#pragma implementation_key(2881)
inline ZOSAPI_Interfaces::IAS_FieldPtr ZOSAPI_Interfaces::IAS_FftMtf::GetField ( ) {
    struct IAS_Field * _result = 0;
    HRESULT _hr = get_Field(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_FieldPtr(_result, false);
}

#pragma implementation_key(2882)
inline ZOSAPI_Interfaces::IAS_SurfacePtr ZOSAPI_Interfaces::IAS_FftMtf::GetSurface ( ) {
    struct IAS_Surface * _result = 0;
    HRESULT _hr = get_Surface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_SurfacePtr(_result, false);
}

#pragma implementation_key(2883)
inline ZOSAPI_Interfaces::IAS_WavelengthPtr ZOSAPI_Interfaces::IAS_FftMtf::GetWavelength ( ) {
    struct IAS_Wavelength * _result = 0;
    HRESULT _hr = get_Wavelength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_WavelengthPtr(_result, false);
}

#pragma implementation_key(2884)
inline enum ZOSAPI_Interfaces::MtfTypes ZOSAPI_Interfaces::IAS_FftMtf::GetType ( ) {
    enum MtfTypes _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2885)
inline void ZOSAPI_Interfaces::IAS_FftMtf::PutType ( enum MtfTypes pRetVal ) {
    HRESULT _hr = put_Type(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2886)
inline enum ZOSAPI_Interfaces::SampleSizes ZOSAPI_Interfaces::IAS_FftMtf::GetSampleSize ( ) {
    enum SampleSizes _result;
    HRESULT _hr = get_SampleSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2887)
inline void ZOSAPI_Interfaces::IAS_FftMtf::PutSampleSize ( enum SampleSizes pRetVal ) {
    HRESULT _hr = put_SampleSize(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2888)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_FftMtf::GetShowDiffractionLimit ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowDiffractionLimit(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2889)
inline void ZOSAPI_Interfaces::IAS_FftMtf::PutShowDiffractionLimit ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_ShowDiffractionLimit(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2890)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_FftMtf::GetUseDashes ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseDashes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2891)
inline void ZOSAPI_Interfaces::IAS_FftMtf::PutUseDashes ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UseDashes(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2892)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_FftMtf::GetUsePolarization ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UsePolarization(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2893)
inline void ZOSAPI_Interfaces::IAS_FftMtf::PutUsePolarization ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UsePolarization(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2894)
inline double ZOSAPI_Interfaces::IAS_FftMtf::GetMaximumFrequency ( ) {
    double _result = 0;
    HRESULT _hr = get_MaximumFrequency(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2895)
inline void ZOSAPI_Interfaces::IAS_FftMtf::PutMaximumFrequency ( double pRetVal ) {
    HRESULT _hr = put_MaximumFrequency(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IAS_GeometricMtfMap wrapper method implementations
//

#pragma implementation_key(2896)
inline ZOSAPI_Interfaces::IAS_FieldPtr ZOSAPI_Interfaces::IAS_GeometricMtfMap::GetReferenceField ( ) {
    struct IAS_Field * _result = 0;
    HRESULT _hr = get_ReferenceField(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_FieldPtr(_result, false);
}

#pragma implementation_key(2897)
inline ZOSAPI_Interfaces::IAS_WavelengthPtr ZOSAPI_Interfaces::IAS_GeometricMtfMap::GetWavelength ( ) {
    struct IAS_Wavelength * _result = 0;
    HRESULT _hr = get_Wavelength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_WavelengthPtr(_result, false);
}

#pragma implementation_key(2898)
inline enum ZOSAPI_Interfaces::MtfDataTypes ZOSAPI_Interfaces::IAS_GeometricMtfMap::GetMTF_DataType ( ) {
    enum MtfDataTypes _result;
    HRESULT _hr = get_MTF_DataType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2899)
inline void ZOSAPI_Interfaces::IAS_GeometricMtfMap::PutMTF_DataType ( enum MtfDataTypes pRetVal ) {
    HRESULT _hr = put_MTF_DataType(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2900)
inline enum ZOSAPI_Interfaces::SampleSizes ZOSAPI_Interfaces::IAS_GeometricMtfMap::GetSampleSize ( ) {
    enum SampleSizes _result;
    HRESULT _hr = get_SampleSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2901)
inline void ZOSAPI_Interfaces::IAS_GeometricMtfMap::PutSampleSize ( enum SampleSizes pRetVal ) {
    HRESULT _hr = put_SampleSize(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2902)
inline enum ZOSAPI_Interfaces::ShowAsTypes ZOSAPI_Interfaces::IAS_GeometricMtfMap::GetShowAs ( ) {
    enum ShowAsTypes _result;
    HRESULT _hr = get_ShowAs(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2903)
inline void ZOSAPI_Interfaces::IAS_GeometricMtfMap::PutShowAs ( enum ShowAsTypes pRetVal ) {
    HRESULT _hr = put_ShowAs(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2904)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_GeometricMtfMap::GetUsePolarization ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UsePolarization(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2905)
inline void ZOSAPI_Interfaces::IAS_GeometricMtfMap::PutUsePolarization ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UsePolarization(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2906)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_GeometricMtfMap::GetScatterRays ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ScatterRays(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2907)
inline void ZOSAPI_Interfaces::IAS_GeometricMtfMap::PutScatterRays ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_ScatterRays(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2908)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_GeometricMtfMap::GetRemoveVignetting ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_RemoveVignetting(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2909)
inline void ZOSAPI_Interfaces::IAS_GeometricMtfMap::PutRemoveVignetting ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_RemoveVignetting(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2910)
inline double ZOSAPI_Interfaces::IAS_GeometricMtfMap::GetFrequency ( ) {
    double _result = 0;
    HRESULT _hr = get_Frequency(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2911)
inline void ZOSAPI_Interfaces::IAS_GeometricMtfMap::PutFrequency ( double pRetVal ) {
    HRESULT _hr = put_Frequency(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2912)
inline double ZOSAPI_Interfaces::IAS_GeometricMtfMap::GetX_Field_Width ( ) {
    double _result = 0;
    HRESULT _hr = get_X_Field_Width(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2913)
inline void ZOSAPI_Interfaces::IAS_GeometricMtfMap::PutX_Field_Width ( double pRetVal ) {
    HRESULT _hr = put_X_Field_Width(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2914)
inline double ZOSAPI_Interfaces::IAS_GeometricMtfMap::GetY_Field_Width ( ) {
    double _result = 0;
    HRESULT _hr = get_Y_Field_Width(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2915)
inline void ZOSAPI_Interfaces::IAS_GeometricMtfMap::PutY_Field_Width ( double pRetVal ) {
    HRESULT _hr = put_Y_Field_Width(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2916)
inline long ZOSAPI_Interfaces::IAS_GeometricMtfMap::GetX_Pixels ( ) {
    long _result = 0;
    HRESULT _hr = get_X_Pixels(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2917)
inline void ZOSAPI_Interfaces::IAS_GeometricMtfMap::PutX_Pixels ( long pRetVal ) {
    HRESULT _hr = put_X_Pixels(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2918)
inline long ZOSAPI_Interfaces::IAS_GeometricMtfMap::GetY_Pixels ( ) {
    long _result = 0;
    HRESULT _hr = get_Y_Pixels(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2919)
inline void ZOSAPI_Interfaces::IAS_GeometricMtfMap::PutY_Pixels ( long pRetVal ) {
    HRESULT _hr = put_Y_Pixels(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IAS_FftMtfMap wrapper method implementations
//

#pragma implementation_key(2920)
inline ZOSAPI_Interfaces::IAS_FieldPtr ZOSAPI_Interfaces::IAS_FftMtfMap::GetReferenceField ( ) {
    struct IAS_Field * _result = 0;
    HRESULT _hr = get_ReferenceField(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_FieldPtr(_result, false);
}

#pragma implementation_key(2921)
inline ZOSAPI_Interfaces::IAS_WavelengthPtr ZOSAPI_Interfaces::IAS_FftMtfMap::GetWavelength ( ) {
    struct IAS_Wavelength * _result = 0;
    HRESULT _hr = get_Wavelength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_WavelengthPtr(_result, false);
}

#pragma implementation_key(2922)
inline enum ZOSAPI_Interfaces::MtfDataTypes ZOSAPI_Interfaces::IAS_FftMtfMap::GetMTF_DataType ( ) {
    enum MtfDataTypes _result;
    HRESULT _hr = get_MTF_DataType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2923)
inline void ZOSAPI_Interfaces::IAS_FftMtfMap::PutMTF_DataType ( enum MtfDataTypes pRetVal ) {
    HRESULT _hr = put_MTF_DataType(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2924)
inline enum ZOSAPI_Interfaces::SampleSizes ZOSAPI_Interfaces::IAS_FftMtfMap::GetSampleSize ( ) {
    enum SampleSizes _result;
    HRESULT _hr = get_SampleSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2925)
inline void ZOSAPI_Interfaces::IAS_FftMtfMap::PutSampleSize ( enum SampleSizes pRetVal ) {
    HRESULT _hr = put_SampleSize(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2926)
inline enum ZOSAPI_Interfaces::ShowAsTypes ZOSAPI_Interfaces::IAS_FftMtfMap::GetShowAs ( ) {
    enum ShowAsTypes _result;
    HRESULT _hr = get_ShowAs(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2927)
inline void ZOSAPI_Interfaces::IAS_FftMtfMap::PutShowAs ( enum ShowAsTypes pRetVal ) {
    HRESULT _hr = put_ShowAs(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2928)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_FftMtfMap::GetUsePolarization ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UsePolarization(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2929)
inline void ZOSAPI_Interfaces::IAS_FftMtfMap::PutUsePolarization ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UsePolarization(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2930)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_FftMtfMap::GetRemoveVignetting ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_RemoveVignetting(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2931)
inline void ZOSAPI_Interfaces::IAS_FftMtfMap::PutRemoveVignetting ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_RemoveVignetting(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2932)
inline double ZOSAPI_Interfaces::IAS_FftMtfMap::GetFrequency ( ) {
    double _result = 0;
    HRESULT _hr = get_Frequency(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2933)
inline void ZOSAPI_Interfaces::IAS_FftMtfMap::PutFrequency ( double pRetVal ) {
    HRESULT _hr = put_Frequency(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2934)
inline double ZOSAPI_Interfaces::IAS_FftMtfMap::GetX_Field_Width ( ) {
    double _result = 0;
    HRESULT _hr = get_X_Field_Width(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2935)
inline void ZOSAPI_Interfaces::IAS_FftMtfMap::PutX_Field_Width ( double pRetVal ) {
    HRESULT _hr = put_X_Field_Width(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2936)
inline double ZOSAPI_Interfaces::IAS_FftMtfMap::GetY_Field_Width ( ) {
    double _result = 0;
    HRESULT _hr = get_Y_Field_Width(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2937)
inline void ZOSAPI_Interfaces::IAS_FftMtfMap::PutY_Field_Width ( double pRetVal ) {
    HRESULT _hr = put_Y_Field_Width(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2938)
inline long ZOSAPI_Interfaces::IAS_FftMtfMap::GetX_Pixels ( ) {
    long _result = 0;
    HRESULT _hr = get_X_Pixels(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2939)
inline void ZOSAPI_Interfaces::IAS_FftMtfMap::PutX_Pixels ( long pRetVal ) {
    HRESULT _hr = put_X_Pixels(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2940)
inline long ZOSAPI_Interfaces::IAS_FftMtfMap::GetY_Pixels ( ) {
    long _result = 0;
    HRESULT _hr = get_Y_Pixels(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2941)
inline void ZOSAPI_Interfaces::IAS_FftMtfMap::PutY_Pixels ( long pRetVal ) {
    HRESULT _hr = put_Y_Pixels(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IAS_HuygensSurfaceMtf wrapper method implementations
//

#pragma implementation_key(2942)
inline ZOSAPI_Interfaces::IAS_FieldPtr ZOSAPI_Interfaces::IAS_HuygensSurfaceMtf::GetField ( ) {
    struct IAS_Field * _result = 0;
    HRESULT _hr = get_Field(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_FieldPtr(_result, false);
}

#pragma implementation_key(2943)
inline ZOSAPI_Interfaces::IAS_WavelengthPtr ZOSAPI_Interfaces::IAS_HuygensSurfaceMtf::GetWavelength ( ) {
    struct IAS_Wavelength * _result = 0;
    HRESULT _hr = get_Wavelength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_WavelengthPtr(_result, false);
}

#pragma implementation_key(2944)
inline enum ZOSAPI_Interfaces::SampleSizes ZOSAPI_Interfaces::IAS_HuygensSurfaceMtf::GetImageSampleSize ( ) {
    enum SampleSizes _result;
    HRESULT _hr = get_ImageSampleSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2945)
inline void ZOSAPI_Interfaces::IAS_HuygensSurfaceMtf::PutImageSampleSize ( enum SampleSizes pRetVal ) {
    HRESULT _hr = put_ImageSampleSize(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2946)
inline enum ZOSAPI_Interfaces::SampleSizes ZOSAPI_Interfaces::IAS_HuygensSurfaceMtf::GetPupilSampleSize ( ) {
    enum SampleSizes _result;
    HRESULT _hr = get_PupilSampleSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2947)
inline void ZOSAPI_Interfaces::IAS_HuygensSurfaceMtf::PutPupilSampleSize ( enum SampleSizes pRetVal ) {
    HRESULT _hr = put_PupilSampleSize(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2948)
inline enum ZOSAPI_Interfaces::HuygensSurfaceMftShowAsTypes ZOSAPI_Interfaces::IAS_HuygensSurfaceMtf::GetShowAs ( ) {
    enum HuygensSurfaceMftShowAsTypes _result;
    HRESULT _hr = get_ShowAs(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2949)
inline void ZOSAPI_Interfaces::IAS_HuygensSurfaceMtf::PutShowAs ( enum HuygensSurfaceMftShowAsTypes pRetVal ) {
    HRESULT _hr = put_ShowAs(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2950)
inline enum ZOSAPI_Interfaces::SurfaceMtfTypes ZOSAPI_Interfaces::IAS_HuygensSurfaceMtf::GetType ( ) {
    enum SurfaceMtfTypes _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2951)
inline void ZOSAPI_Interfaces::IAS_HuygensSurfaceMtf::PutType ( enum SurfaceMtfTypes pRetVal ) {
    HRESULT _hr = put_Type(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2952)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_HuygensSurfaceMtf::GetUsePolarization ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UsePolarization(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2953)
inline void ZOSAPI_Interfaces::IAS_HuygensSurfaceMtf::PutUsePolarization ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UsePolarization(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2954)
inline double ZOSAPI_Interfaces::IAS_HuygensSurfaceMtf::GetImageDelta ( ) {
    double _result = 0;
    HRESULT _hr = get_ImageDelta(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2955)
inline void ZOSAPI_Interfaces::IAS_HuygensSurfaceMtf::PutImageDelta ( double pRetVal ) {
    HRESULT _hr = put_ImageDelta(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2956)
inline long ZOSAPI_Interfaces::IAS_HuygensSurfaceMtf::GetConfiguration ( ) {
    long _result = 0;
    HRESULT _hr = get_Configuration(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2957)
inline void ZOSAPI_Interfaces::IAS_HuygensSurfaceMtf::PutConfiguration ( long pRetVal ) {
    HRESULT _hr = put_Configuration(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IAS_FftSurfaceMtf wrapper method implementations
//

#pragma implementation_key(2958)
inline ZOSAPI_Interfaces::IAS_FieldPtr ZOSAPI_Interfaces::IAS_FftSurfaceMtf::GetField ( ) {
    struct IAS_Field * _result = 0;
    HRESULT _hr = get_Field(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_FieldPtr(_result, false);
}

#pragma implementation_key(2959)
inline ZOSAPI_Interfaces::IAS_WavelengthPtr ZOSAPI_Interfaces::IAS_FftSurfaceMtf::GetWavelength ( ) {
    struct IAS_Wavelength * _result = 0;
    HRESULT _hr = get_Wavelength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_WavelengthPtr(_result, false);
}

#pragma implementation_key(2960)
inline enum ZOSAPI_Interfaces::SurfaceMtfTypes ZOSAPI_Interfaces::IAS_FftSurfaceMtf::GetType ( ) {
    enum SurfaceMtfTypes _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2961)
inline void ZOSAPI_Interfaces::IAS_FftSurfaceMtf::PutType ( enum SurfaceMtfTypes pRetVal ) {
    HRESULT _hr = put_Type(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2962)
inline enum ZOSAPI_Interfaces::Rotations ZOSAPI_Interfaces::IAS_FftSurfaceMtf::GetRotation ( ) {
    enum Rotations _result;
    HRESULT _hr = get_Rotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2963)
inline void ZOSAPI_Interfaces::IAS_FftSurfaceMtf::PutRotation ( enum Rotations pRetVal ) {
    HRESULT _hr = put_Rotation(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2964)
inline enum ZOSAPI_Interfaces::SampleSizes ZOSAPI_Interfaces::IAS_FftSurfaceMtf::GetSampleSize ( ) {
    enum SampleSizes _result;
    HRESULT _hr = get_SampleSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2965)
inline void ZOSAPI_Interfaces::IAS_FftSurfaceMtf::PutSampleSize ( enum SampleSizes pRetVal ) {
    HRESULT _hr = put_SampleSize(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2966)
inline enum ZOSAPI_Interfaces::ShowAs ZOSAPI_Interfaces::IAS_FftSurfaceMtf::GetShowAs ( ) {
    enum ShowAs _result;
    HRESULT _hr = get_ShowAs(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2967)
inline void ZOSAPI_Interfaces::IAS_FftSurfaceMtf::PutShowAs ( enum ShowAs pRetVal ) {
    HRESULT _hr = put_ShowAs(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2968)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_FftSurfaceMtf::GetUsePolarization ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UsePolarization(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2969)
inline void ZOSAPI_Interfaces::IAS_FftSurfaceMtf::PutUsePolarization ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UsePolarization(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2970)
inline double ZOSAPI_Interfaces::IAS_FftSurfaceMtf::GetScaleFactor ( ) {
    double _result = 0;
    HRESULT _hr = get_ScaleFactor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2971)
inline void ZOSAPI_Interfaces::IAS_FftSurfaceMtf::PutScaleFactor ( double pRetVal ) {
    HRESULT _hr = put_ScaleFactor(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IAS_FftMtfvsField wrapper method implementations
//

#pragma implementation_key(2972)
inline ZOSAPI_Interfaces::IAS_WavelengthPtr ZOSAPI_Interfaces::IAS_FftMtfvsField::GetWavelength ( ) {
    struct IAS_Wavelength * _result = 0;
    HRESULT _hr = get_Wavelength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_WavelengthPtr(_result, false);
}

#pragma implementation_key(2973)
inline enum ZOSAPI_Interfaces::SampleSizes ZOSAPI_Interfaces::IAS_FftMtfvsField::GetSampleSize ( ) {
    enum SampleSizes _result;
    HRESULT _hr = get_SampleSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2974)
inline void ZOSAPI_Interfaces::IAS_FftMtfvsField::PutSampleSize ( enum SampleSizes pRetVal ) {
    HRESULT _hr = put_SampleSize(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2975)
inline enum ZOSAPI_Interfaces::ScanTypes ZOSAPI_Interfaces::IAS_FftMtfvsField::GetScanType ( ) {
    enum ScanTypes _result;
    HRESULT _hr = get_ScanType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2976)
inline void ZOSAPI_Interfaces::IAS_FftMtfvsField::PutScanType ( enum ScanTypes pRetVal ) {
    HRESULT _hr = put_ScanType(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2977)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_FftMtfvsField::GetRemoveVignetting ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_RemoveVignetting(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2978)
inline void ZOSAPI_Interfaces::IAS_FftMtfvsField::PutRemoveVignetting ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_RemoveVignetting(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2979)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_FftMtfvsField::GetUseDashes ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseDashes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2980)
inline void ZOSAPI_Interfaces::IAS_FftMtfvsField::PutUseDashes ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UseDashes(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2981)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_FftMtfvsField::GetUsePolarization ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UsePolarization(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2982)
inline void ZOSAPI_Interfaces::IAS_FftMtfvsField::PutUsePolarization ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UsePolarization(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2983)
inline double ZOSAPI_Interfaces::IAS_FftMtfvsField::GetFreq_1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Freq_1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2984)
inline void ZOSAPI_Interfaces::IAS_FftMtfvsField::PutFreq_1 ( double pRetVal ) {
    HRESULT _hr = put_Freq_1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2985)
inline double ZOSAPI_Interfaces::IAS_FftMtfvsField::GetFreq_2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Freq_2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2986)
inline void ZOSAPI_Interfaces::IAS_FftMtfvsField::PutFreq_2 ( double pRetVal ) {
    HRESULT _hr = put_Freq_2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2987)
inline double ZOSAPI_Interfaces::IAS_FftMtfvsField::GetFreq_3 ( ) {
    double _result = 0;
    HRESULT _hr = get_Freq_3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2988)
inline void ZOSAPI_Interfaces::IAS_FftMtfvsField::PutFreq_3 ( double pRetVal ) {
    HRESULT _hr = put_Freq_3(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2989)
inline double ZOSAPI_Interfaces::IAS_FftMtfvsField::GetFreq_4 ( ) {
    double _result = 0;
    HRESULT _hr = get_Freq_4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2990)
inline void ZOSAPI_Interfaces::IAS_FftMtfvsField::PutFreq_4 ( double pRetVal ) {
    HRESULT _hr = put_Freq_4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2991)
inline double ZOSAPI_Interfaces::IAS_FftMtfvsField::GetFreq_5 ( ) {
    double _result = 0;
    HRESULT _hr = get_Freq_5(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2992)
inline void ZOSAPI_Interfaces::IAS_FftMtfvsField::PutFreq_5 ( double pRetVal ) {
    HRESULT _hr = put_Freq_5(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2993)
inline double ZOSAPI_Interfaces::IAS_FftMtfvsField::GetFreq_6 ( ) {
    double _result = 0;
    HRESULT _hr = get_Freq_6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2994)
inline void ZOSAPI_Interfaces::IAS_FftMtfvsField::PutFreq_6 ( double pRetVal ) {
    HRESULT _hr = put_Freq_6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2995)
inline long ZOSAPI_Interfaces::IAS_FftMtfvsField::GetFieldDensity ( ) {
    long _result = 0;
    HRESULT _hr = get_FieldDensity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2996)
inline void ZOSAPI_Interfaces::IAS_FftMtfvsField::PutFieldDensity ( long pRetVal ) {
    HRESULT _hr = put_FieldDensity(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IAS_HuygensThroughFocusMtf wrapper method implementations
//

#pragma implementation_key(2997)
inline ZOSAPI_Interfaces::IAS_FieldPtr ZOSAPI_Interfaces::IAS_HuygensThroughFocusMtf::GetField ( ) {
    struct IAS_Field * _result = 0;
    HRESULT _hr = get_Field(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_FieldPtr(_result, false);
}

#pragma implementation_key(2998)
inline ZOSAPI_Interfaces::IAS_WavelengthPtr ZOSAPI_Interfaces::IAS_HuygensThroughFocusMtf::GetWavelength ( ) {
    struct IAS_Wavelength * _result = 0;
    HRESULT _hr = get_Wavelength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_WavelengthPtr(_result, false);
}

#pragma implementation_key(2999)
inline enum ZOSAPI_Interfaces::SampleSizes ZOSAPI_Interfaces::IAS_HuygensThroughFocusMtf::GetImageSampleSize ( ) {
    enum SampleSizes _result;
    HRESULT _hr = get_ImageSampleSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3000)
inline void ZOSAPI_Interfaces::IAS_HuygensThroughFocusMtf::PutImageSampleSize ( enum SampleSizes pRetVal ) {
    HRESULT _hr = put_ImageSampleSize(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3001)
inline enum ZOSAPI_Interfaces::SampleSizes ZOSAPI_Interfaces::IAS_HuygensThroughFocusMtf::GetPupilSampleSize ( ) {
    enum SampleSizes _result;
    HRESULT _hr = get_PupilSampleSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3002)
inline void ZOSAPI_Interfaces::IAS_HuygensThroughFocusMtf::PutPupilSampleSize ( enum SampleSizes pRetVal ) {
    HRESULT _hr = put_PupilSampleSize(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3003)
inline enum ZOSAPI_Interfaces::HuygensMtfTypes ZOSAPI_Interfaces::IAS_HuygensThroughFocusMtf::GetType ( ) {
    enum HuygensMtfTypes _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3004)
inline void ZOSAPI_Interfaces::IAS_HuygensThroughFocusMtf::PutType ( enum HuygensMtfTypes pRetVal ) {
    HRESULT _hr = put_Type(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3005)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_HuygensThroughFocusMtf::GetUseDashes ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseDashes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3006)
inline void ZOSAPI_Interfaces::IAS_HuygensThroughFocusMtf::PutUseDashes ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UseDashes(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3007)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_HuygensThroughFocusMtf::GetUsePolarization ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UsePolarization(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3008)
inline void ZOSAPI_Interfaces::IAS_HuygensThroughFocusMtf::PutUsePolarization ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UsePolarization(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3009)
inline double ZOSAPI_Interfaces::IAS_HuygensThroughFocusMtf::GetDeltaFocus ( ) {
    double _result = 0;
    HRESULT _hr = get_DeltaFocus(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3010)
inline void ZOSAPI_Interfaces::IAS_HuygensThroughFocusMtf::PutDeltaFocus ( double pRetVal ) {
    HRESULT _hr = put_DeltaFocus(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3011)
inline double ZOSAPI_Interfaces::IAS_HuygensThroughFocusMtf::GetImageDelta ( ) {
    double _result = 0;
    HRESULT _hr = get_ImageDelta(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3012)
inline void ZOSAPI_Interfaces::IAS_HuygensThroughFocusMtf::PutImageDelta ( double pRetVal ) {
    HRESULT _hr = put_ImageDelta(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3013)
inline double ZOSAPI_Interfaces::IAS_HuygensThroughFocusMtf::GetFrequency ( ) {
    double _result = 0;
    HRESULT _hr = get_Frequency(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3014)
inline void ZOSAPI_Interfaces::IAS_HuygensThroughFocusMtf::PutFrequency ( double pRetVal ) {
    HRESULT _hr = put_Frequency(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3015)
inline long ZOSAPI_Interfaces::IAS_HuygensThroughFocusMtf::GetConfiguration ( ) {
    long _result = 0;
    HRESULT _hr = get_Configuration(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3016)
inline void ZOSAPI_Interfaces::IAS_HuygensThroughFocusMtf::PutConfiguration ( long pRetVal ) {
    HRESULT _hr = put_Configuration(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3017)
inline long ZOSAPI_Interfaces::IAS_HuygensThroughFocusMtf::GetNumberOfSteps ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfSteps(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3018)
inline void ZOSAPI_Interfaces::IAS_HuygensThroughFocusMtf::PutNumberOfSteps ( long pRetVal ) {
    HRESULT _hr = put_NumberOfSteps(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IAS_HuygensMtf wrapper method implementations
//

#pragma implementation_key(3019)
inline ZOSAPI_Interfaces::IAS_FieldPtr ZOSAPI_Interfaces::IAS_HuygensMtf::GetField ( ) {
    struct IAS_Field * _result = 0;
    HRESULT _hr = get_Field(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_FieldPtr(_result, false);
}

#pragma implementation_key(3020)
inline ZOSAPI_Interfaces::IAS_WavelengthPtr ZOSAPI_Interfaces::IAS_HuygensMtf::GetWavelength ( ) {
    struct IAS_Wavelength * _result = 0;
    HRESULT _hr = get_Wavelength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_WavelengthPtr(_result, false);
}

#pragma implementation_key(3021)
inline enum ZOSAPI_Interfaces::SampleSizes ZOSAPI_Interfaces::IAS_HuygensMtf::GetImageSampleSize ( ) {
    enum SampleSizes _result;
    HRESULT _hr = get_ImageSampleSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3022)
inline void ZOSAPI_Interfaces::IAS_HuygensMtf::PutImageSampleSize ( enum SampleSizes pRetVal ) {
    HRESULT _hr = put_ImageSampleSize(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3023)
inline enum ZOSAPI_Interfaces::SampleSizes ZOSAPI_Interfaces::IAS_HuygensMtf::GetPupilSampleSize ( ) {
    enum SampleSizes _result;
    HRESULT _hr = get_PupilSampleSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3024)
inline void ZOSAPI_Interfaces::IAS_HuygensMtf::PutPupilSampleSize ( enum SampleSizes pRetVal ) {
    HRESULT _hr = put_PupilSampleSize(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3025)
inline enum ZOSAPI_Interfaces::HuygensMtfTypes ZOSAPI_Interfaces::IAS_HuygensMtf::GetType ( ) {
    enum HuygensMtfTypes _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3026)
inline void ZOSAPI_Interfaces::IAS_HuygensMtf::PutType ( enum HuygensMtfTypes pRetVal ) {
    HRESULT _hr = put_Type(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3027)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_HuygensMtf::GetUseDashes ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseDashes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3028)
inline void ZOSAPI_Interfaces::IAS_HuygensMtf::PutUseDashes ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UseDashes(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3029)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_HuygensMtf::GetUsePolarization ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UsePolarization(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3030)
inline void ZOSAPI_Interfaces::IAS_HuygensMtf::PutUsePolarization ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UsePolarization(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3031)
inline double ZOSAPI_Interfaces::IAS_HuygensMtf::GetImageDelta ( ) {
    double _result = 0;
    HRESULT _hr = get_ImageDelta(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3032)
inline void ZOSAPI_Interfaces::IAS_HuygensMtf::PutImageDelta ( double pRetVal ) {
    HRESULT _hr = put_ImageDelta(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3033)
inline double ZOSAPI_Interfaces::IAS_HuygensMtf::GetMaximumFrequency ( ) {
    double _result = 0;
    HRESULT _hr = get_MaximumFrequency(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3034)
inline void ZOSAPI_Interfaces::IAS_HuygensMtf::PutMaximumFrequency ( double pRetVal ) {
    HRESULT _hr = put_MaximumFrequency(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3035)
inline long ZOSAPI_Interfaces::IAS_HuygensMtf::GetConfiguration ( ) {
    long _result = 0;
    HRESULT _hr = get_Configuration(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3036)
inline void ZOSAPI_Interfaces::IAS_HuygensMtf::PutConfiguration ( long pRetVal ) {
    HRESULT _hr = put_Configuration(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IAS_Fan wrapper method implementations
//

#pragma implementation_key(3037)
inline ZOSAPI_Interfaces::IAS_FieldPtr ZOSAPI_Interfaces::IAS_Fan::GetField ( ) {
    struct IAS_Field * _result = 0;
    HRESULT _hr = get_Field(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_FieldPtr(_result, false);
}

#pragma implementation_key(3038)
inline ZOSAPI_Interfaces::IAS_SurfacePtr ZOSAPI_Interfaces::IAS_Fan::GetSurface ( ) {
    struct IAS_Surface * _result = 0;
    HRESULT _hr = get_Surface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_SurfacePtr(_result, false);
}

#pragma implementation_key(3039)
inline ZOSAPI_Interfaces::IAS_WavelengthPtr ZOSAPI_Interfaces::IAS_Fan::GetWavelength ( ) {
    struct IAS_Wavelength * _result = 0;
    HRESULT _hr = get_Wavelength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_WavelengthPtr(_result, false);
}

#pragma implementation_key(3040)
inline long ZOSAPI_Interfaces::IAS_Fan::GetNumberOfRays ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfRays(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3041)
inline void ZOSAPI_Interfaces::IAS_Fan::PutNumberOfRays ( long pRetVal ) {
    HRESULT _hr = put_NumberOfRays(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3042)
inline double ZOSAPI_Interfaces::IAS_Fan::GetPlotScale ( ) {
    double _result = 0;
    HRESULT _hr = get_PlotScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3043)
inline void ZOSAPI_Interfaces::IAS_Fan::PutPlotScale ( double pRetVal ) {
    HRESULT _hr = put_PlotScale(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3044)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_Fan::GetCheckApertures ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_CheckApertures(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3045)
inline void ZOSAPI_Interfaces::IAS_Fan::PutCheckApertures ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_CheckApertures(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3046)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_Fan::GetVignettedPupil ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_VignettedPupil(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3047)
inline void ZOSAPI_Interfaces::IAS_Fan::PutVignettedPupil ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_VignettedPupil(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3048)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_Fan::GetUseDashes ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseDashes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3049)
inline void ZOSAPI_Interfaces::IAS_Fan::PutUseDashes ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UseDashes(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3050)
inline enum ZOSAPI_Interfaces::SagittalAberrationComponent ZOSAPI_Interfaces::IAS_Fan::GetSagittal ( ) {
    enum SagittalAberrationComponent _result;
    HRESULT _hr = get_Sagittal(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3051)
inline void ZOSAPI_Interfaces::IAS_Fan::PutSagittal ( enum SagittalAberrationComponent pRetVal ) {
    HRESULT _hr = put_Sagittal(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3052)
inline enum ZOSAPI_Interfaces::TangentialAberrationComponent ZOSAPI_Interfaces::IAS_Fan::GetTangential ( ) {
    enum TangentialAberrationComponent _result;
    HRESULT _hr = get_Tangential(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3053)
inline void ZOSAPI_Interfaces::IAS_Fan::PutTangential ( enum TangentialAberrationComponent pRetVal ) {
    HRESULT _hr = put_Tangential(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IAS_GeometricLineEdgeSpread wrapper method implementations
//

#pragma implementation_key(3054)
inline ZOSAPI_Interfaces::IAS_FieldPtr ZOSAPI_Interfaces::IAS_GeometricLineEdgeSpread::GetField ( ) {
    struct IAS_Field * _result = 0;
    HRESULT _hr = get_Field(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_FieldPtr(_result, false);
}

#pragma implementation_key(3055)
inline ZOSAPI_Interfaces::IAS_SurfacePtr ZOSAPI_Interfaces::IAS_GeometricLineEdgeSpread::GetSurface ( ) {
    struct IAS_Surface * _result = 0;
    HRESULT _hr = get_Surface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_SurfacePtr(_result, false);
}

#pragma implementation_key(3056)
inline ZOSAPI_Interfaces::IAS_WavelengthPtr ZOSAPI_Interfaces::IAS_GeometricLineEdgeSpread::GetWavelength ( ) {
    struct IAS_Wavelength * _result = 0;
    HRESULT _hr = get_Wavelength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_WavelengthPtr(_result, false);
}

#pragma implementation_key(3057)
inline enum ZOSAPI_Interfaces::SampleSizes ZOSAPI_Interfaces::IAS_GeometricLineEdgeSpread::GetSampleSize ( ) {
    enum SampleSizes _result;
    HRESULT _hr = get_SampleSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3058)
inline void ZOSAPI_Interfaces::IAS_GeometricLineEdgeSpread::PutSampleSize ( enum SampleSizes pRetVal ) {
    HRESULT _hr = put_SampleSize(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3059)
inline enum ZOSAPI_Interfaces::GeometricLineEdgeSpreadTypes ZOSAPI_Interfaces::IAS_GeometricLineEdgeSpread::GetType ( ) {
    enum GeometricLineEdgeSpreadTypes _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3060)
inline void ZOSAPI_Interfaces::IAS_GeometricLineEdgeSpread::PutType ( enum GeometricLineEdgeSpreadTypes pRetVal ) {
    HRESULT _hr = put_Type(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3061)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_GeometricLineEdgeSpread::GetUsePolarization ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UsePolarization(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3062)
inline void ZOSAPI_Interfaces::IAS_GeometricLineEdgeSpread::PutUsePolarization ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UsePolarization(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3063)
inline double ZOSAPI_Interfaces::IAS_GeometricLineEdgeSpread::GetRadiusMaximum ( ) {
    double _result = 0;
    HRESULT _hr = get_RadiusMaximum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3064)
inline void ZOSAPI_Interfaces::IAS_GeometricLineEdgeSpread::PutRadiusMaximum ( double pRetVal ) {
    HRESULT _hr = put_RadiusMaximum(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IAS_DiffractionEncircledEnergy wrapper method implementations
//

#pragma implementation_key(3065)
inline ZOSAPI_Interfaces::IAS_FieldPtr ZOSAPI_Interfaces::IAS_DiffractionEncircledEnergy::GetField ( ) {
    struct IAS_Field * _result = 0;
    HRESULT _hr = get_Field(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_FieldPtr(_result, false);
}

#pragma implementation_key(3066)
inline ZOSAPI_Interfaces::IAS_SurfacePtr ZOSAPI_Interfaces::IAS_DiffractionEncircledEnergy::GetSurface ( ) {
    struct IAS_Surface * _result = 0;
    HRESULT _hr = get_Surface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_SurfacePtr(_result, false);
}

#pragma implementation_key(3067)
inline ZOSAPI_Interfaces::IAS_WavelengthPtr ZOSAPI_Interfaces::IAS_DiffractionEncircledEnergy::GetWavelength ( ) {
    struct IAS_Wavelength * _result = 0;
    HRESULT _hr = get_Wavelength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_WavelengthPtr(_result, false);
}

#pragma implementation_key(3068)
inline enum ZOSAPI_Interfaces::SampleSizes ZOSAPI_Interfaces::IAS_DiffractionEncircledEnergy::GetHuygensSample ( ) {
    enum SampleSizes _result;
    HRESULT _hr = get_HuygensSample(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3069)
inline void ZOSAPI_Interfaces::IAS_DiffractionEncircledEnergy::PutHuygensSample ( enum SampleSizes pRetVal ) {
    HRESULT _hr = put_HuygensSample(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3070)
inline enum ZOSAPI_Interfaces::SampleSizes ZOSAPI_Interfaces::IAS_DiffractionEncircledEnergy::GetSampleSize ( ) {
    enum SampleSizes _result;
    HRESULT _hr = get_SampleSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3071)
inline void ZOSAPI_Interfaces::IAS_DiffractionEncircledEnergy::PutSampleSize ( enum SampleSizes pRetVal ) {
    HRESULT _hr = put_SampleSize(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3072)
inline enum ZOSAPI_Interfaces::EncircledEnergyTypes ZOSAPI_Interfaces::IAS_DiffractionEncircledEnergy::GetType ( ) {
    enum EncircledEnergyTypes _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3073)
inline void ZOSAPI_Interfaces::IAS_DiffractionEncircledEnergy::PutType ( enum EncircledEnergyTypes pRetVal ) {
    HRESULT _hr = put_Type(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3074)
inline enum ZOSAPI_Interfaces::ReferToTypes ZOSAPI_Interfaces::IAS_DiffractionEncircledEnergy::GetReferTo ( ) {
    enum ReferToTypes _result;
    HRESULT _hr = get_ReferTo(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3075)
inline void ZOSAPI_Interfaces::IAS_DiffractionEncircledEnergy::PutReferTo ( enum ReferToTypes pRetVal ) {
    HRESULT _hr = put_ReferTo(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3076)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_DiffractionEncircledEnergy::GetScatterRays ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ScatterRays(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3077)
inline void ZOSAPI_Interfaces::IAS_DiffractionEncircledEnergy::PutScatterRays ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_ScatterRays(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3078)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_DiffractionEncircledEnergy::GetShowDiffractionLimit ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowDiffractionLimit(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3079)
inline void ZOSAPI_Interfaces::IAS_DiffractionEncircledEnergy::PutShowDiffractionLimit ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_ShowDiffractionLimit(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3080)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_DiffractionEncircledEnergy::GetUseDashes ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseDashes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3081)
inline void ZOSAPI_Interfaces::IAS_DiffractionEncircledEnergy::PutUseDashes ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UseDashes(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3082)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_DiffractionEncircledEnergy::GetUseHuygensPSF ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseHuygensPSF(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3083)
inline void ZOSAPI_Interfaces::IAS_DiffractionEncircledEnergy::PutUseHuygensPSF ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UseHuygensPSF(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3084)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_DiffractionEncircledEnergy::GetUsePolarization ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UsePolarization(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3085)
inline void ZOSAPI_Interfaces::IAS_DiffractionEncircledEnergy::PutUsePolarization ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UsePolarization(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3086)
inline double ZOSAPI_Interfaces::IAS_DiffractionEncircledEnergy::GetHuygensDelta ( ) {
    double _result = 0;
    HRESULT _hr = get_HuygensDelta(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3087)
inline void ZOSAPI_Interfaces::IAS_DiffractionEncircledEnergy::PutHuygensDelta ( double pRetVal ) {
    HRESULT _hr = put_HuygensDelta(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3088)
inline double ZOSAPI_Interfaces::IAS_DiffractionEncircledEnergy::GetRadiusMaximum ( ) {
    double _result = 0;
    HRESULT _hr = get_RadiusMaximum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3089)
inline void ZOSAPI_Interfaces::IAS_DiffractionEncircledEnergy::PutRadiusMaximum ( double pRetVal ) {
    HRESULT _hr = put_RadiusMaximum(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IAS_GeometricEncircledEnergy wrapper method implementations
//

#pragma implementation_key(3090)
inline ZOSAPI_Interfaces::IAS_FieldPtr ZOSAPI_Interfaces::IAS_GeometricEncircledEnergy::GetField ( ) {
    struct IAS_Field * _result = 0;
    HRESULT _hr = get_Field(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_FieldPtr(_result, false);
}

#pragma implementation_key(3091)
inline ZOSAPI_Interfaces::IAS_SurfacePtr ZOSAPI_Interfaces::IAS_GeometricEncircledEnergy::GetSurface ( ) {
    struct IAS_Surface * _result = 0;
    HRESULT _hr = get_Surface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_SurfacePtr(_result, false);
}

#pragma implementation_key(3092)
inline ZOSAPI_Interfaces::IAS_WavelengthPtr ZOSAPI_Interfaces::IAS_GeometricEncircledEnergy::GetWavelength ( ) {
    struct IAS_Wavelength * _result = 0;
    HRESULT _hr = get_Wavelength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_WavelengthPtr(_result, false);
}

#pragma implementation_key(3093)
inline enum ZOSAPI_Interfaces::SampleSizes ZOSAPI_Interfaces::IAS_GeometricEncircledEnergy::GetHuygensSample ( ) {
    enum SampleSizes _result;
    HRESULT _hr = get_HuygensSample(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3094)
inline void ZOSAPI_Interfaces::IAS_GeometricEncircledEnergy::PutHuygensSample ( enum SampleSizes pRetVal ) {
    HRESULT _hr = put_HuygensSample(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3095)
inline enum ZOSAPI_Interfaces::SampleSizes ZOSAPI_Interfaces::IAS_GeometricEncircledEnergy::GetSampleSize ( ) {
    enum SampleSizes _result;
    HRESULT _hr = get_SampleSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3096)
inline void ZOSAPI_Interfaces::IAS_GeometricEncircledEnergy::PutSampleSize ( enum SampleSizes pRetVal ) {
    HRESULT _hr = put_SampleSize(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3097)
inline enum ZOSAPI_Interfaces::EncircledEnergyTypes ZOSAPI_Interfaces::IAS_GeometricEncircledEnergy::GetType ( ) {
    enum EncircledEnergyTypes _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3098)
inline void ZOSAPI_Interfaces::IAS_GeometricEncircledEnergy::PutType ( enum EncircledEnergyTypes pRetVal ) {
    HRESULT _hr = put_Type(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3099)
inline enum ZOSAPI_Interfaces::ReferToTypes ZOSAPI_Interfaces::IAS_GeometricEncircledEnergy::GetReferTo ( ) {
    enum ReferToTypes _result;
    HRESULT _hr = get_ReferTo(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3100)
inline void ZOSAPI_Interfaces::IAS_GeometricEncircledEnergy::PutReferTo ( enum ReferToTypes pRetVal ) {
    HRESULT _hr = put_ReferTo(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3101)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_GeometricEncircledEnergy::GetScatterRays ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ScatterRays(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3102)
inline void ZOSAPI_Interfaces::IAS_GeometricEncircledEnergy::PutScatterRays ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_ScatterRays(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3103)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_GeometricEncircledEnergy::GetShowDiffractionLimit ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowDiffractionLimit(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3104)
inline void ZOSAPI_Interfaces::IAS_GeometricEncircledEnergy::PutShowDiffractionLimit ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_ShowDiffractionLimit(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3105)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_GeometricEncircledEnergy::GetUseDashes ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseDashes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3106)
inline void ZOSAPI_Interfaces::IAS_GeometricEncircledEnergy::PutUseDashes ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UseDashes(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3107)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_GeometricEncircledEnergy::GetUseHuygensPSF ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseHuygensPSF(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3108)
inline void ZOSAPI_Interfaces::IAS_GeometricEncircledEnergy::PutUseHuygensPSF ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UseHuygensPSF(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3109)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_GeometricEncircledEnergy::GetUsePolarization ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UsePolarization(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3110)
inline void ZOSAPI_Interfaces::IAS_GeometricEncircledEnergy::PutUsePolarization ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UsePolarization(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3111)
inline double ZOSAPI_Interfaces::IAS_GeometricEncircledEnergy::GetHuygensDelta ( ) {
    double _result = 0;
    HRESULT _hr = get_HuygensDelta(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3112)
inline void ZOSAPI_Interfaces::IAS_GeometricEncircledEnergy::PutHuygensDelta ( double pRetVal ) {
    HRESULT _hr = put_HuygensDelta(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3113)
inline double ZOSAPI_Interfaces::IAS_GeometricEncircledEnergy::GetRadiusMaximum ( ) {
    double _result = 0;
    HRESULT _hr = get_RadiusMaximum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3114)
inline void ZOSAPI_Interfaces::IAS_GeometricEncircledEnergy::PutRadiusMaximum ( double pRetVal ) {
    HRESULT _hr = put_RadiusMaximum(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IAS_ExtendedSourceEncircledEnergy wrapper method implementations
//

#pragma implementation_key(3115)
inline ZOSAPI_Interfaces::IAS_FieldPtr ZOSAPI_Interfaces::IAS_ExtendedSourceEncircledEnergy::GetField ( ) {
    struct IAS_Field * _result = 0;
    HRESULT _hr = get_Field(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_FieldPtr(_result, false);
}

#pragma implementation_key(3116)
inline ZOSAPI_Interfaces::IAS_SurfacePtr ZOSAPI_Interfaces::IAS_ExtendedSourceEncircledEnergy::GetSurface ( ) {
    struct IAS_Surface * _result = 0;
    HRESULT _hr = get_Surface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_SurfacePtr(_result, false);
}

#pragma implementation_key(3117)
inline ZOSAPI_Interfaces::IAS_WavelengthPtr ZOSAPI_Interfaces::IAS_ExtendedSourceEncircledEnergy::GetWavelength ( ) {
    struct IAS_Wavelength * _result = 0;
    HRESULT _hr = get_Wavelength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_WavelengthPtr(_result, false);
}

#pragma implementation_key(3118)
inline enum ZOSAPI_Interfaces::ExtendedSourceTypes ZOSAPI_Interfaces::IAS_ExtendedSourceEncircledEnergy::GetType ( ) {
    enum ExtendedSourceTypes _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3119)
inline void ZOSAPI_Interfaces::IAS_ExtendedSourceEncircledEnergy::PutType ( enum ExtendedSourceTypes pRetVal ) {
    HRESULT _hr = put_Type(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3120)
inline enum ZOSAPI_Interfaces::ReferToTypes ZOSAPI_Interfaces::IAS_ExtendedSourceEncircledEnergy::GetReferTo ( ) {
    enum ReferToTypes _result;
    HRESULT _hr = get_ReferTo(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3121)
inline void ZOSAPI_Interfaces::IAS_ExtendedSourceEncircledEnergy::PutReferTo ( enum ReferToTypes pRetVal ) {
    HRESULT _hr = put_ReferTo(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3122)
inline long ZOSAPI_Interfaces::IAS_ExtendedSourceEncircledEnergy::GetRaysX1000 ( ) {
    long _result = 0;
    HRESULT _hr = get_RaysX1000(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3123)
inline void ZOSAPI_Interfaces::IAS_ExtendedSourceEncircledEnergy::PutRaysX1000 ( long pRetVal ) {
    HRESULT _hr = put_RaysX1000(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3124)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_ExtendedSourceEncircledEnergy::GetMultiplyByDiffractionLimit ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_MultiplyByDiffractionLimit(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3125)
inline void ZOSAPI_Interfaces::IAS_ExtendedSourceEncircledEnergy::PutMultiplyByDiffractionLimit ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_MultiplyByDiffractionLimit(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3126)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_ExtendedSourceEncircledEnergy::GetRemoveVignettingFactors ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_RemoveVignettingFactors(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3127)
inline void ZOSAPI_Interfaces::IAS_ExtendedSourceEncircledEnergy::PutRemoveVignettingFactors ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_RemoveVignettingFactors(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3128)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_ExtendedSourceEncircledEnergy::GetUseDashes ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseDashes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3129)
inline void ZOSAPI_Interfaces::IAS_ExtendedSourceEncircledEnergy::PutUseDashes ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UseDashes(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3130)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_ExtendedSourceEncircledEnergy::GetUsePolarization ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UsePolarization(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3131)
inline void ZOSAPI_Interfaces::IAS_ExtendedSourceEncircledEnergy::PutUsePolarization ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UsePolarization(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3132)
inline double ZOSAPI_Interfaces::IAS_ExtendedSourceEncircledEnergy::GetMaximumDistance ( ) {
    double _result = 0;
    HRESULT _hr = get_MaximumDistance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3133)
inline void ZOSAPI_Interfaces::IAS_ExtendedSourceEncircledEnergy::PutMaximumDistance ( double pRetVal ) {
    HRESULT _hr = put_MaximumDistance(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3134)
inline double ZOSAPI_Interfaces::IAS_ExtendedSourceEncircledEnergy::GetFieldSize ( ) {
    double _result = 0;
    HRESULT _hr = get_FieldSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3135)
inline void ZOSAPI_Interfaces::IAS_ExtendedSourceEncircledEnergy::PutFieldSize ( double pRetVal ) {
    HRESULT _hr = put_FieldSize(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3136)
inline double ZOSAPI_Interfaces::IAS_ExtendedSourceEncircledEnergy::GetRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_Rotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3137)
inline void ZOSAPI_Interfaces::IAS_ExtendedSourceEncircledEnergy::PutRotation ( double pRetVal ) {
    HRESULT _hr = put_Rotation(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3138)
inline _bstr_t ZOSAPI_Interfaces::IAS_ExtendedSourceEncircledEnergy::GetImageName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ImageName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3139)
inline void ZOSAPI_Interfaces::IAS_ExtendedSourceEncircledEnergy::PutImageName ( _bstr_t pRetVal ) {
    HRESULT _hr = put_ImageName(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IAS_ZernikeFringeCoefficients wrapper method implementations
//

#pragma implementation_key(3140)
inline ZOSAPI_Interfaces::IAS_FieldPtr ZOSAPI_Interfaces::IAS_ZernikeFringeCoefficients::GetField ( ) {
    struct IAS_Field * _result = 0;
    HRESULT _hr = get_Field(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_FieldPtr(_result, false);
}

#pragma implementation_key(3141)
inline ZOSAPI_Interfaces::IAS_SurfacePtr ZOSAPI_Interfaces::IAS_ZernikeFringeCoefficients::GetSurface ( ) {
    struct IAS_Surface * _result = 0;
    HRESULT _hr = get_Surface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_SurfacePtr(_result, false);
}

#pragma implementation_key(3142)
inline ZOSAPI_Interfaces::IAS_WavelengthPtr ZOSAPI_Interfaces::IAS_ZernikeFringeCoefficients::GetWavelength ( ) {
    struct IAS_Wavelength * _result = 0;
    HRESULT _hr = get_Wavelength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_WavelengthPtr(_result, false);
}

#pragma implementation_key(3143)
inline enum ZOSAPI_Interfaces::SampleSizes ZOSAPI_Interfaces::IAS_ZernikeFringeCoefficients::GetSampleSize ( ) {
    enum SampleSizes _result;
    HRESULT _hr = get_SampleSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3144)
inline void ZOSAPI_Interfaces::IAS_ZernikeFringeCoefficients::PutSampleSize ( enum SampleSizes pRetVal ) {
    HRESULT _hr = put_SampleSize(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3145)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_ZernikeFringeCoefficients::GetReferenceOBDToVertex ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ReferenceOBDToVertex(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3146)
inline void ZOSAPI_Interfaces::IAS_ZernikeFringeCoefficients::PutReferenceOBDToVertex ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_ReferenceOBDToVertex(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3147)
inline double ZOSAPI_Interfaces::IAS_ZernikeFringeCoefficients::GetSx ( ) {
    double _result = 0;
    HRESULT _hr = get_Sx(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3148)
inline void ZOSAPI_Interfaces::IAS_ZernikeFringeCoefficients::PutSx ( double pRetVal ) {
    HRESULT _hr = put_Sx(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3149)
inline double ZOSAPI_Interfaces::IAS_ZernikeFringeCoefficients::GetSy ( ) {
    double _result = 0;
    HRESULT _hr = get_Sy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3150)
inline void ZOSAPI_Interfaces::IAS_ZernikeFringeCoefficients::PutSy ( double pRetVal ) {
    HRESULT _hr = put_Sy(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3151)
inline double ZOSAPI_Interfaces::IAS_ZernikeFringeCoefficients::GetSr ( ) {
    double _result = 0;
    HRESULT _hr = get_Sr(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3152)
inline void ZOSAPI_Interfaces::IAS_ZernikeFringeCoefficients::PutSr ( double pRetVal ) {
    HRESULT _hr = put_Sr(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3153)
inline long ZOSAPI_Interfaces::IAS_ZernikeFringeCoefficients::GetMaximumNumberOfTerms ( ) {
    long _result = 0;
    HRESULT _hr = get_MaximumNumberOfTerms(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3154)
inline void ZOSAPI_Interfaces::IAS_ZernikeFringeCoefficients::PutMaximumNumberOfTerms ( long pRetVal ) {
    HRESULT _hr = put_MaximumNumberOfTerms(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IAS_ZernikeAnnularCoefficients wrapper method implementations
//

#pragma implementation_key(3155)
inline ZOSAPI_Interfaces::IAS_FieldPtr ZOSAPI_Interfaces::IAS_ZernikeAnnularCoefficients::GetField ( ) {
    struct IAS_Field * _result = 0;
    HRESULT _hr = get_Field(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_FieldPtr(_result, false);
}

#pragma implementation_key(3156)
inline ZOSAPI_Interfaces::IAS_SurfacePtr ZOSAPI_Interfaces::IAS_ZernikeAnnularCoefficients::GetSurface ( ) {
    struct IAS_Surface * _result = 0;
    HRESULT _hr = get_Surface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_SurfacePtr(_result, false);
}

#pragma implementation_key(3157)
inline ZOSAPI_Interfaces::IAS_WavelengthPtr ZOSAPI_Interfaces::IAS_ZernikeAnnularCoefficients::GetWavelength ( ) {
    struct IAS_Wavelength * _result = 0;
    HRESULT _hr = get_Wavelength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_WavelengthPtr(_result, false);
}

#pragma implementation_key(3158)
inline enum ZOSAPI_Interfaces::SampleSizes ZOSAPI_Interfaces::IAS_ZernikeAnnularCoefficients::GetSampleSize ( ) {
    enum SampleSizes _result;
    HRESULT _hr = get_SampleSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3159)
inline void ZOSAPI_Interfaces::IAS_ZernikeAnnularCoefficients::PutSampleSize ( enum SampleSizes pRetVal ) {
    HRESULT _hr = put_SampleSize(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3160)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_ZernikeAnnularCoefficients::GetReferenceOBDToVertex ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ReferenceOBDToVertex(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3161)
inline void ZOSAPI_Interfaces::IAS_ZernikeAnnularCoefficients::PutReferenceOBDToVertex ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_ReferenceOBDToVertex(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3162)
inline double ZOSAPI_Interfaces::IAS_ZernikeAnnularCoefficients::GetSx ( ) {
    double _result = 0;
    HRESULT _hr = get_Sx(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3163)
inline void ZOSAPI_Interfaces::IAS_ZernikeAnnularCoefficients::PutSx ( double pRetVal ) {
    HRESULT _hr = put_Sx(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3164)
inline double ZOSAPI_Interfaces::IAS_ZernikeAnnularCoefficients::GetSy ( ) {
    double _result = 0;
    HRESULT _hr = get_Sy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3165)
inline void ZOSAPI_Interfaces::IAS_ZernikeAnnularCoefficients::PutSy ( double pRetVal ) {
    HRESULT _hr = put_Sy(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3166)
inline double ZOSAPI_Interfaces::IAS_ZernikeAnnularCoefficients::GetSr ( ) {
    double _result = 0;
    HRESULT _hr = get_Sr(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3167)
inline void ZOSAPI_Interfaces::IAS_ZernikeAnnularCoefficients::PutSr ( double pRetVal ) {
    HRESULT _hr = put_Sr(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3168)
inline double ZOSAPI_Interfaces::IAS_ZernikeAnnularCoefficients::GetObscuration ( ) {
    double _result = 0;
    HRESULT _hr = get_Obscuration(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3169)
inline void ZOSAPI_Interfaces::IAS_ZernikeAnnularCoefficients::PutObscuration ( double pRetVal ) {
    HRESULT _hr = put_Obscuration(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3170)
inline long ZOSAPI_Interfaces::IAS_ZernikeAnnularCoefficients::GetMaximumNumberOfTerms ( ) {
    long _result = 0;
    HRESULT _hr = get_MaximumNumberOfTerms(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3171)
inline void ZOSAPI_Interfaces::IAS_ZernikeAnnularCoefficients::PutMaximumNumberOfTerms ( long pRetVal ) {
    HRESULT _hr = put_MaximumNumberOfTerms(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IAS_FocalShiftDiagram wrapper method implementations
//

#pragma implementation_key(3172)
inline double ZOSAPI_Interfaces::IAS_FocalShiftDiagram::GetMaximumShift ( ) {
    double _result = 0;
    HRESULT _hr = get_MaximumShift(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3173)
inline void ZOSAPI_Interfaces::IAS_FocalShiftDiagram::PutMaximumShift ( double pRetVal ) {
    HRESULT _hr = put_MaximumShift(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3174)
inline double ZOSAPI_Interfaces::IAS_FocalShiftDiagram::GetPupilZone ( ) {
    double _result = 0;
    HRESULT _hr = get_PupilZone(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3175)
inline void ZOSAPI_Interfaces::IAS_FocalShiftDiagram::PutPupilZone ( double pRetVal ) {
    HRESULT _hr = put_PupilZone(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IAS_GridDistortion wrapper method implementations
//

#pragma implementation_key(3176)
inline ZOSAPI_Interfaces::IAS_FieldPtr ZOSAPI_Interfaces::IAS_GridDistortion::GetField ( ) {
    struct IAS_Field * _result = 0;
    HRESULT _hr = get_Field(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_FieldPtr(_result, false);
}

#pragma implementation_key(3177)
inline ZOSAPI_Interfaces::IAS_WavelengthPtr ZOSAPI_Interfaces::IAS_GridDistortion::GetWavelength ( ) {
    struct IAS_Wavelength * _result = 0;
    HRESULT _hr = get_Wavelength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_WavelengthPtr(_result, false);
}

#pragma implementation_key(3178)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_GridDistortion::GetSymmetricMagnification ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SymmetricMagnification(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3179)
inline void ZOSAPI_Interfaces::IAS_GridDistortion::PutSymmetricMagnification ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_SymmetricMagnification(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3180)
inline double ZOSAPI_Interfaces::IAS_GridDistortion::GetScaleFactor ( ) {
    double _result = 0;
    HRESULT _hr = get_ScaleFactor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3181)
inline void ZOSAPI_Interfaces::IAS_GridDistortion::PutScaleFactor ( double pRetVal ) {
    HRESULT _hr = put_ScaleFactor(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3182)
inline double ZOSAPI_Interfaces::IAS_GridDistortion::GetAspect ( ) {
    double _result = 0;
    HRESULT _hr = get_Aspect(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3183)
inline void ZOSAPI_Interfaces::IAS_GridDistortion::PutAspect ( double pRetVal ) {
    HRESULT _hr = put_Aspect(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3184)
inline double ZOSAPI_Interfaces::IAS_GridDistortion::GetFieldWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_FieldWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3185)
inline void ZOSAPI_Interfaces::IAS_GridDistortion::PutFieldWidth ( double pRetVal ) {
    HRESULT _hr = put_FieldWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3186)
inline long ZOSAPI_Interfaces::IAS_GridDistortion::GetGridNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_GridNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3187)
inline void ZOSAPI_Interfaces::IAS_GridDistortion::PutGridNumber ( long pRetVal ) {
    HRESULT _hr = put_GridNumber(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3188)
inline long ZOSAPI_Interfaces::IAS_GridDistortion::GetMethod ( ) {
    long _result = 0;
    HRESULT _hr = get_Method(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3189)
inline void ZOSAPI_Interfaces::IAS_GridDistortion::PutMethod ( long pRetVal ) {
    HRESULT _hr = put_Method(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3190)
inline long ZOSAPI_Interfaces::IAS_GridDistortion::GetRotateText ( ) {
    long _result = 0;
    HRESULT _hr = get_RotateText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3191)
inline void ZOSAPI_Interfaces::IAS_GridDistortion::PutRotateText ( long pRetVal ) {
    HRESULT _hr = put_RotateText(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IAS_LateralColor wrapper method implementations
//

#pragma implementation_key(3192)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_LateralColor::GetAllWavelengths ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AllWavelengths(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3193)
inline void ZOSAPI_Interfaces::IAS_LateralColor::PutAllWavelengths ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_AllWavelengths(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3194)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_LateralColor::GetShowAiryDisk ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowAiryDisk(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3195)
inline void ZOSAPI_Interfaces::IAS_LateralColor::PutShowAiryDisk ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_ShowAiryDisk(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3196)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_LateralColor::GetUseRealRays ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseRealRays(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3197)
inline void ZOSAPI_Interfaces::IAS_LateralColor::PutUseRealRays ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UseRealRays(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3198)
inline double ZOSAPI_Interfaces::IAS_LateralColor::GetPlotScale ( ) {
    double _result = 0;
    HRESULT _hr = get_PlotScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3199)
inline void ZOSAPI_Interfaces::IAS_LateralColor::PutPlotScale ( double pRetVal ) {
    HRESULT _hr = put_PlotScale(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IAS_LongitudinalAberration wrapper method implementations
//

#pragma implementation_key(3200)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_LongitudinalAberration::GetUseDashes ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseDashes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3201)
inline void ZOSAPI_Interfaces::IAS_LongitudinalAberration::PutUseDashes ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UseDashes(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3202)
inline double ZOSAPI_Interfaces::IAS_LongitudinalAberration::GetPlotScale ( ) {
    double _result = 0;
    HRESULT _hr = get_PlotScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3203)
inline void ZOSAPI_Interfaces::IAS_LongitudinalAberration::PutPlotScale ( double pRetVal ) {
    HRESULT _hr = put_PlotScale(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IAS_RayTrace wrapper method implementations
//

#pragma implementation_key(3204)
inline ZOSAPI_Interfaces::IAS_FieldPtr ZOSAPI_Interfaces::IAS_RayTrace::GetField ( ) {
    struct IAS_Field * _result = 0;
    HRESULT _hr = get_Field(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_FieldPtr(_result, false);
}

#pragma implementation_key(3205)
inline ZOSAPI_Interfaces::IAS_WavelengthPtr ZOSAPI_Interfaces::IAS_RayTrace::GetWavelength ( ) {
    struct IAS_Wavelength * _result = 0;
    HRESULT _hr = get_Wavelength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_WavelengthPtr(_result, false);
}

#pragma implementation_key(3206)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_RayTrace::GetUseGlobal ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseGlobal(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3207)
inline void ZOSAPI_Interfaces::IAS_RayTrace::PutUseGlobal ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UseGlobal(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3208)
inline double ZOSAPI_Interfaces::IAS_RayTrace::GetHx ( ) {
    double _result = 0;
    HRESULT _hr = get_Hx(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3209)
inline void ZOSAPI_Interfaces::IAS_RayTrace::PutHx ( double pRetVal ) {
    HRESULT _hr = put_Hx(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3210)
inline double ZOSAPI_Interfaces::IAS_RayTrace::GetHy ( ) {
    double _result = 0;
    HRESULT _hr = get_Hy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3211)
inline void ZOSAPI_Interfaces::IAS_RayTrace::PutHy ( double pRetVal ) {
    HRESULT _hr = put_Hy(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3212)
inline double ZOSAPI_Interfaces::IAS_RayTrace::GetPx ( ) {
    double _result = 0;
    HRESULT _hr = get_Px(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3213)
inline void ZOSAPI_Interfaces::IAS_RayTrace::PutPx ( double pRetVal ) {
    HRESULT _hr = put_Px(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3214)
inline double ZOSAPI_Interfaces::IAS_RayTrace::GetPy ( ) {
    double _result = 0;
    HRESULT _hr = get_Py(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3215)
inline void ZOSAPI_Interfaces::IAS_RayTrace::PutPy ( double pRetVal ) {
    HRESULT _hr = put_Py(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3216)
inline enum ZOSAPI_Interfaces::RayTraceType ZOSAPI_Interfaces::IAS_RayTrace::GetType ( ) {
    enum RayTraceType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3217)
inline void ZOSAPI_Interfaces::IAS_RayTrace::PutType ( enum RayTraceType pRetVal ) {
    HRESULT _hr = put_Type(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3218)
inline HRESULT ZOSAPI_Interfaces::IAS_RayTrace::UseArbitraryRay ( ) {
    HRESULT _hr = raw_UseArbitraryRay();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IAS_SeidelDiagram wrapper method implementations
//

#pragma implementation_key(3219)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_SeidelDiagram::GetIgnoreChromatic ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IgnoreChromatic(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3220)
inline void ZOSAPI_Interfaces::IAS_SeidelDiagram::PutIgnoreChromatic ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IgnoreChromatic(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3221)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_SeidelDiagram::GetIgnoreDistortion ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IgnoreDistortion(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3222)
inline void ZOSAPI_Interfaces::IAS_SeidelDiagram::PutIgnoreDistortion ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IgnoreDistortion(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3223)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_SeidelDiagram::GetSuppressFrame ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SuppressFrame(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3224)
inline void ZOSAPI_Interfaces::IAS_SeidelDiagram::PutSuppressFrame ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_SuppressFrame(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3225)
inline double ZOSAPI_Interfaces::IAS_SeidelDiagram::GetPlotScale ( ) {
    double _result = 0;
    HRESULT _hr = get_PlotScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3226)
inline void ZOSAPI_Interfaces::IAS_SeidelDiagram::PutPlotScale ( double pRetVal ) {
    HRESULT _hr = put_PlotScale(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IAS_SeidelCoefficients wrapper method implementations
//

#pragma implementation_key(3227)
inline ZOSAPI_Interfaces::IAS_WavelengthPtr ZOSAPI_Interfaces::IAS_SeidelCoefficients::GetWavelength ( ) {
    struct IAS_Wavelength * _result = 0;
    HRESULT _hr = get_Wavelength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_WavelengthPtr(_result, false);
}

//
// interface IAS_FieldCurvatureAndDistortion wrapper method implementations
//

#pragma implementation_key(3228)
inline ZOSAPI_Interfaces::IAS_WavelengthPtr ZOSAPI_Interfaces::IAS_FieldCurvatureAndDistortion::GetWavelength ( ) {
    struct IAS_Wavelength * _result = 0;
    HRESULT _hr = get_Wavelength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_WavelengthPtr(_result, false);
}

#pragma implementation_key(3229)
inline enum ZOSAPI_Interfaces::DisplayAsTypes ZOSAPI_Interfaces::IAS_FieldCurvatureAndDistortion::GetDisplayAs ( ) {
    enum DisplayAsTypes _result;
    HRESULT _hr = get_DisplayAs(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3230)
inline void ZOSAPI_Interfaces::IAS_FieldCurvatureAndDistortion::PutDisplayAs ( enum DisplayAsTypes pRetVal ) {
    HRESULT _hr = put_DisplayAs(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3231)
inline enum ZOSAPI_Interfaces::Distortions ZOSAPI_Interfaces::IAS_FieldCurvatureAndDistortion::GetDistortion ( ) {
    enum Distortions _result;
    HRESULT _hr = get_Distortion(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3232)
inline void ZOSAPI_Interfaces::IAS_FieldCurvatureAndDistortion::PutDistortion ( enum Distortions pRetVal ) {
    HRESULT _hr = put_Distortion(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3233)
inline enum ZOSAPI_Interfaces::FieldScanDirections ZOSAPI_Interfaces::IAS_FieldCurvatureAndDistortion::GetScanType ( ) {
    enum FieldScanDirections _result;
    HRESULT _hr = get_ScanType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3234)
inline void ZOSAPI_Interfaces::IAS_FieldCurvatureAndDistortion::PutScanType ( enum FieldScanDirections pRetVal ) {
    HRESULT _hr = put_ScanType(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3235)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_FieldCurvatureAndDistortion::GetUseDashes ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseDashes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3236)
inline void ZOSAPI_Interfaces::IAS_FieldCurvatureAndDistortion::PutUseDashes ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_UseDashes(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3237)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_FieldCurvatureAndDistortion::GetIgnoreVignette ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IgnoreVignette(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3238)
inline void ZOSAPI_Interfaces::IAS_FieldCurvatureAndDistortion::PutIgnoreVignette ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IgnoreVignette(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3239)
inline double ZOSAPI_Interfaces::IAS_FieldCurvatureAndDistortion::GetMaximumCurvature ( ) {
    double _result = 0;
    HRESULT _hr = get_MaximumCurvature(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3240)
inline void ZOSAPI_Interfaces::IAS_FieldCurvatureAndDistortion::PutMaximumCurvature ( double pRetVal ) {
    HRESULT _hr = put_MaximumCurvature(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3241)
inline double ZOSAPI_Interfaces::IAS_FieldCurvatureAndDistortion::GetMaximumDistortion ( ) {
    double _result = 0;
    HRESULT _hr = get_MaximumDistortion(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3242)
inline void ZOSAPI_Interfaces::IAS_FieldCurvatureAndDistortion::PutMaximumDistortion ( double pRetVal ) {
    HRESULT _hr = put_MaximumDistortion(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IAS_ZernikeCoefficientsVsField wrapper method implementations
//

#pragma implementation_key(3243)
inline ZOSAPI_Interfaces::IAS_WavelengthPtr ZOSAPI_Interfaces::IAS_ZernikeCoefficientsVsField::GetWavelength ( ) {
    struct IAS_Wavelength * _result = 0;
    HRESULT _hr = get_Wavelength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_WavelengthPtr(_result, false);
}

#pragma implementation_key(3244)
inline enum ZOSAPI_Interfaces::SampleSizes ZOSAPI_Interfaces::IAS_ZernikeCoefficientsVsField::GetSampleSize ( ) {
    enum SampleSizes _result;
    HRESULT _hr = get_SampleSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3245)
inline void ZOSAPI_Interfaces::IAS_ZernikeCoefficientsVsField::PutSampleSize ( enum SampleSizes pRetVal ) {
    HRESULT _hr = put_SampleSize(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3246)
inline enum ZOSAPI_Interfaces::FieldScanDirections ZOSAPI_Interfaces::IAS_ZernikeCoefficientsVsField::GetFieldScanDirection ( ) {
    enum FieldScanDirections _result;
    HRESULT _hr = get_FieldScanDirection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3247)
inline void ZOSAPI_Interfaces::IAS_ZernikeCoefficientsVsField::PutFieldScanDirection ( enum FieldScanDirections pRetVal ) {
    HRESULT _hr = put_FieldScanDirection(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3248)
inline enum ZOSAPI_Interfaces::ZernikeCoefficientTypes ZOSAPI_Interfaces::IAS_ZernikeCoefficientsVsField::GetZernikeCoefficientType ( ) {
    enum ZernikeCoefficientTypes _result;
    HRESULT _hr = get_ZernikeCoefficientType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3249)
inline void ZOSAPI_Interfaces::IAS_ZernikeCoefficientsVsField::PutZernikeCoefficientType ( enum ZernikeCoefficientTypes pRetVal ) {
    HRESULT _hr = put_ZernikeCoefficientType(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3250)
inline double ZOSAPI_Interfaces::IAS_ZernikeCoefficientsVsField::GetScaleMinimum ( ) {
    double _result = 0;
    HRESULT _hr = get_ScaleMinimum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3251)
inline void ZOSAPI_Interfaces::IAS_ZernikeCoefficientsVsField::PutScaleMinimum ( double pRetVal ) {
    HRESULT _hr = put_ScaleMinimum(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3252)
inline double ZOSAPI_Interfaces::IAS_ZernikeCoefficientsVsField::GetScaleMaximum ( ) {
    double _result = 0;
    HRESULT _hr = get_ScaleMaximum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3253)
inline void ZOSAPI_Interfaces::IAS_ZernikeCoefficientsVsField::PutScaleMaximum ( double pRetVal ) {
    HRESULT _hr = put_ScaleMaximum(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3254)
inline double ZOSAPI_Interfaces::IAS_ZernikeCoefficientsVsField::GetObscurationFactor ( ) {
    double _result = 0;
    HRESULT _hr = get_ObscurationFactor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3255)
inline void ZOSAPI_Interfaces::IAS_ZernikeCoefficientsVsField::PutObscurationFactor ( double pRetVal ) {
    HRESULT _hr = put_ObscurationFactor(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3256)
inline long ZOSAPI_Interfaces::IAS_ZernikeCoefficientsVsField::GetFieldDensity ( ) {
    long _result = 0;
    HRESULT _hr = get_FieldDensity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3257)
inline void ZOSAPI_Interfaces::IAS_ZernikeCoefficientsVsField::PutFieldDensity ( long pRetVal ) {
    HRESULT _hr = put_FieldDensity(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3258)
inline _bstr_t ZOSAPI_Interfaces::IAS_ZernikeCoefficientsVsField::GetCoefficients ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Coefficients(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3259)
inline void ZOSAPI_Interfaces::IAS_ZernikeCoefficientsVsField::PutCoefficients ( _bstr_t pRetVal ) {
    HRESULT _hr = put_Coefficients(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IAS_ZernikeStandardCoefficients wrapper method implementations
//

#pragma implementation_key(3260)
inline ZOSAPI_Interfaces::IAS_FieldPtr ZOSAPI_Interfaces::IAS_ZernikeStandardCoefficients::GetField ( ) {
    struct IAS_Field * _result = 0;
    HRESULT _hr = get_Field(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_FieldPtr(_result, false);
}

#pragma implementation_key(3261)
inline ZOSAPI_Interfaces::IAS_SurfacePtr ZOSAPI_Interfaces::IAS_ZernikeStandardCoefficients::GetSurface ( ) {
    struct IAS_Surface * _result = 0;
    HRESULT _hr = get_Surface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_SurfacePtr(_result, false);
}

#pragma implementation_key(3262)
inline ZOSAPI_Interfaces::IAS_WavelengthPtr ZOSAPI_Interfaces::IAS_ZernikeStandardCoefficients::GetWavelength ( ) {
    struct IAS_Wavelength * _result = 0;
    HRESULT _hr = get_Wavelength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IAS_WavelengthPtr(_result, false);
}

#pragma implementation_key(3263)
inline enum ZOSAPI_Interfaces::SampleSizes ZOSAPI_Interfaces::IAS_ZernikeStandardCoefficients::GetSampleSize ( ) {
    enum SampleSizes _result;
    HRESULT _hr = get_SampleSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3264)
inline void ZOSAPI_Interfaces::IAS_ZernikeStandardCoefficients::PutSampleSize ( enum SampleSizes pRetVal ) {
    HRESULT _hr = put_SampleSize(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3265)
inline VARIANT_BOOL ZOSAPI_Interfaces::IAS_ZernikeStandardCoefficients::GetReferenceOBDToVertex ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ReferenceOBDToVertex(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3266)
inline void ZOSAPI_Interfaces::IAS_ZernikeStandardCoefficients::PutReferenceOBDToVertex ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_ReferenceOBDToVertex(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3267)
inline double ZOSAPI_Interfaces::IAS_ZernikeStandardCoefficients::GetSx ( ) {
    double _result = 0;
    HRESULT _hr = get_Sx(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3268)
inline void ZOSAPI_Interfaces::IAS_ZernikeStandardCoefficients::PutSx ( double pRetVal ) {
    HRESULT _hr = put_Sx(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3269)
inline double ZOSAPI_Interfaces::IAS_ZernikeStandardCoefficients::GetSy ( ) {
    double _result = 0;
    HRESULT _hr = get_Sy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3270)
inline void ZOSAPI_Interfaces::IAS_ZernikeStandardCoefficients::PutSy ( double pRetVal ) {
    HRESULT _hr = put_Sy(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3271)
inline double ZOSAPI_Interfaces::IAS_ZernikeStandardCoefficients::GetSr ( ) {
    double _result = 0;
    HRESULT _hr = get_Sr(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3272)
inline void ZOSAPI_Interfaces::IAS_ZernikeStandardCoefficients::PutSr ( double pRetVal ) {
    HRESULT _hr = put_Sr(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3273)
inline double ZOSAPI_Interfaces::IAS_ZernikeStandardCoefficients::GetEpsilon ( ) {
    double _result = 0;
    HRESULT _hr = get_Epsilon(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3274)
inline void ZOSAPI_Interfaces::IAS_ZernikeStandardCoefficients::PutEpsilon ( double pRetVal ) {
    HRESULT _hr = put_Epsilon(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3275)
inline long ZOSAPI_Interfaces::IAS_ZernikeStandardCoefficients::GetMaximumNumberOfTerms ( ) {
    long _result = 0;
    HRESULT _hr = get_MaximumNumberOfTerms(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3276)
inline void ZOSAPI_Interfaces::IAS_ZernikeStandardCoefficients::PutMaximumNumberOfTerms ( long pRetVal ) {
    HRESULT _hr = put_MaximumNumberOfTerms(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IZOSAPI_Connection wrapper method implementations
//

#pragma implementation_key(3277)
inline VARIANT_BOOL ZOSAPI_Interfaces::IZOSAPI_Connection::GetIsAlive ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAlive(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3278)
inline ZOSAPI_Interfaces::IZOSAPI_ApplicationPtr ZOSAPI_Interfaces::IZOSAPI_Connection::ConnectToApplication ( ) {
    struct IZOSAPI_Application * _result = 0;
    HRESULT _hr = raw_ConnectToApplication(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IZOSAPI_ApplicationPtr(_result, false);
}

#pragma implementation_key(3279)
inline ZOSAPI_Interfaces::IZOSAPI_ApplicationPtr ZOSAPI_Interfaces::IZOSAPI_Connection::CreateNewApplication ( ) {
    struct IZOSAPI_Application * _result = 0;
    HRESULT _hr = raw_CreateNewApplication(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IZOSAPI_ApplicationPtr(_result, false);
}

#pragma implementation_key(3280)
inline ZOSAPI_Interfaces::IZOSAPI_ApplicationPtr ZOSAPI_Interfaces::IZOSAPI_Connection::CreateZemaxServer ( _bstr_t applicationName ) {
    struct IZOSAPI_Application * _result = 0;
    HRESULT _hr = raw_CreateZemaxServer(applicationName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IZOSAPI_ApplicationPtr(_result, false);
}

#pragma implementation_key(3281)
inline _bstr_t ZOSAPI_Interfaces::IZOSAPI_Connection::GetInitializationSettings ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_InitializationSettings(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3282)
inline void ZOSAPI_Interfaces::IZOSAPI_Connection::PutInitializationSettings ( _bstr_t pRetVal ) {
    HRESULT _hr = put_InitializationSettings(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3283)
inline SAFEARRAY * ZOSAPI_Interfaces::IZOSAPI_Connection::GetIntializationProgress ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = get_IntializationProgress(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3284)
inline double ZOSAPI_Interfaces::IZOSAPI_Connection::GetConnectionTimeoutSeconds ( ) {
    double _result = 0;
    HRESULT _hr = get_ConnectionTimeoutSeconds(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3285)
inline void ZOSAPI_Interfaces::IZOSAPI_Connection::PutConnectionTimeoutSeconds ( double pRetVal ) {
    HRESULT _hr = put_ConnectionTimeoutSeconds(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3286)
inline ZOSAPI_Interfaces::IZOSAPI_ApplicationPtr ZOSAPI_Interfaces::IZOSAPI_Connection::ConnectAsExtension ( long zemaxInstance ) {
    struct IZOSAPI_Application * _result = 0;
    HRESULT _hr = raw_ConnectAsExtension(zemaxInstance, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IZOSAPI_ApplicationPtr(_result, false);
}

//
// interface IZOSAPI_Application wrapper method implementations
//

#pragma implementation_key(3287)
inline enum ZOSAPI_Interfaces::LicenseStatusType ZOSAPI_Interfaces::IZOSAPI_Application::GetLicenseStatus ( ) {
    enum LicenseStatusType _result;
    HRESULT _hr = get_LicenseStatus(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3288)
inline VARIANT_BOOL ZOSAPI_Interfaces::IZOSAPI_Application::GetIsValidLicenseForAPI ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsValidLicenseForAPI(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3289)
inline _bstr_t ZOSAPI_Interfaces::IZOSAPI_Application::GetInitializationErrors ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_InitializationErrors(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3290)
inline _bstr_t ZOSAPI_Interfaces::IZOSAPI_Application::GetInitializationErrorCode ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_InitializationErrorCode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3291)
inline enum ZOSAPI_Interfaces::ZOSAPI_Mode ZOSAPI_Interfaces::IZOSAPI_Application::GetMode ( ) {
    enum ZOSAPI_Mode _result;
    HRESULT _hr = get_Mode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3292)
inline _bstr_t ZOSAPI_Interfaces::IZOSAPI_Application::GetSerialCode ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SerialCode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3293)
inline long ZOSAPI_Interfaces::IZOSAPI_Application::GetOpticStudioVersion ( ) {
    long _result = 0;
    HRESULT _hr = get_OpticStudioVersion(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3294)
inline long ZOSAPI_Interfaces::IZOSAPI_Application::GetExpirationYear ( ) {
    long _result = 0;
    HRESULT _hr = get_ExpirationYear(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3295)
inline long ZOSAPI_Interfaces::IZOSAPI_Application::GetExpirationMonth ( ) {
    long _result = 0;
    HRESULT _hr = get_ExpirationMonth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3296)
inline long ZOSAPI_Interfaces::IZOSAPI_Application::GetExpirationDay ( ) {
    long _result = 0;
    HRESULT _hr = get_ExpirationDay(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3297)
inline long ZOSAPI_Interfaces::IZOSAPI_Application::GetNumberOfOpticalSystems ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfOpticalSystems(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3298)
inline ZOSAPI_Interfaces::IOpticalSystemPtr ZOSAPI_Interfaces::IZOSAPI_Application::GetPrimarySystem ( ) {
    struct IOpticalSystem * _result = 0;
    HRESULT _hr = get_PrimarySystem(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IOpticalSystemPtr(_result, false);
}

#pragma implementation_key(3299)
inline ZOSAPI_Interfaces::IOpticalSystemPtr ZOSAPI_Interfaces::IZOSAPI_Application::GetSystemAt ( long pos ) {
    struct IOpticalSystem * _result = 0;
    HRESULT _hr = raw_GetSystemAt(pos, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IOpticalSystemPtr(_result, false);
}

#pragma implementation_key(3300)
inline VARIANT_BOOL ZOSAPI_Interfaces::IZOSAPI_Application::CloseSystemAt ( long pos, VARIANT_BOOL saveIfNeeded ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_CloseSystemAt(pos, saveIfNeeded, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3301)
inline ZOSAPI_Interfaces::IOpticalSystemPtr ZOSAPI_Interfaces::IZOSAPI_Application::LoadNewSystem ( _bstr_t LensFile ) {
    struct IOpticalSystem * _result = 0;
    HRESULT _hr = raw_LoadNewSystem(LensFile, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IOpticalSystemPtr(_result, false);
}

#pragma implementation_key(3302)
inline ZOSAPI_Interfaces::IOpticalSystemPtr ZOSAPI_Interfaces::IZOSAPI_Application::CreateNewSystem ( enum SystemType Mode ) {
    struct IOpticalSystem * _result = 0;
    HRESULT _hr = raw_CreateNewSystem(Mode, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IOpticalSystemPtr(_result, false);
}

#pragma implementation_key(3303)
inline long ZOSAPI_Interfaces::IZOSAPI_Application::GetNumberOfCPUs ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfCPUs(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3304)
inline HRESULT ZOSAPI_Interfaces::IZOSAPI_Application::UpdateFileLists ( ) {
    HRESULT _hr = raw_UpdateFileLists();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3305)
inline _bstr_t ZOSAPI_Interfaces::IZOSAPI_Application::GetProgramDir ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ProgramDir(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3306)
inline _bstr_t ZOSAPI_Interfaces::IZOSAPI_Application::GetLensDir ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_LensDir(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3307)
inline _bstr_t ZOSAPI_Interfaces::IZOSAPI_Application::GetObjectsDir ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ObjectsDir(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3308)
inline _bstr_t ZOSAPI_Interfaces::IZOSAPI_Application::GetGlassDir ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_GlassDir(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3309)
inline _bstr_t ZOSAPI_Interfaces::IZOSAPI_Application::GetZPLDir ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ZPLDir(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3310)
inline _bstr_t ZOSAPI_Interfaces::IZOSAPI_Application::GetCoatingDir ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_CoatingDir(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3311)
inline _bstr_t ZOSAPI_Interfaces::IZOSAPI_Application::GetPOPDir ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_POPDir(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3312)
inline _bstr_t ZOSAPI_Interfaces::IZOSAPI_Application::GetImagesDir ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ImagesDir(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3313)
inline _bstr_t ZOSAPI_Interfaces::IZOSAPI_Application::GetSolidWorksFilesDir ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SolidWorksFilesDir(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3314)
inline _bstr_t ZOSAPI_Interfaces::IZOSAPI_Application::GetAutodeskInventorFilesDir ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_AutodeskInventorFilesDir(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3315)
inline _bstr_t ZOSAPI_Interfaces::IZOSAPI_Application::GetCreoParametricFilesDir ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_CreoParametricFilesDir(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3316)
inline _bstr_t ZOSAPI_Interfaces::IZOSAPI_Application::GetMATLABFilesDir ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_MATLABFilesDir(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3317)
inline _bstr_t ZOSAPI_Interfaces::IZOSAPI_Application::GetScatterDir ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ScatterDir(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3318)
inline _bstr_t ZOSAPI_Interfaces::IZOSAPI_Application::GetUndoDir ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_UndoDir(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3319)
inline _bstr_t ZOSAPI_Interfaces::IZOSAPI_Application::GetSamplesDir ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SamplesDir(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3320)
inline _bstr_t ZOSAPI_Interfaces::IZOSAPI_Application::GetZemaxDataDir ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ZemaxDataDir(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3321)
inline _bstr_t ZOSAPI_Interfaces::IZOSAPI_Application::GetDate ( ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetDate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3322)
inline ZOSAPI_Interfaces::IVectorDataPtr ZOSAPI_Interfaces::IZOSAPI_Application::GetOperandResults ( ) {
    struct IVectorData * _result = 0;
    HRESULT _hr = get_OperandResults(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IVectorDataPtr(_result, false);
}

#pragma implementation_key(3323)
inline double ZOSAPI_Interfaces::IZOSAPI_Application::GetOperandArgument1 ( ) {
    double _result = 0;
    HRESULT _hr = get_OperandArgument1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3324)
inline double ZOSAPI_Interfaces::IZOSAPI_Application::GetOperandArgument2 ( ) {
    double _result = 0;
    HRESULT _hr = get_OperandArgument2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3325)
inline double ZOSAPI_Interfaces::IZOSAPI_Application::GetOperandArgument3 ( ) {
    double _result = 0;
    HRESULT _hr = get_OperandArgument3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3326)
inline double ZOSAPI_Interfaces::IZOSAPI_Application::GetOperandArgument4 ( ) {
    double _result = 0;
    HRESULT _hr = get_OperandArgument4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3327)
inline ZOSAPI_Interfaces::IUserAnalysisDataPtr ZOSAPI_Interfaces::IZOSAPI_Application::GetUserAnalysisData ( ) {
    struct IUserAnalysisData * _result = 0;
    HRESULT _hr = get_UserAnalysisData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUserAnalysisDataPtr(_result, false);
}

#pragma implementation_key(3328)
inline VARIANT_BOOL ZOSAPI_Interfaces::IZOSAPI_Application::GetTerminateRequested ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_TerminateRequested(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3329)
inline VARIANT_BOOL ZOSAPI_Interfaces::IZOSAPI_Application::GetShowChangesInUI ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowChangesInUI(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3330)
inline void ZOSAPI_Interfaces::IZOSAPI_Application::PutShowChangesInUI ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_ShowChangesInUI(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3331)
inline _bstr_t ZOSAPI_Interfaces::IZOSAPI_Application::GetProgressMessage ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ProgressMessage(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3332)
inline void ZOSAPI_Interfaces::IZOSAPI_Application::PutProgressMessage ( _bstr_t pRetVal ) {
    HRESULT _hr = put_ProgressMessage(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3333)
inline double ZOSAPI_Interfaces::IZOSAPI_Application::GetProgressPercent ( ) {
    double _result = 0;
    HRESULT _hr = get_ProgressPercent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3334)
inline void ZOSAPI_Interfaces::IZOSAPI_Application::PutProgressPercent ( double pRetVal ) {
    HRESULT _hr = put_ProgressPercent(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3335)
inline HRESULT ZOSAPI_Interfaces::IZOSAPI_Application::CloseApplication ( ) {
    HRESULT _hr = raw_CloseApplication();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3336)
inline enum ZOSAPI_Interfaces::UpdateStatus ZOSAPI_Interfaces::IZOSAPI_Application::GetCheckForUpdatesStatus ( ) {
    enum UpdateStatus _result;
    HRESULT _hr = get_CheckForUpdatesStatus(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3337)
inline _bstr_t ZOSAPI_Interfaces::IZOSAPI_Application::GetCheckForUpdatesData ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_CheckForUpdatesData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3338)
inline long ZOSAPI_Interfaces::IZOSAPI_Application::GetCheckForUpdatesVersion ( ) {
    long _result = 0;
    HRESULT _hr = get_CheckForUpdatesVersion(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3339)
inline HRESULT ZOSAPI_Interfaces::IZOSAPI_Application::CheckForUpdates ( ) {
    HRESULT _hr = raw_CheckForUpdates();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IOpticalSystem wrapper method implementations
//

#pragma implementation_key(3340)
inline _bstr_t ZOSAPI_Interfaces::IOpticalSystem::GetSystemName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SystemName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3341)
inline void ZOSAPI_Interfaces::IOpticalSystem::PutSystemName ( _bstr_t pRetVal ) {
    HRESULT _hr = put_SystemName(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3342)
inline long ZOSAPI_Interfaces::IOpticalSystem::GetSystemID ( ) {
    long _result = 0;
    HRESULT _hr = get_SystemID(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3343)
inline enum ZOSAPI_Interfaces::SystemType ZOSAPI_Interfaces::IOpticalSystem::GetMode ( ) {
    enum SystemType _result;
    HRESULT _hr = get_Mode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3344)
inline _bstr_t ZOSAPI_Interfaces::IOpticalSystem::GetSystemFile ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SystemFile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3345)
inline _bstr_t ZOSAPI_Interfaces::IOpticalSystem::GetCurrentStatus ( ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetCurrentStatus(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3346)
inline _bstr_t ZOSAPI_Interfaces::IOpticalSystem::UpdateStatus ( ) {
    BSTR _result = 0;
    HRESULT _hr = raw_UpdateStatus(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3347)
inline VARIANT_BOOL ZOSAPI_Interfaces::IOpticalSystem::GetIsNonAxial ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsNonAxial(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3348)
inline VARIANT_BOOL ZOSAPI_Interfaces::IOpticalSystem::GetNeedsSave ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_NeedsSave(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3349)
inline VARIANT_BOOL ZOSAPI_Interfaces::IOpticalSystem::MakeSequential ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_MakeSequential(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3350)
inline VARIANT_BOOL ZOSAPI_Interfaces::IOpticalSystem::MakeNonSequential ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_MakeNonSequential(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3351)
inline VARIANT_BOOL ZOSAPI_Interfaces::IOpticalSystem::LoadFile ( _bstr_t LensFile, VARIANT_BOOL saveIfNeeded ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_LoadFile(LensFile, saveIfNeeded, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3352)
inline HRESULT ZOSAPI_Interfaces::IOpticalSystem::New ( VARIANT_BOOL saveIfNeeded ) {
    HRESULT _hr = raw_New(saveIfNeeded);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3353)
inline HRESULT ZOSAPI_Interfaces::IOpticalSystem::Save ( ) {
    HRESULT _hr = raw_Save();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3354)
inline HRESULT ZOSAPI_Interfaces::IOpticalSystem::SaveAs ( _bstr_t fileName ) {
    HRESULT _hr = raw_SaveAs(fileName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3355)
inline VARIANT_BOOL ZOSAPI_Interfaces::IOpticalSystem::Close ( VARIANT_BOOL saveIfNeeded ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_Close(saveIfNeeded, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3356)
inline ZOSAPI_Interfaces::ISystemDataPtr ZOSAPI_Interfaces::IOpticalSystem::GetSystemData ( ) {
    struct ISystemData * _result = 0;
    HRESULT _hr = get_SystemData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISystemDataPtr(_result, false);
}

#pragma implementation_key(3357)
inline ZOSAPI_Interfaces::ILensDataEditorPtr ZOSAPI_Interfaces::IOpticalSystem::GetLDE ( ) {
    struct ILensDataEditor * _result = 0;
    HRESULT _hr = get_LDE(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ILensDataEditorPtr(_result, false);
}

#pragma implementation_key(3358)
inline ZOSAPI_Interfaces::INonSeqEditorPtr ZOSAPI_Interfaces::IOpticalSystem::GetNCE ( ) {
    struct INonSeqEditor * _result = 0;
    HRESULT _hr = get_NCE(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return INonSeqEditorPtr(_result, false);
}

#pragma implementation_key(3359)
inline ZOSAPI_Interfaces::IToleranceDataEditorPtr ZOSAPI_Interfaces::IOpticalSystem::GetTDE ( ) {
    struct IToleranceDataEditor * _result = 0;
    HRESULT _hr = get_TDE(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IToleranceDataEditorPtr(_result, false);
}

#pragma implementation_key(3360)
inline ZOSAPI_Interfaces::IMeritFunctionEditorPtr ZOSAPI_Interfaces::IOpticalSystem::GetMFE ( ) {
    struct IMeritFunctionEditor * _result = 0;
    HRESULT _hr = get_MFE(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IMeritFunctionEditorPtr(_result, false);
}

#pragma implementation_key(3361)
inline ZOSAPI_Interfaces::IMultiConfigEditorPtr ZOSAPI_Interfaces::IOpticalSystem::GetMCE ( ) {
    struct IMultiConfigEditor * _result = 0;
    HRESULT _hr = get_MCE(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IMultiConfigEditorPtr(_result, false);
}

#pragma implementation_key(3362)
inline ZOSAPI_Interfaces::I_AnalysesPtr ZOSAPI_Interfaces::IOpticalSystem::GetAnalyses ( ) {
    struct I_Analyses * _result = 0;
    HRESULT _hr = get_Analyses(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return I_AnalysesPtr(_result, false);
}

#pragma implementation_key(3363)
inline ZOSAPI_Interfaces::IOpticalSystemToolsPtr ZOSAPI_Interfaces::IOpticalSystem::GetTools ( ) {
    struct IOpticalSystemTools * _result = 0;
    HRESULT _hr = get_Tools(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IOpticalSystemToolsPtr(_result, false);
}

#pragma implementation_key(3364)
inline ZOSAPI_Interfaces::IZOSAPI_ApplicationPtr ZOSAPI_Interfaces::IOpticalSystem::GetTheApplication ( ) {
    struct IZOSAPI_Application * _result = 0;
    HRESULT _hr = get_TheApplication(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IZOSAPI_ApplicationPtr(_result, false);
}

#pragma implementation_key(3365)
inline ZOSAPI_Interfaces::IOpticalSystemPtr ZOSAPI_Interfaces::IOpticalSystem::CopySystem ( ) {
    struct IOpticalSystem * _result = 0;
    HRESULT _hr = raw_CopySystem(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IOpticalSystemPtr(_result, false);
}

#pragma implementation_key(3366)
inline enum ZOSAPI_Interfaces::LensUpdateMode ZOSAPI_Interfaces::IOpticalSystem::GetUpdateMode ( ) {
    enum LensUpdateMode _result;
    HRESULT _hr = get_UpdateMode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3367)
inline void ZOSAPI_Interfaces::IOpticalSystem::PutUpdateMode ( enum LensUpdateMode pRetVal ) {
    HRESULT _hr = put_UpdateMode(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IEditor wrapper method implementations
//

#pragma implementation_key(3368)
inline enum ZOSAPI_Interfaces::EditorType ZOSAPI_Interfaces::IEditor::GetEditor ( ) {
    enum EditorType _result;
    HRESULT _hr = get_Editor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3369)
inline long ZOSAPI_Interfaces::IEditor::GetNumberOfRows ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfRows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3370)
inline long ZOSAPI_Interfaces::IEditor::GetMinColumn ( ) {
    long _result = 0;
    HRESULT _hr = get_MinColumn(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3371)
inline long ZOSAPI_Interfaces::IEditor::GetMaxColumn ( ) {
    long _result = 0;
    HRESULT _hr = get_MaxColumn(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3372)
inline ZOSAPI_Interfaces::IEditorRowPtr ZOSAPI_Interfaces::IEditor::GetRowAt ( long pos ) {
    struct IEditorRow * _result = 0;
    HRESULT _hr = raw_GetRowAt(pos, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorRowPtr(_result, false);
}

#pragma implementation_key(3373)
inline ZOSAPI_Interfaces::IEditorRowPtr ZOSAPI_Interfaces::IEditor::InsertRowAt ( long pos ) {
    struct IEditorRow * _result = 0;
    HRESULT _hr = raw_InsertRowAt(pos, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorRowPtr(_result, false);
}

#pragma implementation_key(3374)
inline ZOSAPI_Interfaces::IEditorRowPtr ZOSAPI_Interfaces::IEditor::AddRow ( ) {
    struct IEditorRow * _result = 0;
    HRESULT _hr = raw_AddRow(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorRowPtr(_result, false);
}

#pragma implementation_key(3375)
inline VARIANT_BOOL ZOSAPI_Interfaces::IEditor::DeleteRowAt ( long pos ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_DeleteRowAt(pos, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3376)
inline long ZOSAPI_Interfaces::IEditor::DeleteRowsAt ( long pos, long NumberOfRows ) {
    long _result = 0;
    HRESULT _hr = raw_DeleteRowsAt(pos, NumberOfRows, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3377)
inline long ZOSAPI_Interfaces::IEditor::DeleteAllRows ( ) {
    long _result = 0;
    HRESULT _hr = raw_DeleteAllRows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3378)
inline VARIANT_BOOL ZOSAPI_Interfaces::IEditor::ShowEditor ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_ShowEditor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3379)
inline HRESULT ZOSAPI_Interfaces::IEditor::HideEditor ( ) {
    HRESULT _hr = raw_HideEditor();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IEditorRow wrapper method implementations
//

#pragma implementation_key(3380)
inline ZOSAPI_Interfaces::IEditorPtr ZOSAPI_Interfaces::IEditorRow::GetEditor ( ) {
    struct IEditor * _result = 0;
    HRESULT _hr = get_Editor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorPtr(_result, false);
}

#pragma implementation_key(3381)
inline VARIANT_BOOL ZOSAPI_Interfaces::IEditorRow::GetIsValidRow ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsValidRow(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3382)
inline long ZOSAPI_Interfaces::IEditorRow::GetRowIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_RowIndex(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3383)
inline _bstr_t ZOSAPI_Interfaces::IEditorRow::GetRowTypeName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_RowTypeName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3384)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IEditorRow::GetCellAt ( long pos ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_GetCellAt(pos, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

//
// interface IEditorCell wrapper method implementations
//

#pragma implementation_key(3385)
inline ZOSAPI_Interfaces::IEditorRowPtr ZOSAPI_Interfaces::IEditorCell::GetRow ( ) {
    struct IEditorRow * _result = 0;
    HRESULT _hr = get_Row(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorRowPtr(_result, false);
}

#pragma implementation_key(3386)
inline long ZOSAPI_Interfaces::IEditorCell::GetCol ( ) {
    long _result = 0;
    HRESULT _hr = get_Col(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3387)
inline VARIANT_BOOL ZOSAPI_Interfaces::IEditorCell::GetIsActive ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsActive(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3388)
inline VARIANT_BOOL ZOSAPI_Interfaces::IEditorCell::GetIsReadOnly ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsReadOnly(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3389)
inline _bstr_t ZOSAPI_Interfaces::IEditorCell::GetHeader ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Header(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3390)
inline enum ZOSAPI_Interfaces::CellDataType ZOSAPI_Interfaces::IEditorCell::GetDataType ( ) {
    enum CellDataType _result;
    HRESULT _hr = get_DataType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3391)
inline long ZOSAPI_Interfaces::IEditorCell::GetIntegerValue ( ) {
    long _result = 0;
    HRESULT _hr = get_IntegerValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3392)
inline void ZOSAPI_Interfaces::IEditorCell::PutIntegerValue ( long pRetVal ) {
    HRESULT _hr = put_IntegerValue(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3393)
inline double ZOSAPI_Interfaces::IEditorCell::GetDoubleValue ( ) {
    double _result = 0;
    HRESULT _hr = get_DoubleValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3394)
inline void ZOSAPI_Interfaces::IEditorCell::PutDoubleValue ( double pRetVal ) {
    HRESULT _hr = put_DoubleValue(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3395)
inline _bstr_t ZOSAPI_Interfaces::IEditorCell::GetValue ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Value(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3396)
inline void ZOSAPI_Interfaces::IEditorCell::PutValue ( _bstr_t pRetVal ) {
    HRESULT _hr = put_Value(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3397)
inline enum ZOSAPI_Interfaces::SolveType ZOSAPI_Interfaces::IEditorCell::GetSolve ( ) {
    enum SolveType _result;
    HRESULT _hr = get_Solve(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3398)
inline ZOSAPI_Interfaces::ISolveDataPtr ZOSAPI_Interfaces::IEditorCell::GetSolveData ( ) {
    struct ISolveData * _result = 0;
    HRESULT _hr = raw_GetSolveData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISolveDataPtr(_result, false);
}

#pragma implementation_key(3399)
inline long ZOSAPI_Interfaces::IEditorCell::GetNumberOfSolveTypes ( ) {
    long _result = 0;
    HRESULT _hr = raw_GetNumberOfSolveTypes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3400)
inline VARIANT_BOOL ZOSAPI_Interfaces::IEditorCell::IsSolveTypeSupported ( enum SolveType st ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_IsSolveTypeSupported(st, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3401)
inline SAFEARRAY * ZOSAPI_Interfaces::IEditorCell::GetAvailableSolveTypes ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_GetAvailableSolveTypes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3402)
inline HRESULT ZOSAPI_Interfaces::IEditorCell::FillAvailableSolveTypes ( long Length, enum SolveType * solves ) {
    HRESULT _hr = raw_FillAvailableSolveTypes(Length, solves);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3403)
inline ZOSAPI_Interfaces::ISolveDataPtr ZOSAPI_Interfaces::IEditorCell::CreateSolveType ( enum SolveType Type ) {
    struct ISolveData * _result = 0;
    HRESULT _hr = raw_CreateSolveType(Type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISolveDataPtr(_result, false);
}

#pragma implementation_key(3404)
inline enum ZOSAPI_Interfaces::SolveStatus ZOSAPI_Interfaces::IEditorCell::SetSolveData ( struct ISolveData * Data ) {
    enum SolveStatus _result;
    HRESULT _hr = raw_SetSolveData(Data, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3405)
inline VARIANT_BOOL ZOSAPI_Interfaces::IEditorCell::MakeSolveVariable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_MakeSolveVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3406)
inline VARIANT_BOOL ZOSAPI_Interfaces::IEditorCell::MakeSolveFixed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_MakeSolveFixed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IObjectAnnularAsphericLens wrapper method implementations
//

#pragma implementation_key(3407)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularAsphericLens::GetMinFrontApertureCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_MinFrontApertureCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3408)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularAsphericLens::GetMaxFrontApertureCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_MaxFrontApertureCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3409)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularAsphericLens::GetMinBackApertureCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_MinBackApertureCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3410)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularAsphericLens::GetMaxBackApertureCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_MaxBackApertureCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3411)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularAsphericLens::GetThkApertureCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ThkApertureCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3412)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularAsphericLens::GetRearRadiusCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearRadiusCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3413)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularAsphericLens::GetRearConicCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearConicCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3414)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularAsphericLens::GetThicknessCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ThicknessCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3415)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularAsphericLens::GetRearRPower2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearRPower2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3416)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularAsphericLens::GetRearRPower4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearRPower4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3417)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularAsphericLens::GetRearRPower6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearRPower6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3418)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularAsphericLens::GetRearRPower8Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearRPower8Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3419)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularAsphericLens::GetRearRPower10Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearRPower10Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3420)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularAsphericLens::GetRearRPower12Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearRPower12Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3421)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularAsphericLens::GetRearRPower14Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearRPower14Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3422)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularAsphericLens::GetRearRPower16Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearRPower16Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3423)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularAsphericLens::GetFrontRadiusCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontRadiusCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3424)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularAsphericLens::GetFrontConicCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontConicCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3425)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularAsphericLens::GetFrontRPower2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontRPower2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3426)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularAsphericLens::GetFrontRPower4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontRPower4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3427)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularAsphericLens::GetFrontRPower6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontRPower6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3428)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularAsphericLens::GetFrontRPower8Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontRPower8Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3429)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularAsphericLens::GetFrontRPower10Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontRPower10Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3430)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularAsphericLens::GetFrontRPower12Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontRPower12Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3431)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularAsphericLens::GetFrontRPower14Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontRPower14Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3432)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularAsphericLens::GetFrontRPower16Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontRPower16Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3433)
inline double ZOSAPI_Interfaces::IObjectAnnularAsphericLens::GetMinFrontAperture ( ) {
    double _result = 0;
    HRESULT _hr = get_MinFrontAperture(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3434)
inline void ZOSAPI_Interfaces::IObjectAnnularAsphericLens::PutMinFrontAperture ( double pRetVal ) {
    HRESULT _hr = put_MinFrontAperture(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3435)
inline double ZOSAPI_Interfaces::IObjectAnnularAsphericLens::GetMaxFrontAperture ( ) {
    double _result = 0;
    HRESULT _hr = get_MaxFrontAperture(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3436)
inline void ZOSAPI_Interfaces::IObjectAnnularAsphericLens::PutMaxFrontAperture ( double pRetVal ) {
    HRESULT _hr = put_MaxFrontAperture(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3437)
inline double ZOSAPI_Interfaces::IObjectAnnularAsphericLens::GetMinBackAperture ( ) {
    double _result = 0;
    HRESULT _hr = get_MinBackAperture(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3438)
inline void ZOSAPI_Interfaces::IObjectAnnularAsphericLens::PutMinBackAperture ( double pRetVal ) {
    HRESULT _hr = put_MinBackAperture(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3439)
inline double ZOSAPI_Interfaces::IObjectAnnularAsphericLens::GetMaxBackAperture ( ) {
    double _result = 0;
    HRESULT _hr = get_MaxBackAperture(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3440)
inline void ZOSAPI_Interfaces::IObjectAnnularAsphericLens::PutMaxBackAperture ( double pRetVal ) {
    HRESULT _hr = put_MaxBackAperture(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3441)
inline double ZOSAPI_Interfaces::IObjectAnnularAsphericLens::GetThkAperture ( ) {
    double _result = 0;
    HRESULT _hr = get_ThkAperture(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3442)
inline void ZOSAPI_Interfaces::IObjectAnnularAsphericLens::PutThkAperture ( double pRetVal ) {
    HRESULT _hr = put_ThkAperture(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3443)
inline double ZOSAPI_Interfaces::IObjectAnnularAsphericLens::GetRearRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_RearRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3444)
inline void ZOSAPI_Interfaces::IObjectAnnularAsphericLens::PutRearRadius ( double pRetVal ) {
    HRESULT _hr = put_RearRadius(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3445)
inline double ZOSAPI_Interfaces::IObjectAnnularAsphericLens::GetRearConic ( ) {
    double _result = 0;
    HRESULT _hr = get_RearConic(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3446)
inline void ZOSAPI_Interfaces::IObjectAnnularAsphericLens::PutRearConic ( double pRetVal ) {
    HRESULT _hr = put_RearConic(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3447)
inline double ZOSAPI_Interfaces::IObjectAnnularAsphericLens::GetThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_Thickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3448)
inline void ZOSAPI_Interfaces::IObjectAnnularAsphericLens::PutThickness ( double pRetVal ) {
    HRESULT _hr = put_Thickness(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3449)
inline double ZOSAPI_Interfaces::IObjectAnnularAsphericLens::GetRearRPower2 ( ) {
    double _result = 0;
    HRESULT _hr = get_RearRPower2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3450)
inline void ZOSAPI_Interfaces::IObjectAnnularAsphericLens::PutRearRPower2 ( double pRetVal ) {
    HRESULT _hr = put_RearRPower2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3451)
inline double ZOSAPI_Interfaces::IObjectAnnularAsphericLens::GetRearRPower4 ( ) {
    double _result = 0;
    HRESULT _hr = get_RearRPower4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3452)
inline void ZOSAPI_Interfaces::IObjectAnnularAsphericLens::PutRearRPower4 ( double pRetVal ) {
    HRESULT _hr = put_RearRPower4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3453)
inline double ZOSAPI_Interfaces::IObjectAnnularAsphericLens::GetRearRPower6 ( ) {
    double _result = 0;
    HRESULT _hr = get_RearRPower6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3454)
inline void ZOSAPI_Interfaces::IObjectAnnularAsphericLens::PutRearRPower6 ( double pRetVal ) {
    HRESULT _hr = put_RearRPower6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3455)
inline double ZOSAPI_Interfaces::IObjectAnnularAsphericLens::GetRearRPower8 ( ) {
    double _result = 0;
    HRESULT _hr = get_RearRPower8(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3456)
inline void ZOSAPI_Interfaces::IObjectAnnularAsphericLens::PutRearRPower8 ( double pRetVal ) {
    HRESULT _hr = put_RearRPower8(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3457)
inline double ZOSAPI_Interfaces::IObjectAnnularAsphericLens::GetRearRPower10 ( ) {
    double _result = 0;
    HRESULT _hr = get_RearRPower10(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3458)
inline void ZOSAPI_Interfaces::IObjectAnnularAsphericLens::PutRearRPower10 ( double pRetVal ) {
    HRESULT _hr = put_RearRPower10(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3459)
inline double ZOSAPI_Interfaces::IObjectAnnularAsphericLens::GetRearRPower12 ( ) {
    double _result = 0;
    HRESULT _hr = get_RearRPower12(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3460)
inline void ZOSAPI_Interfaces::IObjectAnnularAsphericLens::PutRearRPower12 ( double pRetVal ) {
    HRESULT _hr = put_RearRPower12(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3461)
inline double ZOSAPI_Interfaces::IObjectAnnularAsphericLens::GetRearRPower14 ( ) {
    double _result = 0;
    HRESULT _hr = get_RearRPower14(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3462)
inline void ZOSAPI_Interfaces::IObjectAnnularAsphericLens::PutRearRPower14 ( double pRetVal ) {
    HRESULT _hr = put_RearRPower14(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3463)
inline double ZOSAPI_Interfaces::IObjectAnnularAsphericLens::GetRearRPower16 ( ) {
    double _result = 0;
    HRESULT _hr = get_RearRPower16(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3464)
inline void ZOSAPI_Interfaces::IObjectAnnularAsphericLens::PutRearRPower16 ( double pRetVal ) {
    HRESULT _hr = put_RearRPower16(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3465)
inline double ZOSAPI_Interfaces::IObjectAnnularAsphericLens::GetFrontRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3466)
inline void ZOSAPI_Interfaces::IObjectAnnularAsphericLens::PutFrontRadius ( double pRetVal ) {
    HRESULT _hr = put_FrontRadius(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3467)
inline double ZOSAPI_Interfaces::IObjectAnnularAsphericLens::GetFrontConic ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontConic(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3468)
inline void ZOSAPI_Interfaces::IObjectAnnularAsphericLens::PutFrontConic ( double pRetVal ) {
    HRESULT _hr = put_FrontConic(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3469)
inline double ZOSAPI_Interfaces::IObjectAnnularAsphericLens::GetFrontRPower2 ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontRPower2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3470)
inline void ZOSAPI_Interfaces::IObjectAnnularAsphericLens::PutFrontRPower2 ( double pRetVal ) {
    HRESULT _hr = put_FrontRPower2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3471)
inline double ZOSAPI_Interfaces::IObjectAnnularAsphericLens::GetFrontRPower4 ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontRPower4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3472)
inline void ZOSAPI_Interfaces::IObjectAnnularAsphericLens::PutFrontRPower4 ( double pRetVal ) {
    HRESULT _hr = put_FrontRPower4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3473)
inline double ZOSAPI_Interfaces::IObjectAnnularAsphericLens::GetFrontRPower6 ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontRPower6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3474)
inline void ZOSAPI_Interfaces::IObjectAnnularAsphericLens::PutFrontRPower6 ( double pRetVal ) {
    HRESULT _hr = put_FrontRPower6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3475)
inline double ZOSAPI_Interfaces::IObjectAnnularAsphericLens::GetFrontRPower8 ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontRPower8(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3476)
inline void ZOSAPI_Interfaces::IObjectAnnularAsphericLens::PutFrontRPower8 ( double pRetVal ) {
    HRESULT _hr = put_FrontRPower8(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3477)
inline double ZOSAPI_Interfaces::IObjectAnnularAsphericLens::GetFrontRPower10 ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontRPower10(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3478)
inline void ZOSAPI_Interfaces::IObjectAnnularAsphericLens::PutFrontRPower10 ( double pRetVal ) {
    HRESULT _hr = put_FrontRPower10(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3479)
inline double ZOSAPI_Interfaces::IObjectAnnularAsphericLens::GetFrontRPower12 ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontRPower12(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3480)
inline void ZOSAPI_Interfaces::IObjectAnnularAsphericLens::PutFrontRPower12 ( double pRetVal ) {
    HRESULT _hr = put_FrontRPower12(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3481)
inline double ZOSAPI_Interfaces::IObjectAnnularAsphericLens::GetFrontRPower14 ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontRPower14(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3482)
inline void ZOSAPI_Interfaces::IObjectAnnularAsphericLens::PutFrontRPower14 ( double pRetVal ) {
    HRESULT _hr = put_FrontRPower14(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3483)
inline double ZOSAPI_Interfaces::IObjectAnnularAsphericLens::GetFrontRPower16 ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontRPower16(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3484)
inline void ZOSAPI_Interfaces::IObjectAnnularAsphericLens::PutFrontRPower16 ( double pRetVal ) {
    HRESULT _hr = put_FrontRPower16(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectAnnularAxialLens wrapper method implementations
//

#pragma implementation_key(3485)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularAxialLens::GetFrontRadiusCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontRadiusCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3486)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularAxialLens::GetFrontConicCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontConicCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3487)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularAxialLens::GetRearRadiusCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearRadiusCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3488)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularAxialLens::GetRearConicCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearConicCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3489)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularAxialLens::GetThicknessCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ThicknessCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3490)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularAxialLens::GetApertureCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ApertureCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3491)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularAxialLens::GetRevolutionCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RevolutionCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3492)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularAxialLens::GetDecenterCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_DecenterCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3493)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularAxialLens::GetFrontRPower2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontRPower2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3494)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularAxialLens::GetFrontRPower4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontRPower4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3495)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularAxialLens::GetFrontRPower6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontRPower6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3496)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularAxialLens::GetFrontRPower8Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontRPower8Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3497)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularAxialLens::GetFrontRPower10Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontRPower10Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3498)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularAxialLens::GetFrontRPower12Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontRPower12Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3499)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularAxialLens::GetFrontRPower14Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontRPower14Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3500)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularAxialLens::GetFrontRPower16Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontRPower16Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3501)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularAxialLens::GetRearRPower2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearRPower2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3502)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularAxialLens::GetRearRPower4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearRPower4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3503)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularAxialLens::GetRearRPower6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearRPower6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3504)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularAxialLens::GetRearRPower8Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearRPower8Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3505)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularAxialLens::GetRearRPower10Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearRPower10Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3506)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularAxialLens::GetRearRPower12Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearRPower12Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3507)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularAxialLens::GetRearRPower14Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearRPower14Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3508)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularAxialLens::GetRearRPower16Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearRPower16Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3509)
inline double ZOSAPI_Interfaces::IObjectAnnularAxialLens::GetFrontRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3510)
inline void ZOSAPI_Interfaces::IObjectAnnularAxialLens::PutFrontRadius ( double pRetVal ) {
    HRESULT _hr = put_FrontRadius(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3511)
inline double ZOSAPI_Interfaces::IObjectAnnularAxialLens::GetFrontConic ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontConic(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3512)
inline void ZOSAPI_Interfaces::IObjectAnnularAxialLens::PutFrontConic ( double pRetVal ) {
    HRESULT _hr = put_FrontConic(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3513)
inline double ZOSAPI_Interfaces::IObjectAnnularAxialLens::GetRearRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_RearRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3514)
inline void ZOSAPI_Interfaces::IObjectAnnularAxialLens::PutRearRadius ( double pRetVal ) {
    HRESULT _hr = put_RearRadius(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3515)
inline double ZOSAPI_Interfaces::IObjectAnnularAxialLens::GetRearConic ( ) {
    double _result = 0;
    HRESULT _hr = get_RearConic(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3516)
inline void ZOSAPI_Interfaces::IObjectAnnularAxialLens::PutRearConic ( double pRetVal ) {
    HRESULT _hr = put_RearConic(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3517)
inline double ZOSAPI_Interfaces::IObjectAnnularAxialLens::GetThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_Thickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3518)
inline void ZOSAPI_Interfaces::IObjectAnnularAxialLens::PutThickness ( double pRetVal ) {
    HRESULT _hr = put_Thickness(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3519)
inline double ZOSAPI_Interfaces::IObjectAnnularAxialLens::GetAperture ( ) {
    double _result = 0;
    HRESULT _hr = get_Aperture(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3520)
inline void ZOSAPI_Interfaces::IObjectAnnularAxialLens::PutAperture ( double pRetVal ) {
    HRESULT _hr = put_Aperture(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3521)
inline double ZOSAPI_Interfaces::IObjectAnnularAxialLens::GetRevolution ( ) {
    double _result = 0;
    HRESULT _hr = get_Revolution(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3522)
inline void ZOSAPI_Interfaces::IObjectAnnularAxialLens::PutRevolution ( double pRetVal ) {
    HRESULT _hr = put_Revolution(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3523)
inline double ZOSAPI_Interfaces::IObjectAnnularAxialLens::GetDecenter ( ) {
    double _result = 0;
    HRESULT _hr = get_Decenter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3524)
inline void ZOSAPI_Interfaces::IObjectAnnularAxialLens::PutDecenter ( double pRetVal ) {
    HRESULT _hr = put_Decenter(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3525)
inline double ZOSAPI_Interfaces::IObjectAnnularAxialLens::GetFrontRPower2 ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontRPower2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3526)
inline void ZOSAPI_Interfaces::IObjectAnnularAxialLens::PutFrontRPower2 ( double pRetVal ) {
    HRESULT _hr = put_FrontRPower2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3527)
inline double ZOSAPI_Interfaces::IObjectAnnularAxialLens::GetFrontRPower4 ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontRPower4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3528)
inline void ZOSAPI_Interfaces::IObjectAnnularAxialLens::PutFrontRPower4 ( double pRetVal ) {
    HRESULT _hr = put_FrontRPower4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3529)
inline double ZOSAPI_Interfaces::IObjectAnnularAxialLens::GetFrontRPower6 ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontRPower6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3530)
inline void ZOSAPI_Interfaces::IObjectAnnularAxialLens::PutFrontRPower6 ( double pRetVal ) {
    HRESULT _hr = put_FrontRPower6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3531)
inline double ZOSAPI_Interfaces::IObjectAnnularAxialLens::GetFrontRPower8 ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontRPower8(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3532)
inline void ZOSAPI_Interfaces::IObjectAnnularAxialLens::PutFrontRPower8 ( double pRetVal ) {
    HRESULT _hr = put_FrontRPower8(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3533)
inline double ZOSAPI_Interfaces::IObjectAnnularAxialLens::GetFrontRPower10 ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontRPower10(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3534)
inline void ZOSAPI_Interfaces::IObjectAnnularAxialLens::PutFrontRPower10 ( double pRetVal ) {
    HRESULT _hr = put_FrontRPower10(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3535)
inline double ZOSAPI_Interfaces::IObjectAnnularAxialLens::GetFrontRPower12 ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontRPower12(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3536)
inline void ZOSAPI_Interfaces::IObjectAnnularAxialLens::PutFrontRPower12 ( double pRetVal ) {
    HRESULT _hr = put_FrontRPower12(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3537)
inline double ZOSAPI_Interfaces::IObjectAnnularAxialLens::GetFrontRPower14 ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontRPower14(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3538)
inline void ZOSAPI_Interfaces::IObjectAnnularAxialLens::PutFrontRPower14 ( double pRetVal ) {
    HRESULT _hr = put_FrontRPower14(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3539)
inline double ZOSAPI_Interfaces::IObjectAnnularAxialLens::GetFrontRPower16 ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontRPower16(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3540)
inline void ZOSAPI_Interfaces::IObjectAnnularAxialLens::PutFrontRPower16 ( double pRetVal ) {
    HRESULT _hr = put_FrontRPower16(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3541)
inline double ZOSAPI_Interfaces::IObjectAnnularAxialLens::GetRearRPower2 ( ) {
    double _result = 0;
    HRESULT _hr = get_RearRPower2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3542)
inline void ZOSAPI_Interfaces::IObjectAnnularAxialLens::PutRearRPower2 ( double pRetVal ) {
    HRESULT _hr = put_RearRPower2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3543)
inline double ZOSAPI_Interfaces::IObjectAnnularAxialLens::GetRearRPower4 ( ) {
    double _result = 0;
    HRESULT _hr = get_RearRPower4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3544)
inline void ZOSAPI_Interfaces::IObjectAnnularAxialLens::PutRearRPower4 ( double pRetVal ) {
    HRESULT _hr = put_RearRPower4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3545)
inline double ZOSAPI_Interfaces::IObjectAnnularAxialLens::GetRearRPower6 ( ) {
    double _result = 0;
    HRESULT _hr = get_RearRPower6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3546)
inline void ZOSAPI_Interfaces::IObjectAnnularAxialLens::PutRearRPower6 ( double pRetVal ) {
    HRESULT _hr = put_RearRPower6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3547)
inline double ZOSAPI_Interfaces::IObjectAnnularAxialLens::GetRearRPower8 ( ) {
    double _result = 0;
    HRESULT _hr = get_RearRPower8(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3548)
inline void ZOSAPI_Interfaces::IObjectAnnularAxialLens::PutRearRPower8 ( double pRetVal ) {
    HRESULT _hr = put_RearRPower8(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3549)
inline double ZOSAPI_Interfaces::IObjectAnnularAxialLens::GetRearRPower10 ( ) {
    double _result = 0;
    HRESULT _hr = get_RearRPower10(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3550)
inline void ZOSAPI_Interfaces::IObjectAnnularAxialLens::PutRearRPower10 ( double pRetVal ) {
    HRESULT _hr = put_RearRPower10(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3551)
inline double ZOSAPI_Interfaces::IObjectAnnularAxialLens::GetRearRPower12 ( ) {
    double _result = 0;
    HRESULT _hr = get_RearRPower12(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3552)
inline void ZOSAPI_Interfaces::IObjectAnnularAxialLens::PutRearRPower12 ( double pRetVal ) {
    HRESULT _hr = put_RearRPower12(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3553)
inline double ZOSAPI_Interfaces::IObjectAnnularAxialLens::GetRearRPower14 ( ) {
    double _result = 0;
    HRESULT _hr = get_RearRPower14(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3554)
inline void ZOSAPI_Interfaces::IObjectAnnularAxialLens::PutRearRPower14 ( double pRetVal ) {
    HRESULT _hr = put_RearRPower14(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3555)
inline double ZOSAPI_Interfaces::IObjectAnnularAxialLens::GetRearRPower16 ( ) {
    double _result = 0;
    HRESULT _hr = get_RearRPower16(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3556)
inline void ZOSAPI_Interfaces::IObjectAnnularAxialLens::PutRearRPower16 ( double pRetVal ) {
    HRESULT _hr = put_RearRPower16(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectAnnularVolume wrapper method implementations
//

#pragma implementation_key(3557)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularVolume::GetFrontXMinCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontXMinCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3558)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularVolume::GetFrontYMinCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontYMinCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3559)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularVolume::GetRearXMinCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearXMinCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3560)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularVolume::GetRearYMinCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearYMinCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3561)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularVolume::GetFrontXMaxCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontXMaxCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3562)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularVolume::GetFrontYMaxCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontYMaxCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3563)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularVolume::GetRearXMaxCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearXMaxCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3564)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularVolume::GetRearYMaxCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearYMaxCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3565)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularVolume::GetZLengthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ZLengthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3566)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularVolume::GetFrontXAngleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontXAngleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3567)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularVolume::GetFrontYAngleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontYAngleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3568)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularVolume::GetBackXAngleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_BackXAngleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3569)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnularVolume::GetBackYAngleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_BackYAngleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3570)
inline double ZOSAPI_Interfaces::IObjectAnnularVolume::GetFrontXMin ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontXMin(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3571)
inline void ZOSAPI_Interfaces::IObjectAnnularVolume::PutFrontXMin ( double pRetVal ) {
    HRESULT _hr = put_FrontXMin(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3572)
inline double ZOSAPI_Interfaces::IObjectAnnularVolume::GetFrontYMin ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontYMin(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3573)
inline void ZOSAPI_Interfaces::IObjectAnnularVolume::PutFrontYMin ( double pRetVal ) {
    HRESULT _hr = put_FrontYMin(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3574)
inline double ZOSAPI_Interfaces::IObjectAnnularVolume::GetRearXMin ( ) {
    double _result = 0;
    HRESULT _hr = get_RearXMin(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3575)
inline void ZOSAPI_Interfaces::IObjectAnnularVolume::PutRearXMin ( double pRetVal ) {
    HRESULT _hr = put_RearXMin(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3576)
inline double ZOSAPI_Interfaces::IObjectAnnularVolume::GetRearYMin ( ) {
    double _result = 0;
    HRESULT _hr = get_RearYMin(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3577)
inline void ZOSAPI_Interfaces::IObjectAnnularVolume::PutRearYMin ( double pRetVal ) {
    HRESULT _hr = put_RearYMin(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3578)
inline double ZOSAPI_Interfaces::IObjectAnnularVolume::GetFrontXMax ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontXMax(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3579)
inline void ZOSAPI_Interfaces::IObjectAnnularVolume::PutFrontXMax ( double pRetVal ) {
    HRESULT _hr = put_FrontXMax(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3580)
inline double ZOSAPI_Interfaces::IObjectAnnularVolume::GetFrontYMax ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontYMax(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3581)
inline void ZOSAPI_Interfaces::IObjectAnnularVolume::PutFrontYMax ( double pRetVal ) {
    HRESULT _hr = put_FrontYMax(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3582)
inline double ZOSAPI_Interfaces::IObjectAnnularVolume::GetRearXMax ( ) {
    double _result = 0;
    HRESULT _hr = get_RearXMax(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3583)
inline void ZOSAPI_Interfaces::IObjectAnnularVolume::PutRearXMax ( double pRetVal ) {
    HRESULT _hr = put_RearXMax(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3584)
inline double ZOSAPI_Interfaces::IObjectAnnularVolume::GetRearYMax ( ) {
    double _result = 0;
    HRESULT _hr = get_RearYMax(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3585)
inline void ZOSAPI_Interfaces::IObjectAnnularVolume::PutRearYMax ( double pRetVal ) {
    HRESULT _hr = put_RearYMax(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3586)
inline double ZOSAPI_Interfaces::IObjectAnnularVolume::GetZLength ( ) {
    double _result = 0;
    HRESULT _hr = get_ZLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3587)
inline void ZOSAPI_Interfaces::IObjectAnnularVolume::PutZLength ( double pRetVal ) {
    HRESULT _hr = put_ZLength(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3588)
inline double ZOSAPI_Interfaces::IObjectAnnularVolume::GetFrontXAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontXAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3589)
inline void ZOSAPI_Interfaces::IObjectAnnularVolume::PutFrontXAngle ( double pRetVal ) {
    HRESULT _hr = put_FrontXAngle(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3590)
inline double ZOSAPI_Interfaces::IObjectAnnularVolume::GetFrontYAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontYAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3591)
inline void ZOSAPI_Interfaces::IObjectAnnularVolume::PutFrontYAngle ( double pRetVal ) {
    HRESULT _hr = put_FrontYAngle(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3592)
inline double ZOSAPI_Interfaces::IObjectAnnularVolume::GetBackXAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_BackXAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3593)
inline void ZOSAPI_Interfaces::IObjectAnnularVolume::PutBackXAngle ( double pRetVal ) {
    HRESULT _hr = put_BackXAngle(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3594)
inline double ZOSAPI_Interfaces::IObjectAnnularVolume::GetBackYAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_BackYAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3595)
inline void ZOSAPI_Interfaces::IObjectAnnularVolume::PutBackYAngle ( double pRetVal ) {
    HRESULT _hr = put_BackYAngle(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectAnnulus wrapper method implementations
//

#pragma implementation_key(3596)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnulus::GetMaxXHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_MaxXHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3597)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnulus::GetMaxYHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_MaxYHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3598)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnulus::GetMinXHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_MinXHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3599)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAnnulus::GetMinYHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_MinYHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3600)
inline double ZOSAPI_Interfaces::IObjectAnnulus::GetMaxXHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_MaxXHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3601)
inline void ZOSAPI_Interfaces::IObjectAnnulus::PutMaxXHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_MaxXHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3602)
inline double ZOSAPI_Interfaces::IObjectAnnulus::GetMaxYHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_MaxYHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3603)
inline void ZOSAPI_Interfaces::IObjectAnnulus::PutMaxYHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_MaxYHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3604)
inline double ZOSAPI_Interfaces::IObjectAnnulus::GetMinXHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_MinXHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3605)
inline void ZOSAPI_Interfaces::IObjectAnnulus::PutMinXHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_MinXHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3606)
inline double ZOSAPI_Interfaces::IObjectAnnulus::GetMinYHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_MinYHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3607)
inline void ZOSAPI_Interfaces::IObjectAnnulus::PutMinYHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_MinYHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectArray wrapper method implementations
//

#pragma implementation_key(3608)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectArray::GetParentObjectNumberCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ParentObjectNumberCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3609)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectArray::GetNumberXCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberXCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3610)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectArray::GetNumberYCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberYCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3611)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectArray::GetNumberZCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberZCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3612)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectArray::GetDelta1XCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Delta1XCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3613)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectArray::GetDelta1YCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Delta1YCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3614)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectArray::GetDelta1ZCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Delta1ZCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3615)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectArray::GetXminusXCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XminusXCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3616)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectArray::GetXminusYCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XminusYCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3617)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectArray::GetXminusZCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XminusZCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3618)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectArray::GetYminusXCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_YminusXCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3619)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectArray::GetYminusYCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_YminusYCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3620)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectArray::GetYminusZCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_YminusZCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3621)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectArray::GetZminusXCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ZminusXCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3622)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectArray::GetZminusYCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ZminusYCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3623)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectArray::GetZminusZCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ZminusZCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3624)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectArray::GetTiltXCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_TiltXCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3625)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectArray::GetTiltYCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_TiltYCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3626)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectArray::GetTiltZCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_TiltZCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3627)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectArray::GetDrawLimitCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_DrawLimitCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3628)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectArray::GetDrawBoundaryCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_DrawBoundaryCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3629)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectArray::GetDelta2XCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Delta2XCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3630)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectArray::GetDelta2YCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Delta2YCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3631)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectArray::GetDelta2ZCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Delta2ZCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3632)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectArray::GetDelta3XCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Delta3XCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3633)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectArray::GetDelta3YCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Delta3YCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3634)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectArray::GetDelta3ZCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Delta3ZCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3635)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectArray::GetDelta4XCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Delta4XCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3636)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectArray::GetDelta4YCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Delta4YCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3637)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectArray::GetDelta4ZCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Delta4ZCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3638)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectArray::GetMaximumXCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_MaximumXCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3639)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectArray::GetMaximumYCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_MaximumYCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3640)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectArray::GetMaximumZCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_MaximumZCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3641)
inline long ZOSAPI_Interfaces::IObjectArray::GetParentObjectNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_ParentObjectNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3642)
inline void ZOSAPI_Interfaces::IObjectArray::PutParentObjectNumber ( long pRetVal ) {
    HRESULT _hr = put_ParentObjectNumber(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3643)
inline long ZOSAPI_Interfaces::IObjectArray::GetNumberX ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3644)
inline void ZOSAPI_Interfaces::IObjectArray::PutNumberX ( long pRetVal ) {
    HRESULT _hr = put_NumberX(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3645)
inline long ZOSAPI_Interfaces::IObjectArray::GetNumberY ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3646)
inline void ZOSAPI_Interfaces::IObjectArray::PutNumberY ( long pRetVal ) {
    HRESULT _hr = put_NumberY(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3647)
inline long ZOSAPI_Interfaces::IObjectArray::GetNumberZ ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3648)
inline void ZOSAPI_Interfaces::IObjectArray::PutNumberZ ( long pRetVal ) {
    HRESULT _hr = put_NumberZ(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3649)
inline double ZOSAPI_Interfaces::IObjectArray::GetDelta1X ( ) {
    double _result = 0;
    HRESULT _hr = get_Delta1X(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3650)
inline void ZOSAPI_Interfaces::IObjectArray::PutDelta1X ( double pRetVal ) {
    HRESULT _hr = put_Delta1X(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3651)
inline double ZOSAPI_Interfaces::IObjectArray::GetDelta1Y ( ) {
    double _result = 0;
    HRESULT _hr = get_Delta1Y(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3652)
inline void ZOSAPI_Interfaces::IObjectArray::PutDelta1Y ( double pRetVal ) {
    HRESULT _hr = put_Delta1Y(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3653)
inline double ZOSAPI_Interfaces::IObjectArray::GetDelta1Z ( ) {
    double _result = 0;
    HRESULT _hr = get_Delta1Z(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3654)
inline void ZOSAPI_Interfaces::IObjectArray::PutDelta1Z ( double pRetVal ) {
    HRESULT _hr = put_Delta1Z(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3655)
inline double ZOSAPI_Interfaces::IObjectArray::GetXminusX ( ) {
    double _result = 0;
    HRESULT _hr = get_XminusX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3656)
inline void ZOSAPI_Interfaces::IObjectArray::PutXminusX ( double pRetVal ) {
    HRESULT _hr = put_XminusX(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3657)
inline double ZOSAPI_Interfaces::IObjectArray::GetXminusY ( ) {
    double _result = 0;
    HRESULT _hr = get_XminusY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3658)
inline void ZOSAPI_Interfaces::IObjectArray::PutXminusY ( double pRetVal ) {
    HRESULT _hr = put_XminusY(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3659)
inline double ZOSAPI_Interfaces::IObjectArray::GetXminusZ ( ) {
    double _result = 0;
    HRESULT _hr = get_XminusZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3660)
inline void ZOSAPI_Interfaces::IObjectArray::PutXminusZ ( double pRetVal ) {
    HRESULT _hr = put_XminusZ(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3661)
inline double ZOSAPI_Interfaces::IObjectArray::GetYminusX ( ) {
    double _result = 0;
    HRESULT _hr = get_YminusX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3662)
inline void ZOSAPI_Interfaces::IObjectArray::PutYminusX ( double pRetVal ) {
    HRESULT _hr = put_YminusX(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3663)
inline double ZOSAPI_Interfaces::IObjectArray::GetYminusY ( ) {
    double _result = 0;
    HRESULT _hr = get_YminusY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3664)
inline void ZOSAPI_Interfaces::IObjectArray::PutYminusY ( double pRetVal ) {
    HRESULT _hr = put_YminusY(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3665)
inline double ZOSAPI_Interfaces::IObjectArray::GetYminusZ ( ) {
    double _result = 0;
    HRESULT _hr = get_YminusZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3666)
inline void ZOSAPI_Interfaces::IObjectArray::PutYminusZ ( double pRetVal ) {
    HRESULT _hr = put_YminusZ(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3667)
inline double ZOSAPI_Interfaces::IObjectArray::GetZminusX ( ) {
    double _result = 0;
    HRESULT _hr = get_ZminusX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3668)
inline void ZOSAPI_Interfaces::IObjectArray::PutZminusX ( double pRetVal ) {
    HRESULT _hr = put_ZminusX(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3669)
inline double ZOSAPI_Interfaces::IObjectArray::GetZminusY ( ) {
    double _result = 0;
    HRESULT _hr = get_ZminusY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3670)
inline void ZOSAPI_Interfaces::IObjectArray::PutZminusY ( double pRetVal ) {
    HRESULT _hr = put_ZminusY(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3671)
inline double ZOSAPI_Interfaces::IObjectArray::GetZminusZ ( ) {
    double _result = 0;
    HRESULT _hr = get_ZminusZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3672)
inline void ZOSAPI_Interfaces::IObjectArray::PutZminusZ ( double pRetVal ) {
    HRESULT _hr = put_ZminusZ(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3673)
inline double ZOSAPI_Interfaces::IObjectArray::GetTiltX ( ) {
    double _result = 0;
    HRESULT _hr = get_TiltX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3674)
inline void ZOSAPI_Interfaces::IObjectArray::PutTiltX ( double pRetVal ) {
    HRESULT _hr = put_TiltX(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3675)
inline double ZOSAPI_Interfaces::IObjectArray::GetTiltY ( ) {
    double _result = 0;
    HRESULT _hr = get_TiltY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3676)
inline void ZOSAPI_Interfaces::IObjectArray::PutTiltY ( double pRetVal ) {
    HRESULT _hr = put_TiltY(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3677)
inline double ZOSAPI_Interfaces::IObjectArray::GetTiltZ ( ) {
    double _result = 0;
    HRESULT _hr = get_TiltZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3678)
inline void ZOSAPI_Interfaces::IObjectArray::PutTiltZ ( double pRetVal ) {
    HRESULT _hr = put_TiltZ(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3679)
inline long ZOSAPI_Interfaces::IObjectArray::GetDrawLimit ( ) {
    long _result = 0;
    HRESULT _hr = get_DrawLimit(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3680)
inline void ZOSAPI_Interfaces::IObjectArray::PutDrawLimit ( long pRetVal ) {
    HRESULT _hr = put_DrawLimit(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3681)
inline long ZOSAPI_Interfaces::IObjectArray::GetDrawBoundary ( ) {
    long _result = 0;
    HRESULT _hr = get_DrawBoundary(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3682)
inline void ZOSAPI_Interfaces::IObjectArray::PutDrawBoundary ( long pRetVal ) {
    HRESULT _hr = put_DrawBoundary(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3683)
inline double ZOSAPI_Interfaces::IObjectArray::GetDelta2X ( ) {
    double _result = 0;
    HRESULT _hr = get_Delta2X(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3684)
inline void ZOSAPI_Interfaces::IObjectArray::PutDelta2X ( double pRetVal ) {
    HRESULT _hr = put_Delta2X(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3685)
inline double ZOSAPI_Interfaces::IObjectArray::GetDelta2Y ( ) {
    double _result = 0;
    HRESULT _hr = get_Delta2Y(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3686)
inline void ZOSAPI_Interfaces::IObjectArray::PutDelta2Y ( double pRetVal ) {
    HRESULT _hr = put_Delta2Y(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3687)
inline double ZOSAPI_Interfaces::IObjectArray::GetDelta2Z ( ) {
    double _result = 0;
    HRESULT _hr = get_Delta2Z(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3688)
inline void ZOSAPI_Interfaces::IObjectArray::PutDelta2Z ( double pRetVal ) {
    HRESULT _hr = put_Delta2Z(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3689)
inline double ZOSAPI_Interfaces::IObjectArray::GetDelta3X ( ) {
    double _result = 0;
    HRESULT _hr = get_Delta3X(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3690)
inline void ZOSAPI_Interfaces::IObjectArray::PutDelta3X ( double pRetVal ) {
    HRESULT _hr = put_Delta3X(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3691)
inline double ZOSAPI_Interfaces::IObjectArray::GetDelta3Y ( ) {
    double _result = 0;
    HRESULT _hr = get_Delta3Y(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3692)
inline void ZOSAPI_Interfaces::IObjectArray::PutDelta3Y ( double pRetVal ) {
    HRESULT _hr = put_Delta3Y(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3693)
inline double ZOSAPI_Interfaces::IObjectArray::GetDelta3Z ( ) {
    double _result = 0;
    HRESULT _hr = get_Delta3Z(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3694)
inline void ZOSAPI_Interfaces::IObjectArray::PutDelta3Z ( double pRetVal ) {
    HRESULT _hr = put_Delta3Z(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3695)
inline double ZOSAPI_Interfaces::IObjectArray::GetDelta4X ( ) {
    double _result = 0;
    HRESULT _hr = get_Delta4X(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3696)
inline void ZOSAPI_Interfaces::IObjectArray::PutDelta4X ( double pRetVal ) {
    HRESULT _hr = put_Delta4X(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3697)
inline double ZOSAPI_Interfaces::IObjectArray::GetDelta4Y ( ) {
    double _result = 0;
    HRESULT _hr = get_Delta4Y(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3698)
inline void ZOSAPI_Interfaces::IObjectArray::PutDelta4Y ( double pRetVal ) {
    HRESULT _hr = put_Delta4Y(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3699)
inline double ZOSAPI_Interfaces::IObjectArray::GetDelta4Z ( ) {
    double _result = 0;
    HRESULT _hr = get_Delta4Z(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3700)
inline void ZOSAPI_Interfaces::IObjectArray::PutDelta4Z ( double pRetVal ) {
    HRESULT _hr = put_Delta4Z(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3701)
inline double ZOSAPI_Interfaces::IObjectArray::GetMaximumX ( ) {
    double _result = 0;
    HRESULT _hr = get_MaximumX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3702)
inline void ZOSAPI_Interfaces::IObjectArray::PutMaximumX ( double pRetVal ) {
    HRESULT _hr = put_MaximumX(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3703)
inline double ZOSAPI_Interfaces::IObjectArray::GetMaximumY ( ) {
    double _result = 0;
    HRESULT _hr = get_MaximumY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3704)
inline void ZOSAPI_Interfaces::IObjectArray::PutMaximumY ( double pRetVal ) {
    HRESULT _hr = put_MaximumY(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3705)
inline double ZOSAPI_Interfaces::IObjectArray::GetMaximumZ ( ) {
    double _result = 0;
    HRESULT _hr = get_MaximumZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3706)
inline void ZOSAPI_Interfaces::IObjectArray::PutMaximumZ ( double pRetVal ) {
    HRESULT _hr = put_MaximumZ(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectArrayRing wrapper method implementations
//

#pragma implementation_key(3707)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectArrayRing::GetParentObjectNumberCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ParentObjectNumberCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3708)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectArrayRing::GetModeCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ModeCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3709)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectArrayRing::GetNumberOfElementsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberOfElementsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3710)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectArrayRing::GetRadiusACell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RadiusACell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3711)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectArrayRing::GetAlphaCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_AlphaCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3712)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectArrayRing::GetBetaCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_BetaCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3713)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectArrayRing::GetGammaCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_GammaCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3714)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectArrayRing::GetDeltaCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_DeltaCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3715)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectArrayRing::GetEpsilonCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_EpsilonCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3716)
inline long ZOSAPI_Interfaces::IObjectArrayRing::GetParentObjectNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_ParentObjectNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3717)
inline void ZOSAPI_Interfaces::IObjectArrayRing::PutParentObjectNumber ( long pRetVal ) {
    HRESULT _hr = put_ParentObjectNumber(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3718)
inline long ZOSAPI_Interfaces::IObjectArrayRing::GetMode ( ) {
    long _result = 0;
    HRESULT _hr = get_Mode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3719)
inline void ZOSAPI_Interfaces::IObjectArrayRing::PutMode ( long pRetVal ) {
    HRESULT _hr = put_Mode(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3720)
inline long ZOSAPI_Interfaces::IObjectArrayRing::GetNumberOfElements ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfElements(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3721)
inline void ZOSAPI_Interfaces::IObjectArrayRing::PutNumberOfElements ( long pRetVal ) {
    HRESULT _hr = put_NumberOfElements(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3722)
inline double ZOSAPI_Interfaces::IObjectArrayRing::GetRadiusA ( ) {
    double _result = 0;
    HRESULT _hr = get_RadiusA(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3723)
inline void ZOSAPI_Interfaces::IObjectArrayRing::PutRadiusA ( double pRetVal ) {
    HRESULT _hr = put_RadiusA(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3724)
inline double ZOSAPI_Interfaces::IObjectArrayRing::GetAlpha ( ) {
    double _result = 0;
    HRESULT _hr = get_Alpha(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3725)
inline void ZOSAPI_Interfaces::IObjectArrayRing::PutAlpha ( double pRetVal ) {
    HRESULT _hr = put_Alpha(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3726)
inline double ZOSAPI_Interfaces::IObjectArrayRing::GetBeta ( ) {
    double _result = 0;
    HRESULT _hr = get_Beta(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3727)
inline void ZOSAPI_Interfaces::IObjectArrayRing::PutBeta ( double pRetVal ) {
    HRESULT _hr = put_Beta(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3728)
inline double ZOSAPI_Interfaces::IObjectArrayRing::GetGamma ( ) {
    double _result = 0;
    HRESULT _hr = get_Gamma(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3729)
inline void ZOSAPI_Interfaces::IObjectArrayRing::PutGamma ( double pRetVal ) {
    HRESULT _hr = put_Gamma(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3730)
inline double ZOSAPI_Interfaces::IObjectArrayRing::GetDelta ( ) {
    double _result = 0;
    HRESULT _hr = get_Delta(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3731)
inline void ZOSAPI_Interfaces::IObjectArrayRing::PutDelta ( double pRetVal ) {
    HRESULT _hr = put_Delta(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3732)
inline double ZOSAPI_Interfaces::IObjectArrayRing::GetEpsilon ( ) {
    double _result = 0;
    HRESULT _hr = get_Epsilon(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3733)
inline void ZOSAPI_Interfaces::IObjectArrayRing::PutEpsilon ( double pRetVal ) {
    HRESULT _hr = put_Epsilon(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectAsphericSurface wrapper method implementations
//

#pragma implementation_key(3734)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAsphericSurface::GetRadiusCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RadiusCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3735)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAsphericSurface::GetConicCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ConicCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3736)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAsphericSurface::GetMaxApertureCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_MaxApertureCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3737)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAsphericSurface::GetMinApertureCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_MinApertureCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3738)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAsphericSurface::GetNumberOfTermsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberOfTermsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3739)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAsphericSurface::RPowerICell ( long i ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_RPowerICell(i, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3740)
inline double ZOSAPI_Interfaces::IObjectAsphericSurface::GetRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_Radius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3741)
inline void ZOSAPI_Interfaces::IObjectAsphericSurface::PutRadius ( double pRetVal ) {
    HRESULT _hr = put_Radius(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3742)
inline double ZOSAPI_Interfaces::IObjectAsphericSurface::GetConic ( ) {
    double _result = 0;
    HRESULT _hr = get_Conic(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3743)
inline void ZOSAPI_Interfaces::IObjectAsphericSurface::PutConic ( double pRetVal ) {
    HRESULT _hr = put_Conic(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3744)
inline double ZOSAPI_Interfaces::IObjectAsphericSurface::GetMaxAperture ( ) {
    double _result = 0;
    HRESULT _hr = get_MaxAperture(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3745)
inline void ZOSAPI_Interfaces::IObjectAsphericSurface::PutMaxAperture ( double pRetVal ) {
    HRESULT _hr = put_MaxAperture(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3746)
inline double ZOSAPI_Interfaces::IObjectAsphericSurface::GetMinAperture ( ) {
    double _result = 0;
    HRESULT _hr = get_MinAperture(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3747)
inline void ZOSAPI_Interfaces::IObjectAsphericSurface::PutMinAperture ( double pRetVal ) {
    HRESULT _hr = put_MinAperture(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3748)
inline long ZOSAPI_Interfaces::IObjectAsphericSurface::GetNumberOfTerms ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfTerms(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3749)
inline void ZOSAPI_Interfaces::IObjectAsphericSurface::PutNumberOfTerms ( long pRetVal ) {
    HRESULT _hr = put_NumberOfTerms(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3750)
inline double ZOSAPI_Interfaces::IObjectAsphericSurface::GetRPowerI ( long i ) {
    double _result = 0;
    HRESULT _hr = raw_GetRPowerI(i, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3751)
inline HRESULT ZOSAPI_Interfaces::IObjectAsphericSurface::SetRPowerI ( long i, double v ) {
    HRESULT _hr = raw_SetRPowerI(i, v);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IObjectAsphericSurface2 wrapper method implementations
//

#pragma implementation_key(3752)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAsphericSurface2::GetRadiusCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RadiusCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3753)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAsphericSurface2::GetConicCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ConicCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3754)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAsphericSurface2::GetMaxXCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_MaxXCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3755)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAsphericSurface2::GetMaxYCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_MaxYCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3756)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAsphericSurface2::GetMinXCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_MinXCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3757)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAsphericSurface2::GetMinYCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_MinYCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3758)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAsphericSurface2::GetDecenterXCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_DecenterXCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3759)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAsphericSurface2::GetDecenterYCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_DecenterYCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3760)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAsphericSurface2::GetIsRectangleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_IsRectangleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3761)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAsphericSurface2::GetNumberOfTermsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberOfTermsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3762)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAsphericSurface2::RPowerICell ( long i ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_RPowerICell(i, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3763)
inline double ZOSAPI_Interfaces::IObjectAsphericSurface2::GetRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_Radius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3764)
inline void ZOSAPI_Interfaces::IObjectAsphericSurface2::PutRadius ( double pRetVal ) {
    HRESULT _hr = put_Radius(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3765)
inline double ZOSAPI_Interfaces::IObjectAsphericSurface2::GetConic ( ) {
    double _result = 0;
    HRESULT _hr = get_Conic(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3766)
inline void ZOSAPI_Interfaces::IObjectAsphericSurface2::PutConic ( double pRetVal ) {
    HRESULT _hr = put_Conic(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3767)
inline double ZOSAPI_Interfaces::IObjectAsphericSurface2::GetMaxX ( ) {
    double _result = 0;
    HRESULT _hr = get_MaxX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3768)
inline void ZOSAPI_Interfaces::IObjectAsphericSurface2::PutMaxX ( double pRetVal ) {
    HRESULT _hr = put_MaxX(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3769)
inline double ZOSAPI_Interfaces::IObjectAsphericSurface2::GetMaxY ( ) {
    double _result = 0;
    HRESULT _hr = get_MaxY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3770)
inline void ZOSAPI_Interfaces::IObjectAsphericSurface2::PutMaxY ( double pRetVal ) {
    HRESULT _hr = put_MaxY(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3771)
inline double ZOSAPI_Interfaces::IObjectAsphericSurface2::GetMinX ( ) {
    double _result = 0;
    HRESULT _hr = get_MinX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3772)
inline void ZOSAPI_Interfaces::IObjectAsphericSurface2::PutMinX ( double pRetVal ) {
    HRESULT _hr = put_MinX(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3773)
inline double ZOSAPI_Interfaces::IObjectAsphericSurface2::GetMinY ( ) {
    double _result = 0;
    HRESULT _hr = get_MinY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3774)
inline void ZOSAPI_Interfaces::IObjectAsphericSurface2::PutMinY ( double pRetVal ) {
    HRESULT _hr = put_MinY(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3775)
inline double ZOSAPI_Interfaces::IObjectAsphericSurface2::GetDecenterX ( ) {
    double _result = 0;
    HRESULT _hr = get_DecenterX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3776)
inline void ZOSAPI_Interfaces::IObjectAsphericSurface2::PutDecenterX ( double pRetVal ) {
    HRESULT _hr = put_DecenterX(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3777)
inline double ZOSAPI_Interfaces::IObjectAsphericSurface2::GetDecenterY ( ) {
    double _result = 0;
    HRESULT _hr = get_DecenterY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3778)
inline void ZOSAPI_Interfaces::IObjectAsphericSurface2::PutDecenterY ( double pRetVal ) {
    HRESULT _hr = put_DecenterY(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3779)
inline VARIANT_BOOL ZOSAPI_Interfaces::IObjectAsphericSurface2::GetIsRectangle ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsRectangle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3780)
inline void ZOSAPI_Interfaces::IObjectAsphericSurface2::PutIsRectangle ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsRectangle(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3781)
inline long ZOSAPI_Interfaces::IObjectAsphericSurface2::GetNumberOfTerms ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfTerms(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3782)
inline void ZOSAPI_Interfaces::IObjectAsphericSurface2::PutNumberOfTerms ( long pRetVal ) {
    HRESULT _hr = put_NumberOfTerms(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3783)
inline double ZOSAPI_Interfaces::IObjectAsphericSurface2::GetRPowerI ( long i ) {
    double _result = 0;
    HRESULT _hr = raw_GetRPowerI(i, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3784)
inline HRESULT ZOSAPI_Interfaces::IObjectAsphericSurface2::SetRPowerI ( long i, double v ) {
    HRESULT _hr = raw_SetRPowerI(i, v);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IObjectAxiconSurface wrapper method implementations
//

#pragma implementation_key(3785)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAxiconSurface::GetLengthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_LengthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3786)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAxiconSurface::GetCzCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CzCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3787)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectAxiconSurface::GetCyCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CyCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3788)
inline double ZOSAPI_Interfaces::IObjectAxiconSurface::GetLength ( ) {
    double _result = 0;
    HRESULT _hr = get_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3789)
inline void ZOSAPI_Interfaces::IObjectAxiconSurface::PutLength ( double pRetVal ) {
    HRESULT _hr = put_Length(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3790)
inline double ZOSAPI_Interfaces::IObjectAxiconSurface::GetCz ( ) {
    double _result = 0;
    HRESULT _hr = get_Cz(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3791)
inline void ZOSAPI_Interfaces::IObjectAxiconSurface::PutCz ( double pRetVal ) {
    HRESULT _hr = put_Cz(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3792)
inline double ZOSAPI_Interfaces::IObjectAxiconSurface::GetCy ( ) {
    double _result = 0;
    HRESULT _hr = get_Cy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3793)
inline void ZOSAPI_Interfaces::IObjectAxiconSurface::PutCy ( double pRetVal ) {
    HRESULT _hr = put_Cy(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectBiconicLens wrapper method implementations
//

#pragma implementation_key(3794)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBiconicLens::GetRadialHeightCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RadialHeightCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3795)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBiconicLens::GetXHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3796)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBiconicLens::GetThicknessCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ThicknessCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3797)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBiconicLens::GetRX1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RX1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3798)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBiconicLens::GetRY1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RY1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3799)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBiconicLens::GetKX1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_KX1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3800)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBiconicLens::GetKY1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_KY1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3801)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBiconicLens::GetRX2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RX2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3802)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBiconicLens::GetRY2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RY2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3803)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBiconicLens::GetKX2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_KX2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3804)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBiconicLens::GetKY2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_KY2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3805)
inline double ZOSAPI_Interfaces::IObjectBiconicLens::GetRadialHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_RadialHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3806)
inline void ZOSAPI_Interfaces::IObjectBiconicLens::PutRadialHeight ( double pRetVal ) {
    HRESULT _hr = put_RadialHeight(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3807)
inline double ZOSAPI_Interfaces::IObjectBiconicLens::GetXHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_XHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3808)
inline void ZOSAPI_Interfaces::IObjectBiconicLens::PutXHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_XHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3809)
inline double ZOSAPI_Interfaces::IObjectBiconicLens::GetThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_Thickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3810)
inline void ZOSAPI_Interfaces::IObjectBiconicLens::PutThickness ( double pRetVal ) {
    HRESULT _hr = put_Thickness(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3811)
inline double ZOSAPI_Interfaces::IObjectBiconicLens::GetRX1 ( ) {
    double _result = 0;
    HRESULT _hr = get_RX1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3812)
inline void ZOSAPI_Interfaces::IObjectBiconicLens::PutRX1 ( double pRetVal ) {
    HRESULT _hr = put_RX1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3813)
inline double ZOSAPI_Interfaces::IObjectBiconicLens::GetRY1 ( ) {
    double _result = 0;
    HRESULT _hr = get_RY1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3814)
inline void ZOSAPI_Interfaces::IObjectBiconicLens::PutRY1 ( double pRetVal ) {
    HRESULT _hr = put_RY1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3815)
inline double ZOSAPI_Interfaces::IObjectBiconicLens::GetKX1 ( ) {
    double _result = 0;
    HRESULT _hr = get_KX1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3816)
inline void ZOSAPI_Interfaces::IObjectBiconicLens::PutKX1 ( double pRetVal ) {
    HRESULT _hr = put_KX1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3817)
inline double ZOSAPI_Interfaces::IObjectBiconicLens::GetKY1 ( ) {
    double _result = 0;
    HRESULT _hr = get_KY1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3818)
inline void ZOSAPI_Interfaces::IObjectBiconicLens::PutKY1 ( double pRetVal ) {
    HRESULT _hr = put_KY1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3819)
inline double ZOSAPI_Interfaces::IObjectBiconicLens::GetRX2 ( ) {
    double _result = 0;
    HRESULT _hr = get_RX2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3820)
inline void ZOSAPI_Interfaces::IObjectBiconicLens::PutRX2 ( double pRetVal ) {
    HRESULT _hr = put_RX2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3821)
inline double ZOSAPI_Interfaces::IObjectBiconicLens::GetRY2 ( ) {
    double _result = 0;
    HRESULT _hr = get_RY2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3822)
inline void ZOSAPI_Interfaces::IObjectBiconicLens::PutRY2 ( double pRetVal ) {
    HRESULT _hr = put_RY2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3823)
inline double ZOSAPI_Interfaces::IObjectBiconicLens::GetKX2 ( ) {
    double _result = 0;
    HRESULT _hr = get_KX2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3824)
inline void ZOSAPI_Interfaces::IObjectBiconicLens::PutKX2 ( double pRetVal ) {
    HRESULT _hr = put_KX2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3825)
inline double ZOSAPI_Interfaces::IObjectBiconicLens::GetKY2 ( ) {
    double _result = 0;
    HRESULT _hr = get_KY2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3826)
inline void ZOSAPI_Interfaces::IObjectBiconicLens::PutKY2 ( double pRetVal ) {
    HRESULT _hr = put_KY2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectBiconicSurface wrapper method implementations
//

#pragma implementation_key(3827)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBiconicSurface::GetRadiusXCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RadiusXCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3828)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBiconicSurface::GetRadiusYCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RadiusYCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3829)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBiconicSurface::GetConicXCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ConicXCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3830)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBiconicSurface::GetConicYCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ConicYCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3831)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBiconicSurface::GetMaxXApertureCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_MaxXApertureCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3832)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBiconicSurface::GetMaxYApertureCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_MaxYApertureCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3833)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBiconicSurface::GetMinXApertureCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_MinXApertureCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3834)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBiconicSurface::GetMinYApertureCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_MinYApertureCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3835)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBiconicSurface::GetIsRectangleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_IsRectangleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3836)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBiconicSurface::GetIsTopHyperCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_IsTopHyperCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3837)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBiconicSurface::GetIsBottomHyperCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_IsBottomHyperCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3838)
inline double ZOSAPI_Interfaces::IObjectBiconicSurface::GetRadiusX ( ) {
    double _result = 0;
    HRESULT _hr = get_RadiusX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3839)
inline void ZOSAPI_Interfaces::IObjectBiconicSurface::PutRadiusX ( double pRetVal ) {
    HRESULT _hr = put_RadiusX(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3840)
inline double ZOSAPI_Interfaces::IObjectBiconicSurface::GetRadiusY ( ) {
    double _result = 0;
    HRESULT _hr = get_RadiusY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3841)
inline void ZOSAPI_Interfaces::IObjectBiconicSurface::PutRadiusY ( double pRetVal ) {
    HRESULT _hr = put_RadiusY(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3842)
inline double ZOSAPI_Interfaces::IObjectBiconicSurface::GetConicX ( ) {
    double _result = 0;
    HRESULT _hr = get_ConicX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3843)
inline void ZOSAPI_Interfaces::IObjectBiconicSurface::PutConicX ( double pRetVal ) {
    HRESULT _hr = put_ConicX(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3844)
inline double ZOSAPI_Interfaces::IObjectBiconicSurface::GetConicY ( ) {
    double _result = 0;
    HRESULT _hr = get_ConicY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3845)
inline void ZOSAPI_Interfaces::IObjectBiconicSurface::PutConicY ( double pRetVal ) {
    HRESULT _hr = put_ConicY(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3846)
inline double ZOSAPI_Interfaces::IObjectBiconicSurface::GetMaxXAperture ( ) {
    double _result = 0;
    HRESULT _hr = get_MaxXAperture(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3847)
inline void ZOSAPI_Interfaces::IObjectBiconicSurface::PutMaxXAperture ( double pRetVal ) {
    HRESULT _hr = put_MaxXAperture(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3848)
inline double ZOSAPI_Interfaces::IObjectBiconicSurface::GetMaxYAperture ( ) {
    double _result = 0;
    HRESULT _hr = get_MaxYAperture(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3849)
inline void ZOSAPI_Interfaces::IObjectBiconicSurface::PutMaxYAperture ( double pRetVal ) {
    HRESULT _hr = put_MaxYAperture(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3850)
inline double ZOSAPI_Interfaces::IObjectBiconicSurface::GetMinXAperture ( ) {
    double _result = 0;
    HRESULT _hr = get_MinXAperture(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3851)
inline void ZOSAPI_Interfaces::IObjectBiconicSurface::PutMinXAperture ( double pRetVal ) {
    HRESULT _hr = put_MinXAperture(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3852)
inline double ZOSAPI_Interfaces::IObjectBiconicSurface::GetMinYAperture ( ) {
    double _result = 0;
    HRESULT _hr = get_MinYAperture(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3853)
inline void ZOSAPI_Interfaces::IObjectBiconicSurface::PutMinYAperture ( double pRetVal ) {
    HRESULT _hr = put_MinYAperture(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3854)
inline VARIANT_BOOL ZOSAPI_Interfaces::IObjectBiconicSurface::GetIsRectangle ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsRectangle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3855)
inline void ZOSAPI_Interfaces::IObjectBiconicSurface::PutIsRectangle ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsRectangle(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3856)
inline VARIANT_BOOL ZOSAPI_Interfaces::IObjectBiconicSurface::GetIsTopHyper ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsTopHyper(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3857)
inline void ZOSAPI_Interfaces::IObjectBiconicSurface::PutIsTopHyper ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsTopHyper(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3858)
inline VARIANT_BOOL ZOSAPI_Interfaces::IObjectBiconicSurface::GetIsBottomHyper ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsBottomHyper(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3859)
inline void ZOSAPI_Interfaces::IObjectBiconicSurface::PutIsBottomHyper ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsBottomHyper(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectBiconicZernike wrapper method implementations
//

#pragma implementation_key(3860)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBiconicZernike::GetRadialHeightCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RadialHeightCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3861)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBiconicZernike::GetXHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3862)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBiconicZernike::GetThicknessCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ThicknessCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3863)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBiconicZernike::GetFrontRadiusCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontRadiusCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3864)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBiconicZernike::GetFrontConicCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontConicCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3865)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBiconicZernike::GetRearRadiusXCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearRadiusXCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3866)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBiconicZernike::GetRearRadiusYCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearRadiusYCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3867)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBiconicZernike::GetRearConicXCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearConicXCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3868)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBiconicZernike::GetRearConicYCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearConicYCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3869)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBiconicZernike::GetNumberZernikeTermsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberZernikeTermsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3870)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBiconicZernike::GetNormRadiusCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NormRadiusCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3871)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBiconicZernike::XPowerICell ( long i ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_XPowerICell(i, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3872)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBiconicZernike::YPowerICell ( long i ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_YPowerICell(i, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3873)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBiconicZernike::ZPowerICell ( long i ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_ZPowerICell(i, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3874)
inline double ZOSAPI_Interfaces::IObjectBiconicZernike::GetRadialHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_RadialHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3875)
inline void ZOSAPI_Interfaces::IObjectBiconicZernike::PutRadialHeight ( double pRetVal ) {
    HRESULT _hr = put_RadialHeight(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3876)
inline double ZOSAPI_Interfaces::IObjectBiconicZernike::GetXHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_XHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3877)
inline void ZOSAPI_Interfaces::IObjectBiconicZernike::PutXHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_XHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3878)
inline double ZOSAPI_Interfaces::IObjectBiconicZernike::GetThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_Thickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3879)
inline void ZOSAPI_Interfaces::IObjectBiconicZernike::PutThickness ( double pRetVal ) {
    HRESULT _hr = put_Thickness(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3880)
inline double ZOSAPI_Interfaces::IObjectBiconicZernike::GetFrontRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3881)
inline void ZOSAPI_Interfaces::IObjectBiconicZernike::PutFrontRadius ( double pRetVal ) {
    HRESULT _hr = put_FrontRadius(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3882)
inline double ZOSAPI_Interfaces::IObjectBiconicZernike::GetFrontConic ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontConic(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3883)
inline void ZOSAPI_Interfaces::IObjectBiconicZernike::PutFrontConic ( double pRetVal ) {
    HRESULT _hr = put_FrontConic(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3884)
inline double ZOSAPI_Interfaces::IObjectBiconicZernike::GetRearRadiusX ( ) {
    double _result = 0;
    HRESULT _hr = get_RearRadiusX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3885)
inline void ZOSAPI_Interfaces::IObjectBiconicZernike::PutRearRadiusX ( double pRetVal ) {
    HRESULT _hr = put_RearRadiusX(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3886)
inline double ZOSAPI_Interfaces::IObjectBiconicZernike::GetRearRadiusY ( ) {
    double _result = 0;
    HRESULT _hr = get_RearRadiusY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3887)
inline void ZOSAPI_Interfaces::IObjectBiconicZernike::PutRearRadiusY ( double pRetVal ) {
    HRESULT _hr = put_RearRadiusY(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3888)
inline double ZOSAPI_Interfaces::IObjectBiconicZernike::GetRearConicX ( ) {
    double _result = 0;
    HRESULT _hr = get_RearConicX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3889)
inline void ZOSAPI_Interfaces::IObjectBiconicZernike::PutRearConicX ( double pRetVal ) {
    HRESULT _hr = put_RearConicX(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3890)
inline double ZOSAPI_Interfaces::IObjectBiconicZernike::GetRearConicY ( ) {
    double _result = 0;
    HRESULT _hr = get_RearConicY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3891)
inline void ZOSAPI_Interfaces::IObjectBiconicZernike::PutRearConicY ( double pRetVal ) {
    HRESULT _hr = put_RearConicY(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3892)
inline long ZOSAPI_Interfaces::IObjectBiconicZernike::GetNumberZernikeTerms ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberZernikeTerms(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3893)
inline void ZOSAPI_Interfaces::IObjectBiconicZernike::PutNumberZernikeTerms ( long pRetVal ) {
    HRESULT _hr = put_NumberZernikeTerms(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3894)
inline double ZOSAPI_Interfaces::IObjectBiconicZernike::GetNormRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_NormRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3895)
inline void ZOSAPI_Interfaces::IObjectBiconicZernike::PutNormRadius ( double pRetVal ) {
    HRESULT _hr = put_NormRadius(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3896)
inline double ZOSAPI_Interfaces::IObjectBiconicZernike::GetXPowerI ( long i ) {
    double _result = 0;
    HRESULT _hr = raw_GetXPowerI(i, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3897)
inline HRESULT ZOSAPI_Interfaces::IObjectBiconicZernike::SetXPowerI ( long i, double v ) {
    HRESULT _hr = raw_SetXPowerI(i, v);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3898)
inline double ZOSAPI_Interfaces::IObjectBiconicZernike::GetYPowerI ( long i ) {
    double _result = 0;
    HRESULT _hr = raw_GetYPowerI(i, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3899)
inline HRESULT ZOSAPI_Interfaces::IObjectBiconicZernike::SetYPowerI ( long i, double v ) {
    HRESULT _hr = raw_SetYPowerI(i, v);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3900)
inline double ZOSAPI_Interfaces::IObjectBiconicZernike::GetZPowerI ( long i ) {
    double _result = 0;
    HRESULT _hr = raw_GetZPowerI(i, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3901)
inline HRESULT ZOSAPI_Interfaces::IObjectBiconicZernike::SetZPowerI ( long i, double v ) {
    HRESULT _hr = raw_SetZPowerI(i, v);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IObjectBiconicZernikeSurface wrapper method implementations
//

#pragma implementation_key(3902)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBiconicZernikeSurface::GetXHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3903)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBiconicZernikeSurface::GetYHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_YHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3904)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBiconicZernikeSurface::GetRadiusXCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RadiusXCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3905)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBiconicZernikeSurface::GetRadiusYCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RadiusYCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3906)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBiconicZernikeSurface::GetConicXCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ConicXCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3907)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBiconicZernikeSurface::GetConicYCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ConicYCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3908)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBiconicZernikeSurface::GetBiconicDecXCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_BiconicDecXCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3909)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBiconicZernikeSurface::GetBiconicDecYCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_BiconicDecYCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3910)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBiconicZernikeSurface::GetZernikeDecXCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ZernikeDecXCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3911)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBiconicZernikeSurface::GetZernikeDecYCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ZernikeDecYCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3912)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBiconicZernikeSurface::GetNumberZernikeTermsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberZernikeTermsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3913)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBiconicZernikeSurface::GetNormRadiusCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NormRadiusCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3914)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBiconicZernikeSurface::XPowerICell ( long i ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_XPowerICell(i, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3915)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBiconicZernikeSurface::YPowerICell ( long i ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_YPowerICell(i, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3916)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBiconicZernikeSurface::ZPowerICell ( long i ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_ZPowerICell(i, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3917)
inline double ZOSAPI_Interfaces::IObjectBiconicZernikeSurface::GetXHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_XHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3918)
inline void ZOSAPI_Interfaces::IObjectBiconicZernikeSurface::PutXHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_XHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3919)
inline double ZOSAPI_Interfaces::IObjectBiconicZernikeSurface::GetYHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_YHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3920)
inline void ZOSAPI_Interfaces::IObjectBiconicZernikeSurface::PutYHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_YHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3921)
inline double ZOSAPI_Interfaces::IObjectBiconicZernikeSurface::GetRadiusX ( ) {
    double _result = 0;
    HRESULT _hr = get_RadiusX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3922)
inline void ZOSAPI_Interfaces::IObjectBiconicZernikeSurface::PutRadiusX ( double pRetVal ) {
    HRESULT _hr = put_RadiusX(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3923)
inline double ZOSAPI_Interfaces::IObjectBiconicZernikeSurface::GetRadiusY ( ) {
    double _result = 0;
    HRESULT _hr = get_RadiusY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3924)
inline void ZOSAPI_Interfaces::IObjectBiconicZernikeSurface::PutRadiusY ( double pRetVal ) {
    HRESULT _hr = put_RadiusY(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3925)
inline double ZOSAPI_Interfaces::IObjectBiconicZernikeSurface::GetConicX ( ) {
    double _result = 0;
    HRESULT _hr = get_ConicX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3926)
inline void ZOSAPI_Interfaces::IObjectBiconicZernikeSurface::PutConicX ( double pRetVal ) {
    HRESULT _hr = put_ConicX(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3927)
inline double ZOSAPI_Interfaces::IObjectBiconicZernikeSurface::GetConicY ( ) {
    double _result = 0;
    HRESULT _hr = get_ConicY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3928)
inline void ZOSAPI_Interfaces::IObjectBiconicZernikeSurface::PutConicY ( double pRetVal ) {
    HRESULT _hr = put_ConicY(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3929)
inline double ZOSAPI_Interfaces::IObjectBiconicZernikeSurface::GetBiconicDecX ( ) {
    double _result = 0;
    HRESULT _hr = get_BiconicDecX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3930)
inline void ZOSAPI_Interfaces::IObjectBiconicZernikeSurface::PutBiconicDecX ( double pRetVal ) {
    HRESULT _hr = put_BiconicDecX(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3931)
inline double ZOSAPI_Interfaces::IObjectBiconicZernikeSurface::GetBiconicDecY ( ) {
    double _result = 0;
    HRESULT _hr = get_BiconicDecY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3932)
inline void ZOSAPI_Interfaces::IObjectBiconicZernikeSurface::PutBiconicDecY ( double pRetVal ) {
    HRESULT _hr = put_BiconicDecY(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3933)
inline double ZOSAPI_Interfaces::IObjectBiconicZernikeSurface::GetZernikeDecX ( ) {
    double _result = 0;
    HRESULT _hr = get_ZernikeDecX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3934)
inline void ZOSAPI_Interfaces::IObjectBiconicZernikeSurface::PutZernikeDecX ( double pRetVal ) {
    HRESULT _hr = put_ZernikeDecX(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3935)
inline double ZOSAPI_Interfaces::IObjectBiconicZernikeSurface::GetZernikeDecY ( ) {
    double _result = 0;
    HRESULT _hr = get_ZernikeDecY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3936)
inline void ZOSAPI_Interfaces::IObjectBiconicZernikeSurface::PutZernikeDecY ( double pRetVal ) {
    HRESULT _hr = put_ZernikeDecY(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3937)
inline long ZOSAPI_Interfaces::IObjectBiconicZernikeSurface::GetNumberZernikeTerms ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberZernikeTerms(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3938)
inline void ZOSAPI_Interfaces::IObjectBiconicZernikeSurface::PutNumberZernikeTerms ( long pRetVal ) {
    HRESULT _hr = put_NumberZernikeTerms(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3939)
inline double ZOSAPI_Interfaces::IObjectBiconicZernikeSurface::GetNormRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_NormRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3940)
inline void ZOSAPI_Interfaces::IObjectBiconicZernikeSurface::PutNormRadius ( double pRetVal ) {
    HRESULT _hr = put_NormRadius(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3941)
inline double ZOSAPI_Interfaces::IObjectBiconicZernikeSurface::GetXPowerI ( long i ) {
    double _result = 0;
    HRESULT _hr = raw_GetXPowerI(i, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3942)
inline HRESULT ZOSAPI_Interfaces::IObjectBiconicZernikeSurface::SetXPowerI ( long i, double v ) {
    HRESULT _hr = raw_SetXPowerI(i, v);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3943)
inline double ZOSAPI_Interfaces::IObjectBiconicZernikeSurface::GetYPowerI ( long i ) {
    double _result = 0;
    HRESULT _hr = raw_GetYPowerI(i, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3944)
inline HRESULT ZOSAPI_Interfaces::IObjectBiconicZernikeSurface::SetYPowerI ( long i, double v ) {
    HRESULT _hr = raw_SetYPowerI(i, v);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3945)
inline double ZOSAPI_Interfaces::IObjectBiconicZernikeSurface::GetZPowerI ( long i ) {
    double _result = 0;
    HRESULT _hr = raw_GetZPowerI(i, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3946)
inline HRESULT ZOSAPI_Interfaces::IObjectBiconicZernikeSurface::SetZPowerI ( long i, double v ) {
    HRESULT _hr = raw_SetZPowerI(i, v);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IObjectXYPolynomial wrapper method implementations
//

#pragma implementation_key(3947)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX1Y0Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X1Y0Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3948)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX0Y1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X0Y1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3949)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX2Y0Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X2Y0Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3950)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX1Y1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X1Y1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3951)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX0Y2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X0Y2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3952)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX3Y0Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X3Y0Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3953)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX2Y1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X2Y1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3954)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX1Y2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X1Y2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3955)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX0Y3Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X0Y3Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3956)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX4Y0Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X4Y0Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3957)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX3Y1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X3Y1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3958)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX2Y2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X2Y2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3959)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX1Y3Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X1Y3Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3960)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX0Y4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X0Y4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3961)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX5Y0Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X5Y0Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3962)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX4Y1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X4Y1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3963)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX3Y2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X3Y2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3964)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX2Y3Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X2Y3Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3965)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX1Y4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X1Y4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3966)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX0Y5Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X0Y5Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3967)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX6Y0Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X6Y0Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3968)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX5Y1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X5Y1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3969)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX4Y2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X4Y2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3970)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX3Y3Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X3Y3Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3971)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX2Y4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X2Y4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3972)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX1Y5Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X1Y5Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3973)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX0Y6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X0Y6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3974)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX7Y0Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X7Y0Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3975)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX6Y1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X6Y1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3976)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX5Y2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X5Y2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3977)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX4Y3Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X4Y3Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3978)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX3Y4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X3Y4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3979)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX2Y5Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X2Y5Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3980)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX1Y6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X1Y6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3981)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX0Y7Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X0Y7Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3982)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX8Y0Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X8Y0Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3983)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX7Y1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X7Y1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3984)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX6Y2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X6Y2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3985)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX5Y3Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X5Y3Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3986)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX4Y4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X4Y4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3987)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX3Y5Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X3Y5Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3988)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX2Y6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X2Y6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3989)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX1Y7Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X1Y7Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3990)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX0Y8Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X0Y8Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3991)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX9Y0Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X9Y0Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3992)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX8Y1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X8Y1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3993)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX7Y2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X7Y2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3994)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX6Y3Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X6Y3Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3995)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX5Y4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X5Y4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3996)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX4Y5Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X4Y5Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3997)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX3Y6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X3Y6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3998)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX2Y7Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X2Y7Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(3999)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX1Y8Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X1Y8Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4000)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX0Y9Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X0Y9Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4001)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX10Y0Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X10Y0Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4002)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX9Y1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X9Y1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4003)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX8Y2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X8Y2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4004)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX7Y3Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X7Y3Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4005)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX6Y4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X6Y4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4006)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX5Y5Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X5Y5Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4007)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX4Y6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X4Y6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4008)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX3Y7Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X3Y7Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4009)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX2Y8Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X2Y8Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4010)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX1Y9Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X1Y9Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4011)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX0Y10Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X0Y10Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4012)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX11Y0Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X11Y0Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4013)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX10Y1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X10Y1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4014)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX9Y2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X9Y2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4015)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX8Y3Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X8Y3Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4016)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX7Y4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X7Y4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4017)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX6Y5Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X6Y5Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4018)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX5Y6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X5Y6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4019)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX4Y7Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X4Y7Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4020)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX3Y8Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X3Y8Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4021)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX2Y9Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X2Y9Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4022)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX1Y10Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X1Y10Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4023)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX0Y11Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X0Y11Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4024)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX12Y0Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X12Y0Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4025)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX11Y1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X11Y1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4026)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX10Y2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X10Y2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4027)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX9Y3Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X9Y3Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4028)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX8Y4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X8Y4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4029)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX7Y5Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X7Y5Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4030)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX6Y6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X6Y6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4031)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX5Y7Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X5Y7Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4032)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX4Y8Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X4Y8Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4033)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX3Y9Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X3Y9Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4034)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX2Y10Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X2Y10Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4035)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX1Y11Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X1Y11Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4036)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX0Y12Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X0Y12Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4037)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX13Y0Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X13Y0Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4038)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX12Y1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X12Y1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4039)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX11Y2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X11Y2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4040)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX10Y3Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X10Y3Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4041)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX9Y4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X9Y4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4042)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX8Y5Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X8Y5Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4043)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX7Y6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X7Y6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4044)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX6Y7Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X6Y7Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4045)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX5Y8Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X5Y8Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4046)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX4Y9Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X4Y9Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4047)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX3Y10Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X3Y10Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4048)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX2Y11Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X2Y11Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4049)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX1Y12Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X1Y12Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4050)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX0Y13Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X0Y13Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4051)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX14Y0Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X14Y0Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4052)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX13Y1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X13Y1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4053)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX12Y2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X12Y2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4054)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX11Y3Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X11Y3Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4055)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX10Y4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X10Y4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4056)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX9Y5Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X9Y5Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4057)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX8Y6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X8Y6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4058)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX7Y7Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X7Y7Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4059)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX6Y8Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X6Y8Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4060)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX5Y9Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X5Y9Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4061)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX4Y10Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X4Y10Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4062)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX3Y11Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X3Y11Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4063)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX2Y12Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X2Y12Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4064)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX1Y13Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X1Y13Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4065)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX0Y14Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X0Y14Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4066)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX15Y0Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X15Y0Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4067)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX14Y1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X14Y1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4068)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX13Y2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X13Y2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4069)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX12Y3Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X12Y3Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4070)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX11Y4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X11Y4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4071)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX10Y5Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X10Y5Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4072)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX9Y6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X9Y6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4073)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX8Y7Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X8Y7Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4074)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX7Y8Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X7Y8Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4075)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX6Y9Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X6Y9Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4076)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX5Y10Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X5Y10Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4077)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX4Y11Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X4Y11Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4078)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX3Y12Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X3Y12Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4079)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX2Y13Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X2Y13Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4080)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX1Y14Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X1Y14Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4081)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX0Y15Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X0Y15Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4082)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX16Y0Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X16Y0Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4083)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX15Y1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X15Y1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4084)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX14Y2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X14Y2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4085)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX13Y3Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X13Y3Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4086)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX12Y4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X12Y4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4087)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX11Y5Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X11Y5Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4088)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX10Y6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X10Y6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4089)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX9Y7Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X9Y7Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4090)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX8Y8Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X8Y8Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4091)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX7Y9Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X7Y9Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4092)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX6Y10Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X6Y10Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4093)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX5Y11Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X5Y11Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4094)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX4Y12Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X4Y12Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4095)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX3Y13Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X3Y13Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4096)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX2Y14Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X2Y14Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4097)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX1Y15Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X1Y15Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4098)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX0Y16Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X0Y16Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4099)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX17Y0Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X17Y0Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4100)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX16Y1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X16Y1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4101)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX15Y2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X15Y2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4102)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX14Y3Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X14Y3Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4103)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX13Y4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X13Y4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4104)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX12Y5Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X12Y5Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4105)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX11Y6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X11Y6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4106)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX10Y7Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X10Y7Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4107)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX9Y8Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X9Y8Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4108)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX8Y9Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X8Y9Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4109)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX7Y10Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X7Y10Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4110)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX6Y11Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X6Y11Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4111)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX5Y12Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X5Y12Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4112)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX4Y13Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X4Y13Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4113)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX3Y14Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X3Y14Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4114)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX2Y15Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X2Y15Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4115)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX1Y16Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X1Y16Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4116)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX0Y17Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X0Y17Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4117)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX18Y0Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X18Y0Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4118)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX17Y1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X17Y1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4119)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX16Y2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X16Y2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4120)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX15Y3Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X15Y3Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4121)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX14Y4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X14Y4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4122)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX13Y5Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X13Y5Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4123)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX12Y6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X12Y6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4124)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX11Y7Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X11Y7Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4125)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX10Y8Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X10Y8Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4126)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX9Y9Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X9Y9Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4127)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX8Y10Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X8Y10Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4128)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX7Y11Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X7Y11Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4129)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX6Y12Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X6Y12Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4130)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX5Y13Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X5Y13Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4131)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX4Y14Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X4Y14Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4132)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX3Y15Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X3Y15Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4133)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX2Y16Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X2Y16Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4134)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX1Y17Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X1Y17Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4135)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX0Y18Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X0Y18Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4136)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX19Y0Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X19Y0Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4137)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX18Y1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X18Y1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4138)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX17Y2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X17Y2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4139)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX16Y3Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X16Y3Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4140)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX15Y4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X15Y4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4141)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX14Y5Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X14Y5Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4142)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX13Y6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X13Y6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4143)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX12Y7Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X12Y7Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4144)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX11Y8Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X11Y8Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4145)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX10Y9Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X10Y9Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4146)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX9Y10Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X9Y10Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4147)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX8Y11Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X8Y11Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4148)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX7Y12Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X7Y12Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4149)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX6Y13Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X6Y13Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4150)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX5Y14Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X5Y14Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4151)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX4Y15Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X4Y15Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4152)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX3Y16Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X3Y16Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4153)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX2Y17Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X2Y17Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4154)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX1Y18Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X1Y18Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4155)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX0Y19Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X0Y19Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4156)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX20Y0Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X20Y0Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4157)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX19Y1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X19Y1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4158)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX18Y2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X18Y2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4159)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX17Y3Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X17Y3Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4160)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX16Y4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X16Y4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4161)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX15Y5Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X15Y5Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4162)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX14Y6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X14Y6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4163)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX13Y7Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X13Y7Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4164)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX12Y8Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X12Y8Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4165)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX11Y9Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X11Y9Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4166)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX10Y10Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X10Y10Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4167)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX9Y11Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X9Y11Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4168)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX8Y12Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X8Y12Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4169)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX7Y13Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X7Y13Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4170)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX6Y14Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X6Y14Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4171)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX5Y15Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X5Y15Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4172)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX4Y16Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X4Y16Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4173)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX3Y17Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X3Y17Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4174)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX2Y18Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X2Y18Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4175)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX1Y19Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X1Y19Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4176)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX0Y20Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X0Y20Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4177)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX21Y0Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X21Y0Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4178)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX20Y1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X20Y1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4179)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX19Y2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X19Y2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4180)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX18Y3Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X18Y3Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4181)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX17Y4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X17Y4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4182)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX16Y5Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X16Y5Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4183)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX15Y6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X15Y6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4184)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX14Y7Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X14Y7Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4185)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX13Y8Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X13Y8Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4186)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX12Y9Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X12Y9Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4187)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX11Y10Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X11Y10Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4188)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX10Y11Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X10Y11Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4189)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX9Y12Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X9Y12Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4190)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX8Y13Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X8Y13Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4191)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX7Y14Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X7Y14Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4192)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX6Y15Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X6Y15Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4193)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX5Y16Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X5Y16Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4194)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX4Y17Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X4Y17Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4195)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX3Y18Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X3Y18Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4196)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectXYPolynomial::GetX2Y19Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X2Y19Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4197)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX1Y0 ( ) {
    double _result = 0;
    HRESULT _hr = get_X1Y0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4198)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX1Y0 ( double pRetVal ) {
    HRESULT _hr = put_X1Y0(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4199)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX0Y1 ( ) {
    double _result = 0;
    HRESULT _hr = get_X0Y1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4200)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX0Y1 ( double pRetVal ) {
    HRESULT _hr = put_X0Y1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4201)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX2Y0 ( ) {
    double _result = 0;
    HRESULT _hr = get_X2Y0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4202)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX2Y0 ( double pRetVal ) {
    HRESULT _hr = put_X2Y0(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4203)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX1Y1 ( ) {
    double _result = 0;
    HRESULT _hr = get_X1Y1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4204)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX1Y1 ( double pRetVal ) {
    HRESULT _hr = put_X1Y1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4205)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX0Y2 ( ) {
    double _result = 0;
    HRESULT _hr = get_X0Y2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4206)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX0Y2 ( double pRetVal ) {
    HRESULT _hr = put_X0Y2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4207)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX3Y0 ( ) {
    double _result = 0;
    HRESULT _hr = get_X3Y0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4208)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX3Y0 ( double pRetVal ) {
    HRESULT _hr = put_X3Y0(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4209)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX2Y1 ( ) {
    double _result = 0;
    HRESULT _hr = get_X2Y1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4210)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX2Y1 ( double pRetVal ) {
    HRESULT _hr = put_X2Y1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4211)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX1Y2 ( ) {
    double _result = 0;
    HRESULT _hr = get_X1Y2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4212)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX1Y2 ( double pRetVal ) {
    HRESULT _hr = put_X1Y2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4213)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX0Y3 ( ) {
    double _result = 0;
    HRESULT _hr = get_X0Y3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4214)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX0Y3 ( double pRetVal ) {
    HRESULT _hr = put_X0Y3(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4215)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX4Y0 ( ) {
    double _result = 0;
    HRESULT _hr = get_X4Y0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4216)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX4Y0 ( double pRetVal ) {
    HRESULT _hr = put_X4Y0(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4217)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX3Y1 ( ) {
    double _result = 0;
    HRESULT _hr = get_X3Y1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4218)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX3Y1 ( double pRetVal ) {
    HRESULT _hr = put_X3Y1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4219)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX2Y2 ( ) {
    double _result = 0;
    HRESULT _hr = get_X2Y2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4220)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX2Y2 ( double pRetVal ) {
    HRESULT _hr = put_X2Y2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4221)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX1Y3 ( ) {
    double _result = 0;
    HRESULT _hr = get_X1Y3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4222)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX1Y3 ( double pRetVal ) {
    HRESULT _hr = put_X1Y3(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4223)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX0Y4 ( ) {
    double _result = 0;
    HRESULT _hr = get_X0Y4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4224)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX0Y4 ( double pRetVal ) {
    HRESULT _hr = put_X0Y4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4225)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX5Y0 ( ) {
    double _result = 0;
    HRESULT _hr = get_X5Y0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4226)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX5Y0 ( double pRetVal ) {
    HRESULT _hr = put_X5Y0(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4227)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX4Y1 ( ) {
    double _result = 0;
    HRESULT _hr = get_X4Y1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4228)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX4Y1 ( double pRetVal ) {
    HRESULT _hr = put_X4Y1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4229)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX3Y2 ( ) {
    double _result = 0;
    HRESULT _hr = get_X3Y2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4230)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX3Y2 ( double pRetVal ) {
    HRESULT _hr = put_X3Y2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4231)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX2Y3 ( ) {
    double _result = 0;
    HRESULT _hr = get_X2Y3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4232)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX2Y3 ( double pRetVal ) {
    HRESULT _hr = put_X2Y3(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4233)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX1Y4 ( ) {
    double _result = 0;
    HRESULT _hr = get_X1Y4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4234)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX1Y4 ( double pRetVal ) {
    HRESULT _hr = put_X1Y4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4235)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX0Y5 ( ) {
    double _result = 0;
    HRESULT _hr = get_X0Y5(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4236)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX0Y5 ( double pRetVal ) {
    HRESULT _hr = put_X0Y5(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4237)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX6Y0 ( ) {
    double _result = 0;
    HRESULT _hr = get_X6Y0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4238)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX6Y0 ( double pRetVal ) {
    HRESULT _hr = put_X6Y0(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4239)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX5Y1 ( ) {
    double _result = 0;
    HRESULT _hr = get_X5Y1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4240)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX5Y1 ( double pRetVal ) {
    HRESULT _hr = put_X5Y1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4241)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX4Y2 ( ) {
    double _result = 0;
    HRESULT _hr = get_X4Y2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4242)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX4Y2 ( double pRetVal ) {
    HRESULT _hr = put_X4Y2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4243)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX3Y3 ( ) {
    double _result = 0;
    HRESULT _hr = get_X3Y3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4244)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX3Y3 ( double pRetVal ) {
    HRESULT _hr = put_X3Y3(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4245)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX2Y4 ( ) {
    double _result = 0;
    HRESULT _hr = get_X2Y4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4246)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX2Y4 ( double pRetVal ) {
    HRESULT _hr = put_X2Y4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4247)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX1Y5 ( ) {
    double _result = 0;
    HRESULT _hr = get_X1Y5(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4248)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX1Y5 ( double pRetVal ) {
    HRESULT _hr = put_X1Y5(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4249)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX0Y6 ( ) {
    double _result = 0;
    HRESULT _hr = get_X0Y6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4250)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX0Y6 ( double pRetVal ) {
    HRESULT _hr = put_X0Y6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4251)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX7Y0 ( ) {
    double _result = 0;
    HRESULT _hr = get_X7Y0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4252)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX7Y0 ( double pRetVal ) {
    HRESULT _hr = put_X7Y0(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4253)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX6Y1 ( ) {
    double _result = 0;
    HRESULT _hr = get_X6Y1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4254)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX6Y1 ( double pRetVal ) {
    HRESULT _hr = put_X6Y1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4255)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX5Y2 ( ) {
    double _result = 0;
    HRESULT _hr = get_X5Y2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4256)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX5Y2 ( double pRetVal ) {
    HRESULT _hr = put_X5Y2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4257)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX4Y3 ( ) {
    double _result = 0;
    HRESULT _hr = get_X4Y3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4258)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX4Y3 ( double pRetVal ) {
    HRESULT _hr = put_X4Y3(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4259)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX3Y4 ( ) {
    double _result = 0;
    HRESULT _hr = get_X3Y4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4260)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX3Y4 ( double pRetVal ) {
    HRESULT _hr = put_X3Y4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4261)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX2Y5 ( ) {
    double _result = 0;
    HRESULT _hr = get_X2Y5(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4262)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX2Y5 ( double pRetVal ) {
    HRESULT _hr = put_X2Y5(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4263)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX1Y6 ( ) {
    double _result = 0;
    HRESULT _hr = get_X1Y6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4264)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX1Y6 ( double pRetVal ) {
    HRESULT _hr = put_X1Y6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4265)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX0Y7 ( ) {
    double _result = 0;
    HRESULT _hr = get_X0Y7(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4266)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX0Y7 ( double pRetVal ) {
    HRESULT _hr = put_X0Y7(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4267)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX8Y0 ( ) {
    double _result = 0;
    HRESULT _hr = get_X8Y0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4268)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX8Y0 ( double pRetVal ) {
    HRESULT _hr = put_X8Y0(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4269)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX7Y1 ( ) {
    double _result = 0;
    HRESULT _hr = get_X7Y1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4270)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX7Y1 ( double pRetVal ) {
    HRESULT _hr = put_X7Y1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4271)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX6Y2 ( ) {
    double _result = 0;
    HRESULT _hr = get_X6Y2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4272)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX6Y2 ( double pRetVal ) {
    HRESULT _hr = put_X6Y2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4273)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX5Y3 ( ) {
    double _result = 0;
    HRESULT _hr = get_X5Y3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4274)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX5Y3 ( double pRetVal ) {
    HRESULT _hr = put_X5Y3(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4275)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX4Y4 ( ) {
    double _result = 0;
    HRESULT _hr = get_X4Y4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4276)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX4Y4 ( double pRetVal ) {
    HRESULT _hr = put_X4Y4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4277)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX3Y5 ( ) {
    double _result = 0;
    HRESULT _hr = get_X3Y5(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4278)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX3Y5 ( double pRetVal ) {
    HRESULT _hr = put_X3Y5(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4279)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX2Y6 ( ) {
    double _result = 0;
    HRESULT _hr = get_X2Y6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4280)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX2Y6 ( double pRetVal ) {
    HRESULT _hr = put_X2Y6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4281)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX1Y7 ( ) {
    double _result = 0;
    HRESULT _hr = get_X1Y7(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4282)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX1Y7 ( double pRetVal ) {
    HRESULT _hr = put_X1Y7(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4283)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX0Y8 ( ) {
    double _result = 0;
    HRESULT _hr = get_X0Y8(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4284)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX0Y8 ( double pRetVal ) {
    HRESULT _hr = put_X0Y8(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4285)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX9Y0 ( ) {
    double _result = 0;
    HRESULT _hr = get_X9Y0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4286)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX9Y0 ( double pRetVal ) {
    HRESULT _hr = put_X9Y0(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4287)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX8Y1 ( ) {
    double _result = 0;
    HRESULT _hr = get_X8Y1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4288)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX8Y1 ( double pRetVal ) {
    HRESULT _hr = put_X8Y1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4289)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX7Y2 ( ) {
    double _result = 0;
    HRESULT _hr = get_X7Y2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4290)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX7Y2 ( double pRetVal ) {
    HRESULT _hr = put_X7Y2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4291)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX6Y3 ( ) {
    double _result = 0;
    HRESULT _hr = get_X6Y3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4292)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX6Y3 ( double pRetVal ) {
    HRESULT _hr = put_X6Y3(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4293)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX5Y4 ( ) {
    double _result = 0;
    HRESULT _hr = get_X5Y4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4294)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX5Y4 ( double pRetVal ) {
    HRESULT _hr = put_X5Y4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4295)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX4Y5 ( ) {
    double _result = 0;
    HRESULT _hr = get_X4Y5(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4296)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX4Y5 ( double pRetVal ) {
    HRESULT _hr = put_X4Y5(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4297)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX3Y6 ( ) {
    double _result = 0;
    HRESULT _hr = get_X3Y6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4298)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX3Y6 ( double pRetVal ) {
    HRESULT _hr = put_X3Y6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4299)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX2Y7 ( ) {
    double _result = 0;
    HRESULT _hr = get_X2Y7(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4300)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX2Y7 ( double pRetVal ) {
    HRESULT _hr = put_X2Y7(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4301)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX1Y8 ( ) {
    double _result = 0;
    HRESULT _hr = get_X1Y8(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4302)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX1Y8 ( double pRetVal ) {
    HRESULT _hr = put_X1Y8(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4303)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX0Y9 ( ) {
    double _result = 0;
    HRESULT _hr = get_X0Y9(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4304)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX0Y9 ( double pRetVal ) {
    HRESULT _hr = put_X0Y9(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4305)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX10Y0 ( ) {
    double _result = 0;
    HRESULT _hr = get_X10Y0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4306)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX10Y0 ( double pRetVal ) {
    HRESULT _hr = put_X10Y0(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4307)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX9Y1 ( ) {
    double _result = 0;
    HRESULT _hr = get_X9Y1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4308)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX9Y1 ( double pRetVal ) {
    HRESULT _hr = put_X9Y1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4309)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX8Y2 ( ) {
    double _result = 0;
    HRESULT _hr = get_X8Y2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4310)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX8Y2 ( double pRetVal ) {
    HRESULT _hr = put_X8Y2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4311)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX7Y3 ( ) {
    double _result = 0;
    HRESULT _hr = get_X7Y3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4312)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX7Y3 ( double pRetVal ) {
    HRESULT _hr = put_X7Y3(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4313)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX6Y4 ( ) {
    double _result = 0;
    HRESULT _hr = get_X6Y4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4314)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX6Y4 ( double pRetVal ) {
    HRESULT _hr = put_X6Y4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4315)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX5Y5 ( ) {
    double _result = 0;
    HRESULT _hr = get_X5Y5(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4316)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX5Y5 ( double pRetVal ) {
    HRESULT _hr = put_X5Y5(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4317)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX4Y6 ( ) {
    double _result = 0;
    HRESULT _hr = get_X4Y6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4318)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX4Y6 ( double pRetVal ) {
    HRESULT _hr = put_X4Y6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4319)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX3Y7 ( ) {
    double _result = 0;
    HRESULT _hr = get_X3Y7(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4320)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX3Y7 ( double pRetVal ) {
    HRESULT _hr = put_X3Y7(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4321)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX2Y8 ( ) {
    double _result = 0;
    HRESULT _hr = get_X2Y8(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4322)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX2Y8 ( double pRetVal ) {
    HRESULT _hr = put_X2Y8(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4323)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX1Y9 ( ) {
    double _result = 0;
    HRESULT _hr = get_X1Y9(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4324)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX1Y9 ( double pRetVal ) {
    HRESULT _hr = put_X1Y9(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4325)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX0Y10 ( ) {
    double _result = 0;
    HRESULT _hr = get_X0Y10(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4326)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX0Y10 ( double pRetVal ) {
    HRESULT _hr = put_X0Y10(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4327)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX11Y0 ( ) {
    double _result = 0;
    HRESULT _hr = get_X11Y0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4328)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX11Y0 ( double pRetVal ) {
    HRESULT _hr = put_X11Y0(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4329)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX10Y1 ( ) {
    double _result = 0;
    HRESULT _hr = get_X10Y1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4330)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX10Y1 ( double pRetVal ) {
    HRESULT _hr = put_X10Y1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4331)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX9Y2 ( ) {
    double _result = 0;
    HRESULT _hr = get_X9Y2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4332)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX9Y2 ( double pRetVal ) {
    HRESULT _hr = put_X9Y2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4333)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX8Y3 ( ) {
    double _result = 0;
    HRESULT _hr = get_X8Y3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4334)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX8Y3 ( double pRetVal ) {
    HRESULT _hr = put_X8Y3(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4335)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX7Y4 ( ) {
    double _result = 0;
    HRESULT _hr = get_X7Y4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4336)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX7Y4 ( double pRetVal ) {
    HRESULT _hr = put_X7Y4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4337)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX6Y5 ( ) {
    double _result = 0;
    HRESULT _hr = get_X6Y5(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4338)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX6Y5 ( double pRetVal ) {
    HRESULT _hr = put_X6Y5(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4339)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX5Y6 ( ) {
    double _result = 0;
    HRESULT _hr = get_X5Y6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4340)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX5Y6 ( double pRetVal ) {
    HRESULT _hr = put_X5Y6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4341)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX4Y7 ( ) {
    double _result = 0;
    HRESULT _hr = get_X4Y7(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4342)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX4Y7 ( double pRetVal ) {
    HRESULT _hr = put_X4Y7(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4343)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX3Y8 ( ) {
    double _result = 0;
    HRESULT _hr = get_X3Y8(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4344)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX3Y8 ( double pRetVal ) {
    HRESULT _hr = put_X3Y8(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4345)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX2Y9 ( ) {
    double _result = 0;
    HRESULT _hr = get_X2Y9(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4346)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX2Y9 ( double pRetVal ) {
    HRESULT _hr = put_X2Y9(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4347)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX1Y10 ( ) {
    double _result = 0;
    HRESULT _hr = get_X1Y10(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4348)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX1Y10 ( double pRetVal ) {
    HRESULT _hr = put_X1Y10(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4349)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX0Y11 ( ) {
    double _result = 0;
    HRESULT _hr = get_X0Y11(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4350)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX0Y11 ( double pRetVal ) {
    HRESULT _hr = put_X0Y11(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4351)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX12Y0 ( ) {
    double _result = 0;
    HRESULT _hr = get_X12Y0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4352)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX12Y0 ( double pRetVal ) {
    HRESULT _hr = put_X12Y0(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4353)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX11Y1 ( ) {
    double _result = 0;
    HRESULT _hr = get_X11Y1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4354)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX11Y1 ( double pRetVal ) {
    HRESULT _hr = put_X11Y1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4355)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX10Y2 ( ) {
    double _result = 0;
    HRESULT _hr = get_X10Y2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4356)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX10Y2 ( double pRetVal ) {
    HRESULT _hr = put_X10Y2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4357)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX9Y3 ( ) {
    double _result = 0;
    HRESULT _hr = get_X9Y3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4358)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX9Y3 ( double pRetVal ) {
    HRESULT _hr = put_X9Y3(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4359)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX8Y4 ( ) {
    double _result = 0;
    HRESULT _hr = get_X8Y4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4360)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX8Y4 ( double pRetVal ) {
    HRESULT _hr = put_X8Y4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4361)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX7Y5 ( ) {
    double _result = 0;
    HRESULT _hr = get_X7Y5(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4362)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX7Y5 ( double pRetVal ) {
    HRESULT _hr = put_X7Y5(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4363)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX6Y6 ( ) {
    double _result = 0;
    HRESULT _hr = get_X6Y6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4364)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX6Y6 ( double pRetVal ) {
    HRESULT _hr = put_X6Y6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4365)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX5Y7 ( ) {
    double _result = 0;
    HRESULT _hr = get_X5Y7(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4366)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX5Y7 ( double pRetVal ) {
    HRESULT _hr = put_X5Y7(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4367)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX4Y8 ( ) {
    double _result = 0;
    HRESULT _hr = get_X4Y8(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4368)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX4Y8 ( double pRetVal ) {
    HRESULT _hr = put_X4Y8(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4369)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX3Y9 ( ) {
    double _result = 0;
    HRESULT _hr = get_X3Y9(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4370)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX3Y9 ( double pRetVal ) {
    HRESULT _hr = put_X3Y9(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4371)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX2Y10 ( ) {
    double _result = 0;
    HRESULT _hr = get_X2Y10(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4372)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX2Y10 ( double pRetVal ) {
    HRESULT _hr = put_X2Y10(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4373)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX1Y11 ( ) {
    double _result = 0;
    HRESULT _hr = get_X1Y11(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4374)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX1Y11 ( double pRetVal ) {
    HRESULT _hr = put_X1Y11(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4375)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX0Y12 ( ) {
    double _result = 0;
    HRESULT _hr = get_X0Y12(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4376)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX0Y12 ( double pRetVal ) {
    HRESULT _hr = put_X0Y12(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4377)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX13Y0 ( ) {
    double _result = 0;
    HRESULT _hr = get_X13Y0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4378)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX13Y0 ( double pRetVal ) {
    HRESULT _hr = put_X13Y0(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4379)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX12Y1 ( ) {
    double _result = 0;
    HRESULT _hr = get_X12Y1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4380)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX12Y1 ( double pRetVal ) {
    HRESULT _hr = put_X12Y1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4381)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX11Y2 ( ) {
    double _result = 0;
    HRESULT _hr = get_X11Y2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4382)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX11Y2 ( double pRetVal ) {
    HRESULT _hr = put_X11Y2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4383)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX10Y3 ( ) {
    double _result = 0;
    HRESULT _hr = get_X10Y3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4384)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX10Y3 ( double pRetVal ) {
    HRESULT _hr = put_X10Y3(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4385)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX9Y4 ( ) {
    double _result = 0;
    HRESULT _hr = get_X9Y4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4386)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX9Y4 ( double pRetVal ) {
    HRESULT _hr = put_X9Y4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4387)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX8Y5 ( ) {
    double _result = 0;
    HRESULT _hr = get_X8Y5(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4388)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX8Y5 ( double pRetVal ) {
    HRESULT _hr = put_X8Y5(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4389)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX7Y6 ( ) {
    double _result = 0;
    HRESULT _hr = get_X7Y6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4390)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX7Y6 ( double pRetVal ) {
    HRESULT _hr = put_X7Y6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4391)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX6Y7 ( ) {
    double _result = 0;
    HRESULT _hr = get_X6Y7(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4392)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX6Y7 ( double pRetVal ) {
    HRESULT _hr = put_X6Y7(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4393)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX5Y8 ( ) {
    double _result = 0;
    HRESULT _hr = get_X5Y8(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4394)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX5Y8 ( double pRetVal ) {
    HRESULT _hr = put_X5Y8(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4395)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX4Y9 ( ) {
    double _result = 0;
    HRESULT _hr = get_X4Y9(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4396)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX4Y9 ( double pRetVal ) {
    HRESULT _hr = put_X4Y9(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4397)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX3Y10 ( ) {
    double _result = 0;
    HRESULT _hr = get_X3Y10(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4398)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX3Y10 ( double pRetVal ) {
    HRESULT _hr = put_X3Y10(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4399)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX2Y11 ( ) {
    double _result = 0;
    HRESULT _hr = get_X2Y11(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4400)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX2Y11 ( double pRetVal ) {
    HRESULT _hr = put_X2Y11(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4401)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX1Y12 ( ) {
    double _result = 0;
    HRESULT _hr = get_X1Y12(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4402)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX1Y12 ( double pRetVal ) {
    HRESULT _hr = put_X1Y12(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4403)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX0Y13 ( ) {
    double _result = 0;
    HRESULT _hr = get_X0Y13(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4404)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX0Y13 ( double pRetVal ) {
    HRESULT _hr = put_X0Y13(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4405)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX14Y0 ( ) {
    double _result = 0;
    HRESULT _hr = get_X14Y0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4406)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX14Y0 ( double pRetVal ) {
    HRESULT _hr = put_X14Y0(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4407)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX13Y1 ( ) {
    double _result = 0;
    HRESULT _hr = get_X13Y1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4408)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX13Y1 ( double pRetVal ) {
    HRESULT _hr = put_X13Y1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4409)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX12Y2 ( ) {
    double _result = 0;
    HRESULT _hr = get_X12Y2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4410)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX12Y2 ( double pRetVal ) {
    HRESULT _hr = put_X12Y2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4411)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX11Y3 ( ) {
    double _result = 0;
    HRESULT _hr = get_X11Y3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4412)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX11Y3 ( double pRetVal ) {
    HRESULT _hr = put_X11Y3(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4413)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX10Y4 ( ) {
    double _result = 0;
    HRESULT _hr = get_X10Y4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4414)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX10Y4 ( double pRetVal ) {
    HRESULT _hr = put_X10Y4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4415)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX9Y5 ( ) {
    double _result = 0;
    HRESULT _hr = get_X9Y5(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4416)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX9Y5 ( double pRetVal ) {
    HRESULT _hr = put_X9Y5(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4417)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX8Y6 ( ) {
    double _result = 0;
    HRESULT _hr = get_X8Y6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4418)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX8Y6 ( double pRetVal ) {
    HRESULT _hr = put_X8Y6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4419)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX7Y7 ( ) {
    double _result = 0;
    HRESULT _hr = get_X7Y7(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4420)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX7Y7 ( double pRetVal ) {
    HRESULT _hr = put_X7Y7(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4421)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX6Y8 ( ) {
    double _result = 0;
    HRESULT _hr = get_X6Y8(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4422)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX6Y8 ( double pRetVal ) {
    HRESULT _hr = put_X6Y8(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4423)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX5Y9 ( ) {
    double _result = 0;
    HRESULT _hr = get_X5Y9(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4424)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX5Y9 ( double pRetVal ) {
    HRESULT _hr = put_X5Y9(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4425)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX4Y10 ( ) {
    double _result = 0;
    HRESULT _hr = get_X4Y10(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4426)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX4Y10 ( double pRetVal ) {
    HRESULT _hr = put_X4Y10(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4427)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX3Y11 ( ) {
    double _result = 0;
    HRESULT _hr = get_X3Y11(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4428)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX3Y11 ( double pRetVal ) {
    HRESULT _hr = put_X3Y11(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4429)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX2Y12 ( ) {
    double _result = 0;
    HRESULT _hr = get_X2Y12(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4430)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX2Y12 ( double pRetVal ) {
    HRESULT _hr = put_X2Y12(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4431)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX1Y13 ( ) {
    double _result = 0;
    HRESULT _hr = get_X1Y13(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4432)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX1Y13 ( double pRetVal ) {
    HRESULT _hr = put_X1Y13(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4433)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX0Y14 ( ) {
    double _result = 0;
    HRESULT _hr = get_X0Y14(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4434)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX0Y14 ( double pRetVal ) {
    HRESULT _hr = put_X0Y14(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4435)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX15Y0 ( ) {
    double _result = 0;
    HRESULT _hr = get_X15Y0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4436)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX15Y0 ( double pRetVal ) {
    HRESULT _hr = put_X15Y0(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4437)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX14Y1 ( ) {
    double _result = 0;
    HRESULT _hr = get_X14Y1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4438)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX14Y1 ( double pRetVal ) {
    HRESULT _hr = put_X14Y1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4439)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX13Y2 ( ) {
    double _result = 0;
    HRESULT _hr = get_X13Y2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4440)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX13Y2 ( double pRetVal ) {
    HRESULT _hr = put_X13Y2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4441)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX12Y3 ( ) {
    double _result = 0;
    HRESULT _hr = get_X12Y3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4442)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX12Y3 ( double pRetVal ) {
    HRESULT _hr = put_X12Y3(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4443)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX11Y4 ( ) {
    double _result = 0;
    HRESULT _hr = get_X11Y4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4444)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX11Y4 ( double pRetVal ) {
    HRESULT _hr = put_X11Y4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4445)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX10Y5 ( ) {
    double _result = 0;
    HRESULT _hr = get_X10Y5(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4446)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX10Y5 ( double pRetVal ) {
    HRESULT _hr = put_X10Y5(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4447)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX9Y6 ( ) {
    double _result = 0;
    HRESULT _hr = get_X9Y6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4448)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX9Y6 ( double pRetVal ) {
    HRESULT _hr = put_X9Y6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4449)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX8Y7 ( ) {
    double _result = 0;
    HRESULT _hr = get_X8Y7(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4450)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX8Y7 ( double pRetVal ) {
    HRESULT _hr = put_X8Y7(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4451)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX7Y8 ( ) {
    double _result = 0;
    HRESULT _hr = get_X7Y8(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4452)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX7Y8 ( double pRetVal ) {
    HRESULT _hr = put_X7Y8(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4453)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX6Y9 ( ) {
    double _result = 0;
    HRESULT _hr = get_X6Y9(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4454)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX6Y9 ( double pRetVal ) {
    HRESULT _hr = put_X6Y9(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4455)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX5Y10 ( ) {
    double _result = 0;
    HRESULT _hr = get_X5Y10(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4456)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX5Y10 ( double pRetVal ) {
    HRESULT _hr = put_X5Y10(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4457)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX4Y11 ( ) {
    double _result = 0;
    HRESULT _hr = get_X4Y11(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4458)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX4Y11 ( double pRetVal ) {
    HRESULT _hr = put_X4Y11(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4459)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX3Y12 ( ) {
    double _result = 0;
    HRESULT _hr = get_X3Y12(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4460)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX3Y12 ( double pRetVal ) {
    HRESULT _hr = put_X3Y12(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4461)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX2Y13 ( ) {
    double _result = 0;
    HRESULT _hr = get_X2Y13(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4462)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX2Y13 ( double pRetVal ) {
    HRESULT _hr = put_X2Y13(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4463)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX1Y14 ( ) {
    double _result = 0;
    HRESULT _hr = get_X1Y14(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4464)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX1Y14 ( double pRetVal ) {
    HRESULT _hr = put_X1Y14(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4465)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX0Y15 ( ) {
    double _result = 0;
    HRESULT _hr = get_X0Y15(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4466)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX0Y15 ( double pRetVal ) {
    HRESULT _hr = put_X0Y15(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4467)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX16Y0 ( ) {
    double _result = 0;
    HRESULT _hr = get_X16Y0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4468)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX16Y0 ( double pRetVal ) {
    HRESULT _hr = put_X16Y0(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4469)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX15Y1 ( ) {
    double _result = 0;
    HRESULT _hr = get_X15Y1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4470)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX15Y1 ( double pRetVal ) {
    HRESULT _hr = put_X15Y1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4471)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX14Y2 ( ) {
    double _result = 0;
    HRESULT _hr = get_X14Y2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4472)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX14Y2 ( double pRetVal ) {
    HRESULT _hr = put_X14Y2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4473)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX13Y3 ( ) {
    double _result = 0;
    HRESULT _hr = get_X13Y3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4474)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX13Y3 ( double pRetVal ) {
    HRESULT _hr = put_X13Y3(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4475)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX12Y4 ( ) {
    double _result = 0;
    HRESULT _hr = get_X12Y4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4476)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX12Y4 ( double pRetVal ) {
    HRESULT _hr = put_X12Y4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4477)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX11Y5 ( ) {
    double _result = 0;
    HRESULT _hr = get_X11Y5(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4478)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX11Y5 ( double pRetVal ) {
    HRESULT _hr = put_X11Y5(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4479)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX10Y6 ( ) {
    double _result = 0;
    HRESULT _hr = get_X10Y6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4480)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX10Y6 ( double pRetVal ) {
    HRESULT _hr = put_X10Y6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4481)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX9Y7 ( ) {
    double _result = 0;
    HRESULT _hr = get_X9Y7(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4482)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX9Y7 ( double pRetVal ) {
    HRESULT _hr = put_X9Y7(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4483)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX8Y8 ( ) {
    double _result = 0;
    HRESULT _hr = get_X8Y8(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4484)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX8Y8 ( double pRetVal ) {
    HRESULT _hr = put_X8Y8(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4485)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX7Y9 ( ) {
    double _result = 0;
    HRESULT _hr = get_X7Y9(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4486)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX7Y9 ( double pRetVal ) {
    HRESULT _hr = put_X7Y9(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4487)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX6Y10 ( ) {
    double _result = 0;
    HRESULT _hr = get_X6Y10(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4488)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX6Y10 ( double pRetVal ) {
    HRESULT _hr = put_X6Y10(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4489)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX5Y11 ( ) {
    double _result = 0;
    HRESULT _hr = get_X5Y11(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4490)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX5Y11 ( double pRetVal ) {
    HRESULT _hr = put_X5Y11(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4491)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX4Y12 ( ) {
    double _result = 0;
    HRESULT _hr = get_X4Y12(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4492)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX4Y12 ( double pRetVal ) {
    HRESULT _hr = put_X4Y12(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4493)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX3Y13 ( ) {
    double _result = 0;
    HRESULT _hr = get_X3Y13(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4494)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX3Y13 ( double pRetVal ) {
    HRESULT _hr = put_X3Y13(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4495)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX2Y14 ( ) {
    double _result = 0;
    HRESULT _hr = get_X2Y14(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4496)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX2Y14 ( double pRetVal ) {
    HRESULT _hr = put_X2Y14(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4497)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX1Y15 ( ) {
    double _result = 0;
    HRESULT _hr = get_X1Y15(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4498)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX1Y15 ( double pRetVal ) {
    HRESULT _hr = put_X1Y15(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4499)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX0Y16 ( ) {
    double _result = 0;
    HRESULT _hr = get_X0Y16(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4500)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX0Y16 ( double pRetVal ) {
    HRESULT _hr = put_X0Y16(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4501)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX17Y0 ( ) {
    double _result = 0;
    HRESULT _hr = get_X17Y0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4502)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX17Y0 ( double pRetVal ) {
    HRESULT _hr = put_X17Y0(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4503)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX16Y1 ( ) {
    double _result = 0;
    HRESULT _hr = get_X16Y1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4504)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX16Y1 ( double pRetVal ) {
    HRESULT _hr = put_X16Y1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4505)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX15Y2 ( ) {
    double _result = 0;
    HRESULT _hr = get_X15Y2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4506)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX15Y2 ( double pRetVal ) {
    HRESULT _hr = put_X15Y2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4507)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX14Y3 ( ) {
    double _result = 0;
    HRESULT _hr = get_X14Y3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4508)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX14Y3 ( double pRetVal ) {
    HRESULT _hr = put_X14Y3(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4509)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX13Y4 ( ) {
    double _result = 0;
    HRESULT _hr = get_X13Y4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4510)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX13Y4 ( double pRetVal ) {
    HRESULT _hr = put_X13Y4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4511)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX12Y5 ( ) {
    double _result = 0;
    HRESULT _hr = get_X12Y5(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4512)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX12Y5 ( double pRetVal ) {
    HRESULT _hr = put_X12Y5(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4513)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX11Y6 ( ) {
    double _result = 0;
    HRESULT _hr = get_X11Y6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4514)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX11Y6 ( double pRetVal ) {
    HRESULT _hr = put_X11Y6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4515)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX10Y7 ( ) {
    double _result = 0;
    HRESULT _hr = get_X10Y7(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4516)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX10Y7 ( double pRetVal ) {
    HRESULT _hr = put_X10Y7(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4517)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX9Y8 ( ) {
    double _result = 0;
    HRESULT _hr = get_X9Y8(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4518)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX9Y8 ( double pRetVal ) {
    HRESULT _hr = put_X9Y8(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4519)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX8Y9 ( ) {
    double _result = 0;
    HRESULT _hr = get_X8Y9(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4520)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX8Y9 ( double pRetVal ) {
    HRESULT _hr = put_X8Y9(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4521)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX7Y10 ( ) {
    double _result = 0;
    HRESULT _hr = get_X7Y10(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4522)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX7Y10 ( double pRetVal ) {
    HRESULT _hr = put_X7Y10(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4523)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX6Y11 ( ) {
    double _result = 0;
    HRESULT _hr = get_X6Y11(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4524)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX6Y11 ( double pRetVal ) {
    HRESULT _hr = put_X6Y11(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4525)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX5Y12 ( ) {
    double _result = 0;
    HRESULT _hr = get_X5Y12(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4526)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX5Y12 ( double pRetVal ) {
    HRESULT _hr = put_X5Y12(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4527)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX4Y13 ( ) {
    double _result = 0;
    HRESULT _hr = get_X4Y13(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4528)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX4Y13 ( double pRetVal ) {
    HRESULT _hr = put_X4Y13(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4529)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX3Y14 ( ) {
    double _result = 0;
    HRESULT _hr = get_X3Y14(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4530)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX3Y14 ( double pRetVal ) {
    HRESULT _hr = put_X3Y14(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4531)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX2Y15 ( ) {
    double _result = 0;
    HRESULT _hr = get_X2Y15(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4532)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX2Y15 ( double pRetVal ) {
    HRESULT _hr = put_X2Y15(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4533)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX1Y16 ( ) {
    double _result = 0;
    HRESULT _hr = get_X1Y16(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4534)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX1Y16 ( double pRetVal ) {
    HRESULT _hr = put_X1Y16(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4535)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX0Y17 ( ) {
    double _result = 0;
    HRESULT _hr = get_X0Y17(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4536)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX0Y17 ( double pRetVal ) {
    HRESULT _hr = put_X0Y17(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4537)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX18Y0 ( ) {
    double _result = 0;
    HRESULT _hr = get_X18Y0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4538)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX18Y0 ( double pRetVal ) {
    HRESULT _hr = put_X18Y0(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4539)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX17Y1 ( ) {
    double _result = 0;
    HRESULT _hr = get_X17Y1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4540)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX17Y1 ( double pRetVal ) {
    HRESULT _hr = put_X17Y1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4541)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX16Y2 ( ) {
    double _result = 0;
    HRESULT _hr = get_X16Y2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4542)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX16Y2 ( double pRetVal ) {
    HRESULT _hr = put_X16Y2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4543)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX15Y3 ( ) {
    double _result = 0;
    HRESULT _hr = get_X15Y3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4544)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX15Y3 ( double pRetVal ) {
    HRESULT _hr = put_X15Y3(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4545)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX14Y4 ( ) {
    double _result = 0;
    HRESULT _hr = get_X14Y4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4546)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX14Y4 ( double pRetVal ) {
    HRESULT _hr = put_X14Y4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4547)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX13Y5 ( ) {
    double _result = 0;
    HRESULT _hr = get_X13Y5(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4548)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX13Y5 ( double pRetVal ) {
    HRESULT _hr = put_X13Y5(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4549)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX12Y6 ( ) {
    double _result = 0;
    HRESULT _hr = get_X12Y6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4550)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX12Y6 ( double pRetVal ) {
    HRESULT _hr = put_X12Y6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4551)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX11Y7 ( ) {
    double _result = 0;
    HRESULT _hr = get_X11Y7(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4552)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX11Y7 ( double pRetVal ) {
    HRESULT _hr = put_X11Y7(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4553)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX10Y8 ( ) {
    double _result = 0;
    HRESULT _hr = get_X10Y8(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4554)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX10Y8 ( double pRetVal ) {
    HRESULT _hr = put_X10Y8(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4555)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX9Y9 ( ) {
    double _result = 0;
    HRESULT _hr = get_X9Y9(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4556)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX9Y9 ( double pRetVal ) {
    HRESULT _hr = put_X9Y9(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4557)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX8Y10 ( ) {
    double _result = 0;
    HRESULT _hr = get_X8Y10(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4558)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX8Y10 ( double pRetVal ) {
    HRESULT _hr = put_X8Y10(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4559)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX7Y11 ( ) {
    double _result = 0;
    HRESULT _hr = get_X7Y11(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4560)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX7Y11 ( double pRetVal ) {
    HRESULT _hr = put_X7Y11(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4561)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX6Y12 ( ) {
    double _result = 0;
    HRESULT _hr = get_X6Y12(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4562)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX6Y12 ( double pRetVal ) {
    HRESULT _hr = put_X6Y12(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4563)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX5Y13 ( ) {
    double _result = 0;
    HRESULT _hr = get_X5Y13(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4564)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX5Y13 ( double pRetVal ) {
    HRESULT _hr = put_X5Y13(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4565)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX4Y14 ( ) {
    double _result = 0;
    HRESULT _hr = get_X4Y14(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4566)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX4Y14 ( double pRetVal ) {
    HRESULT _hr = put_X4Y14(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4567)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX3Y15 ( ) {
    double _result = 0;
    HRESULT _hr = get_X3Y15(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4568)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX3Y15 ( double pRetVal ) {
    HRESULT _hr = put_X3Y15(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4569)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX2Y16 ( ) {
    double _result = 0;
    HRESULT _hr = get_X2Y16(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4570)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX2Y16 ( double pRetVal ) {
    HRESULT _hr = put_X2Y16(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4571)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX1Y17 ( ) {
    double _result = 0;
    HRESULT _hr = get_X1Y17(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4572)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX1Y17 ( double pRetVal ) {
    HRESULT _hr = put_X1Y17(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4573)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX0Y18 ( ) {
    double _result = 0;
    HRESULT _hr = get_X0Y18(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4574)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX0Y18 ( double pRetVal ) {
    HRESULT _hr = put_X0Y18(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4575)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX19Y0 ( ) {
    double _result = 0;
    HRESULT _hr = get_X19Y0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4576)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX19Y0 ( double pRetVal ) {
    HRESULT _hr = put_X19Y0(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4577)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX18Y1 ( ) {
    double _result = 0;
    HRESULT _hr = get_X18Y1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4578)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX18Y1 ( double pRetVal ) {
    HRESULT _hr = put_X18Y1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4579)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX17Y2 ( ) {
    double _result = 0;
    HRESULT _hr = get_X17Y2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4580)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX17Y2 ( double pRetVal ) {
    HRESULT _hr = put_X17Y2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4581)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX16Y3 ( ) {
    double _result = 0;
    HRESULT _hr = get_X16Y3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4582)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX16Y3 ( double pRetVal ) {
    HRESULT _hr = put_X16Y3(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4583)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX15Y4 ( ) {
    double _result = 0;
    HRESULT _hr = get_X15Y4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4584)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX15Y4 ( double pRetVal ) {
    HRESULT _hr = put_X15Y4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4585)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX14Y5 ( ) {
    double _result = 0;
    HRESULT _hr = get_X14Y5(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4586)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX14Y5 ( double pRetVal ) {
    HRESULT _hr = put_X14Y5(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4587)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX13Y6 ( ) {
    double _result = 0;
    HRESULT _hr = get_X13Y6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4588)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX13Y6 ( double pRetVal ) {
    HRESULT _hr = put_X13Y6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4589)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX12Y7 ( ) {
    double _result = 0;
    HRESULT _hr = get_X12Y7(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4590)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX12Y7 ( double pRetVal ) {
    HRESULT _hr = put_X12Y7(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4591)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX11Y8 ( ) {
    double _result = 0;
    HRESULT _hr = get_X11Y8(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4592)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX11Y8 ( double pRetVal ) {
    HRESULT _hr = put_X11Y8(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4593)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX10Y9 ( ) {
    double _result = 0;
    HRESULT _hr = get_X10Y9(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4594)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX10Y9 ( double pRetVal ) {
    HRESULT _hr = put_X10Y9(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4595)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX9Y10 ( ) {
    double _result = 0;
    HRESULT _hr = get_X9Y10(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4596)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX9Y10 ( double pRetVal ) {
    HRESULT _hr = put_X9Y10(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4597)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX8Y11 ( ) {
    double _result = 0;
    HRESULT _hr = get_X8Y11(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4598)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX8Y11 ( double pRetVal ) {
    HRESULT _hr = put_X8Y11(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4599)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX7Y12 ( ) {
    double _result = 0;
    HRESULT _hr = get_X7Y12(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4600)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX7Y12 ( double pRetVal ) {
    HRESULT _hr = put_X7Y12(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4601)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX6Y13 ( ) {
    double _result = 0;
    HRESULT _hr = get_X6Y13(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4602)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX6Y13 ( double pRetVal ) {
    HRESULT _hr = put_X6Y13(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4603)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX5Y14 ( ) {
    double _result = 0;
    HRESULT _hr = get_X5Y14(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4604)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX5Y14 ( double pRetVal ) {
    HRESULT _hr = put_X5Y14(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4605)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX4Y15 ( ) {
    double _result = 0;
    HRESULT _hr = get_X4Y15(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4606)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX4Y15 ( double pRetVal ) {
    HRESULT _hr = put_X4Y15(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4607)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX3Y16 ( ) {
    double _result = 0;
    HRESULT _hr = get_X3Y16(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4608)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX3Y16 ( double pRetVal ) {
    HRESULT _hr = put_X3Y16(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4609)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX2Y17 ( ) {
    double _result = 0;
    HRESULT _hr = get_X2Y17(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4610)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX2Y17 ( double pRetVal ) {
    HRESULT _hr = put_X2Y17(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4611)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX1Y18 ( ) {
    double _result = 0;
    HRESULT _hr = get_X1Y18(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4612)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX1Y18 ( double pRetVal ) {
    HRESULT _hr = put_X1Y18(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4613)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX0Y19 ( ) {
    double _result = 0;
    HRESULT _hr = get_X0Y19(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4614)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX0Y19 ( double pRetVal ) {
    HRESULT _hr = put_X0Y19(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4615)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX20Y0 ( ) {
    double _result = 0;
    HRESULT _hr = get_X20Y0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4616)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX20Y0 ( double pRetVal ) {
    HRESULT _hr = put_X20Y0(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4617)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX19Y1 ( ) {
    double _result = 0;
    HRESULT _hr = get_X19Y1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4618)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX19Y1 ( double pRetVal ) {
    HRESULT _hr = put_X19Y1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4619)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX18Y2 ( ) {
    double _result = 0;
    HRESULT _hr = get_X18Y2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4620)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX18Y2 ( double pRetVal ) {
    HRESULT _hr = put_X18Y2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4621)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX17Y3 ( ) {
    double _result = 0;
    HRESULT _hr = get_X17Y3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4622)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX17Y3 ( double pRetVal ) {
    HRESULT _hr = put_X17Y3(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4623)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX16Y4 ( ) {
    double _result = 0;
    HRESULT _hr = get_X16Y4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4624)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX16Y4 ( double pRetVal ) {
    HRESULT _hr = put_X16Y4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4625)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX15Y5 ( ) {
    double _result = 0;
    HRESULT _hr = get_X15Y5(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4626)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX15Y5 ( double pRetVal ) {
    HRESULT _hr = put_X15Y5(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4627)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX14Y6 ( ) {
    double _result = 0;
    HRESULT _hr = get_X14Y6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4628)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX14Y6 ( double pRetVal ) {
    HRESULT _hr = put_X14Y6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4629)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX13Y7 ( ) {
    double _result = 0;
    HRESULT _hr = get_X13Y7(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4630)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX13Y7 ( double pRetVal ) {
    HRESULT _hr = put_X13Y7(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4631)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX12Y8 ( ) {
    double _result = 0;
    HRESULT _hr = get_X12Y8(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4632)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX12Y8 ( double pRetVal ) {
    HRESULT _hr = put_X12Y8(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4633)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX11Y9 ( ) {
    double _result = 0;
    HRESULT _hr = get_X11Y9(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4634)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX11Y9 ( double pRetVal ) {
    HRESULT _hr = put_X11Y9(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4635)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX10Y10 ( ) {
    double _result = 0;
    HRESULT _hr = get_X10Y10(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4636)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX10Y10 ( double pRetVal ) {
    HRESULT _hr = put_X10Y10(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4637)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX9Y11 ( ) {
    double _result = 0;
    HRESULT _hr = get_X9Y11(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4638)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX9Y11 ( double pRetVal ) {
    HRESULT _hr = put_X9Y11(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4639)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX8Y12 ( ) {
    double _result = 0;
    HRESULT _hr = get_X8Y12(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4640)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX8Y12 ( double pRetVal ) {
    HRESULT _hr = put_X8Y12(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4641)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX7Y13 ( ) {
    double _result = 0;
    HRESULT _hr = get_X7Y13(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4642)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX7Y13 ( double pRetVal ) {
    HRESULT _hr = put_X7Y13(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4643)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX6Y14 ( ) {
    double _result = 0;
    HRESULT _hr = get_X6Y14(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4644)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX6Y14 ( double pRetVal ) {
    HRESULT _hr = put_X6Y14(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4645)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX5Y15 ( ) {
    double _result = 0;
    HRESULT _hr = get_X5Y15(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4646)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX5Y15 ( double pRetVal ) {
    HRESULT _hr = put_X5Y15(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4647)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX4Y16 ( ) {
    double _result = 0;
    HRESULT _hr = get_X4Y16(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4648)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX4Y16 ( double pRetVal ) {
    HRESULT _hr = put_X4Y16(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4649)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX3Y17 ( ) {
    double _result = 0;
    HRESULT _hr = get_X3Y17(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4650)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX3Y17 ( double pRetVal ) {
    HRESULT _hr = put_X3Y17(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4651)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX2Y18 ( ) {
    double _result = 0;
    HRESULT _hr = get_X2Y18(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4652)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX2Y18 ( double pRetVal ) {
    HRESULT _hr = put_X2Y18(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4653)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX1Y19 ( ) {
    double _result = 0;
    HRESULT _hr = get_X1Y19(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4654)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX1Y19 ( double pRetVal ) {
    HRESULT _hr = put_X1Y19(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4655)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX0Y20 ( ) {
    double _result = 0;
    HRESULT _hr = get_X0Y20(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4656)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX0Y20 ( double pRetVal ) {
    HRESULT _hr = put_X0Y20(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4657)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX21Y0 ( ) {
    double _result = 0;
    HRESULT _hr = get_X21Y0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4658)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX21Y0 ( double pRetVal ) {
    HRESULT _hr = put_X21Y0(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4659)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX20Y1 ( ) {
    double _result = 0;
    HRESULT _hr = get_X20Y1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4660)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX20Y1 ( double pRetVal ) {
    HRESULT _hr = put_X20Y1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4661)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX19Y2 ( ) {
    double _result = 0;
    HRESULT _hr = get_X19Y2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4662)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX19Y2 ( double pRetVal ) {
    HRESULT _hr = put_X19Y2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4663)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX18Y3 ( ) {
    double _result = 0;
    HRESULT _hr = get_X18Y3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4664)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX18Y3 ( double pRetVal ) {
    HRESULT _hr = put_X18Y3(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4665)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX17Y4 ( ) {
    double _result = 0;
    HRESULT _hr = get_X17Y4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4666)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX17Y4 ( double pRetVal ) {
    HRESULT _hr = put_X17Y4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4667)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX16Y5 ( ) {
    double _result = 0;
    HRESULT _hr = get_X16Y5(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4668)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX16Y5 ( double pRetVal ) {
    HRESULT _hr = put_X16Y5(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4669)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX15Y6 ( ) {
    double _result = 0;
    HRESULT _hr = get_X15Y6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4670)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX15Y6 ( double pRetVal ) {
    HRESULT _hr = put_X15Y6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4671)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX14Y7 ( ) {
    double _result = 0;
    HRESULT _hr = get_X14Y7(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4672)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX14Y7 ( double pRetVal ) {
    HRESULT _hr = put_X14Y7(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4673)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX13Y8 ( ) {
    double _result = 0;
    HRESULT _hr = get_X13Y8(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4674)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX13Y8 ( double pRetVal ) {
    HRESULT _hr = put_X13Y8(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4675)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX12Y9 ( ) {
    double _result = 0;
    HRESULT _hr = get_X12Y9(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4676)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX12Y9 ( double pRetVal ) {
    HRESULT _hr = put_X12Y9(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4677)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX11Y10 ( ) {
    double _result = 0;
    HRESULT _hr = get_X11Y10(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4678)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX11Y10 ( double pRetVal ) {
    HRESULT _hr = put_X11Y10(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4679)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX10Y11 ( ) {
    double _result = 0;
    HRESULT _hr = get_X10Y11(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4680)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX10Y11 ( double pRetVal ) {
    HRESULT _hr = put_X10Y11(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4681)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX9Y12 ( ) {
    double _result = 0;
    HRESULT _hr = get_X9Y12(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4682)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX9Y12 ( double pRetVal ) {
    HRESULT _hr = put_X9Y12(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4683)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX8Y13 ( ) {
    double _result = 0;
    HRESULT _hr = get_X8Y13(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4684)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX8Y13 ( double pRetVal ) {
    HRESULT _hr = put_X8Y13(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4685)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX7Y14 ( ) {
    double _result = 0;
    HRESULT _hr = get_X7Y14(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4686)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX7Y14 ( double pRetVal ) {
    HRESULT _hr = put_X7Y14(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4687)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX6Y15 ( ) {
    double _result = 0;
    HRESULT _hr = get_X6Y15(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4688)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX6Y15 ( double pRetVal ) {
    HRESULT _hr = put_X6Y15(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4689)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX5Y16 ( ) {
    double _result = 0;
    HRESULT _hr = get_X5Y16(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4690)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX5Y16 ( double pRetVal ) {
    HRESULT _hr = put_X5Y16(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4691)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX4Y17 ( ) {
    double _result = 0;
    HRESULT _hr = get_X4Y17(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4692)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX4Y17 ( double pRetVal ) {
    HRESULT _hr = put_X4Y17(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4693)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX3Y18 ( ) {
    double _result = 0;
    HRESULT _hr = get_X3Y18(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4694)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX3Y18 ( double pRetVal ) {
    HRESULT _hr = put_X3Y18(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4695)
inline double ZOSAPI_Interfaces::IObjectXYPolynomial::GetX2Y19 ( ) {
    double _result = 0;
    HRESULT _hr = get_X2Y19(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4696)
inline void ZOSAPI_Interfaces::IObjectXYPolynomial::PutX2Y19 ( double pRetVal ) {
    HRESULT _hr = put_X2Y19(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectBinary1 wrapper method implementations
//

#pragma implementation_key(4697)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary1::GetRadius1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Radius1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4698)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary1::GetConic1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Conic1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4699)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary1::GetClear1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Clear1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4700)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary1::GetEdge1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Edge1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4701)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary1::GetThicknessCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ThicknessCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4702)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary1::GetRadius2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Radius2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4703)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary1::GetConic2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Conic2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4704)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary1::GetClear2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Clear2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4705)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary1::GetEdge2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Edge2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4706)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary1::GetOrderCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_OrderCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4707)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary1::GetNormRadiusCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NormRadiusCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4708)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary1::GetMaxTermNumberCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_MaxTermNumberCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4709)
inline double ZOSAPI_Interfaces::IObjectBinary1::GetRadius1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Radius1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4710)
inline void ZOSAPI_Interfaces::IObjectBinary1::PutRadius1 ( double pRetVal ) {
    HRESULT _hr = put_Radius1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4711)
inline double ZOSAPI_Interfaces::IObjectBinary1::GetConic1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Conic1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4712)
inline void ZOSAPI_Interfaces::IObjectBinary1::PutConic1 ( double pRetVal ) {
    HRESULT _hr = put_Conic1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4713)
inline double ZOSAPI_Interfaces::IObjectBinary1::GetClear1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Clear1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4714)
inline void ZOSAPI_Interfaces::IObjectBinary1::PutClear1 ( double pRetVal ) {
    HRESULT _hr = put_Clear1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4715)
inline double ZOSAPI_Interfaces::IObjectBinary1::GetEdge1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Edge1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4716)
inline void ZOSAPI_Interfaces::IObjectBinary1::PutEdge1 ( double pRetVal ) {
    HRESULT _hr = put_Edge1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4717)
inline double ZOSAPI_Interfaces::IObjectBinary1::GetThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_Thickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4718)
inline void ZOSAPI_Interfaces::IObjectBinary1::PutThickness ( double pRetVal ) {
    HRESULT _hr = put_Thickness(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4719)
inline double ZOSAPI_Interfaces::IObjectBinary1::GetRadius2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Radius2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4720)
inline void ZOSAPI_Interfaces::IObjectBinary1::PutRadius2 ( double pRetVal ) {
    HRESULT _hr = put_Radius2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4721)
inline double ZOSAPI_Interfaces::IObjectBinary1::GetConic2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Conic2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4722)
inline void ZOSAPI_Interfaces::IObjectBinary1::PutConic2 ( double pRetVal ) {
    HRESULT _hr = put_Conic2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4723)
inline double ZOSAPI_Interfaces::IObjectBinary1::GetClear2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Clear2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4724)
inline void ZOSAPI_Interfaces::IObjectBinary1::PutClear2 ( double pRetVal ) {
    HRESULT _hr = put_Clear2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4725)
inline double ZOSAPI_Interfaces::IObjectBinary1::GetEdge2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Edge2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4726)
inline void ZOSAPI_Interfaces::IObjectBinary1::PutEdge2 ( double pRetVal ) {
    HRESULT _hr = put_Edge2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4727)
inline double ZOSAPI_Interfaces::IObjectBinary1::GetOrder ( ) {
    double _result = 0;
    HRESULT _hr = get_Order(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4728)
inline void ZOSAPI_Interfaces::IObjectBinary1::PutOrder ( double pRetVal ) {
    HRESULT _hr = put_Order(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4729)
inline double ZOSAPI_Interfaces::IObjectBinary1::GetNormRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_NormRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4730)
inline void ZOSAPI_Interfaces::IObjectBinary1::PutNormRadius ( double pRetVal ) {
    HRESULT _hr = put_NormRadius(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4731)
inline long ZOSAPI_Interfaces::IObjectBinary1::GetMaxTermNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_MaxTermNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4732)
inline void ZOSAPI_Interfaces::IObjectBinary1::PutMaxTermNumber ( long pRetVal ) {
    HRESULT _hr = put_MaxTermNumber(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectBinary2 wrapper method implementations
//

#pragma implementation_key(4733)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2::GetRadius1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Radius1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4734)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2::GetConic1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Conic1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4735)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2::GetClear1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Clear1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4736)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2::GetEdge1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Edge1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4737)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2::GetThicknessCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ThicknessCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4738)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2::GetRadius2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Radius2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4739)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2::GetConic2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Conic2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4740)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2::GetClear2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Clear2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4741)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2::GetEdge2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Edge2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4742)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2::GetOrderCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_OrderCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4743)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2::GetNormRadiusCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NormRadiusCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4744)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2::GetMaxTermNumberCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_MaxTermNumberCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4745)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2::GetCoeffOnPPower2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffOnPPower2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4746)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2::GetCoeffOnPPower4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffOnPPower4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4747)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2::GetCoeffOnPPower6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffOnPPower6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4748)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2::GetCoeffOnPPower8Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffOnPPower8Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4749)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2::GetCoeffOnPPower10Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffOnPPower10Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4750)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2::GetCoeffOnPPower12Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffOnPPower12Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4751)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2::GetCoeffOnPPower14Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffOnPPower14Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4752)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2::GetCoeffOnPPower16Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffOnPPower16Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4753)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2::GetCoeffOnPPower18Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffOnPPower18Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4754)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2::GetCoeffOnPPower20Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffOnPPower20Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4755)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2::GetCoeffOnPPower22Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffOnPPower22Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4756)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2::GetCoeffOnPPower24Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffOnPPower24Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4757)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2::GetCoeffOnPPower26Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffOnPPower26Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4758)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2::GetCoeffOnPPower28Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffOnPPower28Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4759)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2::GetCoeffOnPPower30Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffOnPPower30Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4760)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2::GetCoeffOnPPower32Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffOnPPower32Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4761)
inline double ZOSAPI_Interfaces::IObjectBinary2::GetRadius1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Radius1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4762)
inline void ZOSAPI_Interfaces::IObjectBinary2::PutRadius1 ( double pRetVal ) {
    HRESULT _hr = put_Radius1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4763)
inline double ZOSAPI_Interfaces::IObjectBinary2::GetConic1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Conic1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4764)
inline void ZOSAPI_Interfaces::IObjectBinary2::PutConic1 ( double pRetVal ) {
    HRESULT _hr = put_Conic1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4765)
inline double ZOSAPI_Interfaces::IObjectBinary2::GetClear1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Clear1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4766)
inline void ZOSAPI_Interfaces::IObjectBinary2::PutClear1 ( double pRetVal ) {
    HRESULT _hr = put_Clear1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4767)
inline double ZOSAPI_Interfaces::IObjectBinary2::GetEdge1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Edge1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4768)
inline void ZOSAPI_Interfaces::IObjectBinary2::PutEdge1 ( double pRetVal ) {
    HRESULT _hr = put_Edge1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4769)
inline double ZOSAPI_Interfaces::IObjectBinary2::GetThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_Thickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4770)
inline void ZOSAPI_Interfaces::IObjectBinary2::PutThickness ( double pRetVal ) {
    HRESULT _hr = put_Thickness(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4771)
inline double ZOSAPI_Interfaces::IObjectBinary2::GetRadius2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Radius2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4772)
inline void ZOSAPI_Interfaces::IObjectBinary2::PutRadius2 ( double pRetVal ) {
    HRESULT _hr = put_Radius2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4773)
inline double ZOSAPI_Interfaces::IObjectBinary2::GetConic2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Conic2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4774)
inline void ZOSAPI_Interfaces::IObjectBinary2::PutConic2 ( double pRetVal ) {
    HRESULT _hr = put_Conic2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4775)
inline double ZOSAPI_Interfaces::IObjectBinary2::GetClear2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Clear2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4776)
inline void ZOSAPI_Interfaces::IObjectBinary2::PutClear2 ( double pRetVal ) {
    HRESULT _hr = put_Clear2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4777)
inline double ZOSAPI_Interfaces::IObjectBinary2::GetEdge2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Edge2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4778)
inline void ZOSAPI_Interfaces::IObjectBinary2::PutEdge2 ( double pRetVal ) {
    HRESULT _hr = put_Edge2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4779)
inline double ZOSAPI_Interfaces::IObjectBinary2::GetOrder ( ) {
    double _result = 0;
    HRESULT _hr = get_Order(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4780)
inline void ZOSAPI_Interfaces::IObjectBinary2::PutOrder ( double pRetVal ) {
    HRESULT _hr = put_Order(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4781)
inline double ZOSAPI_Interfaces::IObjectBinary2::GetNormRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_NormRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4782)
inline void ZOSAPI_Interfaces::IObjectBinary2::PutNormRadius ( double pRetVal ) {
    HRESULT _hr = put_NormRadius(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4783)
inline long ZOSAPI_Interfaces::IObjectBinary2::GetMaxTermNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_MaxTermNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4784)
inline void ZOSAPI_Interfaces::IObjectBinary2::PutMaxTermNumber ( long pRetVal ) {
    HRESULT _hr = put_MaxTermNumber(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4785)
inline double ZOSAPI_Interfaces::IObjectBinary2::GetCoeffOnPPower2 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffOnPPower2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4786)
inline void ZOSAPI_Interfaces::IObjectBinary2::PutCoeffOnPPower2 ( double pRetVal ) {
    HRESULT _hr = put_CoeffOnPPower2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4787)
inline double ZOSAPI_Interfaces::IObjectBinary2::GetCoeffOnPPower4 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffOnPPower4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4788)
inline void ZOSAPI_Interfaces::IObjectBinary2::PutCoeffOnPPower4 ( double pRetVal ) {
    HRESULT _hr = put_CoeffOnPPower4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4789)
inline double ZOSAPI_Interfaces::IObjectBinary2::GetCoeffOnPPower6 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffOnPPower6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4790)
inline void ZOSAPI_Interfaces::IObjectBinary2::PutCoeffOnPPower6 ( double pRetVal ) {
    HRESULT _hr = put_CoeffOnPPower6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4791)
inline double ZOSAPI_Interfaces::IObjectBinary2::GetCoeffOnPPower8 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffOnPPower8(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4792)
inline void ZOSAPI_Interfaces::IObjectBinary2::PutCoeffOnPPower8 ( double pRetVal ) {
    HRESULT _hr = put_CoeffOnPPower8(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4793)
inline double ZOSAPI_Interfaces::IObjectBinary2::GetCoeffOnPPower10 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffOnPPower10(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4794)
inline void ZOSAPI_Interfaces::IObjectBinary2::PutCoeffOnPPower10 ( double pRetVal ) {
    HRESULT _hr = put_CoeffOnPPower10(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4795)
inline double ZOSAPI_Interfaces::IObjectBinary2::GetCoeffOnPPower12 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffOnPPower12(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4796)
inline void ZOSAPI_Interfaces::IObjectBinary2::PutCoeffOnPPower12 ( double pRetVal ) {
    HRESULT _hr = put_CoeffOnPPower12(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4797)
inline double ZOSAPI_Interfaces::IObjectBinary2::GetCoeffOnPPower14 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffOnPPower14(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4798)
inline void ZOSAPI_Interfaces::IObjectBinary2::PutCoeffOnPPower14 ( double pRetVal ) {
    HRESULT _hr = put_CoeffOnPPower14(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4799)
inline double ZOSAPI_Interfaces::IObjectBinary2::GetCoeffOnPPower16 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffOnPPower16(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4800)
inline void ZOSAPI_Interfaces::IObjectBinary2::PutCoeffOnPPower16 ( double pRetVal ) {
    HRESULT _hr = put_CoeffOnPPower16(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4801)
inline double ZOSAPI_Interfaces::IObjectBinary2::GetCoeffOnPPower18 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffOnPPower18(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4802)
inline void ZOSAPI_Interfaces::IObjectBinary2::PutCoeffOnPPower18 ( double pRetVal ) {
    HRESULT _hr = put_CoeffOnPPower18(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4803)
inline double ZOSAPI_Interfaces::IObjectBinary2::GetCoeffOnPPower20 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffOnPPower20(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4804)
inline void ZOSAPI_Interfaces::IObjectBinary2::PutCoeffOnPPower20 ( double pRetVal ) {
    HRESULT _hr = put_CoeffOnPPower20(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4805)
inline double ZOSAPI_Interfaces::IObjectBinary2::GetCoeffOnPPower22 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffOnPPower22(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4806)
inline void ZOSAPI_Interfaces::IObjectBinary2::PutCoeffOnPPower22 ( double pRetVal ) {
    HRESULT _hr = put_CoeffOnPPower22(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4807)
inline double ZOSAPI_Interfaces::IObjectBinary2::GetCoeffOnPPower24 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffOnPPower24(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4808)
inline void ZOSAPI_Interfaces::IObjectBinary2::PutCoeffOnPPower24 ( double pRetVal ) {
    HRESULT _hr = put_CoeffOnPPower24(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4809)
inline double ZOSAPI_Interfaces::IObjectBinary2::GetCoeffOnPPower26 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffOnPPower26(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4810)
inline void ZOSAPI_Interfaces::IObjectBinary2::PutCoeffOnPPower26 ( double pRetVal ) {
    HRESULT _hr = put_CoeffOnPPower26(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4811)
inline double ZOSAPI_Interfaces::IObjectBinary2::GetCoeffOnPPower28 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffOnPPower28(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4812)
inline void ZOSAPI_Interfaces::IObjectBinary2::PutCoeffOnPPower28 ( double pRetVal ) {
    HRESULT _hr = put_CoeffOnPPower28(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4813)
inline double ZOSAPI_Interfaces::IObjectBinary2::GetCoeffOnPPower30 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffOnPPower30(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4814)
inline void ZOSAPI_Interfaces::IObjectBinary2::PutCoeffOnPPower30 ( double pRetVal ) {
    HRESULT _hr = put_CoeffOnPPower30(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4815)
inline double ZOSAPI_Interfaces::IObjectBinary2::GetCoeffOnPPower32 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffOnPPower32(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4816)
inline void ZOSAPI_Interfaces::IObjectBinary2::PutCoeffOnPPower32 ( double pRetVal ) {
    HRESULT _hr = put_CoeffOnPPower32(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectBinary2A wrapper method implementations
//

#pragma implementation_key(4817)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2A::GetRadialApertureCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RadialApertureCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4818)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2A::GetThicknessCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ThicknessCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4819)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2A::GetRadius1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Radius1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4820)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2A::GetConic1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Conic1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4821)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2A::GetCoeff1OnRPower2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff1OnRPower2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4822)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2A::GetCoeff1OnRPower4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff1OnRPower4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4823)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2A::GetCoeff1OnRPower6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff1OnRPower6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4824)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2A::GetCoeff1OnRPower8Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff1OnRPower8Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4825)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2A::GetCoeff1OnRPower10Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff1OnRPower10Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4826)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2A::GetCoeff1OnRPower12Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff1OnRPower12Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4827)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2A::GetCoeff1OnRPower14Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff1OnRPower14Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4828)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2A::GetCoeff1OnRPower16Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff1OnRPower16Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4829)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2A::GetCoeff1OnRPower18Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff1OnRPower18Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4830)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2A::GetCoeff1OnRPower20Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff1OnRPower20Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4831)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2A::GetCoeff1OnRPower22Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff1OnRPower22Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4832)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2A::GetCoeff1OnRPower24Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff1OnRPower24Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4833)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2A::GetRadius2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Radius2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4834)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2A::GetConic2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Conic2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4835)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2A::GetCoeff2OnRPower2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff2OnRPower2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4836)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2A::GetCoeff2OnRPower4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff2OnRPower4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4837)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2A::GetCoeff2OnRPower6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff2OnRPower6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4838)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2A::GetCoeff2OnRPower8Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff2OnRPower8Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4839)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2A::GetCoeff2OnRPower10Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff2OnRPower10Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4840)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2A::GetCoeff2OnRPower12Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff2OnRPower12Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4841)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2A::GetCoeff2OnRPower14Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff2OnRPower14Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4842)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2A::GetCoeff2OnRPower16Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff2OnRPower16Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4843)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2A::GetCoeff2OnRPower18Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff2OnRPower18Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4844)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2A::GetCoeff2OnRPower20Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff2OnRPower20Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4845)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2A::GetCoeff2OnRPower22Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff2OnRPower22Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4846)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2A::GetCoeff2OnRPower24Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff2OnRPower24Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4847)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2A::GetOrderCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_OrderCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4848)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2A::GetNormRadiusCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NormRadiusCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4849)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2A::GetMaxTermNumberCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_MaxTermNumberCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4850)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2A::GetCoeffOnPPower2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffOnPPower2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4851)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2A::GetCoeffOnPPower4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffOnPPower4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4852)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2A::GetCoeffOnPPower6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffOnPPower6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4853)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2A::GetCoeffOnPPower8Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffOnPPower8Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4854)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2A::GetCoeffOnPPower10Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffOnPPower10Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4855)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2A::GetCoeffOnPPower12Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffOnPPower12Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4856)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2A::GetCoeffOnPPower14Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffOnPPower14Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4857)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2A::GetCoeffOnPPower16Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffOnPPower16Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4858)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2A::GetCoeffOnPPower18Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffOnPPower18Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4859)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2A::GetCoeffOnPPower20Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffOnPPower20Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4860)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2A::GetCoeffOnPPower22Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffOnPPower22Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4861)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBinary2A::GetCoeffOnPPower24Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffOnPPower24Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4862)
inline double ZOSAPI_Interfaces::IObjectBinary2A::GetRadialAperture ( ) {
    double _result = 0;
    HRESULT _hr = get_RadialAperture(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4863)
inline void ZOSAPI_Interfaces::IObjectBinary2A::PutRadialAperture ( double pRetVal ) {
    HRESULT _hr = put_RadialAperture(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4864)
inline double ZOSAPI_Interfaces::IObjectBinary2A::GetThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_Thickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4865)
inline void ZOSAPI_Interfaces::IObjectBinary2A::PutThickness ( double pRetVal ) {
    HRESULT _hr = put_Thickness(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4866)
inline double ZOSAPI_Interfaces::IObjectBinary2A::GetRadius1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Radius1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4867)
inline void ZOSAPI_Interfaces::IObjectBinary2A::PutRadius1 ( double pRetVal ) {
    HRESULT _hr = put_Radius1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4868)
inline double ZOSAPI_Interfaces::IObjectBinary2A::GetConic1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Conic1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4869)
inline void ZOSAPI_Interfaces::IObjectBinary2A::PutConic1 ( double pRetVal ) {
    HRESULT _hr = put_Conic1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4870)
inline double ZOSAPI_Interfaces::IObjectBinary2A::GetCoeff1OnRPower2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff1OnRPower2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4871)
inline void ZOSAPI_Interfaces::IObjectBinary2A::PutCoeff1OnRPower2 ( double pRetVal ) {
    HRESULT _hr = put_Coeff1OnRPower2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4872)
inline double ZOSAPI_Interfaces::IObjectBinary2A::GetCoeff1OnRPower4 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff1OnRPower4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4873)
inline void ZOSAPI_Interfaces::IObjectBinary2A::PutCoeff1OnRPower4 ( double pRetVal ) {
    HRESULT _hr = put_Coeff1OnRPower4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4874)
inline double ZOSAPI_Interfaces::IObjectBinary2A::GetCoeff1OnRPower6 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff1OnRPower6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4875)
inline void ZOSAPI_Interfaces::IObjectBinary2A::PutCoeff1OnRPower6 ( double pRetVal ) {
    HRESULT _hr = put_Coeff1OnRPower6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4876)
inline double ZOSAPI_Interfaces::IObjectBinary2A::GetCoeff1OnRPower8 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff1OnRPower8(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4877)
inline void ZOSAPI_Interfaces::IObjectBinary2A::PutCoeff1OnRPower8 ( double pRetVal ) {
    HRESULT _hr = put_Coeff1OnRPower8(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4878)
inline double ZOSAPI_Interfaces::IObjectBinary2A::GetCoeff1OnRPower10 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff1OnRPower10(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4879)
inline void ZOSAPI_Interfaces::IObjectBinary2A::PutCoeff1OnRPower10 ( double pRetVal ) {
    HRESULT _hr = put_Coeff1OnRPower10(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4880)
inline double ZOSAPI_Interfaces::IObjectBinary2A::GetCoeff1OnRPower12 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff1OnRPower12(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4881)
inline void ZOSAPI_Interfaces::IObjectBinary2A::PutCoeff1OnRPower12 ( double pRetVal ) {
    HRESULT _hr = put_Coeff1OnRPower12(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4882)
inline double ZOSAPI_Interfaces::IObjectBinary2A::GetCoeff1OnRPower14 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff1OnRPower14(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4883)
inline void ZOSAPI_Interfaces::IObjectBinary2A::PutCoeff1OnRPower14 ( double pRetVal ) {
    HRESULT _hr = put_Coeff1OnRPower14(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4884)
inline double ZOSAPI_Interfaces::IObjectBinary2A::GetCoeff1OnRPower16 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff1OnRPower16(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4885)
inline void ZOSAPI_Interfaces::IObjectBinary2A::PutCoeff1OnRPower16 ( double pRetVal ) {
    HRESULT _hr = put_Coeff1OnRPower16(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4886)
inline double ZOSAPI_Interfaces::IObjectBinary2A::GetCoeff1OnRPower18 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff1OnRPower18(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4887)
inline void ZOSAPI_Interfaces::IObjectBinary2A::PutCoeff1OnRPower18 ( double pRetVal ) {
    HRESULT _hr = put_Coeff1OnRPower18(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4888)
inline double ZOSAPI_Interfaces::IObjectBinary2A::GetCoeff1OnRPower20 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff1OnRPower20(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4889)
inline void ZOSAPI_Interfaces::IObjectBinary2A::PutCoeff1OnRPower20 ( double pRetVal ) {
    HRESULT _hr = put_Coeff1OnRPower20(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4890)
inline double ZOSAPI_Interfaces::IObjectBinary2A::GetCoeff1OnRPower22 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff1OnRPower22(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4891)
inline void ZOSAPI_Interfaces::IObjectBinary2A::PutCoeff1OnRPower22 ( double pRetVal ) {
    HRESULT _hr = put_Coeff1OnRPower22(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4892)
inline double ZOSAPI_Interfaces::IObjectBinary2A::GetCoeff1OnRPower24 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff1OnRPower24(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4893)
inline void ZOSAPI_Interfaces::IObjectBinary2A::PutCoeff1OnRPower24 ( double pRetVal ) {
    HRESULT _hr = put_Coeff1OnRPower24(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4894)
inline double ZOSAPI_Interfaces::IObjectBinary2A::GetRadius2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Radius2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4895)
inline void ZOSAPI_Interfaces::IObjectBinary2A::PutRadius2 ( double pRetVal ) {
    HRESULT _hr = put_Radius2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4896)
inline double ZOSAPI_Interfaces::IObjectBinary2A::GetConic2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Conic2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4897)
inline void ZOSAPI_Interfaces::IObjectBinary2A::PutConic2 ( double pRetVal ) {
    HRESULT _hr = put_Conic2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4898)
inline double ZOSAPI_Interfaces::IObjectBinary2A::GetCoeff2OnRPower2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff2OnRPower2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4899)
inline void ZOSAPI_Interfaces::IObjectBinary2A::PutCoeff2OnRPower2 ( double pRetVal ) {
    HRESULT _hr = put_Coeff2OnRPower2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4900)
inline double ZOSAPI_Interfaces::IObjectBinary2A::GetCoeff2OnRPower4 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff2OnRPower4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4901)
inline void ZOSAPI_Interfaces::IObjectBinary2A::PutCoeff2OnRPower4 ( double pRetVal ) {
    HRESULT _hr = put_Coeff2OnRPower4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4902)
inline double ZOSAPI_Interfaces::IObjectBinary2A::GetCoeff2OnRPower6 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff2OnRPower6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4903)
inline void ZOSAPI_Interfaces::IObjectBinary2A::PutCoeff2OnRPower6 ( double pRetVal ) {
    HRESULT _hr = put_Coeff2OnRPower6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4904)
inline double ZOSAPI_Interfaces::IObjectBinary2A::GetCoeff2OnRPower8 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff2OnRPower8(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4905)
inline void ZOSAPI_Interfaces::IObjectBinary2A::PutCoeff2OnRPower8 ( double pRetVal ) {
    HRESULT _hr = put_Coeff2OnRPower8(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4906)
inline double ZOSAPI_Interfaces::IObjectBinary2A::GetCoeff2OnRPower10 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff2OnRPower10(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4907)
inline void ZOSAPI_Interfaces::IObjectBinary2A::PutCoeff2OnRPower10 ( double pRetVal ) {
    HRESULT _hr = put_Coeff2OnRPower10(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4908)
inline double ZOSAPI_Interfaces::IObjectBinary2A::GetCoeff2OnRPower12 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff2OnRPower12(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4909)
inline void ZOSAPI_Interfaces::IObjectBinary2A::PutCoeff2OnRPower12 ( double pRetVal ) {
    HRESULT _hr = put_Coeff2OnRPower12(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4910)
inline double ZOSAPI_Interfaces::IObjectBinary2A::GetCoeff2OnRPower14 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff2OnRPower14(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4911)
inline void ZOSAPI_Interfaces::IObjectBinary2A::PutCoeff2OnRPower14 ( double pRetVal ) {
    HRESULT _hr = put_Coeff2OnRPower14(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4912)
inline double ZOSAPI_Interfaces::IObjectBinary2A::GetCoeff2OnRPower16 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff2OnRPower16(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4913)
inline void ZOSAPI_Interfaces::IObjectBinary2A::PutCoeff2OnRPower16 ( double pRetVal ) {
    HRESULT _hr = put_Coeff2OnRPower16(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4914)
inline double ZOSAPI_Interfaces::IObjectBinary2A::GetCoeff2OnRPower18 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff2OnRPower18(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4915)
inline void ZOSAPI_Interfaces::IObjectBinary2A::PutCoeff2OnRPower18 ( double pRetVal ) {
    HRESULT _hr = put_Coeff2OnRPower18(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4916)
inline double ZOSAPI_Interfaces::IObjectBinary2A::GetCoeff2OnRPower20 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff2OnRPower20(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4917)
inline void ZOSAPI_Interfaces::IObjectBinary2A::PutCoeff2OnRPower20 ( double pRetVal ) {
    HRESULT _hr = put_Coeff2OnRPower20(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4918)
inline double ZOSAPI_Interfaces::IObjectBinary2A::GetCoeff2OnRPower22 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff2OnRPower22(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4919)
inline void ZOSAPI_Interfaces::IObjectBinary2A::PutCoeff2OnRPower22 ( double pRetVal ) {
    HRESULT _hr = put_Coeff2OnRPower22(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4920)
inline double ZOSAPI_Interfaces::IObjectBinary2A::GetCoeff2OnRPower24 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff2OnRPower24(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4921)
inline void ZOSAPI_Interfaces::IObjectBinary2A::PutCoeff2OnRPower24 ( double pRetVal ) {
    HRESULT _hr = put_Coeff2OnRPower24(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4922)
inline double ZOSAPI_Interfaces::IObjectBinary2A::GetOrder ( ) {
    double _result = 0;
    HRESULT _hr = get_Order(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4923)
inline void ZOSAPI_Interfaces::IObjectBinary2A::PutOrder ( double pRetVal ) {
    HRESULT _hr = put_Order(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4924)
inline double ZOSAPI_Interfaces::IObjectBinary2A::GetNormRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_NormRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4925)
inline void ZOSAPI_Interfaces::IObjectBinary2A::PutNormRadius ( double pRetVal ) {
    HRESULT _hr = put_NormRadius(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4926)
inline long ZOSAPI_Interfaces::IObjectBinary2A::GetMaxTermNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_MaxTermNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4927)
inline void ZOSAPI_Interfaces::IObjectBinary2A::PutMaxTermNumber ( long pRetVal ) {
    HRESULT _hr = put_MaxTermNumber(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4928)
inline double ZOSAPI_Interfaces::IObjectBinary2A::GetCoeffOnPPower2 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffOnPPower2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4929)
inline void ZOSAPI_Interfaces::IObjectBinary2A::PutCoeffOnPPower2 ( double pRetVal ) {
    HRESULT _hr = put_CoeffOnPPower2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4930)
inline double ZOSAPI_Interfaces::IObjectBinary2A::GetCoeffOnPPower4 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffOnPPower4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4931)
inline void ZOSAPI_Interfaces::IObjectBinary2A::PutCoeffOnPPower4 ( double pRetVal ) {
    HRESULT _hr = put_CoeffOnPPower4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4932)
inline double ZOSAPI_Interfaces::IObjectBinary2A::GetCoeffOnPPower6 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffOnPPower6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4933)
inline void ZOSAPI_Interfaces::IObjectBinary2A::PutCoeffOnPPower6 ( double pRetVal ) {
    HRESULT _hr = put_CoeffOnPPower6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4934)
inline double ZOSAPI_Interfaces::IObjectBinary2A::GetCoeffOnPPower8 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffOnPPower8(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4935)
inline void ZOSAPI_Interfaces::IObjectBinary2A::PutCoeffOnPPower8 ( double pRetVal ) {
    HRESULT _hr = put_CoeffOnPPower8(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4936)
inline double ZOSAPI_Interfaces::IObjectBinary2A::GetCoeffOnPPower10 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffOnPPower10(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4937)
inline void ZOSAPI_Interfaces::IObjectBinary2A::PutCoeffOnPPower10 ( double pRetVal ) {
    HRESULT _hr = put_CoeffOnPPower10(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4938)
inline double ZOSAPI_Interfaces::IObjectBinary2A::GetCoeffOnPPower12 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffOnPPower12(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4939)
inline void ZOSAPI_Interfaces::IObjectBinary2A::PutCoeffOnPPower12 ( double pRetVal ) {
    HRESULT _hr = put_CoeffOnPPower12(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4940)
inline double ZOSAPI_Interfaces::IObjectBinary2A::GetCoeffOnPPower14 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffOnPPower14(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4941)
inline void ZOSAPI_Interfaces::IObjectBinary2A::PutCoeffOnPPower14 ( double pRetVal ) {
    HRESULT _hr = put_CoeffOnPPower14(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4942)
inline double ZOSAPI_Interfaces::IObjectBinary2A::GetCoeffOnPPower16 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffOnPPower16(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4943)
inline void ZOSAPI_Interfaces::IObjectBinary2A::PutCoeffOnPPower16 ( double pRetVal ) {
    HRESULT _hr = put_CoeffOnPPower16(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4944)
inline double ZOSAPI_Interfaces::IObjectBinary2A::GetCoeffOnPPower18 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffOnPPower18(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4945)
inline void ZOSAPI_Interfaces::IObjectBinary2A::PutCoeffOnPPower18 ( double pRetVal ) {
    HRESULT _hr = put_CoeffOnPPower18(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4946)
inline double ZOSAPI_Interfaces::IObjectBinary2A::GetCoeffOnPPower20 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffOnPPower20(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4947)
inline void ZOSAPI_Interfaces::IObjectBinary2A::PutCoeffOnPPower20 ( double pRetVal ) {
    HRESULT _hr = put_CoeffOnPPower20(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4948)
inline double ZOSAPI_Interfaces::IObjectBinary2A::GetCoeffOnPPower22 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffOnPPower22(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4949)
inline void ZOSAPI_Interfaces::IObjectBinary2A::PutCoeffOnPPower22 ( double pRetVal ) {
    HRESULT _hr = put_CoeffOnPPower22(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4950)
inline double ZOSAPI_Interfaces::IObjectBinary2A::GetCoeffOnPPower24 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffOnPPower24(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4951)
inline void ZOSAPI_Interfaces::IObjectBinary2A::PutCoeffOnPPower24 ( double pRetVal ) {
    HRESULT _hr = put_CoeffOnPPower24(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectBoolean wrapper method implementations
//

#pragma implementation_key(4952)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBoolean::GetSplineCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_SplineCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4953)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBoolean::GetModeCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ModeCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4954)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBoolean::GetNumberXminusVoxels_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberXminusVoxels_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4955)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBoolean::GetNumberYminusVoxels_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberYminusVoxels_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4956)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBoolean::GetNumberZminusVoxels_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberZminusVoxels_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4957)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBoolean::GetObjectACell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ObjectACell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4958)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBoolean::GetObjectBCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ObjectBCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4959)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBoolean::GetObjectCCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ObjectCCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4960)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBoolean::GetObjectDCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ObjectDCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4961)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBoolean::GetObjectECell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ObjectECell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4962)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBoolean::GetObjectFCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ObjectFCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4963)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBoolean::GetObjectGCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ObjectGCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4964)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBoolean::GetObjectHCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ObjectHCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4965)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBoolean::GetObjectICell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ObjectICell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4966)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectBoolean::GetObjectJCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ObjectJCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4967)
inline long ZOSAPI_Interfaces::IObjectBoolean::GetSpline ( ) {
    long _result = 0;
    HRESULT _hr = get_Spline(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4968)
inline void ZOSAPI_Interfaces::IObjectBoolean::PutSpline ( long pRetVal ) {
    HRESULT _hr = put_Spline(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4969)
inline long ZOSAPI_Interfaces::IObjectBoolean::GetMode ( ) {
    long _result = 0;
    HRESULT _hr = get_Mode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4970)
inline void ZOSAPI_Interfaces::IObjectBoolean::PutMode ( long pRetVal ) {
    HRESULT _hr = put_Mode(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4971)
inline long ZOSAPI_Interfaces::IObjectBoolean::GetNumberXminusVoxels ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberXminusVoxels(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4972)
inline void ZOSAPI_Interfaces::IObjectBoolean::PutNumberXminusVoxels ( long pRetVal ) {
    HRESULT _hr = put_NumberXminusVoxels(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4973)
inline long ZOSAPI_Interfaces::IObjectBoolean::GetNumberYminusVoxels ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberYminusVoxels(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4974)
inline void ZOSAPI_Interfaces::IObjectBoolean::PutNumberYminusVoxels ( long pRetVal ) {
    HRESULT _hr = put_NumberYminusVoxels(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4975)
inline long ZOSAPI_Interfaces::IObjectBoolean::GetNumberZminusVoxels ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberZminusVoxels(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4976)
inline void ZOSAPI_Interfaces::IObjectBoolean::PutNumberZminusVoxels ( long pRetVal ) {
    HRESULT _hr = put_NumberZminusVoxels(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4977)
inline long ZOSAPI_Interfaces::IObjectBoolean::GetObjectA ( ) {
    long _result = 0;
    HRESULT _hr = get_ObjectA(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4978)
inline void ZOSAPI_Interfaces::IObjectBoolean::PutObjectA ( long pRetVal ) {
    HRESULT _hr = put_ObjectA(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4979)
inline long ZOSAPI_Interfaces::IObjectBoolean::GetObjectB ( ) {
    long _result = 0;
    HRESULT _hr = get_ObjectB(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4980)
inline void ZOSAPI_Interfaces::IObjectBoolean::PutObjectB ( long pRetVal ) {
    HRESULT _hr = put_ObjectB(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4981)
inline long ZOSAPI_Interfaces::IObjectBoolean::GetObjectC ( ) {
    long _result = 0;
    HRESULT _hr = get_ObjectC(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4982)
inline void ZOSAPI_Interfaces::IObjectBoolean::PutObjectC ( long pRetVal ) {
    HRESULT _hr = put_ObjectC(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4983)
inline long ZOSAPI_Interfaces::IObjectBoolean::GetObjectD ( ) {
    long _result = 0;
    HRESULT _hr = get_ObjectD(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4984)
inline void ZOSAPI_Interfaces::IObjectBoolean::PutObjectD ( long pRetVal ) {
    HRESULT _hr = put_ObjectD(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4985)
inline long ZOSAPI_Interfaces::IObjectBoolean::GetObjectE ( ) {
    long _result = 0;
    HRESULT _hr = get_ObjectE(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4986)
inline void ZOSAPI_Interfaces::IObjectBoolean::PutObjectE ( long pRetVal ) {
    HRESULT _hr = put_ObjectE(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4987)
inline long ZOSAPI_Interfaces::IObjectBoolean::GetObjectF ( ) {
    long _result = 0;
    HRESULT _hr = get_ObjectF(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4988)
inline void ZOSAPI_Interfaces::IObjectBoolean::PutObjectF ( long pRetVal ) {
    HRESULT _hr = put_ObjectF(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4989)
inline long ZOSAPI_Interfaces::IObjectBoolean::GetObjectG ( ) {
    long _result = 0;
    HRESULT _hr = get_ObjectG(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4990)
inline void ZOSAPI_Interfaces::IObjectBoolean::PutObjectG ( long pRetVal ) {
    HRESULT _hr = put_ObjectG(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4991)
inline long ZOSAPI_Interfaces::IObjectBoolean::GetObjectH ( ) {
    long _result = 0;
    HRESULT _hr = get_ObjectH(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4992)
inline void ZOSAPI_Interfaces::IObjectBoolean::PutObjectH ( long pRetVal ) {
    HRESULT _hr = put_ObjectH(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4993)
inline long ZOSAPI_Interfaces::IObjectBoolean::GetObjectI ( ) {
    long _result = 0;
    HRESULT _hr = get_ObjectI(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4994)
inline void ZOSAPI_Interfaces::IObjectBoolean::PutObjectI ( long pRetVal ) {
    HRESULT _hr = put_ObjectI(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4995)
inline long ZOSAPI_Interfaces::IObjectBoolean::GetObjectJ ( ) {
    long _result = 0;
    HRESULT _hr = get_ObjectJ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4996)
inline void ZOSAPI_Interfaces::IObjectBoolean::PutObjectJ ( long pRetVal ) {
    HRESULT _hr = put_ObjectJ(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectCADAssemblyAutodeskInventor wrapper method implementations
//

#pragma implementation_key(4997)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectCADAssemblyAutodeskInventor::GetExplodeCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ExplodeCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(4998)
inline VARIANT_BOOL ZOSAPI_Interfaces::IObjectCADAssemblyAutodeskInventor::GetExplode ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Explode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4999)
inline void ZOSAPI_Interfaces::IObjectCADAssemblyAutodeskInventor::PutExplode ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_Explode(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectCADAssemblyCreoParametric wrapper method implementations
//

#pragma implementation_key(5000)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectCADAssemblyCreoParametric::GetExplodeCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ExplodeCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5001)
inline VARIANT_BOOL ZOSAPI_Interfaces::IObjectCADAssemblyCreoParametric::GetExplode ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Explode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5002)
inline void ZOSAPI_Interfaces::IObjectCADAssemblyCreoParametric::PutExplode ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_Explode(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectCADAssemblySolidWorks wrapper method implementations
//

#pragma implementation_key(5003)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectCADAssemblySolidWorks::GetExplodeCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ExplodeCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5004)
inline VARIANT_BOOL ZOSAPI_Interfaces::IObjectCADAssemblySolidWorks::GetExplode ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Explode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5005)
inline void ZOSAPI_Interfaces::IObjectCADAssemblySolidWorks::PutExplode ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_Explode(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectCADPartSTEPIGESSAT wrapper method implementations
//

#pragma implementation_key(5006)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectCADPartSTEPIGESSAT::GetScaleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ScaleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5007)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectCADPartSTEPIGESSAT::GetModeCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ModeCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5008)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectCADPartSTEPIGESSAT::GetNumberXMinusVoxelsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberXMinusVoxelsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5009)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectCADPartSTEPIGESSAT::GetNumberYMinusVoxelsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberYMinusVoxelsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5010)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectCADPartSTEPIGESSAT::GetNumberZMinusVoxelsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberZMinusVoxelsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5011)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectCADPartSTEPIGESSAT::GetExplodeCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ExplodeCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5012)
inline double ZOSAPI_Interfaces::IObjectCADPartSTEPIGESSAT::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5013)
inline void ZOSAPI_Interfaces::IObjectCADPartSTEPIGESSAT::PutScale ( double pRetVal ) {
    HRESULT _hr = put_Scale(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5014)
inline long ZOSAPI_Interfaces::IObjectCADPartSTEPIGESSAT::GetMode ( ) {
    long _result = 0;
    HRESULT _hr = get_Mode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5015)
inline void ZOSAPI_Interfaces::IObjectCADPartSTEPIGESSAT::PutMode ( long pRetVal ) {
    HRESULT _hr = put_Mode(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5016)
inline long ZOSAPI_Interfaces::IObjectCADPartSTEPIGESSAT::GetNumberXminusVoxels ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberXminusVoxels(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5017)
inline void ZOSAPI_Interfaces::IObjectCADPartSTEPIGESSAT::PutNumberXminusVoxels ( long pRetVal ) {
    HRESULT _hr = put_NumberXminusVoxels(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5018)
inline long ZOSAPI_Interfaces::IObjectCADPartSTEPIGESSAT::GetNumberYminusVoxels ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberYminusVoxels(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5019)
inline void ZOSAPI_Interfaces::IObjectCADPartSTEPIGESSAT::PutNumberYminusVoxels ( long pRetVal ) {
    HRESULT _hr = put_NumberYminusVoxels(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5020)
inline long ZOSAPI_Interfaces::IObjectCADPartSTEPIGESSAT::GetNumberZminusVoxels ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberZminusVoxels(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5021)
inline void ZOSAPI_Interfaces::IObjectCADPartSTEPIGESSAT::PutNumberZminusVoxels ( long pRetVal ) {
    HRESULT _hr = put_NumberZminusVoxels(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5022)
inline VARIANT_BOOL ZOSAPI_Interfaces::IObjectCADPartSTEPIGESSAT::GetExplode ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Explode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5023)
inline void ZOSAPI_Interfaces::IObjectCADPartSTEPIGESSAT::PutExplode ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_Explode(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectCADPartSTL wrapper method implementations
//

#pragma implementation_key(5024)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectCADPartSTL::GetScaleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ScaleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5025)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectCADPartSTL::GetIsVolumeCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_IsVolumeCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5026)
inline double ZOSAPI_Interfaces::IObjectCADPartSTL::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5027)
inline void ZOSAPI_Interfaces::IObjectCADPartSTL::PutScale ( double pRetVal ) {
    HRESULT _hr = put_Scale(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5028)
inline VARIANT_BOOL ZOSAPI_Interfaces::IObjectCADPartSTL::GetIsVolume ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsVolume(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5029)
inline void ZOSAPI_Interfaces::IObjectCADPartSTL::PutIsVolume ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsVolume(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectCone wrapper method implementations
//

#pragma implementation_key(5030)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectCone::GetZ1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Z1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5031)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectCone::GetRadius1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Radius1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5032)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectCone::GetZ2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Z2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5033)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectCone::GetRadius2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Radius2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5034)
inline double ZOSAPI_Interfaces::IObjectCone::GetZ1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Z1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5035)
inline void ZOSAPI_Interfaces::IObjectCone::PutZ1 ( double pRetVal ) {
    HRESULT _hr = put_Z1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5036)
inline double ZOSAPI_Interfaces::IObjectCone::GetRadius1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Radius1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5037)
inline void ZOSAPI_Interfaces::IObjectCone::PutRadius1 ( double pRetVal ) {
    HRESULT _hr = put_Radius1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5038)
inline double ZOSAPI_Interfaces::IObjectCone::GetZ2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Z2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5039)
inline void ZOSAPI_Interfaces::IObjectCone::PutZ2 ( double pRetVal ) {
    HRESULT _hr = put_Z2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5040)
inline double ZOSAPI_Interfaces::IObjectCone::GetRadius2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Radius2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5041)
inline void ZOSAPI_Interfaces::IObjectCone::PutRadius2 ( double pRetVal ) {
    HRESULT _hr = put_Radius2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectCPC wrapper method implementations
//

#pragma implementation_key(5042)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectCPC::GetRadialApertureCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RadialApertureCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5043)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectCPC::GetAngleDegreesCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_AngleDegreesCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5044)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectCPC::GetLengthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_LengthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5045)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectCPC::GetIsVolumeCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_IsVolumeCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5046)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectCPC::GetVolumeIndexCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_VolumeIndexCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5047)
inline double ZOSAPI_Interfaces::IObjectCPC::GetRadialAperture ( ) {
    double _result = 0;
    HRESULT _hr = get_RadialAperture(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5048)
inline void ZOSAPI_Interfaces::IObjectCPC::PutRadialAperture ( double pRetVal ) {
    HRESULT _hr = put_RadialAperture(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5049)
inline double ZOSAPI_Interfaces::IObjectCPC::GetAngleDegrees ( ) {
    double _result = 0;
    HRESULT _hr = get_AngleDegrees(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5050)
inline void ZOSAPI_Interfaces::IObjectCPC::PutAngleDegrees ( double pRetVal ) {
    HRESULT _hr = put_AngleDegrees(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5051)
inline double ZOSAPI_Interfaces::IObjectCPC::GetLength ( ) {
    double _result = 0;
    HRESULT _hr = get_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5052)
inline void ZOSAPI_Interfaces::IObjectCPC::PutLength ( double pRetVal ) {
    HRESULT _hr = put_Length(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5053)
inline VARIANT_BOOL ZOSAPI_Interfaces::IObjectCPC::GetIsVolume ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsVolume(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5054)
inline void ZOSAPI_Interfaces::IObjectCPC::PutIsVolume ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsVolume(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5055)
inline double ZOSAPI_Interfaces::IObjectCPC::GetVolumeIndex ( ) {
    double _result = 0;
    HRESULT _hr = get_VolumeIndex(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5056)
inline void ZOSAPI_Interfaces::IObjectCPC::PutVolumeIndex ( double pRetVal ) {
    HRESULT _hr = put_VolumeIndex(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectCPCRectangular wrapper method implementations
//

#pragma implementation_key(5057)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectCPCRectangular::GetXApertureCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XApertureCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5058)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectCPCRectangular::GetXAngleDegreesCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XAngleDegreesCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5059)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectCPCRectangular::GetYApertureCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_YApertureCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5060)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectCPCRectangular::GetYAngleDegreesCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_YAngleDegreesCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5061)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectCPCRectangular::GetLengthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_LengthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5062)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectCPCRectangular::GetIsVolumeCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_IsVolumeCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5063)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectCPCRectangular::GetVolumeIndexCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_VolumeIndexCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5064)
inline double ZOSAPI_Interfaces::IObjectCPCRectangular::GetXAperture ( ) {
    double _result = 0;
    HRESULT _hr = get_XAperture(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5065)
inline void ZOSAPI_Interfaces::IObjectCPCRectangular::PutXAperture ( double pRetVal ) {
    HRESULT _hr = put_XAperture(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5066)
inline double ZOSAPI_Interfaces::IObjectCPCRectangular::GetXAngleDegrees ( ) {
    double _result = 0;
    HRESULT _hr = get_XAngleDegrees(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5067)
inline void ZOSAPI_Interfaces::IObjectCPCRectangular::PutXAngleDegrees ( double pRetVal ) {
    HRESULT _hr = put_XAngleDegrees(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5068)
inline double ZOSAPI_Interfaces::IObjectCPCRectangular::GetYAperture ( ) {
    double _result = 0;
    HRESULT _hr = get_YAperture(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5069)
inline void ZOSAPI_Interfaces::IObjectCPCRectangular::PutYAperture ( double pRetVal ) {
    HRESULT _hr = put_YAperture(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5070)
inline double ZOSAPI_Interfaces::IObjectCPCRectangular::GetYAngleDegrees ( ) {
    double _result = 0;
    HRESULT _hr = get_YAngleDegrees(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5071)
inline void ZOSAPI_Interfaces::IObjectCPCRectangular::PutYAngleDegrees ( double pRetVal ) {
    HRESULT _hr = put_YAngleDegrees(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5072)
inline double ZOSAPI_Interfaces::IObjectCPCRectangular::GetLength ( ) {
    double _result = 0;
    HRESULT _hr = get_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5073)
inline void ZOSAPI_Interfaces::IObjectCPCRectangular::PutLength ( double pRetVal ) {
    HRESULT _hr = put_Length(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5074)
inline VARIANT_BOOL ZOSAPI_Interfaces::IObjectCPCRectangular::GetIsVolume ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsVolume(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5075)
inline void ZOSAPI_Interfaces::IObjectCPCRectangular::PutIsVolume ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsVolume(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5076)
inline double ZOSAPI_Interfaces::IObjectCPCRectangular::GetVolumeIndex ( ) {
    double _result = 0;
    HRESULT _hr = get_VolumeIndex(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5077)
inline void ZOSAPI_Interfaces::IObjectCPCRectangular::PutVolumeIndex ( double pRetVal ) {
    HRESULT _hr = put_VolumeIndex(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectCylinderPipe wrapper method implementations
//

#pragma implementation_key(5078)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectCylinderPipe::GetFrontRCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontRCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5079)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectCylinderPipe::GetZLengthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ZLengthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5080)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectCylinderPipe::GetBackRCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_BackRCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5081)
inline double ZOSAPI_Interfaces::IObjectCylinderPipe::GetFrontR ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontR(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5082)
inline void ZOSAPI_Interfaces::IObjectCylinderPipe::PutFrontR ( double pRetVal ) {
    HRESULT _hr = put_FrontR(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5083)
inline double ZOSAPI_Interfaces::IObjectCylinderPipe::GetZLength ( ) {
    double _result = 0;
    HRESULT _hr = get_ZLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5084)
inline void ZOSAPI_Interfaces::IObjectCylinderPipe::PutZLength ( double pRetVal ) {
    HRESULT _hr = put_ZLength(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5085)
inline double ZOSAPI_Interfaces::IObjectCylinderPipe::GetBackR ( ) {
    double _result = 0;
    HRESULT _hr = get_BackR(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5086)
inline void ZOSAPI_Interfaces::IObjectCylinderPipe::PutBackR ( double pRetVal ) {
    HRESULT _hr = put_BackR(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectCylinderVolume wrapper method implementations
//

#pragma implementation_key(5087)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectCylinderVolume::GetFrontRCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontRCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5088)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectCylinderVolume::GetZLengthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ZLengthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5089)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectCylinderVolume::GetBackRCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_BackRCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5090)
inline double ZOSAPI_Interfaces::IObjectCylinderVolume::GetFrontR ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontR(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5091)
inline void ZOSAPI_Interfaces::IObjectCylinderVolume::PutFrontR ( double pRetVal ) {
    HRESULT _hr = put_FrontR(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5092)
inline double ZOSAPI_Interfaces::IObjectCylinderVolume::GetZLength ( ) {
    double _result = 0;
    HRESULT _hr = get_ZLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5093)
inline void ZOSAPI_Interfaces::IObjectCylinderVolume::PutZLength ( double pRetVal ) {
    HRESULT _hr = put_ZLength(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5094)
inline double ZOSAPI_Interfaces::IObjectCylinderVolume::GetBackR ( ) {
    double _result = 0;
    HRESULT _hr = get_BackR(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5095)
inline void ZOSAPI_Interfaces::IObjectCylinderVolume::PutBackR ( double pRetVal ) {
    HRESULT _hr = put_BackR(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectCylinder2Pipe wrapper method implementations
//

#pragma implementation_key(5096)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectCylinder2Pipe::GetRadiusACell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RadiusACell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5097)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectCylinder2Pipe::GetZLengthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ZLengthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5098)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectCylinder2Pipe::GetFrontAngleAlongYCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontAngleAlongYCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5099)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectCylinder2Pipe::GetBackAngleAlongYCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_BackAngleAlongYCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5100)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectCylinder2Pipe::GetFrontAngleAlongXCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontAngleAlongXCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5101)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectCylinder2Pipe::GetBackAngleAlongXCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_BackAngleAlongXCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5102)
inline double ZOSAPI_Interfaces::IObjectCylinder2Pipe::GetRadiusA ( ) {
    double _result = 0;
    HRESULT _hr = get_RadiusA(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5103)
inline void ZOSAPI_Interfaces::IObjectCylinder2Pipe::PutRadiusA ( double pRetVal ) {
    HRESULT _hr = put_RadiusA(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5104)
inline double ZOSAPI_Interfaces::IObjectCylinder2Pipe::GetZLength ( ) {
    double _result = 0;
    HRESULT _hr = get_ZLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5105)
inline void ZOSAPI_Interfaces::IObjectCylinder2Pipe::PutZLength ( double pRetVal ) {
    HRESULT _hr = put_ZLength(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5106)
inline double ZOSAPI_Interfaces::IObjectCylinder2Pipe::GetFrontAngleAlongY ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontAngleAlongY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5107)
inline void ZOSAPI_Interfaces::IObjectCylinder2Pipe::PutFrontAngleAlongY ( double pRetVal ) {
    HRESULT _hr = put_FrontAngleAlongY(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5108)
inline double ZOSAPI_Interfaces::IObjectCylinder2Pipe::GetBackAngleAlongY ( ) {
    double _result = 0;
    HRESULT _hr = get_BackAngleAlongY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5109)
inline void ZOSAPI_Interfaces::IObjectCylinder2Pipe::PutBackAngleAlongY ( double pRetVal ) {
    HRESULT _hr = put_BackAngleAlongY(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5110)
inline double ZOSAPI_Interfaces::IObjectCylinder2Pipe::GetFrontAngleAlongX ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontAngleAlongX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5111)
inline void ZOSAPI_Interfaces::IObjectCylinder2Pipe::PutFrontAngleAlongX ( double pRetVal ) {
    HRESULT _hr = put_FrontAngleAlongX(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5112)
inline double ZOSAPI_Interfaces::IObjectCylinder2Pipe::GetBackAngleAlongX ( ) {
    double _result = 0;
    HRESULT _hr = get_BackAngleAlongX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5113)
inline void ZOSAPI_Interfaces::IObjectCylinder2Pipe::PutBackAngleAlongX ( double pRetVal ) {
    HRESULT _hr = put_BackAngleAlongX(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectCylinder2Volume wrapper method implementations
//

#pragma implementation_key(5114)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectCylinder2Volume::GetRadiusACell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RadiusACell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5115)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectCylinder2Volume::GetZLengthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ZLengthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5116)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectCylinder2Volume::GetFrontAngleAlongYCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontAngleAlongYCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5117)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectCylinder2Volume::GetBackAngleAlongYCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_BackAngleAlongYCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5118)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectCylinder2Volume::GetFrontAngleAlongXCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontAngleAlongXCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5119)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectCylinder2Volume::GetBackAngleAlongXCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_BackAngleAlongXCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5120)
inline double ZOSAPI_Interfaces::IObjectCylinder2Volume::GetRadiusA ( ) {
    double _result = 0;
    HRESULT _hr = get_RadiusA(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5121)
inline void ZOSAPI_Interfaces::IObjectCylinder2Volume::PutRadiusA ( double pRetVal ) {
    HRESULT _hr = put_RadiusA(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5122)
inline double ZOSAPI_Interfaces::IObjectCylinder2Volume::GetZLength ( ) {
    double _result = 0;
    HRESULT _hr = get_ZLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5123)
inline void ZOSAPI_Interfaces::IObjectCylinder2Volume::PutZLength ( double pRetVal ) {
    HRESULT _hr = put_ZLength(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5124)
inline double ZOSAPI_Interfaces::IObjectCylinder2Volume::GetFrontAngleAlongY ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontAngleAlongY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5125)
inline void ZOSAPI_Interfaces::IObjectCylinder2Volume::PutFrontAngleAlongY ( double pRetVal ) {
    HRESULT _hr = put_FrontAngleAlongY(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5126)
inline double ZOSAPI_Interfaces::IObjectCylinder2Volume::GetBackAngleAlongY ( ) {
    double _result = 0;
    HRESULT _hr = get_BackAngleAlongY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5127)
inline void ZOSAPI_Interfaces::IObjectCylinder2Volume::PutBackAngleAlongY ( double pRetVal ) {
    HRESULT _hr = put_BackAngleAlongY(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5128)
inline double ZOSAPI_Interfaces::IObjectCylinder2Volume::GetFrontAngleAlongX ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontAngleAlongX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5129)
inline void ZOSAPI_Interfaces::IObjectCylinder2Volume::PutFrontAngleAlongX ( double pRetVal ) {
    HRESULT _hr = put_FrontAngleAlongX(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5130)
inline double ZOSAPI_Interfaces::IObjectCylinder2Volume::GetBackAngleAlongX ( ) {
    double _result = 0;
    HRESULT _hr = get_BackAngleAlongX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5131)
inline void ZOSAPI_Interfaces::IObjectCylinder2Volume::PutBackAngleAlongX ( double pRetVal ) {
    HRESULT _hr = put_BackAngleAlongX(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectDetectorColor wrapper method implementations
//

#pragma implementation_key(5132)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDetectorColor::GetXHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5133)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDetectorColor::GetYHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_YHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5134)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDetectorColor::GetNumberXPixelsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberXPixelsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5135)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDetectorColor::GetNumberYPixelsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberYPixelsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5136)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDetectorColor::GetDataTypeCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_DataTypeCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5137)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDetectorColor::GetColorCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ColorCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5138)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDetectorColor::GetSmoothingCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_SmoothingCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5139)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDetectorColor::GetScaleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ScaleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5140)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDetectorColor::GetPlotScaleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_PlotScaleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5141)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDetectorColor::GetFrontOnlyCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontOnlyCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5142)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDetectorColor::GetXAngleMinCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XAngleMinCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5143)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDetectorColor::GetXAngleMaxCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XAngleMaxCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5144)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDetectorColor::GetYAngleMinCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_YAngleMinCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5145)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDetectorColor::GetYAngleMaxCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_YAngleMaxCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5146)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDetectorColor::GetPolarizationCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_PolarizationCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5147)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDetectorColor::GetMirroringCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_MirroringCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5148)
inline double ZOSAPI_Interfaces::IObjectDetectorColor::GetXHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_XHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5149)
inline void ZOSAPI_Interfaces::IObjectDetectorColor::PutXHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_XHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5150)
inline double ZOSAPI_Interfaces::IObjectDetectorColor::GetYHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_YHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5151)
inline void ZOSAPI_Interfaces::IObjectDetectorColor::PutYHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_YHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5152)
inline long ZOSAPI_Interfaces::IObjectDetectorColor::GetNumberXPixels ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberXPixels(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5153)
inline void ZOSAPI_Interfaces::IObjectDetectorColor::PutNumberXPixels ( long pRetVal ) {
    HRESULT _hr = put_NumberXPixels(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5154)
inline long ZOSAPI_Interfaces::IObjectDetectorColor::GetNumberYPixels ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberYPixels(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5155)
inline void ZOSAPI_Interfaces::IObjectDetectorColor::PutNumberYPixels ( long pRetVal ) {
    HRESULT _hr = put_NumberYPixels(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5156)
inline long ZOSAPI_Interfaces::IObjectDetectorColor::GetDataType ( ) {
    long _result = 0;
    HRESULT _hr = get_DataType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5157)
inline void ZOSAPI_Interfaces::IObjectDetectorColor::PutDataType ( long pRetVal ) {
    HRESULT _hr = put_DataType(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5158)
inline long ZOSAPI_Interfaces::IObjectDetectorColor::GetColor ( ) {
    long _result = 0;
    HRESULT _hr = get_Color(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5159)
inline void ZOSAPI_Interfaces::IObjectDetectorColor::PutColor ( long pRetVal ) {
    HRESULT _hr = put_Color(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5160)
inline long ZOSAPI_Interfaces::IObjectDetectorColor::GetSmoothing ( ) {
    long _result = 0;
    HRESULT _hr = get_Smoothing(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5161)
inline void ZOSAPI_Interfaces::IObjectDetectorColor::PutSmoothing ( long pRetVal ) {
    HRESULT _hr = put_Smoothing(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5162)
inline long ZOSAPI_Interfaces::IObjectDetectorColor::GetScale ( ) {
    long _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5163)
inline void ZOSAPI_Interfaces::IObjectDetectorColor::PutScale ( long pRetVal ) {
    HRESULT _hr = put_Scale(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5164)
inline double ZOSAPI_Interfaces::IObjectDetectorColor::GetPlotScale ( ) {
    double _result = 0;
    HRESULT _hr = get_PlotScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5165)
inline void ZOSAPI_Interfaces::IObjectDetectorColor::PutPlotScale ( double pRetVal ) {
    HRESULT _hr = put_PlotScale(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5166)
inline long ZOSAPI_Interfaces::IObjectDetectorColor::GetFrontOnly ( ) {
    long _result = 0;
    HRESULT _hr = get_FrontOnly(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5167)
inline void ZOSAPI_Interfaces::IObjectDetectorColor::PutFrontOnly ( long pRetVal ) {
    HRESULT _hr = put_FrontOnly(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5168)
inline double ZOSAPI_Interfaces::IObjectDetectorColor::GetXAngleMin ( ) {
    double _result = 0;
    HRESULT _hr = get_XAngleMin(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5169)
inline void ZOSAPI_Interfaces::IObjectDetectorColor::PutXAngleMin ( double pRetVal ) {
    HRESULT _hr = put_XAngleMin(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5170)
inline double ZOSAPI_Interfaces::IObjectDetectorColor::GetXAngleMax ( ) {
    double _result = 0;
    HRESULT _hr = get_XAngleMax(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5171)
inline void ZOSAPI_Interfaces::IObjectDetectorColor::PutXAngleMax ( double pRetVal ) {
    HRESULT _hr = put_XAngleMax(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5172)
inline double ZOSAPI_Interfaces::IObjectDetectorColor::GetYAngleMin ( ) {
    double _result = 0;
    HRESULT _hr = get_YAngleMin(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5173)
inline void ZOSAPI_Interfaces::IObjectDetectorColor::PutYAngleMin ( double pRetVal ) {
    HRESULT _hr = put_YAngleMin(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5174)
inline double ZOSAPI_Interfaces::IObjectDetectorColor::GetYAngleMax ( ) {
    double _result = 0;
    HRESULT _hr = get_YAngleMax(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5175)
inline void ZOSAPI_Interfaces::IObjectDetectorColor::PutYAngleMax ( double pRetVal ) {
    HRESULT _hr = put_YAngleMax(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5176)
inline long ZOSAPI_Interfaces::IObjectDetectorColor::GetPolarization ( ) {
    long _result = 0;
    HRESULT _hr = get_Polarization(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5177)
inline void ZOSAPI_Interfaces::IObjectDetectorColor::PutPolarization ( long pRetVal ) {
    HRESULT _hr = put_Polarization(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5178)
inline long ZOSAPI_Interfaces::IObjectDetectorColor::GetMirroring ( ) {
    long _result = 0;
    HRESULT _hr = get_Mirroring(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5179)
inline void ZOSAPI_Interfaces::IObjectDetectorColor::PutMirroring ( long pRetVal ) {
    HRESULT _hr = put_Mirroring(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectDetectorPolar wrapper method implementations
//

#pragma implementation_key(5180)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDetectorPolar::GetMaxAngleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_MaxAngleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5181)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDetectorPolar::GetRadialSizeCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RadialSizeCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5182)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDetectorPolar::GetNumberPPixelsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberPPixelsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5183)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDetectorPolar::GetNumberAPixelsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberAPixelsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5184)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDetectorPolar::GetMirroringCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_MirroringCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5185)
inline double ZOSAPI_Interfaces::IObjectDetectorPolar::GetMaxAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_MaxAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5186)
inline void ZOSAPI_Interfaces::IObjectDetectorPolar::PutMaxAngle ( double pRetVal ) {
    HRESULT _hr = put_MaxAngle(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5187)
inline double ZOSAPI_Interfaces::IObjectDetectorPolar::GetRadialSize ( ) {
    double _result = 0;
    HRESULT _hr = get_RadialSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5188)
inline void ZOSAPI_Interfaces::IObjectDetectorPolar::PutRadialSize ( double pRetVal ) {
    HRESULT _hr = put_RadialSize(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5189)
inline long ZOSAPI_Interfaces::IObjectDetectorPolar::GetNumberPPixels ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberPPixels(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5190)
inline void ZOSAPI_Interfaces::IObjectDetectorPolar::PutNumberPPixels ( long pRetVal ) {
    HRESULT _hr = put_NumberPPixels(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5191)
inline long ZOSAPI_Interfaces::IObjectDetectorPolar::GetNumberAPixels ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberAPixels(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5192)
inline void ZOSAPI_Interfaces::IObjectDetectorPolar::PutNumberAPixels ( long pRetVal ) {
    HRESULT _hr = put_NumberAPixels(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5193)
inline VARIANT_BOOL ZOSAPI_Interfaces::IObjectDetectorPolar::GetMirroring ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Mirroring(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5194)
inline void ZOSAPI_Interfaces::IObjectDetectorPolar::PutMirroring ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_Mirroring(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectDetectorRectangle wrapper method implementations
//

#pragma implementation_key(5195)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDetectorRectangle::GetXHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5196)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDetectorRectangle::GetYHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_YHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5197)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDetectorRectangle::GetNumberXPixelsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberXPixelsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5198)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDetectorRectangle::GetNumberYPixelsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberYPixelsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5199)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDetectorRectangle::GetDataTypeCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_DataTypeCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5200)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDetectorRectangle::GetColorCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ColorCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5201)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDetectorRectangle::GetSmoothingCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_SmoothingCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5202)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDetectorRectangle::GetScaleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ScaleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5203)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDetectorRectangle::GetPlotScaleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_PlotScaleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5204)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDetectorRectangle::GetFrontOnlyCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontOnlyCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5205)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDetectorRectangle::GetPsfWaveNumberCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_PsfWaveNumberCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5206)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDetectorRectangle::GetXAngleMinCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XAngleMinCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5207)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDetectorRectangle::GetXAngleMaxCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XAngleMaxCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5208)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDetectorRectangle::GetYAngleMinCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_YAngleMinCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5209)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDetectorRectangle::GetYAngleMaxCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_YAngleMaxCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5210)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDetectorRectangle::GetPolarizationCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_PolarizationCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5211)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDetectorRectangle::GetMirroringCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_MirroringCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5212)
inline double ZOSAPI_Interfaces::IObjectDetectorRectangle::GetXHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_XHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5213)
inline void ZOSAPI_Interfaces::IObjectDetectorRectangle::PutXHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_XHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5214)
inline double ZOSAPI_Interfaces::IObjectDetectorRectangle::GetYHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_YHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5215)
inline void ZOSAPI_Interfaces::IObjectDetectorRectangle::PutYHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_YHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5216)
inline long ZOSAPI_Interfaces::IObjectDetectorRectangle::GetNumberXPixels ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberXPixels(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5217)
inline void ZOSAPI_Interfaces::IObjectDetectorRectangle::PutNumberXPixels ( long pRetVal ) {
    HRESULT _hr = put_NumberXPixels(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5218)
inline long ZOSAPI_Interfaces::IObjectDetectorRectangle::GetNumberYPixels ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberYPixels(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5219)
inline void ZOSAPI_Interfaces::IObjectDetectorRectangle::PutNumberYPixels ( long pRetVal ) {
    HRESULT _hr = put_NumberYPixels(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5220)
inline long ZOSAPI_Interfaces::IObjectDetectorRectangle::GetDataType ( ) {
    long _result = 0;
    HRESULT _hr = get_DataType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5221)
inline void ZOSAPI_Interfaces::IObjectDetectorRectangle::PutDataType ( long pRetVal ) {
    HRESULT _hr = put_DataType(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5222)
inline long ZOSAPI_Interfaces::IObjectDetectorRectangle::GetColor ( ) {
    long _result = 0;
    HRESULT _hr = get_Color(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5223)
inline void ZOSAPI_Interfaces::IObjectDetectorRectangle::PutColor ( long pRetVal ) {
    HRESULT _hr = put_Color(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5224)
inline long ZOSAPI_Interfaces::IObjectDetectorRectangle::GetSmoothing ( ) {
    long _result = 0;
    HRESULT _hr = get_Smoothing(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5225)
inline void ZOSAPI_Interfaces::IObjectDetectorRectangle::PutSmoothing ( long pRetVal ) {
    HRESULT _hr = put_Smoothing(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5226)
inline long ZOSAPI_Interfaces::IObjectDetectorRectangle::GetScale ( ) {
    long _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5227)
inline void ZOSAPI_Interfaces::IObjectDetectorRectangle::PutScale ( long pRetVal ) {
    HRESULT _hr = put_Scale(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5228)
inline double ZOSAPI_Interfaces::IObjectDetectorRectangle::GetPlotScale ( ) {
    double _result = 0;
    HRESULT _hr = get_PlotScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5229)
inline void ZOSAPI_Interfaces::IObjectDetectorRectangle::PutPlotScale ( double pRetVal ) {
    HRESULT _hr = put_PlotScale(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5230)
inline long ZOSAPI_Interfaces::IObjectDetectorRectangle::GetFrontOnly ( ) {
    long _result = 0;
    HRESULT _hr = get_FrontOnly(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5231)
inline void ZOSAPI_Interfaces::IObjectDetectorRectangle::PutFrontOnly ( long pRetVal ) {
    HRESULT _hr = put_FrontOnly(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5232)
inline long ZOSAPI_Interfaces::IObjectDetectorRectangle::GetPsfWaveNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_PsfWaveNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5233)
inline void ZOSAPI_Interfaces::IObjectDetectorRectangle::PutPsfWaveNumber ( long pRetVal ) {
    HRESULT _hr = put_PsfWaveNumber(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5234)
inline double ZOSAPI_Interfaces::IObjectDetectorRectangle::GetXAngleMin ( ) {
    double _result = 0;
    HRESULT _hr = get_XAngleMin(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5235)
inline void ZOSAPI_Interfaces::IObjectDetectorRectangle::PutXAngleMin ( double pRetVal ) {
    HRESULT _hr = put_XAngleMin(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5236)
inline double ZOSAPI_Interfaces::IObjectDetectorRectangle::GetXAngleMax ( ) {
    double _result = 0;
    HRESULT _hr = get_XAngleMax(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5237)
inline void ZOSAPI_Interfaces::IObjectDetectorRectangle::PutXAngleMax ( double pRetVal ) {
    HRESULT _hr = put_XAngleMax(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5238)
inline double ZOSAPI_Interfaces::IObjectDetectorRectangle::GetYAngleMin ( ) {
    double _result = 0;
    HRESULT _hr = get_YAngleMin(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5239)
inline void ZOSAPI_Interfaces::IObjectDetectorRectangle::PutYAngleMin ( double pRetVal ) {
    HRESULT _hr = put_YAngleMin(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5240)
inline double ZOSAPI_Interfaces::IObjectDetectorRectangle::GetYAngleMax ( ) {
    double _result = 0;
    HRESULT _hr = get_YAngleMax(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5241)
inline void ZOSAPI_Interfaces::IObjectDetectorRectangle::PutYAngleMax ( double pRetVal ) {
    HRESULT _hr = put_YAngleMax(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5242)
inline long ZOSAPI_Interfaces::IObjectDetectorRectangle::GetPolarization ( ) {
    long _result = 0;
    HRESULT _hr = get_Polarization(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5243)
inline void ZOSAPI_Interfaces::IObjectDetectorRectangle::PutPolarization ( long pRetVal ) {
    HRESULT _hr = put_Polarization(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5244)
inline long ZOSAPI_Interfaces::IObjectDetectorRectangle::GetMirroring ( ) {
    long _result = 0;
    HRESULT _hr = get_Mirroring(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5245)
inline void ZOSAPI_Interfaces::IObjectDetectorRectangle::PutMirroring ( long pRetVal ) {
    HRESULT _hr = put_Mirroring(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectDetectorSurface wrapper method implementations
//

#pragma implementation_key(5246)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDetectorSurface::GetRadiusCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RadiusCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5247)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDetectorSurface::GetConicCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ConicCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5248)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDetectorSurface::GetMaxApertureCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_MaxApertureCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5249)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDetectorSurface::GetMinApertureCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_MinApertureCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5250)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDetectorSurface::GetNumberAZonesCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberAZonesCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5251)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDetectorSurface::GetNumberRZonesCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberRZonesCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5252)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDetectorSurface::GetDataTypeCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_DataTypeCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5253)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDetectorSurface::GetColorCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ColorCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5254)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDetectorSurface::GetScaleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ScaleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5255)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDetectorSurface::GetMaxScaleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_MaxScaleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5256)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDetectorSurface::GetFrontOnlyCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontOnlyCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5257)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDetectorSurface::GetNumberOfTermsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberOfTermsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5258)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDetectorSurface::RPowerICell ( long i ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_RPowerICell(i, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5259)
inline double ZOSAPI_Interfaces::IObjectDetectorSurface::GetRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_Radius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5260)
inline void ZOSAPI_Interfaces::IObjectDetectorSurface::PutRadius ( double pRetVal ) {
    HRESULT _hr = put_Radius(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5261)
inline double ZOSAPI_Interfaces::IObjectDetectorSurface::GetConic ( ) {
    double _result = 0;
    HRESULT _hr = get_Conic(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5262)
inline void ZOSAPI_Interfaces::IObjectDetectorSurface::PutConic ( double pRetVal ) {
    HRESULT _hr = put_Conic(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5263)
inline double ZOSAPI_Interfaces::IObjectDetectorSurface::GetMaxAperture ( ) {
    double _result = 0;
    HRESULT _hr = get_MaxAperture(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5264)
inline void ZOSAPI_Interfaces::IObjectDetectorSurface::PutMaxAperture ( double pRetVal ) {
    HRESULT _hr = put_MaxAperture(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5265)
inline double ZOSAPI_Interfaces::IObjectDetectorSurface::GetMinAperture ( ) {
    double _result = 0;
    HRESULT _hr = get_MinAperture(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5266)
inline void ZOSAPI_Interfaces::IObjectDetectorSurface::PutMinAperture ( double pRetVal ) {
    HRESULT _hr = put_MinAperture(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5267)
inline long ZOSAPI_Interfaces::IObjectDetectorSurface::GetNumberAZones ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberAZones(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5268)
inline void ZOSAPI_Interfaces::IObjectDetectorSurface::PutNumberAZones ( long pRetVal ) {
    HRESULT _hr = put_NumberAZones(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5269)
inline long ZOSAPI_Interfaces::IObjectDetectorSurface::GetNumberRZones ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberRZones(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5270)
inline void ZOSAPI_Interfaces::IObjectDetectorSurface::PutNumberRZones ( long pRetVal ) {
    HRESULT _hr = put_NumberRZones(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5271)
inline long ZOSAPI_Interfaces::IObjectDetectorSurface::GetDataType ( ) {
    long _result = 0;
    HRESULT _hr = get_DataType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5272)
inline void ZOSAPI_Interfaces::IObjectDetectorSurface::PutDataType ( long pRetVal ) {
    HRESULT _hr = put_DataType(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5273)
inline long ZOSAPI_Interfaces::IObjectDetectorSurface::GetColor ( ) {
    long _result = 0;
    HRESULT _hr = get_Color(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5274)
inline void ZOSAPI_Interfaces::IObjectDetectorSurface::PutColor ( long pRetVal ) {
    HRESULT _hr = put_Color(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5275)
inline long ZOSAPI_Interfaces::IObjectDetectorSurface::GetScale ( ) {
    long _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5276)
inline void ZOSAPI_Interfaces::IObjectDetectorSurface::PutScale ( long pRetVal ) {
    HRESULT _hr = put_Scale(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5277)
inline double ZOSAPI_Interfaces::IObjectDetectorSurface::GetMaxScale ( ) {
    double _result = 0;
    HRESULT _hr = get_MaxScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5278)
inline void ZOSAPI_Interfaces::IObjectDetectorSurface::PutMaxScale ( double pRetVal ) {
    HRESULT _hr = put_MaxScale(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5279)
inline VARIANT_BOOL ZOSAPI_Interfaces::IObjectDetectorSurface::GetFrontOnly ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_FrontOnly(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5280)
inline void ZOSAPI_Interfaces::IObjectDetectorSurface::PutFrontOnly ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_FrontOnly(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5281)
inline long ZOSAPI_Interfaces::IObjectDetectorSurface::GetNumberOfTerms ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfTerms(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5282)
inline void ZOSAPI_Interfaces::IObjectDetectorSurface::PutNumberOfTerms ( long pRetVal ) {
    HRESULT _hr = put_NumberOfTerms(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5283)
inline double ZOSAPI_Interfaces::IObjectDetectorSurface::GetRPowerI ( long i ) {
    double _result = 0;
    HRESULT _hr = raw_GetRPowerI(i, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5284)
inline HRESULT ZOSAPI_Interfaces::IObjectDetectorSurface::SetRPowerI ( long i, double v ) {
    HRESULT _hr = raw_SetRPowerI(i, v);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IObjectDetectorVolume wrapper method implementations
//

#pragma implementation_key(5285)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDetectorVolume::GetXHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5286)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDetectorVolume::GetYHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_YHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5287)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDetectorVolume::GetZHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ZHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5288)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDetectorVolume::GetNumberXPixelsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberXPixelsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5289)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDetectorVolume::GetNumberYPixelsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberYPixelsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5290)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDetectorVolume::GetNumberZPixelsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberZPixelsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5291)
inline double ZOSAPI_Interfaces::IObjectDetectorVolume::GetXHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_XHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5292)
inline void ZOSAPI_Interfaces::IObjectDetectorVolume::PutXHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_XHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5293)
inline double ZOSAPI_Interfaces::IObjectDetectorVolume::GetYHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_YHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5294)
inline void ZOSAPI_Interfaces::IObjectDetectorVolume::PutYHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_YHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5295)
inline double ZOSAPI_Interfaces::IObjectDetectorVolume::GetZHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_ZHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5296)
inline void ZOSAPI_Interfaces::IObjectDetectorVolume::PutZHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_ZHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5297)
inline long ZOSAPI_Interfaces::IObjectDetectorVolume::GetNumberXPixels ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberXPixels(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5298)
inline void ZOSAPI_Interfaces::IObjectDetectorVolume::PutNumberXPixels ( long pRetVal ) {
    HRESULT _hr = put_NumberXPixels(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5299)
inline long ZOSAPI_Interfaces::IObjectDetectorVolume::GetNumberYPixels ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberYPixels(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5300)
inline void ZOSAPI_Interfaces::IObjectDetectorVolume::PutNumberYPixels ( long pRetVal ) {
    HRESULT _hr = put_NumberYPixels(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5301)
inline long ZOSAPI_Interfaces::IObjectDetectorVolume::GetNumberZPixels ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberZPixels(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5302)
inline void ZOSAPI_Interfaces::IObjectDetectorVolume::PutNumberZPixels ( long pRetVal ) {
    HRESULT _hr = put_NumberZPixels(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectDiffractionGrating wrapper method implementations
//

#pragma implementation_key(5303)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDiffractionGrating::GetRadius1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Radius1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5304)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDiffractionGrating::GetConic1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Conic1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5305)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDiffractionGrating::GetClear1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Clear1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5306)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDiffractionGrating::GetEdge1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Edge1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5307)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDiffractionGrating::GetThicknessCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ThicknessCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5308)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDiffractionGrating::GetRadius2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Radius2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5309)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDiffractionGrating::GetConic2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Conic2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5310)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDiffractionGrating::GetClear2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Clear2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5311)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDiffractionGrating::GetEdge2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Edge2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5312)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDiffractionGrating::GetLinesPerMicronCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_LinesPerMicronCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5313)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDiffractionGrating::GetDiffOrderCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_DiffOrderCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5314)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDiffractionGrating::GetFormulaCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FormulaCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5315)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDiffractionGrating::GetCoeffOnYPower1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffOnYPower1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5316)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDiffractionGrating::GetCoeffOnYPower2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffOnYPower2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5317)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDiffractionGrating::GetCoeffOnYPower3Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffOnYPower3Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5318)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDiffractionGrating::GetCoeffOnYPower4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffOnYPower4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5319)
inline double ZOSAPI_Interfaces::IObjectDiffractionGrating::GetRadius1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Radius1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5320)
inline void ZOSAPI_Interfaces::IObjectDiffractionGrating::PutRadius1 ( double pRetVal ) {
    HRESULT _hr = put_Radius1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5321)
inline double ZOSAPI_Interfaces::IObjectDiffractionGrating::GetConic1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Conic1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5322)
inline void ZOSAPI_Interfaces::IObjectDiffractionGrating::PutConic1 ( double pRetVal ) {
    HRESULT _hr = put_Conic1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5323)
inline double ZOSAPI_Interfaces::IObjectDiffractionGrating::GetClear1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Clear1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5324)
inline void ZOSAPI_Interfaces::IObjectDiffractionGrating::PutClear1 ( double pRetVal ) {
    HRESULT _hr = put_Clear1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5325)
inline double ZOSAPI_Interfaces::IObjectDiffractionGrating::GetEdge1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Edge1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5326)
inline void ZOSAPI_Interfaces::IObjectDiffractionGrating::PutEdge1 ( double pRetVal ) {
    HRESULT _hr = put_Edge1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5327)
inline double ZOSAPI_Interfaces::IObjectDiffractionGrating::GetThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_Thickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5328)
inline void ZOSAPI_Interfaces::IObjectDiffractionGrating::PutThickness ( double pRetVal ) {
    HRESULT _hr = put_Thickness(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5329)
inline double ZOSAPI_Interfaces::IObjectDiffractionGrating::GetRadius2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Radius2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5330)
inline void ZOSAPI_Interfaces::IObjectDiffractionGrating::PutRadius2 ( double pRetVal ) {
    HRESULT _hr = put_Radius2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5331)
inline double ZOSAPI_Interfaces::IObjectDiffractionGrating::GetConic2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Conic2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5332)
inline void ZOSAPI_Interfaces::IObjectDiffractionGrating::PutConic2 ( double pRetVal ) {
    HRESULT _hr = put_Conic2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5333)
inline double ZOSAPI_Interfaces::IObjectDiffractionGrating::GetClear2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Clear2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5334)
inline void ZOSAPI_Interfaces::IObjectDiffractionGrating::PutClear2 ( double pRetVal ) {
    HRESULT _hr = put_Clear2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5335)
inline double ZOSAPI_Interfaces::IObjectDiffractionGrating::GetEdge2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Edge2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5336)
inline void ZOSAPI_Interfaces::IObjectDiffractionGrating::PutEdge2 ( double pRetVal ) {
    HRESULT _hr = put_Edge2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5337)
inline double ZOSAPI_Interfaces::IObjectDiffractionGrating::GetLinesPerMicron ( ) {
    double _result = 0;
    HRESULT _hr = get_LinesPerMicron(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5338)
inline void ZOSAPI_Interfaces::IObjectDiffractionGrating::PutLinesPerMicron ( double pRetVal ) {
    HRESULT _hr = put_LinesPerMicron(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5339)
inline double ZOSAPI_Interfaces::IObjectDiffractionGrating::GetDiffOrder ( ) {
    double _result = 0;
    HRESULT _hr = get_DiffOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5340)
inline void ZOSAPI_Interfaces::IObjectDiffractionGrating::PutDiffOrder ( double pRetVal ) {
    HRESULT _hr = put_DiffOrder(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5341)
inline long ZOSAPI_Interfaces::IObjectDiffractionGrating::GetFormula ( ) {
    long _result = 0;
    HRESULT _hr = get_Formula(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5342)
inline void ZOSAPI_Interfaces::IObjectDiffractionGrating::PutFormula ( long pRetVal ) {
    HRESULT _hr = put_Formula(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5343)
inline double ZOSAPI_Interfaces::IObjectDiffractionGrating::GetCoeffOnYPower1 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffOnYPower1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5344)
inline void ZOSAPI_Interfaces::IObjectDiffractionGrating::PutCoeffOnYPower1 ( double pRetVal ) {
    HRESULT _hr = put_CoeffOnYPower1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5345)
inline double ZOSAPI_Interfaces::IObjectDiffractionGrating::GetCoeffOnYPower2 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffOnYPower2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5346)
inline void ZOSAPI_Interfaces::IObjectDiffractionGrating::PutCoeffOnYPower2 ( double pRetVal ) {
    HRESULT _hr = put_CoeffOnYPower2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5347)
inline double ZOSAPI_Interfaces::IObjectDiffractionGrating::GetCoeffOnYPower3 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffOnYPower3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5348)
inline void ZOSAPI_Interfaces::IObjectDiffractionGrating::PutCoeffOnYPower3 ( double pRetVal ) {
    HRESULT _hr = put_CoeffOnYPower3(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5349)
inline double ZOSAPI_Interfaces::IObjectDiffractionGrating::GetCoeffOnYPower4 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffOnYPower4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5350)
inline void ZOSAPI_Interfaces::IObjectDiffractionGrating::PutCoeffOnYPower4 ( double pRetVal ) {
    HRESULT _hr = put_CoeffOnYPower4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectDualBEFSurface wrapper method implementations
//

#pragma implementation_key(5351)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDualBEFSurface::GetXHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5352)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDualBEFSurface::GetYHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_YHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5353)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDualBEFSurface::GetRXCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RXCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5354)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDualBEFSurface::GetRYCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RYCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5355)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDualBEFSurface::GetTXCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_TXCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5356)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectDualBEFSurface::GetTYCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_TYCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5357)
inline double ZOSAPI_Interfaces::IObjectDualBEFSurface::GetXHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_XHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5358)
inline void ZOSAPI_Interfaces::IObjectDualBEFSurface::PutXHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_XHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5359)
inline double ZOSAPI_Interfaces::IObjectDualBEFSurface::GetYHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_YHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5360)
inline void ZOSAPI_Interfaces::IObjectDualBEFSurface::PutYHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_YHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5361)
inline double ZOSAPI_Interfaces::IObjectDualBEFSurface::GetRX ( ) {
    double _result = 0;
    HRESULT _hr = get_RX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5362)
inline void ZOSAPI_Interfaces::IObjectDualBEFSurface::PutRX ( double pRetVal ) {
    HRESULT _hr = put_RX(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5363)
inline double ZOSAPI_Interfaces::IObjectDualBEFSurface::GetRY ( ) {
    double _result = 0;
    HRESULT _hr = get_RY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5364)
inline void ZOSAPI_Interfaces::IObjectDualBEFSurface::PutRY ( double pRetVal ) {
    HRESULT _hr = put_RY(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5365)
inline double ZOSAPI_Interfaces::IObjectDualBEFSurface::GetTX ( ) {
    double _result = 0;
    HRESULT _hr = get_TX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5366)
inline void ZOSAPI_Interfaces::IObjectDualBEFSurface::PutTX ( double pRetVal ) {
    HRESULT _hr = put_TX(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5367)
inline double ZOSAPI_Interfaces::IObjectDualBEFSurface::GetTY ( ) {
    double _result = 0;
    HRESULT _hr = get_TY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5368)
inline void ZOSAPI_Interfaces::IObjectDualBEFSurface::PutTY ( double pRetVal ) {
    HRESULT _hr = put_TY(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectEllipse wrapper method implementations
//

#pragma implementation_key(5369)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectEllipse::GetXHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5370)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectEllipse::GetYHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_YHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5371)
inline double ZOSAPI_Interfaces::IObjectEllipse::GetXHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_XHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5372)
inline void ZOSAPI_Interfaces::IObjectEllipse::PutXHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_XHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5373)
inline double ZOSAPI_Interfaces::IObjectEllipse::GetYHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_YHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5374)
inline void ZOSAPI_Interfaces::IObjectEllipse::PutYHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_YHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectEllipticalVolume wrapper method implementations
//

#pragma implementation_key(5375)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectEllipticalVolume::GetFrontXHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontXHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5376)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectEllipticalVolume::GetFrontYHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontYHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5377)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectEllipticalVolume::GetBackXHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_BackXHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5378)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectEllipticalVolume::GetBackYHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_BackYHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5379)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectEllipticalVolume::GetLengthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_LengthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5380)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectEllipticalVolume::GetIsVolumeCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_IsVolumeCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5381)
inline double ZOSAPI_Interfaces::IObjectEllipticalVolume::GetFrontXHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontXHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5382)
inline void ZOSAPI_Interfaces::IObjectEllipticalVolume::PutFrontXHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_FrontXHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5383)
inline double ZOSAPI_Interfaces::IObjectEllipticalVolume::GetFrontYHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontYHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5384)
inline void ZOSAPI_Interfaces::IObjectEllipticalVolume::PutFrontYHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_FrontYHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5385)
inline double ZOSAPI_Interfaces::IObjectEllipticalVolume::GetBackXHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_BackXHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5386)
inline void ZOSAPI_Interfaces::IObjectEllipticalVolume::PutBackXHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_BackXHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5387)
inline double ZOSAPI_Interfaces::IObjectEllipticalVolume::GetBackYHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_BackYHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5388)
inline void ZOSAPI_Interfaces::IObjectEllipticalVolume::PutBackYHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_BackYHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5389)
inline double ZOSAPI_Interfaces::IObjectEllipticalVolume::GetLength ( ) {
    double _result = 0;
    HRESULT _hr = get_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5390)
inline void ZOSAPI_Interfaces::IObjectEllipticalVolume::PutLength ( double pRetVal ) {
    HRESULT _hr = put_Length(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5391)
inline VARIANT_BOOL ZOSAPI_Interfaces::IObjectEllipticalVolume::GetIsVolume ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsVolume(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5392)
inline void ZOSAPI_Interfaces::IObjectEllipticalVolume::PutIsVolume ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsVolume(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectEvenAsphereLens wrapper method implementations
//

#pragma implementation_key(5393)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectEvenAsphereLens::GetClear1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Clear1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5394)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectEvenAsphereLens::GetThicknessCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ThicknessCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5395)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectEvenAsphereLens::GetRadius1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Radius1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5396)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectEvenAsphereLens::GetConic1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Conic1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5397)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectEvenAsphereLens::GetCoeff1OnRPower2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff1OnRPower2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5398)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectEvenAsphereLens::GetCoeff1OnRPower4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff1OnRPower4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5399)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectEvenAsphereLens::GetCoeff1OnRPower6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff1OnRPower6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5400)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectEvenAsphereLens::GetCoeff1OnRPower8Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff1OnRPower8Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5401)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectEvenAsphereLens::GetCoeff1OnRPower10Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff1OnRPower10Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5402)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectEvenAsphereLens::GetCoeff1OnRPower12Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff1OnRPower12Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5403)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectEvenAsphereLens::GetCoeff1OnRPower14Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff1OnRPower14Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5404)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectEvenAsphereLens::GetCoeff1OnRPower16Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff1OnRPower16Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5405)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectEvenAsphereLens::GetRadius2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Radius2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5406)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectEvenAsphereLens::GetConic2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Conic2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5407)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectEvenAsphereLens::GetCoeff2OnRPower2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff2OnRPower2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5408)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectEvenAsphereLens::GetCoeff2OnRPower4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff2OnRPower4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5409)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectEvenAsphereLens::GetCoeff2OnRPower6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff2OnRPower6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5410)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectEvenAsphereLens::GetCoeff2OnRPower8Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff2OnRPower8Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5411)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectEvenAsphereLens::GetCoeff2OnRPower10Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff2OnRPower10Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5412)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectEvenAsphereLens::GetCoeff2OnRPower12Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff2OnRPower12Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5413)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectEvenAsphereLens::GetCoeff2OnRPower14Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff2OnRPower14Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5414)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectEvenAsphereLens::GetCoeff2OnRPower16Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff2OnRPower16Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5415)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectEvenAsphereLens::GetEdge1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Edge1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5416)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectEvenAsphereLens::GetClear2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Clear2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5417)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectEvenAsphereLens::GetEdge2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Edge2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5418)
inline double ZOSAPI_Interfaces::IObjectEvenAsphereLens::GetClear1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Clear1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5419)
inline void ZOSAPI_Interfaces::IObjectEvenAsphereLens::PutClear1 ( double pRetVal ) {
    HRESULT _hr = put_Clear1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5420)
inline double ZOSAPI_Interfaces::IObjectEvenAsphereLens::GetThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_Thickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5421)
inline void ZOSAPI_Interfaces::IObjectEvenAsphereLens::PutThickness ( double pRetVal ) {
    HRESULT _hr = put_Thickness(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5422)
inline double ZOSAPI_Interfaces::IObjectEvenAsphereLens::GetRadius1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Radius1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5423)
inline void ZOSAPI_Interfaces::IObjectEvenAsphereLens::PutRadius1 ( double pRetVal ) {
    HRESULT _hr = put_Radius1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5424)
inline double ZOSAPI_Interfaces::IObjectEvenAsphereLens::GetConic1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Conic1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5425)
inline void ZOSAPI_Interfaces::IObjectEvenAsphereLens::PutConic1 ( double pRetVal ) {
    HRESULT _hr = put_Conic1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5426)
inline double ZOSAPI_Interfaces::IObjectEvenAsphereLens::GetCoeff1OnRPower2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff1OnRPower2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5427)
inline void ZOSAPI_Interfaces::IObjectEvenAsphereLens::PutCoeff1OnRPower2 ( double pRetVal ) {
    HRESULT _hr = put_Coeff1OnRPower2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5428)
inline double ZOSAPI_Interfaces::IObjectEvenAsphereLens::GetCoeff1OnRPower4 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff1OnRPower4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5429)
inline void ZOSAPI_Interfaces::IObjectEvenAsphereLens::PutCoeff1OnRPower4 ( double pRetVal ) {
    HRESULT _hr = put_Coeff1OnRPower4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5430)
inline double ZOSAPI_Interfaces::IObjectEvenAsphereLens::GetCoeff1OnRPower6 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff1OnRPower6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5431)
inline void ZOSAPI_Interfaces::IObjectEvenAsphereLens::PutCoeff1OnRPower6 ( double pRetVal ) {
    HRESULT _hr = put_Coeff1OnRPower6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5432)
inline double ZOSAPI_Interfaces::IObjectEvenAsphereLens::GetCoeff1OnRPower8 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff1OnRPower8(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5433)
inline void ZOSAPI_Interfaces::IObjectEvenAsphereLens::PutCoeff1OnRPower8 ( double pRetVal ) {
    HRESULT _hr = put_Coeff1OnRPower8(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5434)
inline double ZOSAPI_Interfaces::IObjectEvenAsphereLens::GetCoeff1OnRPower10 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff1OnRPower10(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5435)
inline void ZOSAPI_Interfaces::IObjectEvenAsphereLens::PutCoeff1OnRPower10 ( double pRetVal ) {
    HRESULT _hr = put_Coeff1OnRPower10(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5436)
inline double ZOSAPI_Interfaces::IObjectEvenAsphereLens::GetCoeff1OnRPower12 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff1OnRPower12(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5437)
inline void ZOSAPI_Interfaces::IObjectEvenAsphereLens::PutCoeff1OnRPower12 ( double pRetVal ) {
    HRESULT _hr = put_Coeff1OnRPower12(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5438)
inline double ZOSAPI_Interfaces::IObjectEvenAsphereLens::GetCoeff1OnRPower14 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff1OnRPower14(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5439)
inline void ZOSAPI_Interfaces::IObjectEvenAsphereLens::PutCoeff1OnRPower14 ( double pRetVal ) {
    HRESULT _hr = put_Coeff1OnRPower14(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5440)
inline double ZOSAPI_Interfaces::IObjectEvenAsphereLens::GetCoeff1OnRPower16 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff1OnRPower16(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5441)
inline void ZOSAPI_Interfaces::IObjectEvenAsphereLens::PutCoeff1OnRPower16 ( double pRetVal ) {
    HRESULT _hr = put_Coeff1OnRPower16(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5442)
inline double ZOSAPI_Interfaces::IObjectEvenAsphereLens::GetRadius2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Radius2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5443)
inline void ZOSAPI_Interfaces::IObjectEvenAsphereLens::PutRadius2 ( double pRetVal ) {
    HRESULT _hr = put_Radius2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5444)
inline double ZOSAPI_Interfaces::IObjectEvenAsphereLens::GetConic2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Conic2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5445)
inline void ZOSAPI_Interfaces::IObjectEvenAsphereLens::PutConic2 ( double pRetVal ) {
    HRESULT _hr = put_Conic2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5446)
inline double ZOSAPI_Interfaces::IObjectEvenAsphereLens::GetCoeff2OnRPower2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff2OnRPower2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5447)
inline void ZOSAPI_Interfaces::IObjectEvenAsphereLens::PutCoeff2OnRPower2 ( double pRetVal ) {
    HRESULT _hr = put_Coeff2OnRPower2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5448)
inline double ZOSAPI_Interfaces::IObjectEvenAsphereLens::GetCoeff2OnRPower4 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff2OnRPower4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5449)
inline void ZOSAPI_Interfaces::IObjectEvenAsphereLens::PutCoeff2OnRPower4 ( double pRetVal ) {
    HRESULT _hr = put_Coeff2OnRPower4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5450)
inline double ZOSAPI_Interfaces::IObjectEvenAsphereLens::GetCoeff2OnRPower6 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff2OnRPower6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5451)
inline void ZOSAPI_Interfaces::IObjectEvenAsphereLens::PutCoeff2OnRPower6 ( double pRetVal ) {
    HRESULT _hr = put_Coeff2OnRPower6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5452)
inline double ZOSAPI_Interfaces::IObjectEvenAsphereLens::GetCoeff2OnRPower8 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff2OnRPower8(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5453)
inline void ZOSAPI_Interfaces::IObjectEvenAsphereLens::PutCoeff2OnRPower8 ( double pRetVal ) {
    HRESULT _hr = put_Coeff2OnRPower8(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5454)
inline double ZOSAPI_Interfaces::IObjectEvenAsphereLens::GetCoeff2OnRPower10 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff2OnRPower10(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5455)
inline void ZOSAPI_Interfaces::IObjectEvenAsphereLens::PutCoeff2OnRPower10 ( double pRetVal ) {
    HRESULT _hr = put_Coeff2OnRPower10(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5456)
inline double ZOSAPI_Interfaces::IObjectEvenAsphereLens::GetCoeff2OnRPower12 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff2OnRPower12(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5457)
inline void ZOSAPI_Interfaces::IObjectEvenAsphereLens::PutCoeff2OnRPower12 ( double pRetVal ) {
    HRESULT _hr = put_Coeff2OnRPower12(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5458)
inline double ZOSAPI_Interfaces::IObjectEvenAsphereLens::GetCoeff2OnRPower14 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff2OnRPower14(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5459)
inline void ZOSAPI_Interfaces::IObjectEvenAsphereLens::PutCoeff2OnRPower14 ( double pRetVal ) {
    HRESULT _hr = put_Coeff2OnRPower14(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5460)
inline double ZOSAPI_Interfaces::IObjectEvenAsphereLens::GetCoeff2OnRPower16 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff2OnRPower16(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5461)
inline void ZOSAPI_Interfaces::IObjectEvenAsphereLens::PutCoeff2OnRPower16 ( double pRetVal ) {
    HRESULT _hr = put_Coeff2OnRPower16(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5462)
inline double ZOSAPI_Interfaces::IObjectEvenAsphereLens::GetEdge1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Edge1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5463)
inline void ZOSAPI_Interfaces::IObjectEvenAsphereLens::PutEdge1 ( double pRetVal ) {
    HRESULT _hr = put_Edge1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5464)
inline double ZOSAPI_Interfaces::IObjectEvenAsphereLens::GetClear2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Clear2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5465)
inline void ZOSAPI_Interfaces::IObjectEvenAsphereLens::PutClear2 ( double pRetVal ) {
    HRESULT _hr = put_Clear2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5466)
inline double ZOSAPI_Interfaces::IObjectEvenAsphereLens::GetEdge2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Edge2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5467)
inline void ZOSAPI_Interfaces::IObjectEvenAsphereLens::PutEdge2 ( double pRetVal ) {
    HRESULT _hr = put_Edge2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectExtendedOddAsphereLens wrapper method implementations
//

#pragma implementation_key(5468)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectExtendedOddAsphereLens::GetRadialHeightCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RadialHeightCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5469)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectExtendedOddAsphereLens::GetXHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5470)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectExtendedOddAsphereLens::GetThicknessCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ThicknessCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5471)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectExtendedOddAsphereLens::GetFrontRCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontRCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5472)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectExtendedOddAsphereLens::GetFrontKCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontKCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5473)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectExtendedOddAsphereLens::GetFrontNormRadCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontNormRadCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5474)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectExtendedOddAsphereLens::GetFrontNumTermsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontNumTermsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5475)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectExtendedOddAsphereLens::GetRearRCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearRCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5476)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectExtendedOddAsphereLens::GetRearKCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearKCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5477)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectExtendedOddAsphereLens::GetRearNormRadCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearNormRadCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5478)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectExtendedOddAsphereLens::GetRearNumTermsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearNumTermsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5479)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectExtendedOddAsphereLens::GetFrontTermCell ( long termNumber ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_GetFrontTermCell(termNumber, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5480)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectExtendedOddAsphereLens::GetRearTermCell ( long termNumber ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_GetRearTermCell(termNumber, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5481)
inline double ZOSAPI_Interfaces::IObjectExtendedOddAsphereLens::GetRadialHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_RadialHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5482)
inline void ZOSAPI_Interfaces::IObjectExtendedOddAsphereLens::PutRadialHeight ( double pRetVal ) {
    HRESULT _hr = put_RadialHeight(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5483)
inline double ZOSAPI_Interfaces::IObjectExtendedOddAsphereLens::GetXHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_XHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5484)
inline void ZOSAPI_Interfaces::IObjectExtendedOddAsphereLens::PutXHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_XHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5485)
inline double ZOSAPI_Interfaces::IObjectExtendedOddAsphereLens::GetThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_Thickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5486)
inline void ZOSAPI_Interfaces::IObjectExtendedOddAsphereLens::PutThickness ( double pRetVal ) {
    HRESULT _hr = put_Thickness(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5487)
inline double ZOSAPI_Interfaces::IObjectExtendedOddAsphereLens::GetFrontR ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontR(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5488)
inline void ZOSAPI_Interfaces::IObjectExtendedOddAsphereLens::PutFrontR ( double pRetVal ) {
    HRESULT _hr = put_FrontR(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5489)
inline double ZOSAPI_Interfaces::IObjectExtendedOddAsphereLens::GetFrontK ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontK(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5490)
inline void ZOSAPI_Interfaces::IObjectExtendedOddAsphereLens::PutFrontK ( double pRetVal ) {
    HRESULT _hr = put_FrontK(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5491)
inline double ZOSAPI_Interfaces::IObjectExtendedOddAsphereLens::GetFrontNormRad ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontNormRad(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5492)
inline void ZOSAPI_Interfaces::IObjectExtendedOddAsphereLens::PutFrontNormRad ( double pRetVal ) {
    HRESULT _hr = put_FrontNormRad(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5493)
inline long ZOSAPI_Interfaces::IObjectExtendedOddAsphereLens::GetFrontNumTerms ( ) {
    long _result = 0;
    HRESULT _hr = get_FrontNumTerms(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5494)
inline void ZOSAPI_Interfaces::IObjectExtendedOddAsphereLens::PutFrontNumTerms ( long pRetVal ) {
    HRESULT _hr = put_FrontNumTerms(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5495)
inline double ZOSAPI_Interfaces::IObjectExtendedOddAsphereLens::GetRearR ( ) {
    double _result = 0;
    HRESULT _hr = get_RearR(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5496)
inline void ZOSAPI_Interfaces::IObjectExtendedOddAsphereLens::PutRearR ( double pRetVal ) {
    HRESULT _hr = put_RearR(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5497)
inline double ZOSAPI_Interfaces::IObjectExtendedOddAsphereLens::GetRearK ( ) {
    double _result = 0;
    HRESULT _hr = get_RearK(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5498)
inline void ZOSAPI_Interfaces::IObjectExtendedOddAsphereLens::PutRearK ( double pRetVal ) {
    HRESULT _hr = put_RearK(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5499)
inline double ZOSAPI_Interfaces::IObjectExtendedOddAsphereLens::GetRearNormRad ( ) {
    double _result = 0;
    HRESULT _hr = get_RearNormRad(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5500)
inline void ZOSAPI_Interfaces::IObjectExtendedOddAsphereLens::PutRearNormRad ( double pRetVal ) {
    HRESULT _hr = put_RearNormRad(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5501)
inline long ZOSAPI_Interfaces::IObjectExtendedOddAsphereLens::GetRearNumTerms ( ) {
    long _result = 0;
    HRESULT _hr = get_RearNumTerms(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5502)
inline void ZOSAPI_Interfaces::IObjectExtendedOddAsphereLens::PutRearNumTerms ( long pRetVal ) {
    HRESULT _hr = put_RearNumTerms(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5503)
inline double ZOSAPI_Interfaces::IObjectExtendedOddAsphereLens::GetFrontTerm ( long termNumber ) {
    double _result = 0;
    HRESULT _hr = raw_GetFrontTerm(termNumber, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5504)
inline HRESULT ZOSAPI_Interfaces::IObjectExtendedOddAsphereLens::SetFrontTerm ( long termNumber, double Value ) {
    HRESULT _hr = raw_SetFrontTerm(termNumber, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5505)
inline double ZOSAPI_Interfaces::IObjectExtendedOddAsphereLens::GetRearTerm ( long termNumber ) {
    double _result = 0;
    HRESULT _hr = raw_GetRearTerm(termNumber, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5506)
inline HRESULT ZOSAPI_Interfaces::IObjectExtendedOddAsphereLens::SetRearTerm ( long termNumber, double Value ) {
    HRESULT _hr = raw_SetRearTerm(termNumber, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IObjectExtendedPolynomialLens wrapper method implementations
//

#pragma implementation_key(5507)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectExtendedPolynomialLens::GetRadialHeightCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RadialHeightCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5508)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectExtendedPolynomialLens::GetXHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5509)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectExtendedPolynomialLens::GetThicknessCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ThicknessCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5510)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectExtendedPolynomialLens::GetFrontRCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontRCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5511)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectExtendedPolynomialLens::GetFrontKCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontKCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5512)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectExtendedPolynomialLens::GetFrontNormRadiusCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontNormRadiusCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5513)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectExtendedPolynomialLens::GetFrontNumTermsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontNumTermsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5514)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectExtendedPolynomialLens::GetRearRCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearRCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5515)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectExtendedPolynomialLens::GetRearKCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearKCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5516)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectExtendedPolynomialLens::GetRearNormRadiusCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearNormRadiusCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5517)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectExtendedPolynomialLens::GetRearNumTermsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearNumTermsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5518)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectExtendedPolynomialLens::GetFrontTermCell ( long termNumber ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_GetFrontTermCell(termNumber, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5519)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectExtendedPolynomialLens::GetRearTermCell ( long termNumber ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_GetRearTermCell(termNumber, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5520)
inline double ZOSAPI_Interfaces::IObjectExtendedPolynomialLens::GetRadialHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_RadialHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5521)
inline void ZOSAPI_Interfaces::IObjectExtendedPolynomialLens::PutRadialHeight ( double pRetVal ) {
    HRESULT _hr = put_RadialHeight(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5522)
inline double ZOSAPI_Interfaces::IObjectExtendedPolynomialLens::GetXHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_XHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5523)
inline void ZOSAPI_Interfaces::IObjectExtendedPolynomialLens::PutXHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_XHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5524)
inline double ZOSAPI_Interfaces::IObjectExtendedPolynomialLens::GetThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_Thickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5525)
inline void ZOSAPI_Interfaces::IObjectExtendedPolynomialLens::PutThickness ( double pRetVal ) {
    HRESULT _hr = put_Thickness(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5526)
inline double ZOSAPI_Interfaces::IObjectExtendedPolynomialLens::GetFrontR ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontR(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5527)
inline void ZOSAPI_Interfaces::IObjectExtendedPolynomialLens::PutFrontR ( double pRetVal ) {
    HRESULT _hr = put_FrontR(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5528)
inline double ZOSAPI_Interfaces::IObjectExtendedPolynomialLens::GetFrontK ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontK(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5529)
inline void ZOSAPI_Interfaces::IObjectExtendedPolynomialLens::PutFrontK ( double pRetVal ) {
    HRESULT _hr = put_FrontK(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5530)
inline double ZOSAPI_Interfaces::IObjectExtendedPolynomialLens::GetFrontNormRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontNormRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5531)
inline void ZOSAPI_Interfaces::IObjectExtendedPolynomialLens::PutFrontNormRadius ( double pRetVal ) {
    HRESULT _hr = put_FrontNormRadius(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5532)
inline long ZOSAPI_Interfaces::IObjectExtendedPolynomialLens::GetFrontNumTerms ( ) {
    long _result = 0;
    HRESULT _hr = get_FrontNumTerms(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5533)
inline void ZOSAPI_Interfaces::IObjectExtendedPolynomialLens::PutFrontNumTerms ( long pRetVal ) {
    HRESULT _hr = put_FrontNumTerms(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5534)
inline double ZOSAPI_Interfaces::IObjectExtendedPolynomialLens::GetRearR ( ) {
    double _result = 0;
    HRESULT _hr = get_RearR(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5535)
inline void ZOSAPI_Interfaces::IObjectExtendedPolynomialLens::PutRearR ( double pRetVal ) {
    HRESULT _hr = put_RearR(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5536)
inline double ZOSAPI_Interfaces::IObjectExtendedPolynomialLens::GetRearK ( ) {
    double _result = 0;
    HRESULT _hr = get_RearK(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5537)
inline void ZOSAPI_Interfaces::IObjectExtendedPolynomialLens::PutRearK ( double pRetVal ) {
    HRESULT _hr = put_RearK(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5538)
inline double ZOSAPI_Interfaces::IObjectExtendedPolynomialLens::GetRearNormRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_RearNormRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5539)
inline void ZOSAPI_Interfaces::IObjectExtendedPolynomialLens::PutRearNormRadius ( double pRetVal ) {
    HRESULT _hr = put_RearNormRadius(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5540)
inline long ZOSAPI_Interfaces::IObjectExtendedPolynomialLens::GetRearNumTerms ( ) {
    long _result = 0;
    HRESULT _hr = get_RearNumTerms(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5541)
inline void ZOSAPI_Interfaces::IObjectExtendedPolynomialLens::PutRearNumTerms ( long pRetVal ) {
    HRESULT _hr = put_RearNumTerms(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5542)
inline double ZOSAPI_Interfaces::IObjectExtendedPolynomialLens::GetFrontTerm ( long termNumber ) {
    double _result = 0;
    HRESULT _hr = raw_GetFrontTerm(termNumber, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5543)
inline HRESULT ZOSAPI_Interfaces::IObjectExtendedPolynomialLens::SetFrontTerm ( long termNumber, double Value ) {
    HRESULT _hr = raw_SetFrontTerm(termNumber, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5544)
inline double ZOSAPI_Interfaces::IObjectExtendedPolynomialLens::GetRearTerm ( long termNumber ) {
    double _result = 0;
    HRESULT _hr = raw_GetRearTerm(termNumber, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5545)
inline HRESULT ZOSAPI_Interfaces::IObjectExtendedPolynomialLens::SetRearTerm ( long termNumber, double Value ) {
    HRESULT _hr = raw_SetRearTerm(termNumber, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IObjectExtendedPolynomialSurface wrapper method implementations
//

#pragma implementation_key(5546)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectExtendedPolynomialSurface::GetRadialHeightCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RadialHeightCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5547)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectExtendedPolynomialSurface::GetRadiusCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RadiusCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5548)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectExtendedPolynomialSurface::GetConicCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ConicCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5549)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectExtendedPolynomialSurface::GetNormRadCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NormRadCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5550)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectExtendedPolynomialSurface::GetNumberOfTermsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberOfTermsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5551)
inline double ZOSAPI_Interfaces::IObjectExtendedPolynomialSurface::GetRadialHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_RadialHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5552)
inline void ZOSAPI_Interfaces::IObjectExtendedPolynomialSurface::PutRadialHeight ( double pRetVal ) {
    HRESULT _hr = put_RadialHeight(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5553)
inline double ZOSAPI_Interfaces::IObjectExtendedPolynomialSurface::GetRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_Radius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5554)
inline void ZOSAPI_Interfaces::IObjectExtendedPolynomialSurface::PutRadius ( double pRetVal ) {
    HRESULT _hr = put_Radius(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5555)
inline double ZOSAPI_Interfaces::IObjectExtendedPolynomialSurface::GetConic ( ) {
    double _result = 0;
    HRESULT _hr = get_Conic(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5556)
inline void ZOSAPI_Interfaces::IObjectExtendedPolynomialSurface::PutConic ( double pRetVal ) {
    HRESULT _hr = put_Conic(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5557)
inline double ZOSAPI_Interfaces::IObjectExtendedPolynomialSurface::GetNormRad ( ) {
    double _result = 0;
    HRESULT _hr = get_NormRad(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5558)
inline void ZOSAPI_Interfaces::IObjectExtendedPolynomialSurface::PutNormRad ( double pRetVal ) {
    HRESULT _hr = put_NormRad(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5559)
inline long ZOSAPI_Interfaces::IObjectExtendedPolynomialSurface::GetNumberOfTerms ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfTerms(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5560)
inline void ZOSAPI_Interfaces::IObjectExtendedPolynomialSurface::PutNumberOfTerms ( long pRetVal ) {
    HRESULT _hr = put_NumberOfTerms(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectExtruded wrapper method implementations
//

#pragma implementation_key(5561)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectExtruded::GetLengthZCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_LengthZCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5562)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectExtruded::GetFrontXScaleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontXScaleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5563)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectExtruded::GetFrontYScaleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontYScaleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5564)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectExtruded::GetRearXScaleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearXScaleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5565)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectExtruded::GetRearYScaleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearYScaleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5566)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectExtruded::GetRearXDecenterCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearXDecenterCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5567)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectExtruded::GetRearYDecenterCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearYDecenterCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5568)
inline double ZOSAPI_Interfaces::IObjectExtruded::GetLengthZ ( ) {
    double _result = 0;
    HRESULT _hr = get_LengthZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5569)
inline void ZOSAPI_Interfaces::IObjectExtruded::PutLengthZ ( double pRetVal ) {
    HRESULT _hr = put_LengthZ(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5570)
inline double ZOSAPI_Interfaces::IObjectExtruded::GetFrontXScale ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontXScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5571)
inline void ZOSAPI_Interfaces::IObjectExtruded::PutFrontXScale ( double pRetVal ) {
    HRESULT _hr = put_FrontXScale(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5572)
inline double ZOSAPI_Interfaces::IObjectExtruded::GetFrontYScale ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontYScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5573)
inline void ZOSAPI_Interfaces::IObjectExtruded::PutFrontYScale ( double pRetVal ) {
    HRESULT _hr = put_FrontYScale(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5574)
inline double ZOSAPI_Interfaces::IObjectExtruded::GetRearXScale ( ) {
    double _result = 0;
    HRESULT _hr = get_RearXScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5575)
inline void ZOSAPI_Interfaces::IObjectExtruded::PutRearXScale ( double pRetVal ) {
    HRESULT _hr = put_RearXScale(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5576)
inline double ZOSAPI_Interfaces::IObjectExtruded::GetRearYScale ( ) {
    double _result = 0;
    HRESULT _hr = get_RearYScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5577)
inline void ZOSAPI_Interfaces::IObjectExtruded::PutRearYScale ( double pRetVal ) {
    HRESULT _hr = put_RearYScale(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5578)
inline double ZOSAPI_Interfaces::IObjectExtruded::GetRearXDecenter ( ) {
    double _result = 0;
    HRESULT _hr = get_RearXDecenter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5579)
inline void ZOSAPI_Interfaces::IObjectExtruded::PutRearXDecenter ( double pRetVal ) {
    HRESULT _hr = put_RearXDecenter(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5580)
inline double ZOSAPI_Interfaces::IObjectExtruded::GetRearYDecenter ( ) {
    double _result = 0;
    HRESULT _hr = get_RearYDecenter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5581)
inline void ZOSAPI_Interfaces::IObjectExtruded::PutRearYDecenter ( double pRetVal ) {
    HRESULT _hr = put_RearYDecenter(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectFacetedSurface wrapper method implementations
//

#pragma implementation_key(5582)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectFacetedSurface::GetRadiusCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RadiusCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5583)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectFacetedSurface::GetConicCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ConicCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5584)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectFacetedSurface::GetShapeCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ShapeCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5585)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectFacetedSurface::GetMinApertureCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_MinApertureCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5586)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectFacetedSurface::GetXHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5587)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectFacetedSurface::GetMaxApertureCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_MaxApertureCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5588)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectFacetedSurface::GetYHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_YHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5589)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectFacetedSurface::GetRadFacetsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RadFacetsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5590)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectFacetedSurface::GetXFacetsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XFacetsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5591)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectFacetedSurface::GetAngFacetsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_AngFacetsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5592)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectFacetedSurface::GetYFacetsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_YFacetsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5593)
inline double ZOSAPI_Interfaces::IObjectFacetedSurface::GetRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_Radius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5594)
inline void ZOSAPI_Interfaces::IObjectFacetedSurface::PutRadius ( double pRetVal ) {
    HRESULT _hr = put_Radius(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5595)
inline double ZOSAPI_Interfaces::IObjectFacetedSurface::GetConic ( ) {
    double _result = 0;
    HRESULT _hr = get_Conic(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5596)
inline void ZOSAPI_Interfaces::IObjectFacetedSurface::PutConic ( double pRetVal ) {
    HRESULT _hr = put_Conic(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5597)
inline enum ZOSAPI_Interfaces::ApertureShapes ZOSAPI_Interfaces::IObjectFacetedSurface::GetShape ( ) {
    enum ApertureShapes _result;
    HRESULT _hr = get_Shape(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5598)
inline void ZOSAPI_Interfaces::IObjectFacetedSurface::PutShape ( enum ApertureShapes pRetVal ) {
    HRESULT _hr = put_Shape(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5599)
inline double ZOSAPI_Interfaces::IObjectFacetedSurface::GetMinAperture ( ) {
    double _result = 0;
    HRESULT _hr = get_MinAperture(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5600)
inline void ZOSAPI_Interfaces::IObjectFacetedSurface::PutMinAperture ( double pRetVal ) {
    HRESULT _hr = put_MinAperture(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5601)
inline double ZOSAPI_Interfaces::IObjectFacetedSurface::GetXHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_XHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5602)
inline void ZOSAPI_Interfaces::IObjectFacetedSurface::PutXHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_XHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5603)
inline double ZOSAPI_Interfaces::IObjectFacetedSurface::GetMaxAperture ( ) {
    double _result = 0;
    HRESULT _hr = get_MaxAperture(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5604)
inline void ZOSAPI_Interfaces::IObjectFacetedSurface::PutMaxAperture ( double pRetVal ) {
    HRESULT _hr = put_MaxAperture(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5605)
inline double ZOSAPI_Interfaces::IObjectFacetedSurface::GetYHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_YHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5606)
inline void ZOSAPI_Interfaces::IObjectFacetedSurface::PutYHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_YHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5607)
inline long ZOSAPI_Interfaces::IObjectFacetedSurface::GetRadFacets ( ) {
    long _result = 0;
    HRESULT _hr = get_RadFacets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5608)
inline void ZOSAPI_Interfaces::IObjectFacetedSurface::PutRadFacets ( long pRetVal ) {
    HRESULT _hr = put_RadFacets(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5609)
inline long ZOSAPI_Interfaces::IObjectFacetedSurface::GetXFacets ( ) {
    long _result = 0;
    HRESULT _hr = get_XFacets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5610)
inline void ZOSAPI_Interfaces::IObjectFacetedSurface::PutXFacets ( long pRetVal ) {
    HRESULT _hr = put_XFacets(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5611)
inline long ZOSAPI_Interfaces::IObjectFacetedSurface::GetAngFacets ( ) {
    long _result = 0;
    HRESULT _hr = get_AngFacets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5612)
inline void ZOSAPI_Interfaces::IObjectFacetedSurface::PutAngFacets ( long pRetVal ) {
    HRESULT _hr = put_AngFacets(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5613)
inline long ZOSAPI_Interfaces::IObjectFacetedSurface::GetYFacets ( ) {
    long _result = 0;
    HRESULT _hr = get_YFacets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5614)
inline void ZOSAPI_Interfaces::IObjectFacetedSurface::PutYFacets ( long pRetVal ) {
    HRESULT _hr = put_YFacets(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectFreeformZ wrapper method implementations
//

#pragma implementation_key(5615)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectFreeformZ::GetNumberOfPointsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberOfPointsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5616)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectFreeformZ::GetIsVolumeCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_IsVolumeCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5617)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectFreeformZ::GetYCell ( long pointN ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_GetYCell(pointN, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5618)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectFreeformZ::GetZCell ( long pointN ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_GetZCell(pointN, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5619)
inline long ZOSAPI_Interfaces::IObjectFreeformZ::GetNumberOfPoints ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfPoints(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5620)
inline void ZOSAPI_Interfaces::IObjectFreeformZ::PutNumberOfPoints ( long pRetVal ) {
    HRESULT _hr = put_NumberOfPoints(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5621)
inline VARIANT_BOOL ZOSAPI_Interfaces::IObjectFreeformZ::GetIsVolume ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsVolume(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5622)
inline void ZOSAPI_Interfaces::IObjectFreeformZ::PutIsVolume ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsVolume(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5623)
inline double ZOSAPI_Interfaces::IObjectFreeformZ::GetY ( long pointN ) {
    double _result = 0;
    HRESULT _hr = raw_GetY(pointN, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5624)
inline HRESULT ZOSAPI_Interfaces::IObjectFreeformZ::SetY ( long pointN, double Value ) {
    HRESULT _hr = raw_SetY(pointN, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5625)
inline double ZOSAPI_Interfaces::IObjectFreeformZ::GetZ ( long pointN ) {
    double _result = 0;
    HRESULT _hr = raw_GetZ(pointN, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5626)
inline HRESULT ZOSAPI_Interfaces::IObjectFreeformZ::SetZ ( long pointN, double Value ) {
    HRESULT _hr = raw_SetZ(pointN, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IObjectFresnel1 wrapper method implementations
//

#pragma implementation_key(5627)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectFresnel1::GetRadialHeightCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RadialHeightCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5628)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectFresnel1::GetXHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5629)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectFresnel1::GetPlusDepthPerMinusFreqCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_PlusDepthPerMinusFreqCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5630)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectFresnel1::GetPitchDegCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_PitchDegCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5631)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectFresnel1::GetThicknessCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ThicknessCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5632)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectFresnel1::GetRadiusCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RadiusCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5633)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectFresnel1::GetConicCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ConicCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5634)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectFresnel1::GetCoeffRPower2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffRPower2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5635)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectFresnel1::GetCoeffRPower4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffRPower4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5636)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectFresnel1::GetCoeffRPower6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffRPower6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5637)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectFresnel1::GetCoeffRPower8Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffRPower8Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5638)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectFresnel1::GetCoeffRPower10Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffRPower10Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5639)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectFresnel1::GetCoeffRPower12Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffRPower12Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5640)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectFresnel1::GetCoeffRPower14Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffRPower14Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5641)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectFresnel1::GetCoeffRPower16Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffRPower16Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5642)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectFresnel1::GetNumberOfSegements16Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberOfSegements16Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5643)
inline double ZOSAPI_Interfaces::IObjectFresnel1::GetRadialHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_RadialHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5644)
inline void ZOSAPI_Interfaces::IObjectFresnel1::PutRadialHeight ( double pRetVal ) {
    HRESULT _hr = put_RadialHeight(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5645)
inline double ZOSAPI_Interfaces::IObjectFresnel1::GetXHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_XHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5646)
inline void ZOSAPI_Interfaces::IObjectFresnel1::PutXHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_XHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5647)
inline double ZOSAPI_Interfaces::IObjectFresnel1::GetPlusDepthPerMinusFreq ( ) {
    double _result = 0;
    HRESULT _hr = get_PlusDepthPerMinusFreq(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5648)
inline void ZOSAPI_Interfaces::IObjectFresnel1::PutPlusDepthPerMinusFreq ( double pRetVal ) {
    HRESULT _hr = put_PlusDepthPerMinusFreq(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5649)
inline double ZOSAPI_Interfaces::IObjectFresnel1::GetPitchDeg ( ) {
    double _result = 0;
    HRESULT _hr = get_PitchDeg(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5650)
inline void ZOSAPI_Interfaces::IObjectFresnel1::PutPitchDeg ( double pRetVal ) {
    HRESULT _hr = put_PitchDeg(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5651)
inline double ZOSAPI_Interfaces::IObjectFresnel1::GetThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_Thickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5652)
inline void ZOSAPI_Interfaces::IObjectFresnel1::PutThickness ( double pRetVal ) {
    HRESULT _hr = put_Thickness(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5653)
inline double ZOSAPI_Interfaces::IObjectFresnel1::GetRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_Radius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5654)
inline void ZOSAPI_Interfaces::IObjectFresnel1::PutRadius ( double pRetVal ) {
    HRESULT _hr = put_Radius(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5655)
inline double ZOSAPI_Interfaces::IObjectFresnel1::GetConic ( ) {
    double _result = 0;
    HRESULT _hr = get_Conic(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5656)
inline void ZOSAPI_Interfaces::IObjectFresnel1::PutConic ( double pRetVal ) {
    HRESULT _hr = put_Conic(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5657)
inline double ZOSAPI_Interfaces::IObjectFresnel1::GetCoeffRPower2 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffRPower2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5658)
inline void ZOSAPI_Interfaces::IObjectFresnel1::PutCoeffRPower2 ( double pRetVal ) {
    HRESULT _hr = put_CoeffRPower2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5659)
inline double ZOSAPI_Interfaces::IObjectFresnel1::GetCoeffRPower4 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffRPower4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5660)
inline void ZOSAPI_Interfaces::IObjectFresnel1::PutCoeffRPower4 ( double pRetVal ) {
    HRESULT _hr = put_CoeffRPower4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5661)
inline double ZOSAPI_Interfaces::IObjectFresnel1::GetCoeffRPower6 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffRPower6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5662)
inline void ZOSAPI_Interfaces::IObjectFresnel1::PutCoeffRPower6 ( double pRetVal ) {
    HRESULT _hr = put_CoeffRPower6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5663)
inline double ZOSAPI_Interfaces::IObjectFresnel1::GetCoeffRPower8 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffRPower8(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5664)
inline void ZOSAPI_Interfaces::IObjectFresnel1::PutCoeffRPower8 ( double pRetVal ) {
    HRESULT _hr = put_CoeffRPower8(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5665)
inline double ZOSAPI_Interfaces::IObjectFresnel1::GetCoeffRPower10 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffRPower10(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5666)
inline void ZOSAPI_Interfaces::IObjectFresnel1::PutCoeffRPower10 ( double pRetVal ) {
    HRESULT _hr = put_CoeffRPower10(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5667)
inline double ZOSAPI_Interfaces::IObjectFresnel1::GetCoeffRPower12 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffRPower12(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5668)
inline void ZOSAPI_Interfaces::IObjectFresnel1::PutCoeffRPower12 ( double pRetVal ) {
    HRESULT _hr = put_CoeffRPower12(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5669)
inline double ZOSAPI_Interfaces::IObjectFresnel1::GetCoeffRPower14 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffRPower14(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5670)
inline void ZOSAPI_Interfaces::IObjectFresnel1::PutCoeffRPower14 ( double pRetVal ) {
    HRESULT _hr = put_CoeffRPower14(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5671)
inline double ZOSAPI_Interfaces::IObjectFresnel1::GetCoeffRPower16 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffRPower16(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5672)
inline void ZOSAPI_Interfaces::IObjectFresnel1::PutCoeffRPower16 ( double pRetVal ) {
    HRESULT _hr = put_CoeffRPower16(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5673)
inline long ZOSAPI_Interfaces::IObjectFresnel1::GetNumberOfSegements ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfSegements(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5674)
inline void ZOSAPI_Interfaces::IObjectFresnel1::PutNumberOfSegements ( long pRetVal ) {
    HRESULT _hr = put_NumberOfSegements(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectFresnel2 wrapper method implementations
//

#pragma implementation_key(5675)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectFresnel2::GetRadialHeightCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RadialHeightCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5676)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectFresnel2::GetXHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5677)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectFresnel2::GetThicknessCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ThicknessCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5678)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectFresnel2::GetIsCylinderCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_IsCylinderCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5679)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectFresnel2::GetRadiusCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RadiusCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5680)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectFresnel2::GetConicCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ConicCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5681)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectFresnel2::GetCoeffRPower2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffRPower2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5682)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectFresnel2::GetCoeffRPower4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffRPower4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5683)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectFresnel2::GetCoeffRPower6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffRPower6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5684)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectFresnel2::GetCoeffRPower8Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffRPower8Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5685)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectFresnel2::GetCoeffRPower10Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffRPower10Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5686)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectFresnel2::GetCoeffRPower12Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffRPower12Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5687)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectFresnel2::GetCoeffRPower14Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffRPower14Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5688)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectFresnel2::GetCoeffRPower16Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffRPower16Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5689)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectFresnel2::GetCoeffYPower2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffYPower2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5690)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectFresnel2::GetCoeffYPower4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffYPower4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5691)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectFresnel2::GetCoeffYPower6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffYPower6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5692)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectFresnel2::GetCoeffYPower8Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffYPower8Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5693)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectFresnel2::GetCoeffYPower10Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffYPower10Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5694)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectFresnel2::GetCoeffYPower12Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffYPower12Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5695)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectFresnel2::GetCoeffYPower14Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffYPower14Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5696)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectFresnel2::GetCoeffYPower16Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffYPower16Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5697)
inline double ZOSAPI_Interfaces::IObjectFresnel2::GetRadialHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_RadialHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5698)
inline void ZOSAPI_Interfaces::IObjectFresnel2::PutRadialHeight ( double pRetVal ) {
    HRESULT _hr = put_RadialHeight(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5699)
inline double ZOSAPI_Interfaces::IObjectFresnel2::GetXHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_XHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5700)
inline void ZOSAPI_Interfaces::IObjectFresnel2::PutXHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_XHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5701)
inline double ZOSAPI_Interfaces::IObjectFresnel2::GetThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_Thickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5702)
inline void ZOSAPI_Interfaces::IObjectFresnel2::PutThickness ( double pRetVal ) {
    HRESULT _hr = put_Thickness(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5703)
inline VARIANT_BOOL ZOSAPI_Interfaces::IObjectFresnel2::GetIsCylinder ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsCylinder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5704)
inline void ZOSAPI_Interfaces::IObjectFresnel2::PutIsCylinder ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsCylinder(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5705)
inline double ZOSAPI_Interfaces::IObjectFresnel2::GetRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_Radius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5706)
inline void ZOSAPI_Interfaces::IObjectFresnel2::PutRadius ( double pRetVal ) {
    HRESULT _hr = put_Radius(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5707)
inline double ZOSAPI_Interfaces::IObjectFresnel2::GetConic ( ) {
    double _result = 0;
    HRESULT _hr = get_Conic(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5708)
inline void ZOSAPI_Interfaces::IObjectFresnel2::PutConic ( double pRetVal ) {
    HRESULT _hr = put_Conic(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5709)
inline double ZOSAPI_Interfaces::IObjectFresnel2::GetCoeffRPower2 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffRPower2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5710)
inline void ZOSAPI_Interfaces::IObjectFresnel2::PutCoeffRPower2 ( double pRetVal ) {
    HRESULT _hr = put_CoeffRPower2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5711)
inline double ZOSAPI_Interfaces::IObjectFresnel2::GetCoeffRPower4 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffRPower4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5712)
inline void ZOSAPI_Interfaces::IObjectFresnel2::PutCoeffRPower4 ( double pRetVal ) {
    HRESULT _hr = put_CoeffRPower4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5713)
inline double ZOSAPI_Interfaces::IObjectFresnel2::GetCoeffRPower6 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffRPower6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5714)
inline void ZOSAPI_Interfaces::IObjectFresnel2::PutCoeffRPower6 ( double pRetVal ) {
    HRESULT _hr = put_CoeffRPower6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5715)
inline double ZOSAPI_Interfaces::IObjectFresnel2::GetCoeffRPower8 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffRPower8(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5716)
inline void ZOSAPI_Interfaces::IObjectFresnel2::PutCoeffRPower8 ( double pRetVal ) {
    HRESULT _hr = put_CoeffRPower8(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5717)
inline double ZOSAPI_Interfaces::IObjectFresnel2::GetCoeffRPower10 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffRPower10(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5718)
inline void ZOSAPI_Interfaces::IObjectFresnel2::PutCoeffRPower10 ( double pRetVal ) {
    HRESULT _hr = put_CoeffRPower10(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5719)
inline double ZOSAPI_Interfaces::IObjectFresnel2::GetCoeffRPower12 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffRPower12(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5720)
inline void ZOSAPI_Interfaces::IObjectFresnel2::PutCoeffRPower12 ( double pRetVal ) {
    HRESULT _hr = put_CoeffRPower12(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5721)
inline double ZOSAPI_Interfaces::IObjectFresnel2::GetCoeffRPower14 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffRPower14(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5722)
inline void ZOSAPI_Interfaces::IObjectFresnel2::PutCoeffRPower14 ( double pRetVal ) {
    HRESULT _hr = put_CoeffRPower14(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5723)
inline double ZOSAPI_Interfaces::IObjectFresnel2::GetCoeffRPower16 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffRPower16(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5724)
inline void ZOSAPI_Interfaces::IObjectFresnel2::PutCoeffRPower16 ( double pRetVal ) {
    HRESULT _hr = put_CoeffRPower16(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5725)
inline double ZOSAPI_Interfaces::IObjectFresnel2::GetCoeffYPower2 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffYPower2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5726)
inline void ZOSAPI_Interfaces::IObjectFresnel2::PutCoeffYPower2 ( double pRetVal ) {
    HRESULT _hr = put_CoeffYPower2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5727)
inline double ZOSAPI_Interfaces::IObjectFresnel2::GetCoeffYPower4 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffYPower4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5728)
inline void ZOSAPI_Interfaces::IObjectFresnel2::PutCoeffYPower4 ( double pRetVal ) {
    HRESULT _hr = put_CoeffYPower4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5729)
inline double ZOSAPI_Interfaces::IObjectFresnel2::GetCoeffYPower6 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffYPower6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5730)
inline void ZOSAPI_Interfaces::IObjectFresnel2::PutCoeffYPower6 ( double pRetVal ) {
    HRESULT _hr = put_CoeffYPower6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5731)
inline double ZOSAPI_Interfaces::IObjectFresnel2::GetCoeffYPower8 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffYPower8(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5732)
inline void ZOSAPI_Interfaces::IObjectFresnel2::PutCoeffYPower8 ( double pRetVal ) {
    HRESULT _hr = put_CoeffYPower8(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5733)
inline double ZOSAPI_Interfaces::IObjectFresnel2::GetCoeffYPower10 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffYPower10(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5734)
inline void ZOSAPI_Interfaces::IObjectFresnel2::PutCoeffYPower10 ( double pRetVal ) {
    HRESULT _hr = put_CoeffYPower10(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5735)
inline double ZOSAPI_Interfaces::IObjectFresnel2::GetCoeffYPower12 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffYPower12(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5736)
inline void ZOSAPI_Interfaces::IObjectFresnel2::PutCoeffYPower12 ( double pRetVal ) {
    HRESULT _hr = put_CoeffYPower12(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5737)
inline double ZOSAPI_Interfaces::IObjectFresnel2::GetCoeffYPower14 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffYPower14(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5738)
inline void ZOSAPI_Interfaces::IObjectFresnel2::PutCoeffYPower14 ( double pRetVal ) {
    HRESULT _hr = put_CoeffYPower14(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5739)
inline double ZOSAPI_Interfaces::IObjectFresnel2::GetCoeffYPower16 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffYPower16(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5740)
inline void ZOSAPI_Interfaces::IObjectFresnel2::PutCoeffYPower16 ( double pRetVal ) {
    HRESULT _hr = put_CoeffYPower16(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectGridSagLens wrapper method implementations
//

#pragma implementation_key(5741)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagLens::GetXHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5742)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagLens::GetYHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_YHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5743)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagLens::GetFrontRadiusCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontRadiusCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5744)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagLens::GetFrontConicCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontConicCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5745)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagLens::GetThicknessCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ThicknessCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5746)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagLens::GetInterpolateCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_InterpolateCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5747)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagLens::GetBackRadiusCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_BackRadiusCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5748)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagLens::GetBackConicCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_BackConicCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5749)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagLens::GetCoeffRPower2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffRPower2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5750)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagLens::GetCoeffRPower4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffRPower4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5751)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagLens::GetCoeffRPower6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffRPower6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5752)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagLens::GetCoeffRPower8Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffRPower8Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5753)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagLens::GetCoeffRPower10Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffRPower10Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5754)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagLens::GetCoeffRPower12Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffRPower12Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5755)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagLens::GetCoeffRPower14Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffRPower14Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5756)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagLens::GetCoeffRPower16Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffRPower16Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5757)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagLens::GetDecenterXCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_DecenterXCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5758)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagLens::GetDecenterYCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_DecenterYCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5759)
inline double ZOSAPI_Interfaces::IObjectGridSagLens::GetXHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_XHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5760)
inline void ZOSAPI_Interfaces::IObjectGridSagLens::PutXHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_XHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5761)
inline double ZOSAPI_Interfaces::IObjectGridSagLens::GetYHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_YHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5762)
inline void ZOSAPI_Interfaces::IObjectGridSagLens::PutYHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_YHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5763)
inline double ZOSAPI_Interfaces::IObjectGridSagLens::GetFrontRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5764)
inline void ZOSAPI_Interfaces::IObjectGridSagLens::PutFrontRadius ( double pRetVal ) {
    HRESULT _hr = put_FrontRadius(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5765)
inline double ZOSAPI_Interfaces::IObjectGridSagLens::GetFrontConic ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontConic(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5766)
inline void ZOSAPI_Interfaces::IObjectGridSagLens::PutFrontConic ( double pRetVal ) {
    HRESULT _hr = put_FrontConic(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5767)
inline double ZOSAPI_Interfaces::IObjectGridSagLens::GetThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_Thickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5768)
inline void ZOSAPI_Interfaces::IObjectGridSagLens::PutThickness ( double pRetVal ) {
    HRESULT _hr = put_Thickness(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5769)
inline enum ZOSAPI_Interfaces::InterpolateChoices ZOSAPI_Interfaces::IObjectGridSagLens::GetInterpolate ( ) {
    enum InterpolateChoices _result;
    HRESULT _hr = get_Interpolate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5770)
inline void ZOSAPI_Interfaces::IObjectGridSagLens::PutInterpolate ( enum InterpolateChoices pRetVal ) {
    HRESULT _hr = put_Interpolate(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5771)
inline double ZOSAPI_Interfaces::IObjectGridSagLens::GetBackRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_BackRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5772)
inline void ZOSAPI_Interfaces::IObjectGridSagLens::PutBackRadius ( double pRetVal ) {
    HRESULT _hr = put_BackRadius(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5773)
inline double ZOSAPI_Interfaces::IObjectGridSagLens::GetBackConic ( ) {
    double _result = 0;
    HRESULT _hr = get_BackConic(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5774)
inline void ZOSAPI_Interfaces::IObjectGridSagLens::PutBackConic ( double pRetVal ) {
    HRESULT _hr = put_BackConic(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5775)
inline double ZOSAPI_Interfaces::IObjectGridSagLens::GetCoeffRPower2 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffRPower2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5776)
inline void ZOSAPI_Interfaces::IObjectGridSagLens::PutCoeffRPower2 ( double pRetVal ) {
    HRESULT _hr = put_CoeffRPower2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5777)
inline double ZOSAPI_Interfaces::IObjectGridSagLens::GetCoeffRPower4 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffRPower4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5778)
inline void ZOSAPI_Interfaces::IObjectGridSagLens::PutCoeffRPower4 ( double pRetVal ) {
    HRESULT _hr = put_CoeffRPower4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5779)
inline double ZOSAPI_Interfaces::IObjectGridSagLens::GetCoeffRPower6 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffRPower6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5780)
inline void ZOSAPI_Interfaces::IObjectGridSagLens::PutCoeffRPower6 ( double pRetVal ) {
    HRESULT _hr = put_CoeffRPower6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5781)
inline double ZOSAPI_Interfaces::IObjectGridSagLens::GetCoeffRPower8 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffRPower8(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5782)
inline void ZOSAPI_Interfaces::IObjectGridSagLens::PutCoeffRPower8 ( double pRetVal ) {
    HRESULT _hr = put_CoeffRPower8(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5783)
inline double ZOSAPI_Interfaces::IObjectGridSagLens::GetCoeffRPower10 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffRPower10(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5784)
inline void ZOSAPI_Interfaces::IObjectGridSagLens::PutCoeffRPower10 ( double pRetVal ) {
    HRESULT _hr = put_CoeffRPower10(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5785)
inline double ZOSAPI_Interfaces::IObjectGridSagLens::GetCoeffRPower12 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffRPower12(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5786)
inline void ZOSAPI_Interfaces::IObjectGridSagLens::PutCoeffRPower12 ( double pRetVal ) {
    HRESULT _hr = put_CoeffRPower12(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5787)
inline double ZOSAPI_Interfaces::IObjectGridSagLens::GetCoeffRPower14 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffRPower14(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5788)
inline void ZOSAPI_Interfaces::IObjectGridSagLens::PutCoeffRPower14 ( double pRetVal ) {
    HRESULT _hr = put_CoeffRPower14(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5789)
inline double ZOSAPI_Interfaces::IObjectGridSagLens::GetCoeffRPower16 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffRPower16(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5790)
inline void ZOSAPI_Interfaces::IObjectGridSagLens::PutCoeffRPower16 ( double pRetVal ) {
    HRESULT _hr = put_CoeffRPower16(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5791)
inline double ZOSAPI_Interfaces::IObjectGridSagLens::GetDecenterX ( ) {
    double _result = 0;
    HRESULT _hr = get_DecenterX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5792)
inline void ZOSAPI_Interfaces::IObjectGridSagLens::PutDecenterX ( double pRetVal ) {
    HRESULT _hr = put_DecenterX(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5793)
inline double ZOSAPI_Interfaces::IObjectGridSagLens::GetDecenterY ( ) {
    double _result = 0;
    HRESULT _hr = get_DecenterY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5794)
inline void ZOSAPI_Interfaces::IObjectGridSagLens::PutDecenterY ( double pRetVal ) {
    HRESULT _hr = put_DecenterY(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectGridSagFrontBack wrapper method implementations
//

#pragma implementation_key(5795)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetXHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5796)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetYHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_YHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5797)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetFrontRadiusCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontRadiusCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5798)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetFrontConicCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontConicCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5799)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetFrontRPower2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontRPower2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5800)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetFrontRPower4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontRPower4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5801)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetFrontRPower6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontRPower6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5802)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetFrontRPower8Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontRPower8Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5803)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetFrontRPower10Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontRPower10Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5804)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetFrontRPower12Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontRPower12Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5805)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetFrontRPower14Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontRPower14Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5806)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetFrontRPower16Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontRPower16Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5807)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetFrontInterpolateCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontInterpolateCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5808)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetFrontXDecenterCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontXDecenterCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5809)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetFrontYDecenterCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontYDecenterCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5810)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetFrontTiltXCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontTiltXCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5811)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetFrontTiltYCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontTiltYCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5812)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetFrontTiltZCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontTiltZCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5813)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetFrontOrderCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontOrderCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5814)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetFrontGridXDecenterCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontGridXDecenterCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5815)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetFrontGridYDecenterCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontGridYDecenterCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5816)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetThicknessCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ThicknessCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5817)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetRearRadiusCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearRadiusCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5818)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetRearConicCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearConicCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5819)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetRearRPower2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearRPower2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5820)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetRearRPower4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearRPower4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5821)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetRearRPower6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearRPower6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5822)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetRearRPower8Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearRPower8Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5823)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetRearRPower10Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearRPower10Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5824)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetRearRPower12Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearRPower12Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5825)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetRearRPower14Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearRPower14Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5826)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetRearRPower16Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearRPower16Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5827)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetRearInterpolateCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearInterpolateCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5828)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetRearXDecenterCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearXDecenterCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5829)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetRearYDecenterCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearYDecenterCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5830)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetRearTiltXCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearTiltXCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5831)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetRearTiltYCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearTiltYCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5832)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetRearTiltZCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearTiltZCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5833)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetRearOrderCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearOrderCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5834)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetRearGridXDecenterCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearGridXDecenterCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5835)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetRearGridYDecenterCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearGridYDecenterCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5836)
inline double ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetXHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_XHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5837)
inline void ZOSAPI_Interfaces::IObjectGridSagFrontBack::PutXHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_XHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5838)
inline double ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetYHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_YHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5839)
inline void ZOSAPI_Interfaces::IObjectGridSagFrontBack::PutYHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_YHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5840)
inline double ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetFrontRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5841)
inline void ZOSAPI_Interfaces::IObjectGridSagFrontBack::PutFrontRadius ( double pRetVal ) {
    HRESULT _hr = put_FrontRadius(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5842)
inline double ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetFrontConic ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontConic(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5843)
inline void ZOSAPI_Interfaces::IObjectGridSagFrontBack::PutFrontConic ( double pRetVal ) {
    HRESULT _hr = put_FrontConic(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5844)
inline double ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetFrontRPower2 ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontRPower2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5845)
inline void ZOSAPI_Interfaces::IObjectGridSagFrontBack::PutFrontRPower2 ( double pRetVal ) {
    HRESULT _hr = put_FrontRPower2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5846)
inline double ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetFrontRPower4 ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontRPower4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5847)
inline void ZOSAPI_Interfaces::IObjectGridSagFrontBack::PutFrontRPower4 ( double pRetVal ) {
    HRESULT _hr = put_FrontRPower4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5848)
inline double ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetFrontRPower6 ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontRPower6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5849)
inline void ZOSAPI_Interfaces::IObjectGridSagFrontBack::PutFrontRPower6 ( double pRetVal ) {
    HRESULT _hr = put_FrontRPower6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5850)
inline double ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetFrontRPower8 ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontRPower8(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5851)
inline void ZOSAPI_Interfaces::IObjectGridSagFrontBack::PutFrontRPower8 ( double pRetVal ) {
    HRESULT _hr = put_FrontRPower8(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5852)
inline double ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetFrontRPower10 ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontRPower10(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5853)
inline void ZOSAPI_Interfaces::IObjectGridSagFrontBack::PutFrontRPower10 ( double pRetVal ) {
    HRESULT _hr = put_FrontRPower10(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5854)
inline double ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetFrontRPower12 ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontRPower12(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5855)
inline void ZOSAPI_Interfaces::IObjectGridSagFrontBack::PutFrontRPower12 ( double pRetVal ) {
    HRESULT _hr = put_FrontRPower12(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5856)
inline double ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetFrontRPower14 ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontRPower14(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5857)
inline void ZOSAPI_Interfaces::IObjectGridSagFrontBack::PutFrontRPower14 ( double pRetVal ) {
    HRESULT _hr = put_FrontRPower14(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5858)
inline double ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetFrontRPower16 ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontRPower16(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5859)
inline void ZOSAPI_Interfaces::IObjectGridSagFrontBack::PutFrontRPower16 ( double pRetVal ) {
    HRESULT _hr = put_FrontRPower16(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5860)
inline enum ZOSAPI_Interfaces::InterpolateChoices ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetFrontInterpolate ( ) {
    enum InterpolateChoices _result;
    HRESULT _hr = get_FrontInterpolate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5861)
inline void ZOSAPI_Interfaces::IObjectGridSagFrontBack::PutFrontInterpolate ( enum InterpolateChoices pRetVal ) {
    HRESULT _hr = put_FrontInterpolate(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5862)
inline double ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetFrontXDecenter ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontXDecenter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5863)
inline void ZOSAPI_Interfaces::IObjectGridSagFrontBack::PutFrontXDecenter ( double pRetVal ) {
    HRESULT _hr = put_FrontXDecenter(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5864)
inline double ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetFrontYDecenter ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontYDecenter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5865)
inline void ZOSAPI_Interfaces::IObjectGridSagFrontBack::PutFrontYDecenter ( double pRetVal ) {
    HRESULT _hr = put_FrontYDecenter(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5866)
inline double ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetFrontTiltX ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontTiltX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5867)
inline void ZOSAPI_Interfaces::IObjectGridSagFrontBack::PutFrontTiltX ( double pRetVal ) {
    HRESULT _hr = put_FrontTiltX(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5868)
inline double ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetFrontTiltY ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontTiltY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5869)
inline void ZOSAPI_Interfaces::IObjectGridSagFrontBack::PutFrontTiltY ( double pRetVal ) {
    HRESULT _hr = put_FrontTiltY(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5870)
inline double ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetFrontTiltZ ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontTiltZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5871)
inline void ZOSAPI_Interfaces::IObjectGridSagFrontBack::PutFrontTiltZ ( double pRetVal ) {
    HRESULT _hr = put_FrontTiltZ(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5872)
inline enum ZOSAPI_Interfaces::OrderChoices ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetFrontOrder ( ) {
    enum OrderChoices _result;
    HRESULT _hr = get_FrontOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5873)
inline void ZOSAPI_Interfaces::IObjectGridSagFrontBack::PutFrontOrder ( enum OrderChoices pRetVal ) {
    HRESULT _hr = put_FrontOrder(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5874)
inline double ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetFrontGridXDecenter ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontGridXDecenter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5875)
inline void ZOSAPI_Interfaces::IObjectGridSagFrontBack::PutFrontGridXDecenter ( double pRetVal ) {
    HRESULT _hr = put_FrontGridXDecenter(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5876)
inline double ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetFrontGridYDecenter ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontGridYDecenter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5877)
inline void ZOSAPI_Interfaces::IObjectGridSagFrontBack::PutFrontGridYDecenter ( double pRetVal ) {
    HRESULT _hr = put_FrontGridYDecenter(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5878)
inline double ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_Thickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5879)
inline void ZOSAPI_Interfaces::IObjectGridSagFrontBack::PutThickness ( double pRetVal ) {
    HRESULT _hr = put_Thickness(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5880)
inline double ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetRearRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_RearRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5881)
inline void ZOSAPI_Interfaces::IObjectGridSagFrontBack::PutRearRadius ( double pRetVal ) {
    HRESULT _hr = put_RearRadius(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5882)
inline double ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetRearConic ( ) {
    double _result = 0;
    HRESULT _hr = get_RearConic(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5883)
inline void ZOSAPI_Interfaces::IObjectGridSagFrontBack::PutRearConic ( double pRetVal ) {
    HRESULT _hr = put_RearConic(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5884)
inline double ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetRearRPower2 ( ) {
    double _result = 0;
    HRESULT _hr = get_RearRPower2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5885)
inline void ZOSAPI_Interfaces::IObjectGridSagFrontBack::PutRearRPower2 ( double pRetVal ) {
    HRESULT _hr = put_RearRPower2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5886)
inline double ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetRearRPower4 ( ) {
    double _result = 0;
    HRESULT _hr = get_RearRPower4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5887)
inline void ZOSAPI_Interfaces::IObjectGridSagFrontBack::PutRearRPower4 ( double pRetVal ) {
    HRESULT _hr = put_RearRPower4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5888)
inline double ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetRearRPower6 ( ) {
    double _result = 0;
    HRESULT _hr = get_RearRPower6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5889)
inline void ZOSAPI_Interfaces::IObjectGridSagFrontBack::PutRearRPower6 ( double pRetVal ) {
    HRESULT _hr = put_RearRPower6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5890)
inline double ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetRearRPower8 ( ) {
    double _result = 0;
    HRESULT _hr = get_RearRPower8(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5891)
inline void ZOSAPI_Interfaces::IObjectGridSagFrontBack::PutRearRPower8 ( double pRetVal ) {
    HRESULT _hr = put_RearRPower8(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5892)
inline double ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetRearRPower10 ( ) {
    double _result = 0;
    HRESULT _hr = get_RearRPower10(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5893)
inline void ZOSAPI_Interfaces::IObjectGridSagFrontBack::PutRearRPower10 ( double pRetVal ) {
    HRESULT _hr = put_RearRPower10(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5894)
inline double ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetRearRPower12 ( ) {
    double _result = 0;
    HRESULT _hr = get_RearRPower12(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5895)
inline void ZOSAPI_Interfaces::IObjectGridSagFrontBack::PutRearRPower12 ( double pRetVal ) {
    HRESULT _hr = put_RearRPower12(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5896)
inline double ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetRearRPower14 ( ) {
    double _result = 0;
    HRESULT _hr = get_RearRPower14(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5897)
inline void ZOSAPI_Interfaces::IObjectGridSagFrontBack::PutRearRPower14 ( double pRetVal ) {
    HRESULT _hr = put_RearRPower14(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5898)
inline double ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetRearRPower16 ( ) {
    double _result = 0;
    HRESULT _hr = get_RearRPower16(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5899)
inline void ZOSAPI_Interfaces::IObjectGridSagFrontBack::PutRearRPower16 ( double pRetVal ) {
    HRESULT _hr = put_RearRPower16(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5900)
inline enum ZOSAPI_Interfaces::InterpolateChoices ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetRearInterpolate ( ) {
    enum InterpolateChoices _result;
    HRESULT _hr = get_RearInterpolate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5901)
inline void ZOSAPI_Interfaces::IObjectGridSagFrontBack::PutRearInterpolate ( enum InterpolateChoices pRetVal ) {
    HRESULT _hr = put_RearInterpolate(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5902)
inline double ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetRearXDecenter ( ) {
    double _result = 0;
    HRESULT _hr = get_RearXDecenter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5903)
inline void ZOSAPI_Interfaces::IObjectGridSagFrontBack::PutRearXDecenter ( double pRetVal ) {
    HRESULT _hr = put_RearXDecenter(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5904)
inline double ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetRearYDecenter ( ) {
    double _result = 0;
    HRESULT _hr = get_RearYDecenter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5905)
inline void ZOSAPI_Interfaces::IObjectGridSagFrontBack::PutRearYDecenter ( double pRetVal ) {
    HRESULT _hr = put_RearYDecenter(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5906)
inline double ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetRearTiltX ( ) {
    double _result = 0;
    HRESULT _hr = get_RearTiltX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5907)
inline void ZOSAPI_Interfaces::IObjectGridSagFrontBack::PutRearTiltX ( double pRetVal ) {
    HRESULT _hr = put_RearTiltX(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5908)
inline double ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetRearTiltY ( ) {
    double _result = 0;
    HRESULT _hr = get_RearTiltY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5909)
inline void ZOSAPI_Interfaces::IObjectGridSagFrontBack::PutRearTiltY ( double pRetVal ) {
    HRESULT _hr = put_RearTiltY(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5910)
inline double ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetRearTiltZ ( ) {
    double _result = 0;
    HRESULT _hr = get_RearTiltZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5911)
inline void ZOSAPI_Interfaces::IObjectGridSagFrontBack::PutRearTiltZ ( double pRetVal ) {
    HRESULT _hr = put_RearTiltZ(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5912)
inline enum ZOSAPI_Interfaces::OrderChoices ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetRearOrder ( ) {
    enum OrderChoices _result;
    HRESULT _hr = get_RearOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5913)
inline void ZOSAPI_Interfaces::IObjectGridSagFrontBack::PutRearOrder ( enum OrderChoices pRetVal ) {
    HRESULT _hr = put_RearOrder(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5914)
inline double ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetRearGridXDecenter ( ) {
    double _result = 0;
    HRESULT _hr = get_RearGridXDecenter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5915)
inline void ZOSAPI_Interfaces::IObjectGridSagFrontBack::PutRearGridXDecenter ( double pRetVal ) {
    HRESULT _hr = put_RearGridXDecenter(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5916)
inline double ZOSAPI_Interfaces::IObjectGridSagFrontBack::GetRearGridYDecenter ( ) {
    double _result = 0;
    HRESULT _hr = get_RearGridYDecenter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5917)
inline void ZOSAPI_Interfaces::IObjectGridSagFrontBack::PutRearGridYDecenter ( double pRetVal ) {
    HRESULT _hr = put_RearGridYDecenter(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectGridSagSurface wrapper method implementations
//

#pragma implementation_key(5918)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagSurface::GetInterpolateCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_InterpolateCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5919)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagSurface::GetRadiusCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RadiusCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5920)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagSurface::GetConicCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ConicCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5921)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagSurface::GetCoeffRPower2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffRPower2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5922)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagSurface::GetCoeffRPower4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffRPower4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5923)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagSurface::GetCoeffRPower6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffRPower6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5924)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagSurface::GetCoeffRPower8Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffRPower8Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5925)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagSurface::GetCoeffRPower10Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffRPower10Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5926)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagSurface::GetCoeffRPower12Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffRPower12Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5927)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagSurface::GetCoeffRPower14Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffRPower14Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5928)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagSurface::GetCoeffRPower16Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffRPower16Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5929)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagSurface::GetDecenterXCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_DecenterXCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5930)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectGridSagSurface::GetDecenterYCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_DecenterYCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5931)
inline enum ZOSAPI_Interfaces::InterpolateChoices ZOSAPI_Interfaces::IObjectGridSagSurface::GetInterpolate ( ) {
    enum InterpolateChoices _result;
    HRESULT _hr = get_Interpolate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5932)
inline void ZOSAPI_Interfaces::IObjectGridSagSurface::PutInterpolate ( enum InterpolateChoices pRetVal ) {
    HRESULT _hr = put_Interpolate(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5933)
inline double ZOSAPI_Interfaces::IObjectGridSagSurface::GetRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_Radius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5934)
inline void ZOSAPI_Interfaces::IObjectGridSagSurface::PutRadius ( double pRetVal ) {
    HRESULT _hr = put_Radius(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5935)
inline double ZOSAPI_Interfaces::IObjectGridSagSurface::GetConic ( ) {
    double _result = 0;
    HRESULT _hr = get_Conic(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5936)
inline void ZOSAPI_Interfaces::IObjectGridSagSurface::PutConic ( double pRetVal ) {
    HRESULT _hr = put_Conic(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5937)
inline double ZOSAPI_Interfaces::IObjectGridSagSurface::GetCoeffRPower2 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffRPower2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5938)
inline void ZOSAPI_Interfaces::IObjectGridSagSurface::PutCoeffRPower2 ( double pRetVal ) {
    HRESULT _hr = put_CoeffRPower2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5939)
inline double ZOSAPI_Interfaces::IObjectGridSagSurface::GetCoeffRPower4 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffRPower4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5940)
inline void ZOSAPI_Interfaces::IObjectGridSagSurface::PutCoeffRPower4 ( double pRetVal ) {
    HRESULT _hr = put_CoeffRPower4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5941)
inline double ZOSAPI_Interfaces::IObjectGridSagSurface::GetCoeffRPower6 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffRPower6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5942)
inline void ZOSAPI_Interfaces::IObjectGridSagSurface::PutCoeffRPower6 ( double pRetVal ) {
    HRESULT _hr = put_CoeffRPower6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5943)
inline double ZOSAPI_Interfaces::IObjectGridSagSurface::GetCoeffRPower8 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffRPower8(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5944)
inline void ZOSAPI_Interfaces::IObjectGridSagSurface::PutCoeffRPower8 ( double pRetVal ) {
    HRESULT _hr = put_CoeffRPower8(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5945)
inline double ZOSAPI_Interfaces::IObjectGridSagSurface::GetCoeffRPower10 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffRPower10(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5946)
inline void ZOSAPI_Interfaces::IObjectGridSagSurface::PutCoeffRPower10 ( double pRetVal ) {
    HRESULT _hr = put_CoeffRPower10(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5947)
inline double ZOSAPI_Interfaces::IObjectGridSagSurface::GetCoeffRPower12 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffRPower12(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5948)
inline void ZOSAPI_Interfaces::IObjectGridSagSurface::PutCoeffRPower12 ( double pRetVal ) {
    HRESULT _hr = put_CoeffRPower12(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5949)
inline double ZOSAPI_Interfaces::IObjectGridSagSurface::GetCoeffRPower14 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffRPower14(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5950)
inline void ZOSAPI_Interfaces::IObjectGridSagSurface::PutCoeffRPower14 ( double pRetVal ) {
    HRESULT _hr = put_CoeffRPower14(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5951)
inline double ZOSAPI_Interfaces::IObjectGridSagSurface::GetCoeffRPower16 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffRPower16(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5952)
inline void ZOSAPI_Interfaces::IObjectGridSagSurface::PutCoeffRPower16 ( double pRetVal ) {
    HRESULT _hr = put_CoeffRPower16(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5953)
inline double ZOSAPI_Interfaces::IObjectGridSagSurface::GetDecenterX ( ) {
    double _result = 0;
    HRESULT _hr = get_DecenterX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5954)
inline void ZOSAPI_Interfaces::IObjectGridSagSurface::PutDecenterX ( double pRetVal ) {
    HRESULT _hr = put_DecenterX(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5955)
inline double ZOSAPI_Interfaces::IObjectGridSagSurface::GetDecenterY ( ) {
    double _result = 0;
    HRESULT _hr = get_DecenterY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5956)
inline void ZOSAPI_Interfaces::IObjectGridSagSurface::PutDecenterY ( double pRetVal ) {
    HRESULT _hr = put_DecenterY(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectHexagonalLensletArray wrapper method implementations
//

#pragma implementation_key(5957)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectHexagonalLensletArray::GetNumberOfColumnsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberOfColumnsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5958)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectHexagonalLensletArray::GetNumberOfRowsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberOfRowsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5959)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectHexagonalLensletArray::GetDrawAsFlatCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_DrawAsFlatCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5960)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectHexagonalLensletArray::GetWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_WidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5961)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectHexagonalLensletArray::GetThicknessCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ThicknessCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5962)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectHexagonalLensletArray::GetRadiusCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RadiusCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5963)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectHexagonalLensletArray::GetConicCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ConicCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5964)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectHexagonalLensletArray::GetCoeffRPower2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffRPower2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5965)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectHexagonalLensletArray::GetCoeffRPower4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffRPower4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5966)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectHexagonalLensletArray::GetCoeffRPower6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffRPower6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5967)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectHexagonalLensletArray::GetCoeffRPower8Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffRPower8Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5968)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectHexagonalLensletArray::GetCoeffRPower10Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffRPower10Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5969)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectHexagonalLensletArray::GetCoeffRPower12Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffRPower12Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5970)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectHexagonalLensletArray::GetCoeffRPower14Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffRPower14Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5971)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectHexagonalLensletArray::GetCoeffRPower16Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffRPower16Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(5972)
inline long ZOSAPI_Interfaces::IObjectHexagonalLensletArray::GetNumberOfColumns ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfColumns(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5973)
inline void ZOSAPI_Interfaces::IObjectHexagonalLensletArray::PutNumberOfColumns ( long pRetVal ) {
    HRESULT _hr = put_NumberOfColumns(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5974)
inline long ZOSAPI_Interfaces::IObjectHexagonalLensletArray::GetNumberOfRows ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfRows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5975)
inline void ZOSAPI_Interfaces::IObjectHexagonalLensletArray::PutNumberOfRows ( long pRetVal ) {
    HRESULT _hr = put_NumberOfRows(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5976)
inline VARIANT_BOOL ZOSAPI_Interfaces::IObjectHexagonalLensletArray::GetDrawAsFlat ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DrawAsFlat(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5977)
inline void ZOSAPI_Interfaces::IObjectHexagonalLensletArray::PutDrawAsFlat ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_DrawAsFlat(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5978)
inline double ZOSAPI_Interfaces::IObjectHexagonalLensletArray::GetWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_Width(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5979)
inline void ZOSAPI_Interfaces::IObjectHexagonalLensletArray::PutWidth ( double pRetVal ) {
    HRESULT _hr = put_Width(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5980)
inline double ZOSAPI_Interfaces::IObjectHexagonalLensletArray::GetThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_Thickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5981)
inline void ZOSAPI_Interfaces::IObjectHexagonalLensletArray::PutThickness ( double pRetVal ) {
    HRESULT _hr = put_Thickness(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5982)
inline double ZOSAPI_Interfaces::IObjectHexagonalLensletArray::GetRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_Radius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5983)
inline void ZOSAPI_Interfaces::IObjectHexagonalLensletArray::PutRadius ( double pRetVal ) {
    HRESULT _hr = put_Radius(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5984)
inline double ZOSAPI_Interfaces::IObjectHexagonalLensletArray::GetConic ( ) {
    double _result = 0;
    HRESULT _hr = get_Conic(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5985)
inline void ZOSAPI_Interfaces::IObjectHexagonalLensletArray::PutConic ( double pRetVal ) {
    HRESULT _hr = put_Conic(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5986)
inline double ZOSAPI_Interfaces::IObjectHexagonalLensletArray::GetCoeffRPower2 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffRPower2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5987)
inline void ZOSAPI_Interfaces::IObjectHexagonalLensletArray::PutCoeffRPower2 ( double pRetVal ) {
    HRESULT _hr = put_CoeffRPower2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5988)
inline double ZOSAPI_Interfaces::IObjectHexagonalLensletArray::GetCoeffRPower4 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffRPower4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5989)
inline void ZOSAPI_Interfaces::IObjectHexagonalLensletArray::PutCoeffRPower4 ( double pRetVal ) {
    HRESULT _hr = put_CoeffRPower4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5990)
inline double ZOSAPI_Interfaces::IObjectHexagonalLensletArray::GetCoeffRPower6 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffRPower6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5991)
inline void ZOSAPI_Interfaces::IObjectHexagonalLensletArray::PutCoeffRPower6 ( double pRetVal ) {
    HRESULT _hr = put_CoeffRPower6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5992)
inline double ZOSAPI_Interfaces::IObjectHexagonalLensletArray::GetCoeffRPower8 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffRPower8(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5993)
inline void ZOSAPI_Interfaces::IObjectHexagonalLensletArray::PutCoeffRPower8 ( double pRetVal ) {
    HRESULT _hr = put_CoeffRPower8(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5994)
inline double ZOSAPI_Interfaces::IObjectHexagonalLensletArray::GetCoeffRPower10 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffRPower10(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5995)
inline void ZOSAPI_Interfaces::IObjectHexagonalLensletArray::PutCoeffRPower10 ( double pRetVal ) {
    HRESULT _hr = put_CoeffRPower10(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5996)
inline double ZOSAPI_Interfaces::IObjectHexagonalLensletArray::GetCoeffRPower12 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffRPower12(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5997)
inline void ZOSAPI_Interfaces::IObjectHexagonalLensletArray::PutCoeffRPower12 ( double pRetVal ) {
    HRESULT _hr = put_CoeffRPower12(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5998)
inline double ZOSAPI_Interfaces::IObjectHexagonalLensletArray::GetCoeffRPower14 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffRPower14(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5999)
inline void ZOSAPI_Interfaces::IObjectHexagonalLensletArray::PutCoeffRPower14 ( double pRetVal ) {
    HRESULT _hr = put_CoeffRPower14(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6000)
inline double ZOSAPI_Interfaces::IObjectHexagonalLensletArray::GetCoeffRPower16 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffRPower16(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6001)
inline void ZOSAPI_Interfaces::IObjectHexagonalLensletArray::PutCoeffRPower16 ( double pRetVal ) {
    HRESULT _hr = put_CoeffRPower16(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectHologramLens wrapper method implementations
//

#pragma implementation_key(6002)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectHologramLens::GetRadialHeightCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RadialHeightCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6003)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectHologramLens::GetXHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6004)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectHologramLens::GetThicknessCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ThicknessCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6005)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectHologramLens::GetRadius1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Radius1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6006)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectHologramLens::GetConic1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Conic1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6007)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectHologramLens::GetRadius2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Radius2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6008)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectHologramLens::GetConic2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Conic2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6009)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectHologramLens::GetHologramTypeCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_HologramTypeCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6010)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectHologramLens::GetOrderCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_OrderCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6011)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectHologramLens::GetConsWaveCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ConsWaveCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6012)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectHologramLens::GetX1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6013)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectHologramLens::GetY1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Y1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6014)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectHologramLens::GetZ1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Z1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6015)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectHologramLens::GetX2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6016)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectHologramLens::GetY2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Y2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6017)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectHologramLens::GetZ2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Z2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6018)
inline double ZOSAPI_Interfaces::IObjectHologramLens::GetRadialHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_RadialHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6019)
inline void ZOSAPI_Interfaces::IObjectHologramLens::PutRadialHeight ( double pRetVal ) {
    HRESULT _hr = put_RadialHeight(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6020)
inline double ZOSAPI_Interfaces::IObjectHologramLens::GetXHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_XHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6021)
inline void ZOSAPI_Interfaces::IObjectHologramLens::PutXHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_XHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6022)
inline double ZOSAPI_Interfaces::IObjectHologramLens::GetThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_Thickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6023)
inline void ZOSAPI_Interfaces::IObjectHologramLens::PutThickness ( double pRetVal ) {
    HRESULT _hr = put_Thickness(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6024)
inline double ZOSAPI_Interfaces::IObjectHologramLens::GetRadius1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Radius1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6025)
inline void ZOSAPI_Interfaces::IObjectHologramLens::PutRadius1 ( double pRetVal ) {
    HRESULT _hr = put_Radius1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6026)
inline double ZOSAPI_Interfaces::IObjectHologramLens::GetConic1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Conic1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6027)
inline void ZOSAPI_Interfaces::IObjectHologramLens::PutConic1 ( double pRetVal ) {
    HRESULT _hr = put_Conic1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6028)
inline double ZOSAPI_Interfaces::IObjectHologramLens::GetRadius2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Radius2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6029)
inline void ZOSAPI_Interfaces::IObjectHologramLens::PutRadius2 ( double pRetVal ) {
    HRESULT _hr = put_Radius2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6030)
inline double ZOSAPI_Interfaces::IObjectHologramLens::GetConic2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Conic2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6031)
inline void ZOSAPI_Interfaces::IObjectHologramLens::PutConic2 ( double pRetVal ) {
    HRESULT _hr = put_Conic2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6032)
inline long ZOSAPI_Interfaces::IObjectHologramLens::GetHologramType ( ) {
    long _result = 0;
    HRESULT _hr = get_HologramType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6033)
inline void ZOSAPI_Interfaces::IObjectHologramLens::PutHologramType ( long pRetVal ) {
    HRESULT _hr = put_HologramType(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6034)
inline double ZOSAPI_Interfaces::IObjectHologramLens::GetOrder ( ) {
    double _result = 0;
    HRESULT _hr = get_Order(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6035)
inline void ZOSAPI_Interfaces::IObjectHologramLens::PutOrder ( double pRetVal ) {
    HRESULT _hr = put_Order(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6036)
inline double ZOSAPI_Interfaces::IObjectHologramLens::GetConsWave ( ) {
    double _result = 0;
    HRESULT _hr = get_ConsWave(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6037)
inline void ZOSAPI_Interfaces::IObjectHologramLens::PutConsWave ( double pRetVal ) {
    HRESULT _hr = put_ConsWave(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6038)
inline double ZOSAPI_Interfaces::IObjectHologramLens::GetX1 ( ) {
    double _result = 0;
    HRESULT _hr = get_X1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6039)
inline void ZOSAPI_Interfaces::IObjectHologramLens::PutX1 ( double pRetVal ) {
    HRESULT _hr = put_X1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6040)
inline double ZOSAPI_Interfaces::IObjectHologramLens::GetY1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Y1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6041)
inline void ZOSAPI_Interfaces::IObjectHologramLens::PutY1 ( double pRetVal ) {
    HRESULT _hr = put_Y1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6042)
inline double ZOSAPI_Interfaces::IObjectHologramLens::GetZ1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Z1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6043)
inline void ZOSAPI_Interfaces::IObjectHologramLens::PutZ1 ( double pRetVal ) {
    HRESULT _hr = put_Z1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6044)
inline double ZOSAPI_Interfaces::IObjectHologramLens::GetX2 ( ) {
    double _result = 0;
    HRESULT _hr = get_X2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6045)
inline void ZOSAPI_Interfaces::IObjectHologramLens::PutX2 ( double pRetVal ) {
    HRESULT _hr = put_X2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6046)
inline double ZOSAPI_Interfaces::IObjectHologramLens::GetY2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Y2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6047)
inline void ZOSAPI_Interfaces::IObjectHologramLens::PutY2 ( double pRetVal ) {
    HRESULT _hr = put_Y2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6048)
inline double ZOSAPI_Interfaces::IObjectHologramLens::GetZ2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Z2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6049)
inline void ZOSAPI_Interfaces::IObjectHologramLens::PutZ2 ( double pRetVal ) {
    HRESULT _hr = put_Z2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectHologramSurface wrapper method implementations
//

#pragma implementation_key(6050)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectHologramSurface::GetRadiusCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RadiusCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6051)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectHologramSurface::GetConicCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ConicCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6052)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectHologramSurface::GetMaxApertureCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_MaxApertureCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6053)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectHologramSurface::GetMinApertureCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_MinApertureCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6054)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectHologramSurface::GetHologramTypeCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_HologramTypeCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6055)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectHologramSurface::GetOrderCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_OrderCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6056)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectHologramSurface::GetConsWaveCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ConsWaveCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6057)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectHologramSurface::GetX1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6058)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectHologramSurface::GetY1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Y1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6059)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectHologramSurface::GetZ1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Z1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6060)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectHologramSurface::GetX2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6061)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectHologramSurface::GetY2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Y2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6062)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectHologramSurface::GetZ2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Z2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6063)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectHologramSurface::GetNumberOfTermsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberOfTermsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6064)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectHologramSurface::RPowerICell ( long i ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_RPowerICell(i, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6065)
inline double ZOSAPI_Interfaces::IObjectHologramSurface::GetRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_Radius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6066)
inline void ZOSAPI_Interfaces::IObjectHologramSurface::PutRadius ( double pRetVal ) {
    HRESULT _hr = put_Radius(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6067)
inline double ZOSAPI_Interfaces::IObjectHologramSurface::GetConic ( ) {
    double _result = 0;
    HRESULT _hr = get_Conic(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6068)
inline void ZOSAPI_Interfaces::IObjectHologramSurface::PutConic ( double pRetVal ) {
    HRESULT _hr = put_Conic(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6069)
inline double ZOSAPI_Interfaces::IObjectHologramSurface::GetMaxAperture ( ) {
    double _result = 0;
    HRESULT _hr = get_MaxAperture(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6070)
inline void ZOSAPI_Interfaces::IObjectHologramSurface::PutMaxAperture ( double pRetVal ) {
    HRESULT _hr = put_MaxAperture(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6071)
inline double ZOSAPI_Interfaces::IObjectHologramSurface::GetMinAperture ( ) {
    double _result = 0;
    HRESULT _hr = get_MinAperture(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6072)
inline void ZOSAPI_Interfaces::IObjectHologramSurface::PutMinAperture ( double pRetVal ) {
    HRESULT _hr = put_MinAperture(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6073)
inline long ZOSAPI_Interfaces::IObjectHologramSurface::GetHologramType ( ) {
    long _result = 0;
    HRESULT _hr = get_HologramType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6074)
inline void ZOSAPI_Interfaces::IObjectHologramSurface::PutHologramType ( long pRetVal ) {
    HRESULT _hr = put_HologramType(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6075)
inline double ZOSAPI_Interfaces::IObjectHologramSurface::GetOrder ( ) {
    double _result = 0;
    HRESULT _hr = get_Order(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6076)
inline void ZOSAPI_Interfaces::IObjectHologramSurface::PutOrder ( double pRetVal ) {
    HRESULT _hr = put_Order(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6077)
inline double ZOSAPI_Interfaces::IObjectHologramSurface::GetConsWave ( ) {
    double _result = 0;
    HRESULT _hr = get_ConsWave(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6078)
inline void ZOSAPI_Interfaces::IObjectHologramSurface::PutConsWave ( double pRetVal ) {
    HRESULT _hr = put_ConsWave(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6079)
inline double ZOSAPI_Interfaces::IObjectHologramSurface::GetX1 ( ) {
    double _result = 0;
    HRESULT _hr = get_X1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6080)
inline void ZOSAPI_Interfaces::IObjectHologramSurface::PutX1 ( double pRetVal ) {
    HRESULT _hr = put_X1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6081)
inline double ZOSAPI_Interfaces::IObjectHologramSurface::GetY1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Y1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6082)
inline void ZOSAPI_Interfaces::IObjectHologramSurface::PutY1 ( double pRetVal ) {
    HRESULT _hr = put_Y1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6083)
inline double ZOSAPI_Interfaces::IObjectHologramSurface::GetZ1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Z1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6084)
inline void ZOSAPI_Interfaces::IObjectHologramSurface::PutZ1 ( double pRetVal ) {
    HRESULT _hr = put_Z1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6085)
inline double ZOSAPI_Interfaces::IObjectHologramSurface::GetX2 ( ) {
    double _result = 0;
    HRESULT _hr = get_X2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6086)
inline void ZOSAPI_Interfaces::IObjectHologramSurface::PutX2 ( double pRetVal ) {
    HRESULT _hr = put_X2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6087)
inline double ZOSAPI_Interfaces::IObjectHologramSurface::GetY2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Y2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6088)
inline void ZOSAPI_Interfaces::IObjectHologramSurface::PutY2 ( double pRetVal ) {
    HRESULT _hr = put_Y2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6089)
inline double ZOSAPI_Interfaces::IObjectHologramSurface::GetZ2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Z2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6090)
inline void ZOSAPI_Interfaces::IObjectHologramSurface::PutZ2 ( double pRetVal ) {
    HRESULT _hr = put_Z2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6091)
inline long ZOSAPI_Interfaces::IObjectHologramSurface::GetNumberOfTerms ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfTerms(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6092)
inline void ZOSAPI_Interfaces::IObjectHologramSurface::PutNumberOfTerms ( long pRetVal ) {
    HRESULT _hr = put_NumberOfTerms(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6093)
inline double ZOSAPI_Interfaces::IObjectHologramSurface::GetRPowerI ( long i ) {
    double _result = 0;
    HRESULT _hr = raw_GetRPowerI(i, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6094)
inline HRESULT ZOSAPI_Interfaces::IObjectHologramSurface::SetRPowerI ( long i, double v ) {
    HRESULT _hr = raw_SetRPowerI(i, v);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IObjectJonesMatrix wrapper method implementations
//

#pragma implementation_key(6095)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectJonesMatrix::GetXHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6096)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectJonesMatrix::GetYHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_YHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6097)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectJonesMatrix::GetARealCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ARealCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6098)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectJonesMatrix::GetAImagCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_AImagCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6099)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectJonesMatrix::GetBRealCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_BRealCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6100)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectJonesMatrix::GetBImagCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_BImagCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6101)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectJonesMatrix::GetCRealCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CRealCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6102)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectJonesMatrix::GetCImagCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CImagCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6103)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectJonesMatrix::GetDRealCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_DRealCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6104)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectJonesMatrix::GetDImagCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_DImagCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6105)
inline double ZOSAPI_Interfaces::IObjectJonesMatrix::GetXHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_XHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6106)
inline void ZOSAPI_Interfaces::IObjectJonesMatrix::PutXHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_XHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6107)
inline double ZOSAPI_Interfaces::IObjectJonesMatrix::GetYHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_YHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6108)
inline void ZOSAPI_Interfaces::IObjectJonesMatrix::PutYHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_YHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6109)
inline double ZOSAPI_Interfaces::IObjectJonesMatrix::GetAReal ( ) {
    double _result = 0;
    HRESULT _hr = get_AReal(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6110)
inline void ZOSAPI_Interfaces::IObjectJonesMatrix::PutAReal ( double pRetVal ) {
    HRESULT _hr = put_AReal(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6111)
inline double ZOSAPI_Interfaces::IObjectJonesMatrix::GetAImag ( ) {
    double _result = 0;
    HRESULT _hr = get_AImag(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6112)
inline void ZOSAPI_Interfaces::IObjectJonesMatrix::PutAImag ( double pRetVal ) {
    HRESULT _hr = put_AImag(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6113)
inline double ZOSAPI_Interfaces::IObjectJonesMatrix::GetBReal ( ) {
    double _result = 0;
    HRESULT _hr = get_BReal(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6114)
inline void ZOSAPI_Interfaces::IObjectJonesMatrix::PutBReal ( double pRetVal ) {
    HRESULT _hr = put_BReal(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6115)
inline double ZOSAPI_Interfaces::IObjectJonesMatrix::GetBImag ( ) {
    double _result = 0;
    HRESULT _hr = get_BImag(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6116)
inline void ZOSAPI_Interfaces::IObjectJonesMatrix::PutBImag ( double pRetVal ) {
    HRESULT _hr = put_BImag(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6117)
inline double ZOSAPI_Interfaces::IObjectJonesMatrix::GetCReal ( ) {
    double _result = 0;
    HRESULT _hr = get_CReal(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6118)
inline void ZOSAPI_Interfaces::IObjectJonesMatrix::PutCReal ( double pRetVal ) {
    HRESULT _hr = put_CReal(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6119)
inline double ZOSAPI_Interfaces::IObjectJonesMatrix::GetCImag ( ) {
    double _result = 0;
    HRESULT _hr = get_CImag(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6120)
inline void ZOSAPI_Interfaces::IObjectJonesMatrix::PutCImag ( double pRetVal ) {
    HRESULT _hr = put_CImag(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6121)
inline double ZOSAPI_Interfaces::IObjectJonesMatrix::GetDReal ( ) {
    double _result = 0;
    HRESULT _hr = get_DReal(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6122)
inline void ZOSAPI_Interfaces::IObjectJonesMatrix::PutDReal ( double pRetVal ) {
    HRESULT _hr = put_DReal(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6123)
inline double ZOSAPI_Interfaces::IObjectJonesMatrix::GetDImag ( ) {
    double _result = 0;
    HRESULT _hr = get_DImag(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6124)
inline void ZOSAPI_Interfaces::IObjectJonesMatrix::PutDImag ( double pRetVal ) {
    HRESULT _hr = put_DImag(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectLensletArray1 wrapper method implementations
//

#pragma implementation_key(6125)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectLensletArray1::GetXHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6126)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectLensletArray1::GetYHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_YHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6127)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectLensletArray1::GetThicknessCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ThicknessCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6128)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectLensletArray1::GetRadiusCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RadiusCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6129)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectLensletArray1::GetConicCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ConicCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6130)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectLensletArray1::GetIsToricCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_IsToricCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6131)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectLensletArray1::GetToricRCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ToricRCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6132)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectLensletArray1::GetLinesPerUMCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_LinesPerUMCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6133)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectLensletArray1::GetDiffOrderCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_DiffOrderCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6134)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectLensletArray1::GetCoeffRPower2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffRPower2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6135)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectLensletArray1::GetCoeffRPower4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffRPower4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6136)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectLensletArray1::GetCoeffRPower6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffRPower6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6137)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectLensletArray1::GetCoeffRPower8Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffRPower8Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6138)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectLensletArray1::GetCoeffRPower10Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffRPower10Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6139)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectLensletArray1::GetCoeffRPower12Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffRPower12Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6140)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectLensletArray1::GetCoeffRPower14Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffRPower14Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6141)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectLensletArray1::GetCoeffRPower16Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffRPower16Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6142)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectLensletArray1::GetCoeffYPower2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffYPower2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6143)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectLensletArray1::GetCoeffYPower4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffYPower4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6144)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectLensletArray1::GetCoeffYPower6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffYPower6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6145)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectLensletArray1::GetCoeffYPower8Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffYPower8Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6146)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectLensletArray1::GetCoeffYPower10Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffYPower10Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6147)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectLensletArray1::GetCoeffYPower12Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffYPower12Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6148)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectLensletArray1::GetCoeffYPower14Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffYPower14Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6149)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectLensletArray1::GetCoeffYPower16Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffYPower16Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6150)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectLensletArray1::GetDecenterXCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_DecenterXCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6151)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectLensletArray1::GetDecenterYCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_DecenterYCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6152)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectLensletArray1::GetNumberInXCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberInXCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6153)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectLensletArray1::GetNumberInYCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberInYCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6154)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectLensletArray1::GetDiffractiveFaceCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_DiffractiveFaceCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6155)
inline double ZOSAPI_Interfaces::IObjectLensletArray1::GetXHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_XHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6156)
inline void ZOSAPI_Interfaces::IObjectLensletArray1::PutXHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_XHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6157)
inline double ZOSAPI_Interfaces::IObjectLensletArray1::GetYHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_YHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6158)
inline void ZOSAPI_Interfaces::IObjectLensletArray1::PutYHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_YHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6159)
inline double ZOSAPI_Interfaces::IObjectLensletArray1::GetThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_Thickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6160)
inline void ZOSAPI_Interfaces::IObjectLensletArray1::PutThickness ( double pRetVal ) {
    HRESULT _hr = put_Thickness(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6161)
inline double ZOSAPI_Interfaces::IObjectLensletArray1::GetRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_Radius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6162)
inline void ZOSAPI_Interfaces::IObjectLensletArray1::PutRadius ( double pRetVal ) {
    HRESULT _hr = put_Radius(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6163)
inline double ZOSAPI_Interfaces::IObjectLensletArray1::GetConic ( ) {
    double _result = 0;
    HRESULT _hr = get_Conic(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6164)
inline void ZOSAPI_Interfaces::IObjectLensletArray1::PutConic ( double pRetVal ) {
    HRESULT _hr = put_Conic(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6165)
inline VARIANT_BOOL ZOSAPI_Interfaces::IObjectLensletArray1::GetIsToric ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsToric(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6166)
inline void ZOSAPI_Interfaces::IObjectLensletArray1::PutIsToric ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsToric(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6167)
inline double ZOSAPI_Interfaces::IObjectLensletArray1::GetToricR ( ) {
    double _result = 0;
    HRESULT _hr = get_ToricR(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6168)
inline void ZOSAPI_Interfaces::IObjectLensletArray1::PutToricR ( double pRetVal ) {
    HRESULT _hr = put_ToricR(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6169)
inline double ZOSAPI_Interfaces::IObjectLensletArray1::GetLinesPerUM ( ) {
    double _result = 0;
    HRESULT _hr = get_LinesPerUM(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6170)
inline void ZOSAPI_Interfaces::IObjectLensletArray1::PutLinesPerUM ( double pRetVal ) {
    HRESULT _hr = put_LinesPerUM(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6171)
inline double ZOSAPI_Interfaces::IObjectLensletArray1::GetDiffOrder ( ) {
    double _result = 0;
    HRESULT _hr = get_DiffOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6172)
inline void ZOSAPI_Interfaces::IObjectLensletArray1::PutDiffOrder ( double pRetVal ) {
    HRESULT _hr = put_DiffOrder(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6173)
inline double ZOSAPI_Interfaces::IObjectLensletArray1::GetCoeffRPower2 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffRPower2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6174)
inline void ZOSAPI_Interfaces::IObjectLensletArray1::PutCoeffRPower2 ( double pRetVal ) {
    HRESULT _hr = put_CoeffRPower2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6175)
inline double ZOSAPI_Interfaces::IObjectLensletArray1::GetCoeffRPower4 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffRPower4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6176)
inline void ZOSAPI_Interfaces::IObjectLensletArray1::PutCoeffRPower4 ( double pRetVal ) {
    HRESULT _hr = put_CoeffRPower4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6177)
inline double ZOSAPI_Interfaces::IObjectLensletArray1::GetCoeffRPower6 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffRPower6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6178)
inline void ZOSAPI_Interfaces::IObjectLensletArray1::PutCoeffRPower6 ( double pRetVal ) {
    HRESULT _hr = put_CoeffRPower6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6179)
inline double ZOSAPI_Interfaces::IObjectLensletArray1::GetCoeffRPower8 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffRPower8(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6180)
inline void ZOSAPI_Interfaces::IObjectLensletArray1::PutCoeffRPower8 ( double pRetVal ) {
    HRESULT _hr = put_CoeffRPower8(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6181)
inline double ZOSAPI_Interfaces::IObjectLensletArray1::GetCoeffRPower10 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffRPower10(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6182)
inline void ZOSAPI_Interfaces::IObjectLensletArray1::PutCoeffRPower10 ( double pRetVal ) {
    HRESULT _hr = put_CoeffRPower10(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6183)
inline double ZOSAPI_Interfaces::IObjectLensletArray1::GetCoeffRPower12 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffRPower12(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6184)
inline void ZOSAPI_Interfaces::IObjectLensletArray1::PutCoeffRPower12 ( double pRetVal ) {
    HRESULT _hr = put_CoeffRPower12(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6185)
inline double ZOSAPI_Interfaces::IObjectLensletArray1::GetCoeffRPower14 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffRPower14(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6186)
inline void ZOSAPI_Interfaces::IObjectLensletArray1::PutCoeffRPower14 ( double pRetVal ) {
    HRESULT _hr = put_CoeffRPower14(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6187)
inline double ZOSAPI_Interfaces::IObjectLensletArray1::GetCoeffRPower16 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffRPower16(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6188)
inline void ZOSAPI_Interfaces::IObjectLensletArray1::PutCoeffRPower16 ( double pRetVal ) {
    HRESULT _hr = put_CoeffRPower16(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6189)
inline double ZOSAPI_Interfaces::IObjectLensletArray1::GetCoeffYPower2 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffYPower2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6190)
inline void ZOSAPI_Interfaces::IObjectLensletArray1::PutCoeffYPower2 ( double pRetVal ) {
    HRESULT _hr = put_CoeffYPower2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6191)
inline double ZOSAPI_Interfaces::IObjectLensletArray1::GetCoeffYPower4 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffYPower4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6192)
inline void ZOSAPI_Interfaces::IObjectLensletArray1::PutCoeffYPower4 ( double pRetVal ) {
    HRESULT _hr = put_CoeffYPower4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6193)
inline double ZOSAPI_Interfaces::IObjectLensletArray1::GetCoeffYPower6 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffYPower6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6194)
inline void ZOSAPI_Interfaces::IObjectLensletArray1::PutCoeffYPower6 ( double pRetVal ) {
    HRESULT _hr = put_CoeffYPower6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6195)
inline double ZOSAPI_Interfaces::IObjectLensletArray1::GetCoeffYPower8 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffYPower8(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6196)
inline void ZOSAPI_Interfaces::IObjectLensletArray1::PutCoeffYPower8 ( double pRetVal ) {
    HRESULT _hr = put_CoeffYPower8(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6197)
inline double ZOSAPI_Interfaces::IObjectLensletArray1::GetCoeffYPower10 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffYPower10(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6198)
inline void ZOSAPI_Interfaces::IObjectLensletArray1::PutCoeffYPower10 ( double pRetVal ) {
    HRESULT _hr = put_CoeffYPower10(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6199)
inline double ZOSAPI_Interfaces::IObjectLensletArray1::GetCoeffYPower12 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffYPower12(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6200)
inline void ZOSAPI_Interfaces::IObjectLensletArray1::PutCoeffYPower12 ( double pRetVal ) {
    HRESULT _hr = put_CoeffYPower12(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6201)
inline double ZOSAPI_Interfaces::IObjectLensletArray1::GetCoeffYPower14 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffYPower14(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6202)
inline void ZOSAPI_Interfaces::IObjectLensletArray1::PutCoeffYPower14 ( double pRetVal ) {
    HRESULT _hr = put_CoeffYPower14(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6203)
inline double ZOSAPI_Interfaces::IObjectLensletArray1::GetCoeffYPower16 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffYPower16(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6204)
inline void ZOSAPI_Interfaces::IObjectLensletArray1::PutCoeffYPower16 ( double pRetVal ) {
    HRESULT _hr = put_CoeffYPower16(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6205)
inline double ZOSAPI_Interfaces::IObjectLensletArray1::GetDecenterX ( ) {
    double _result = 0;
    HRESULT _hr = get_DecenterX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6206)
inline void ZOSAPI_Interfaces::IObjectLensletArray1::PutDecenterX ( double pRetVal ) {
    HRESULT _hr = put_DecenterX(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6207)
inline double ZOSAPI_Interfaces::IObjectLensletArray1::GetDecenterY ( ) {
    double _result = 0;
    HRESULT _hr = get_DecenterY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6208)
inline void ZOSAPI_Interfaces::IObjectLensletArray1::PutDecenterY ( double pRetVal ) {
    HRESULT _hr = put_DecenterY(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6209)
inline long ZOSAPI_Interfaces::IObjectLensletArray1::GetNumberInX ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberInX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6210)
inline void ZOSAPI_Interfaces::IObjectLensletArray1::PutNumberInX ( long pRetVal ) {
    HRESULT _hr = put_NumberInX(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6211)
inline long ZOSAPI_Interfaces::IObjectLensletArray1::GetNumberInY ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberInY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6212)
inline void ZOSAPI_Interfaces::IObjectLensletArray1::PutNumberInY ( long pRetVal ) {
    HRESULT _hr = put_NumberInY(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6213)
inline enum ZOSAPI_Interfaces::DiffractiveFaceChoices ZOSAPI_Interfaces::IObjectLensletArray1::GetDiffractiveFace ( ) {
    enum DiffractiveFaceChoices _result;
    HRESULT _hr = get_DiffractiveFace(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6214)
inline void ZOSAPI_Interfaces::IObjectLensletArray1::PutDiffractiveFace ( enum DiffractiveFaceChoices pRetVal ) {
    HRESULT _hr = put_DiffractiveFace(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectLensletArray2 wrapper method implementations
//

#pragma implementation_key(6215)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectLensletArray2::GetXHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6216)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectLensletArray2::GetYHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_YHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6217)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectLensletArray2::GetThicknessCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ThicknessCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6218)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectLensletArray2::GetRadius1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Radius1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6219)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectLensletArray2::GetConic1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Conic1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6220)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectLensletArray2::GetRadius2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Radius2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6221)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectLensletArray2::GetConic2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Conic2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6222)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectLensletArray2::GetNumberInXCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberInXCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6223)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectLensletArray2::GetNumberInYCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberInYCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6224)
inline double ZOSAPI_Interfaces::IObjectLensletArray2::GetXHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_XHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6225)
inline void ZOSAPI_Interfaces::IObjectLensletArray2::PutXHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_XHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6226)
inline double ZOSAPI_Interfaces::IObjectLensletArray2::GetYHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_YHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6227)
inline void ZOSAPI_Interfaces::IObjectLensletArray2::PutYHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_YHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6228)
inline double ZOSAPI_Interfaces::IObjectLensletArray2::GetThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_Thickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6229)
inline void ZOSAPI_Interfaces::IObjectLensletArray2::PutThickness ( double pRetVal ) {
    HRESULT _hr = put_Thickness(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6230)
inline double ZOSAPI_Interfaces::IObjectLensletArray2::GetRadius1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Radius1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6231)
inline void ZOSAPI_Interfaces::IObjectLensletArray2::PutRadius1 ( double pRetVal ) {
    HRESULT _hr = put_Radius1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6232)
inline double ZOSAPI_Interfaces::IObjectLensletArray2::GetConic1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Conic1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6233)
inline void ZOSAPI_Interfaces::IObjectLensletArray2::PutConic1 ( double pRetVal ) {
    HRESULT _hr = put_Conic1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6234)
inline double ZOSAPI_Interfaces::IObjectLensletArray2::GetRadius2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Radius2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6235)
inline void ZOSAPI_Interfaces::IObjectLensletArray2::PutRadius2 ( double pRetVal ) {
    HRESULT _hr = put_Radius2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6236)
inline double ZOSAPI_Interfaces::IObjectLensletArray2::GetConic2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Conic2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6237)
inline void ZOSAPI_Interfaces::IObjectLensletArray2::PutConic2 ( double pRetVal ) {
    HRESULT _hr = put_Conic2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6238)
inline long ZOSAPI_Interfaces::IObjectLensletArray2::GetNumberInX ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberInX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6239)
inline void ZOSAPI_Interfaces::IObjectLensletArray2::PutNumberInX ( long pRetVal ) {
    HRESULT _hr = put_NumberInX(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6240)
inline long ZOSAPI_Interfaces::IObjectLensletArray2::GetNumberInY ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberInY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6241)
inline void ZOSAPI_Interfaces::IObjectLensletArray2::PutNumberInY ( long pRetVal ) {
    HRESULT _hr = put_NumberInY(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectMEMS wrapper method implementations
//

#pragma implementation_key(6242)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectMEMS::GetNumberOfXPixelsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberOfXPixelsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6243)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectMEMS::GetNumberOfYPixelsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberOfYPixelsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6244)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectMEMS::GetXMinusWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XMinusWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6245)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectMEMS::GetYMinusWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_YMinusWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6246)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectMEMS::GetAngle0Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Angle0Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6247)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectMEMS::GetAngle1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Angle1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6248)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectMEMS::GetAngle2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Angle2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6249)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectMEMS::GetRotationAngleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RotationAngleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6250)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectMEMS::GetPFlagCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_PFlagCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6251)
inline long ZOSAPI_Interfaces::IObjectMEMS::GetNumberOfXPixels ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfXPixels(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6252)
inline void ZOSAPI_Interfaces::IObjectMEMS::PutNumberOfXPixels ( long pRetVal ) {
    HRESULT _hr = put_NumberOfXPixels(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6253)
inline long ZOSAPI_Interfaces::IObjectMEMS::GetNumberOfYPixels ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfYPixels(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6254)
inline void ZOSAPI_Interfaces::IObjectMEMS::PutNumberOfYPixels ( long pRetVal ) {
    HRESULT _hr = put_NumberOfYPixels(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6255)
inline double ZOSAPI_Interfaces::IObjectMEMS::GetXMinusWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_XMinusWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6256)
inline void ZOSAPI_Interfaces::IObjectMEMS::PutXMinusWidth ( double pRetVal ) {
    HRESULT _hr = put_XMinusWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6257)
inline double ZOSAPI_Interfaces::IObjectMEMS::GetYMinusWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_YMinusWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6258)
inline void ZOSAPI_Interfaces::IObjectMEMS::PutYMinusWidth ( double pRetVal ) {
    HRESULT _hr = put_YMinusWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6259)
inline double ZOSAPI_Interfaces::IObjectMEMS::GetAngle0 ( ) {
    double _result = 0;
    HRESULT _hr = get_Angle0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6260)
inline void ZOSAPI_Interfaces::IObjectMEMS::PutAngle0 ( double pRetVal ) {
    HRESULT _hr = put_Angle0(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6261)
inline double ZOSAPI_Interfaces::IObjectMEMS::GetAngle1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Angle1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6262)
inline void ZOSAPI_Interfaces::IObjectMEMS::PutAngle1 ( double pRetVal ) {
    HRESULT _hr = put_Angle1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6263)
inline double ZOSAPI_Interfaces::IObjectMEMS::GetAngle2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Angle2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6264)
inline void ZOSAPI_Interfaces::IObjectMEMS::PutAngle2 ( double pRetVal ) {
    HRESULT _hr = put_Angle2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6265)
inline double ZOSAPI_Interfaces::IObjectMEMS::GetRotationAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_RotationAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6266)
inline void ZOSAPI_Interfaces::IObjectMEMS::PutRotationAngle ( double pRetVal ) {
    HRESULT _hr = put_RotationAngle(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6267)
inline enum ZOSAPI_Interfaces::PixelAddressing ZOSAPI_Interfaces::IObjectMEMS::GetPFlag ( ) {
    enum PixelAddressing _result;
    HRESULT _hr = get_PFlag(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6268)
inline void ZOSAPI_Interfaces::IObjectMEMS::PutPFlag ( enum PixelAddressing pRetVal ) {
    HRESULT _hr = put_PFlag(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6269)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectMEMS::PixelAddressGroupNCell ( long N ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_PixelAddressGroupNCell(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6270)
inline long ZOSAPI_Interfaces::IObjectMEMS::GetPixelAddressGroupN ( long N ) {
    long _result = 0;
    HRESULT _hr = raw_GetPixelAddressGroupN(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6271)
inline HRESULT ZOSAPI_Interfaces::IObjectMEMS::SetPixelAddressGroupN ( long N, long Value ) {
    HRESULT _hr = raw_SetPixelAddressGroupN(N, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IObjectOddAsphereLens wrapper method implementations
//

#pragma implementation_key(6272)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectOddAsphereLens::GetRadialApertureCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RadialApertureCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6273)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectOddAsphereLens::GetThicknessCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ThicknessCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6274)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectOddAsphereLens::GetRadius1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Radius1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6275)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectOddAsphereLens::GetConic1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Conic1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6276)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectOddAsphereLens::GetCoeff1RPower1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff1RPower1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6277)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectOddAsphereLens::GetCoeff2RPower1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff2RPower1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6278)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectOddAsphereLens::GetCoeff3RPower1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff3RPower1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6279)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectOddAsphereLens::GetCoeff4RPower1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff4RPower1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6280)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectOddAsphereLens::GetCoeff5RPower1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff5RPower1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6281)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectOddAsphereLens::GetCoeff6RPower1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff6RPower1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6282)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectOddAsphereLens::GetCoeff7RPower1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff7RPower1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6283)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectOddAsphereLens::GetCoeff8RPower1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff8RPower1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6284)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectOddAsphereLens::GetCoeff9RPower1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff9RPower1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6285)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectOddAsphereLens::GetCoeff10RPower1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff10RPower1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6286)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectOddAsphereLens::GetCoeff11RPower1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff11RPower1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6287)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectOddAsphereLens::GetCoeff12RPower1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff12RPower1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6288)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectOddAsphereLens::GetRadius2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Radius2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6289)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectOddAsphereLens::GetConic2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Conic2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6290)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectOddAsphereLens::GetCoeff1RPower2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff1RPower2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6291)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectOddAsphereLens::GetCoeff2RPower2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff2RPower2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6292)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectOddAsphereLens::GetCoeff3RPower2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff3RPower2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6293)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectOddAsphereLens::GetCoeff4RPower2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff4RPower2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6294)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectOddAsphereLens::GetCoeff5RPower2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff5RPower2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6295)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectOddAsphereLens::GetCoeff6RPower2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff6RPower2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6296)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectOddAsphereLens::GetCoeff7RPower2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff7RPower2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6297)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectOddAsphereLens::GetCoeff8RPower2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff8RPower2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6298)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectOddAsphereLens::GetCoeff9RPower2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff9RPower2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6299)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectOddAsphereLens::GetCoeff10RPower2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff10RPower2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6300)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectOddAsphereLens::GetCoeff11RPower2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff11RPower2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6301)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectOddAsphereLens::GetCoeff12RPower2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff12RPower2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6302)
inline double ZOSAPI_Interfaces::IObjectOddAsphereLens::GetRadialAperture ( ) {
    double _result = 0;
    HRESULT _hr = get_RadialAperture(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6303)
inline void ZOSAPI_Interfaces::IObjectOddAsphereLens::PutRadialAperture ( double pRetVal ) {
    HRESULT _hr = put_RadialAperture(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6304)
inline double ZOSAPI_Interfaces::IObjectOddAsphereLens::GetThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_Thickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6305)
inline void ZOSAPI_Interfaces::IObjectOddAsphereLens::PutThickness ( double pRetVal ) {
    HRESULT _hr = put_Thickness(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6306)
inline double ZOSAPI_Interfaces::IObjectOddAsphereLens::GetRadius1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Radius1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6307)
inline void ZOSAPI_Interfaces::IObjectOddAsphereLens::PutRadius1 ( double pRetVal ) {
    HRESULT _hr = put_Radius1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6308)
inline double ZOSAPI_Interfaces::IObjectOddAsphereLens::GetConic1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Conic1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6309)
inline void ZOSAPI_Interfaces::IObjectOddAsphereLens::PutConic1 ( double pRetVal ) {
    HRESULT _hr = put_Conic1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6310)
inline double ZOSAPI_Interfaces::IObjectOddAsphereLens::GetCoeff1RPower1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff1RPower1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6311)
inline void ZOSAPI_Interfaces::IObjectOddAsphereLens::PutCoeff1RPower1 ( double pRetVal ) {
    HRESULT _hr = put_Coeff1RPower1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6312)
inline double ZOSAPI_Interfaces::IObjectOddAsphereLens::GetCoeff2RPower1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff2RPower1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6313)
inline void ZOSAPI_Interfaces::IObjectOddAsphereLens::PutCoeff2RPower1 ( double pRetVal ) {
    HRESULT _hr = put_Coeff2RPower1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6314)
inline double ZOSAPI_Interfaces::IObjectOddAsphereLens::GetCoeff3RPower1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff3RPower1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6315)
inline void ZOSAPI_Interfaces::IObjectOddAsphereLens::PutCoeff3RPower1 ( double pRetVal ) {
    HRESULT _hr = put_Coeff3RPower1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6316)
inline double ZOSAPI_Interfaces::IObjectOddAsphereLens::GetCoeff4RPower1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff4RPower1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6317)
inline void ZOSAPI_Interfaces::IObjectOddAsphereLens::PutCoeff4RPower1 ( double pRetVal ) {
    HRESULT _hr = put_Coeff4RPower1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6318)
inline double ZOSAPI_Interfaces::IObjectOddAsphereLens::GetCoeff5RPower1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff5RPower1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6319)
inline void ZOSAPI_Interfaces::IObjectOddAsphereLens::PutCoeff5RPower1 ( double pRetVal ) {
    HRESULT _hr = put_Coeff5RPower1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6320)
inline double ZOSAPI_Interfaces::IObjectOddAsphereLens::GetCoeff6RPower1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff6RPower1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6321)
inline void ZOSAPI_Interfaces::IObjectOddAsphereLens::PutCoeff6RPower1 ( double pRetVal ) {
    HRESULT _hr = put_Coeff6RPower1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6322)
inline double ZOSAPI_Interfaces::IObjectOddAsphereLens::GetCoeff7RPower1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff7RPower1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6323)
inline void ZOSAPI_Interfaces::IObjectOddAsphereLens::PutCoeff7RPower1 ( double pRetVal ) {
    HRESULT _hr = put_Coeff7RPower1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6324)
inline double ZOSAPI_Interfaces::IObjectOddAsphereLens::GetCoeff8RPower1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff8RPower1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6325)
inline void ZOSAPI_Interfaces::IObjectOddAsphereLens::PutCoeff8RPower1 ( double pRetVal ) {
    HRESULT _hr = put_Coeff8RPower1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6326)
inline double ZOSAPI_Interfaces::IObjectOddAsphereLens::GetCoeff9RPower1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff9RPower1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6327)
inline void ZOSAPI_Interfaces::IObjectOddAsphereLens::PutCoeff9RPower1 ( double pRetVal ) {
    HRESULT _hr = put_Coeff9RPower1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6328)
inline double ZOSAPI_Interfaces::IObjectOddAsphereLens::GetCoeff10RPower1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff10RPower1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6329)
inline void ZOSAPI_Interfaces::IObjectOddAsphereLens::PutCoeff10RPower1 ( double pRetVal ) {
    HRESULT _hr = put_Coeff10RPower1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6330)
inline double ZOSAPI_Interfaces::IObjectOddAsphereLens::GetCoeff11RPower1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff11RPower1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6331)
inline void ZOSAPI_Interfaces::IObjectOddAsphereLens::PutCoeff11RPower1 ( double pRetVal ) {
    HRESULT _hr = put_Coeff11RPower1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6332)
inline double ZOSAPI_Interfaces::IObjectOddAsphereLens::GetCoeff12RPower1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff12RPower1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6333)
inline void ZOSAPI_Interfaces::IObjectOddAsphereLens::PutCoeff12RPower1 ( double pRetVal ) {
    HRESULT _hr = put_Coeff12RPower1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6334)
inline double ZOSAPI_Interfaces::IObjectOddAsphereLens::GetRadius2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Radius2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6335)
inline void ZOSAPI_Interfaces::IObjectOddAsphereLens::PutRadius2 ( double pRetVal ) {
    HRESULT _hr = put_Radius2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6336)
inline double ZOSAPI_Interfaces::IObjectOddAsphereLens::GetConic2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Conic2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6337)
inline void ZOSAPI_Interfaces::IObjectOddAsphereLens::PutConic2 ( double pRetVal ) {
    HRESULT _hr = put_Conic2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6338)
inline double ZOSAPI_Interfaces::IObjectOddAsphereLens::GetCoeff1RPower2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff1RPower2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6339)
inline void ZOSAPI_Interfaces::IObjectOddAsphereLens::PutCoeff1RPower2 ( double pRetVal ) {
    HRESULT _hr = put_Coeff1RPower2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6340)
inline double ZOSAPI_Interfaces::IObjectOddAsphereLens::GetCoeff2RPower2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff2RPower2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6341)
inline void ZOSAPI_Interfaces::IObjectOddAsphereLens::PutCoeff2RPower2 ( double pRetVal ) {
    HRESULT _hr = put_Coeff2RPower2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6342)
inline double ZOSAPI_Interfaces::IObjectOddAsphereLens::GetCoeff3RPower2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff3RPower2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6343)
inline void ZOSAPI_Interfaces::IObjectOddAsphereLens::PutCoeff3RPower2 ( double pRetVal ) {
    HRESULT _hr = put_Coeff3RPower2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6344)
inline double ZOSAPI_Interfaces::IObjectOddAsphereLens::GetCoeff4RPower2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff4RPower2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6345)
inline void ZOSAPI_Interfaces::IObjectOddAsphereLens::PutCoeff4RPower2 ( double pRetVal ) {
    HRESULT _hr = put_Coeff4RPower2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6346)
inline double ZOSAPI_Interfaces::IObjectOddAsphereLens::GetCoeff5RPower2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff5RPower2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6347)
inline void ZOSAPI_Interfaces::IObjectOddAsphereLens::PutCoeff5RPower2 ( double pRetVal ) {
    HRESULT _hr = put_Coeff5RPower2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6348)
inline double ZOSAPI_Interfaces::IObjectOddAsphereLens::GetCoeff6RPower2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff6RPower2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6349)
inline void ZOSAPI_Interfaces::IObjectOddAsphereLens::PutCoeff6RPower2 ( double pRetVal ) {
    HRESULT _hr = put_Coeff6RPower2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6350)
inline double ZOSAPI_Interfaces::IObjectOddAsphereLens::GetCoeff7RPower2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff7RPower2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6351)
inline void ZOSAPI_Interfaces::IObjectOddAsphereLens::PutCoeff7RPower2 ( double pRetVal ) {
    HRESULT _hr = put_Coeff7RPower2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6352)
inline double ZOSAPI_Interfaces::IObjectOddAsphereLens::GetCoeff8RPower2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff8RPower2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6353)
inline void ZOSAPI_Interfaces::IObjectOddAsphereLens::PutCoeff8RPower2 ( double pRetVal ) {
    HRESULT _hr = put_Coeff8RPower2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6354)
inline double ZOSAPI_Interfaces::IObjectOddAsphereLens::GetCoeff9RPower2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff9RPower2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6355)
inline void ZOSAPI_Interfaces::IObjectOddAsphereLens::PutCoeff9RPower2 ( double pRetVal ) {
    HRESULT _hr = put_Coeff9RPower2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6356)
inline double ZOSAPI_Interfaces::IObjectOddAsphereLens::GetCoeff10RPower2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff10RPower2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6357)
inline void ZOSAPI_Interfaces::IObjectOddAsphereLens::PutCoeff10RPower2 ( double pRetVal ) {
    HRESULT _hr = put_Coeff10RPower2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6358)
inline double ZOSAPI_Interfaces::IObjectOddAsphereLens::GetCoeff11RPower2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff11RPower2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6359)
inline void ZOSAPI_Interfaces::IObjectOddAsphereLens::PutCoeff11RPower2 ( double pRetVal ) {
    HRESULT _hr = put_Coeff11RPower2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6360)
inline double ZOSAPI_Interfaces::IObjectOddAsphereLens::GetCoeff12RPower2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff12RPower2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6361)
inline void ZOSAPI_Interfaces::IObjectOddAsphereLens::PutCoeff12RPower2 ( double pRetVal ) {
    HRESULT _hr = put_Coeff12RPower2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectParaxialLens wrapper method implementations
//

#pragma implementation_key(6362)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectParaxialLens::GetXHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6363)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectParaxialLens::GetYHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_YHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6364)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectParaxialLens::GetXFocalLengthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XFocalLengthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6365)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectParaxialLens::GetYFocalLengthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_YFocalLengthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6366)
inline double ZOSAPI_Interfaces::IObjectParaxialLens::GetXHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_XHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6367)
inline void ZOSAPI_Interfaces::IObjectParaxialLens::PutXHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_XHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6368)
inline double ZOSAPI_Interfaces::IObjectParaxialLens::GetYHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_YHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6369)
inline void ZOSAPI_Interfaces::IObjectParaxialLens::PutYHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_YHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6370)
inline double ZOSAPI_Interfaces::IObjectParaxialLens::GetXFocalLength ( ) {
    double _result = 0;
    HRESULT _hr = get_XFocalLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6371)
inline void ZOSAPI_Interfaces::IObjectParaxialLens::PutXFocalLength ( double pRetVal ) {
    HRESULT _hr = put_XFocalLength(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6372)
inline double ZOSAPI_Interfaces::IObjectParaxialLens::GetYFocalLength ( ) {
    double _result = 0;
    HRESULT _hr = get_YFocalLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6373)
inline void ZOSAPI_Interfaces::IObjectParaxialLens::PutYFocalLength ( double pRetVal ) {
    HRESULT _hr = put_YFocalLength(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectPolygon wrapper method implementations
//

#pragma implementation_key(6374)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectPolygon::GetScaleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ScaleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6375)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectPolygon::GetIsVolumeCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_IsVolumeCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6376)
inline double ZOSAPI_Interfaces::IObjectPolygon::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6377)
inline void ZOSAPI_Interfaces::IObjectPolygon::PutScale ( double pRetVal ) {
    HRESULT _hr = put_Scale(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6378)
inline VARIANT_BOOL ZOSAPI_Interfaces::IObjectPolygon::GetIsVolume ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsVolume(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6379)
inline void ZOSAPI_Interfaces::IObjectPolygon::PutIsVolume ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsVolume(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectRayRotator wrapper method implementations
//

#pragma implementation_key(6380)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectRayRotator::GetXHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6381)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectRayRotator::GetYHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_YHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6382)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectRayRotator::GetRotateZCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RotateZCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6383)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectRayRotator::GetRotateYCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RotateYCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6384)
inline double ZOSAPI_Interfaces::IObjectRayRotator::GetXHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_XHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6385)
inline void ZOSAPI_Interfaces::IObjectRayRotator::PutXHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_XHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6386)
inline double ZOSAPI_Interfaces::IObjectRayRotator::GetYHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_YHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6387)
inline void ZOSAPI_Interfaces::IObjectRayRotator::PutYHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_YHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6388)
inline double ZOSAPI_Interfaces::IObjectRayRotator::GetRotateZ ( ) {
    double _result = 0;
    HRESULT _hr = get_RotateZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6389)
inline void ZOSAPI_Interfaces::IObjectRayRotator::PutRotateZ ( double pRetVal ) {
    HRESULT _hr = put_RotateZ(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6390)
inline double ZOSAPI_Interfaces::IObjectRayRotator::GetRotateY ( ) {
    double _result = 0;
    HRESULT _hr = get_RotateY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6391)
inline void ZOSAPI_Interfaces::IObjectRayRotator::PutRotateY ( double pRetVal ) {
    HRESULT _hr = put_RotateY(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectRectangularCorner wrapper method implementations
//

#pragma implementation_key(6392)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectRectangularCorner::GetLengthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_LengthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6393)
inline double ZOSAPI_Interfaces::IObjectRectangularCorner::GetLength ( ) {
    double _result = 0;
    HRESULT _hr = get_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6394)
inline void ZOSAPI_Interfaces::IObjectRectangularCorner::PutLength ( double pRetVal ) {
    HRESULT _hr = put_Length(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectRectangle wrapper method implementations
//

#pragma implementation_key(6395)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectRectangle::GetXHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6396)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectRectangle::GetYHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_YHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6397)
inline double ZOSAPI_Interfaces::IObjectRectangle::GetXHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_XHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6398)
inline void ZOSAPI_Interfaces::IObjectRectangle::PutXHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_XHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6399)
inline double ZOSAPI_Interfaces::IObjectRectangle::GetYHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_YHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6400)
inline void ZOSAPI_Interfaces::IObjectRectangle::PutYHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_YHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectRectangularPipe wrapper method implementations
//

#pragma implementation_key(6401)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectRectangularPipe::GetX1HalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X1HalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6402)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectRectangularPipe::GetY1HalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Y1HalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6403)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectRectangularPipe::GetZLengthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ZLengthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6404)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectRectangularPipe::GetX2HalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X2HalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6405)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectRectangularPipe::GetY2HalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Y2HalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6406)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectRectangularPipe::GetFrontXAngleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontXAngleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6407)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectRectangularPipe::GetFrontYAngleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontYAngleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6408)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectRectangularPipe::GetRearXAngleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearXAngleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6409)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectRectangularPipe::GetRearYAngleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearYAngleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6410)
inline double ZOSAPI_Interfaces::IObjectRectangularPipe::GetX1HalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_X1HalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6411)
inline void ZOSAPI_Interfaces::IObjectRectangularPipe::PutX1HalfWidth ( double pRetVal ) {
    HRESULT _hr = put_X1HalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6412)
inline double ZOSAPI_Interfaces::IObjectRectangularPipe::GetY1HalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_Y1HalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6413)
inline void ZOSAPI_Interfaces::IObjectRectangularPipe::PutY1HalfWidth ( double pRetVal ) {
    HRESULT _hr = put_Y1HalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6414)
inline double ZOSAPI_Interfaces::IObjectRectangularPipe::GetZLength ( ) {
    double _result = 0;
    HRESULT _hr = get_ZLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6415)
inline void ZOSAPI_Interfaces::IObjectRectangularPipe::PutZLength ( double pRetVal ) {
    HRESULT _hr = put_ZLength(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6416)
inline double ZOSAPI_Interfaces::IObjectRectangularPipe::GetX2HalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_X2HalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6417)
inline void ZOSAPI_Interfaces::IObjectRectangularPipe::PutX2HalfWidth ( double pRetVal ) {
    HRESULT _hr = put_X2HalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6418)
inline double ZOSAPI_Interfaces::IObjectRectangularPipe::GetY2HalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_Y2HalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6419)
inline void ZOSAPI_Interfaces::IObjectRectangularPipe::PutY2HalfWidth ( double pRetVal ) {
    HRESULT _hr = put_Y2HalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6420)
inline double ZOSAPI_Interfaces::IObjectRectangularPipe::GetFrontXAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontXAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6421)
inline void ZOSAPI_Interfaces::IObjectRectangularPipe::PutFrontXAngle ( double pRetVal ) {
    HRESULT _hr = put_FrontXAngle(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6422)
inline double ZOSAPI_Interfaces::IObjectRectangularPipe::GetFrontYAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontYAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6423)
inline void ZOSAPI_Interfaces::IObjectRectangularPipe::PutFrontYAngle ( double pRetVal ) {
    HRESULT _hr = put_FrontYAngle(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6424)
inline double ZOSAPI_Interfaces::IObjectRectangularPipe::GetRearXAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_RearXAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6425)
inline void ZOSAPI_Interfaces::IObjectRectangularPipe::PutRearXAngle ( double pRetVal ) {
    HRESULT _hr = put_RearXAngle(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6426)
inline double ZOSAPI_Interfaces::IObjectRectangularPipe::GetRearYAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_RearYAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6427)
inline void ZOSAPI_Interfaces::IObjectRectangularPipe::PutRearYAngle ( double pRetVal ) {
    HRESULT _hr = put_RearYAngle(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectRectangularPipeGrating wrapper method implementations
//

#pragma implementation_key(6428)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectRectangularPipeGrating::GetX1HalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X1HalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6429)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectRectangularPipeGrating::GetY1HalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Y1HalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6430)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectRectangularPipeGrating::GetZLengthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ZLengthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6431)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectRectangularPipeGrating::GetX2HalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X2HalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6432)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectRectangularPipeGrating::GetY2HalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Y2HalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6433)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectRectangularPipeGrating::GetFrontXAngleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontXAngleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6434)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectRectangularPipeGrating::GetFrontYAngleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontYAngleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6435)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectRectangularPipeGrating::GetRearXAngleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearXAngleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6436)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectRectangularPipeGrating::GetRearYAngleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearYAngleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6437)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectRectangularPipeGrating::GetLinesPerUMCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_LinesPerUMCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6438)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectRectangularPipeGrating::GetDiffOrderCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_DiffOrderCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6439)
inline double ZOSAPI_Interfaces::IObjectRectangularPipeGrating::GetX1HalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_X1HalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6440)
inline void ZOSAPI_Interfaces::IObjectRectangularPipeGrating::PutX1HalfWidth ( double pRetVal ) {
    HRESULT _hr = put_X1HalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6441)
inline double ZOSAPI_Interfaces::IObjectRectangularPipeGrating::GetY1HalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_Y1HalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6442)
inline void ZOSAPI_Interfaces::IObjectRectangularPipeGrating::PutY1HalfWidth ( double pRetVal ) {
    HRESULT _hr = put_Y1HalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6443)
inline double ZOSAPI_Interfaces::IObjectRectangularPipeGrating::GetZLength ( ) {
    double _result = 0;
    HRESULT _hr = get_ZLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6444)
inline void ZOSAPI_Interfaces::IObjectRectangularPipeGrating::PutZLength ( double pRetVal ) {
    HRESULT _hr = put_ZLength(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6445)
inline double ZOSAPI_Interfaces::IObjectRectangularPipeGrating::GetX2HalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_X2HalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6446)
inline void ZOSAPI_Interfaces::IObjectRectangularPipeGrating::PutX2HalfWidth ( double pRetVal ) {
    HRESULT _hr = put_X2HalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6447)
inline double ZOSAPI_Interfaces::IObjectRectangularPipeGrating::GetY2HalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_Y2HalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6448)
inline void ZOSAPI_Interfaces::IObjectRectangularPipeGrating::PutY2HalfWidth ( double pRetVal ) {
    HRESULT _hr = put_Y2HalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6449)
inline double ZOSAPI_Interfaces::IObjectRectangularPipeGrating::GetFrontXAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontXAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6450)
inline void ZOSAPI_Interfaces::IObjectRectangularPipeGrating::PutFrontXAngle ( double pRetVal ) {
    HRESULT _hr = put_FrontXAngle(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6451)
inline double ZOSAPI_Interfaces::IObjectRectangularPipeGrating::GetFrontYAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontYAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6452)
inline void ZOSAPI_Interfaces::IObjectRectangularPipeGrating::PutFrontYAngle ( double pRetVal ) {
    HRESULT _hr = put_FrontYAngle(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6453)
inline double ZOSAPI_Interfaces::IObjectRectangularPipeGrating::GetRearXAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_RearXAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6454)
inline void ZOSAPI_Interfaces::IObjectRectangularPipeGrating::PutRearXAngle ( double pRetVal ) {
    HRESULT _hr = put_RearXAngle(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6455)
inline double ZOSAPI_Interfaces::IObjectRectangularPipeGrating::GetRearYAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_RearYAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6456)
inline void ZOSAPI_Interfaces::IObjectRectangularPipeGrating::PutRearYAngle ( double pRetVal ) {
    HRESULT _hr = put_RearYAngle(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6457)
inline double ZOSAPI_Interfaces::IObjectRectangularPipeGrating::GetLinesPerUM ( ) {
    double _result = 0;
    HRESULT _hr = get_LinesPerUM(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6458)
inline void ZOSAPI_Interfaces::IObjectRectangularPipeGrating::PutLinesPerUM ( double pRetVal ) {
    HRESULT _hr = put_LinesPerUM(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6459)
inline double ZOSAPI_Interfaces::IObjectRectangularPipeGrating::GetDiffOrder ( ) {
    double _result = 0;
    HRESULT _hr = get_DiffOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6460)
inline void ZOSAPI_Interfaces::IObjectRectangularPipeGrating::PutDiffOrder ( double pRetVal ) {
    HRESULT _hr = put_DiffOrder(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectRectangularRoof wrapper method implementations
//

#pragma implementation_key(6461)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectRectangularRoof::GetXHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6462)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectRectangularRoof::GetYHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_YHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6463)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectRectangularRoof::GetAngleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_AngleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6464)
inline double ZOSAPI_Interfaces::IObjectRectangularRoof::GetXHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_XHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6465)
inline void ZOSAPI_Interfaces::IObjectRectangularRoof::PutXHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_XHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6466)
inline double ZOSAPI_Interfaces::IObjectRectangularRoof::GetYHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_YHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6467)
inline void ZOSAPI_Interfaces::IObjectRectangularRoof::PutYHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_YHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6468)
inline double ZOSAPI_Interfaces::IObjectRectangularRoof::GetAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_Angle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6469)
inline void ZOSAPI_Interfaces::IObjectRectangularRoof::PutAngle ( double pRetVal ) {
    HRESULT _hr = put_Angle(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectRectangularTorusSurface wrapper method implementations
//

#pragma implementation_key(6470)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectRectangularTorusSurface::GetOuterRCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_OuterRCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6471)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectRectangularTorusSurface::GetInnerRCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_InnerRCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6472)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectRectangularTorusSurface::GetStartAngleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_StartAngleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6473)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectRectangularTorusSurface::GetStopAngleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_StopAngleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6474)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectRectangularTorusSurface::GetThicknessCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ThicknessCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6475)
inline double ZOSAPI_Interfaces::IObjectRectangularTorusSurface::GetOuterR ( ) {
    double _result = 0;
    HRESULT _hr = get_OuterR(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6476)
inline void ZOSAPI_Interfaces::IObjectRectangularTorusSurface::PutOuterR ( double pRetVal ) {
    HRESULT _hr = put_OuterR(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6477)
inline double ZOSAPI_Interfaces::IObjectRectangularTorusSurface::GetInnerR ( ) {
    double _result = 0;
    HRESULT _hr = get_InnerR(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6478)
inline void ZOSAPI_Interfaces::IObjectRectangularTorusSurface::PutInnerR ( double pRetVal ) {
    HRESULT _hr = put_InnerR(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6479)
inline double ZOSAPI_Interfaces::IObjectRectangularTorusSurface::GetStartAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_StartAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6480)
inline void ZOSAPI_Interfaces::IObjectRectangularTorusSurface::PutStartAngle ( double pRetVal ) {
    HRESULT _hr = put_StartAngle(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6481)
inline double ZOSAPI_Interfaces::IObjectRectangularTorusSurface::GetStopAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_StopAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6482)
inline void ZOSAPI_Interfaces::IObjectRectangularTorusSurface::PutStopAngle ( double pRetVal ) {
    HRESULT _hr = put_StopAngle(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6483)
inline double ZOSAPI_Interfaces::IObjectRectangularTorusSurface::GetThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_Thickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6484)
inline void ZOSAPI_Interfaces::IObjectRectangularTorusSurface::PutThickness ( double pRetVal ) {
    HRESULT _hr = put_Thickness(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectRectangularTorusVolume wrapper method implementations
//

#pragma implementation_key(6485)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectRectangularTorusVolume::GetOuterRCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_OuterRCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6486)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectRectangularTorusVolume::GetInnerRCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_InnerRCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6487)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectRectangularTorusVolume::GetStartAngleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_StartAngleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6488)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectRectangularTorusVolume::GetStopAngleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_StopAngleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6489)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectRectangularTorusVolume::GetThicknessCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ThicknessCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6490)
inline double ZOSAPI_Interfaces::IObjectRectangularTorusVolume::GetOuterR ( ) {
    double _result = 0;
    HRESULT _hr = get_OuterR(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6491)
inline void ZOSAPI_Interfaces::IObjectRectangularTorusVolume::PutOuterR ( double pRetVal ) {
    HRESULT _hr = put_OuterR(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6492)
inline double ZOSAPI_Interfaces::IObjectRectangularTorusVolume::GetInnerR ( ) {
    double _result = 0;
    HRESULT _hr = get_InnerR(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6493)
inline void ZOSAPI_Interfaces::IObjectRectangularTorusVolume::PutInnerR ( double pRetVal ) {
    HRESULT _hr = put_InnerR(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6494)
inline double ZOSAPI_Interfaces::IObjectRectangularTorusVolume::GetStartAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_StartAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6495)
inline void ZOSAPI_Interfaces::IObjectRectangularTorusVolume::PutStartAngle ( double pRetVal ) {
    HRESULT _hr = put_StartAngle(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6496)
inline double ZOSAPI_Interfaces::IObjectRectangularTorusVolume::GetStopAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_StopAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6497)
inline void ZOSAPI_Interfaces::IObjectRectangularTorusVolume::PutStopAngle ( double pRetVal ) {
    HRESULT _hr = put_StopAngle(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6498)
inline double ZOSAPI_Interfaces::IObjectRectangularTorusVolume::GetThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_Thickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6499)
inline void ZOSAPI_Interfaces::IObjectRectangularTorusVolume::PutThickness ( double pRetVal ) {
    HRESULT _hr = put_Thickness(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectRectangularVolume wrapper method implementations
//

#pragma implementation_key(6500)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectRectangularVolume::GetX1HalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X1HalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6501)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectRectangularVolume::GetY1HalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Y1HalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6502)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectRectangularVolume::GetZLengthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ZLengthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6503)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectRectangularVolume::GetX2HalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X2HalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6504)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectRectangularVolume::GetY2HalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Y2HalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6505)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectRectangularVolume::GetFrontXAngleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontXAngleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6506)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectRectangularVolume::GetFrontYAngleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontYAngleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6507)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectRectangularVolume::GetRearXAngleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearXAngleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6508)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectRectangularVolume::GetRearYAngleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearYAngleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6509)
inline double ZOSAPI_Interfaces::IObjectRectangularVolume::GetX1HalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_X1HalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6510)
inline void ZOSAPI_Interfaces::IObjectRectangularVolume::PutX1HalfWidth ( double pRetVal ) {
    HRESULT _hr = put_X1HalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6511)
inline double ZOSAPI_Interfaces::IObjectRectangularVolume::GetY1HalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_Y1HalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6512)
inline void ZOSAPI_Interfaces::IObjectRectangularVolume::PutY1HalfWidth ( double pRetVal ) {
    HRESULT _hr = put_Y1HalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6513)
inline double ZOSAPI_Interfaces::IObjectRectangularVolume::GetZLength ( ) {
    double _result = 0;
    HRESULT _hr = get_ZLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6514)
inline void ZOSAPI_Interfaces::IObjectRectangularVolume::PutZLength ( double pRetVal ) {
    HRESULT _hr = put_ZLength(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6515)
inline double ZOSAPI_Interfaces::IObjectRectangularVolume::GetX2HalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_X2HalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6516)
inline void ZOSAPI_Interfaces::IObjectRectangularVolume::PutX2HalfWidth ( double pRetVal ) {
    HRESULT _hr = put_X2HalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6517)
inline double ZOSAPI_Interfaces::IObjectRectangularVolume::GetY2HalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_Y2HalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6518)
inline void ZOSAPI_Interfaces::IObjectRectangularVolume::PutY2HalfWidth ( double pRetVal ) {
    HRESULT _hr = put_Y2HalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6519)
inline double ZOSAPI_Interfaces::IObjectRectangularVolume::GetFrontXAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontXAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6520)
inline void ZOSAPI_Interfaces::IObjectRectangularVolume::PutFrontXAngle ( double pRetVal ) {
    HRESULT _hr = put_FrontXAngle(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6521)
inline double ZOSAPI_Interfaces::IObjectRectangularVolume::GetFrontYAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontYAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6522)
inline void ZOSAPI_Interfaces::IObjectRectangularVolume::PutFrontYAngle ( double pRetVal ) {
    HRESULT _hr = put_FrontYAngle(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6523)
inline double ZOSAPI_Interfaces::IObjectRectangularVolume::GetRearXAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_RearXAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6524)
inline void ZOSAPI_Interfaces::IObjectRectangularVolume::PutRearXAngle ( double pRetVal ) {
    HRESULT _hr = put_RearXAngle(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6525)
inline double ZOSAPI_Interfaces::IObjectRectangularVolume::GetRearYAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_RearYAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6526)
inline void ZOSAPI_Interfaces::IObjectRectangularVolume::PutRearYAngle ( double pRetVal ) {
    HRESULT _hr = put_RearYAngle(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectRectangularVolumeGrating wrapper method implementations
//

#pragma implementation_key(6527)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectRectangularVolumeGrating::GetX1HalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X1HalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6528)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectRectangularVolumeGrating::GetY1HalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Y1HalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6529)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectRectangularVolumeGrating::GetZLengthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ZLengthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6530)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectRectangularVolumeGrating::GetX2HalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X2HalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6531)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectRectangularVolumeGrating::GetY2HalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Y2HalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6532)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectRectangularVolumeGrating::GetFrontXAngleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontXAngleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6533)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectRectangularVolumeGrating::GetFrontYAngleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FrontYAngleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6534)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectRectangularVolumeGrating::GetRearXAngleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearXAngleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6535)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectRectangularVolumeGrating::GetRearYAngleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RearYAngleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6536)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectRectangularVolumeGrating::GetLinesPerUMCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_LinesPerUMCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6537)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectRectangularVolumeGrating::GetDiffOrderCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_DiffOrderCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6538)
inline double ZOSAPI_Interfaces::IObjectRectangularVolumeGrating::GetX1HalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_X1HalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6539)
inline void ZOSAPI_Interfaces::IObjectRectangularVolumeGrating::PutX1HalfWidth ( double pRetVal ) {
    HRESULT _hr = put_X1HalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6540)
inline double ZOSAPI_Interfaces::IObjectRectangularVolumeGrating::GetY1HalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_Y1HalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6541)
inline void ZOSAPI_Interfaces::IObjectRectangularVolumeGrating::PutY1HalfWidth ( double pRetVal ) {
    HRESULT _hr = put_Y1HalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6542)
inline double ZOSAPI_Interfaces::IObjectRectangularVolumeGrating::GetZLength ( ) {
    double _result = 0;
    HRESULT _hr = get_ZLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6543)
inline void ZOSAPI_Interfaces::IObjectRectangularVolumeGrating::PutZLength ( double pRetVal ) {
    HRESULT _hr = put_ZLength(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6544)
inline double ZOSAPI_Interfaces::IObjectRectangularVolumeGrating::GetX2HalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_X2HalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6545)
inline void ZOSAPI_Interfaces::IObjectRectangularVolumeGrating::PutX2HalfWidth ( double pRetVal ) {
    HRESULT _hr = put_X2HalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6546)
inline double ZOSAPI_Interfaces::IObjectRectangularVolumeGrating::GetY2HalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_Y2HalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6547)
inline void ZOSAPI_Interfaces::IObjectRectangularVolumeGrating::PutY2HalfWidth ( double pRetVal ) {
    HRESULT _hr = put_Y2HalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6548)
inline double ZOSAPI_Interfaces::IObjectRectangularVolumeGrating::GetFrontXAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontXAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6549)
inline void ZOSAPI_Interfaces::IObjectRectangularVolumeGrating::PutFrontXAngle ( double pRetVal ) {
    HRESULT _hr = put_FrontXAngle(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6550)
inline double ZOSAPI_Interfaces::IObjectRectangularVolumeGrating::GetFrontYAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontYAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6551)
inline void ZOSAPI_Interfaces::IObjectRectangularVolumeGrating::PutFrontYAngle ( double pRetVal ) {
    HRESULT _hr = put_FrontYAngle(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6552)
inline double ZOSAPI_Interfaces::IObjectRectangularVolumeGrating::GetRearXAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_RearXAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6553)
inline void ZOSAPI_Interfaces::IObjectRectangularVolumeGrating::PutRearXAngle ( double pRetVal ) {
    HRESULT _hr = put_RearXAngle(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6554)
inline double ZOSAPI_Interfaces::IObjectRectangularVolumeGrating::GetRearYAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_RearYAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6555)
inline void ZOSAPI_Interfaces::IObjectRectangularVolumeGrating::PutRearYAngle ( double pRetVal ) {
    HRESULT _hr = put_RearYAngle(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6556)
inline double ZOSAPI_Interfaces::IObjectRectangularVolumeGrating::GetLinesPerUM ( ) {
    double _result = 0;
    HRESULT _hr = get_LinesPerUM(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6557)
inline void ZOSAPI_Interfaces::IObjectRectangularVolumeGrating::PutLinesPerUM ( double pRetVal ) {
    HRESULT _hr = put_LinesPerUM(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6558)
inline double ZOSAPI_Interfaces::IObjectRectangularVolumeGrating::GetDiffOrder ( ) {
    double _result = 0;
    HRESULT _hr = get_DiffOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6559)
inline void ZOSAPI_Interfaces::IObjectRectangularVolumeGrating::PutDiffOrder ( double pRetVal ) {
    HRESULT _hr = put_DiffOrder(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectReverseRadianceDetector wrapper method implementations
//

#pragma implementation_key(6560)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectReverseRadianceDetector::GetShapeCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ShapeCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6561)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectReverseRadianceDetector::GetXHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6562)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectReverseRadianceDetector::GetYHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_YHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6563)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectReverseRadianceDetector::GetNumberOfXPixelsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberOfXPixelsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6564)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectReverseRadianceDetector::GetNumberOfYPixelsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberOfYPixelsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6565)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectReverseRadianceDetector::GetNumberOfPPixelsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberOfPPixelsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6566)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectReverseRadianceDetector::GetNumberOfAPixelsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberOfAPixelsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6567)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectReverseRadianceDetector::GetSourceObjectCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_SourceObjectCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6568)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectReverseRadianceDetector::GetTargetObjectCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_TargetObjectCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6569)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectReverseRadianceDetector::GetBoundaryObjectCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_BoundaryObjectCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6570)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectReverseRadianceDetector::GetReverseRayColorCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ReverseRayColorCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6571)
inline enum ZOSAPI_Interfaces::ShapeChoices ZOSAPI_Interfaces::IObjectReverseRadianceDetector::GetShape ( ) {
    enum ShapeChoices _result;
    HRESULT _hr = get_Shape(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6572)
inline void ZOSAPI_Interfaces::IObjectReverseRadianceDetector::PutShape ( enum ShapeChoices pRetVal ) {
    HRESULT _hr = put_Shape(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6573)
inline double ZOSAPI_Interfaces::IObjectReverseRadianceDetector::GetXHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_XHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6574)
inline void ZOSAPI_Interfaces::IObjectReverseRadianceDetector::PutXHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_XHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6575)
inline double ZOSAPI_Interfaces::IObjectReverseRadianceDetector::GetYHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_YHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6576)
inline void ZOSAPI_Interfaces::IObjectReverseRadianceDetector::PutYHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_YHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6577)
inline long ZOSAPI_Interfaces::IObjectReverseRadianceDetector::GetNumberOfXPixels ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfXPixels(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6578)
inline void ZOSAPI_Interfaces::IObjectReverseRadianceDetector::PutNumberOfXPixels ( long pRetVal ) {
    HRESULT _hr = put_NumberOfXPixels(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6579)
inline long ZOSAPI_Interfaces::IObjectReverseRadianceDetector::GetNumberOfYPixels ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfYPixels(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6580)
inline void ZOSAPI_Interfaces::IObjectReverseRadianceDetector::PutNumberOfYPixels ( long pRetVal ) {
    HRESULT _hr = put_NumberOfYPixels(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6581)
inline long ZOSAPI_Interfaces::IObjectReverseRadianceDetector::GetNumberOfPPixels ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfPPixels(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6582)
inline void ZOSAPI_Interfaces::IObjectReverseRadianceDetector::PutNumberOfPPixels ( long pRetVal ) {
    HRESULT _hr = put_NumberOfPPixels(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6583)
inline long ZOSAPI_Interfaces::IObjectReverseRadianceDetector::GetNumberOfAPixels ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfAPixels(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6584)
inline void ZOSAPI_Interfaces::IObjectReverseRadianceDetector::PutNumberOfAPixels ( long pRetVal ) {
    HRESULT _hr = put_NumberOfAPixels(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6585)
inline long ZOSAPI_Interfaces::IObjectReverseRadianceDetector::GetSourceObject ( ) {
    long _result = 0;
    HRESULT _hr = get_SourceObject(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6586)
inline void ZOSAPI_Interfaces::IObjectReverseRadianceDetector::PutSourceObject ( long pRetVal ) {
    HRESULT _hr = put_SourceObject(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6587)
inline long ZOSAPI_Interfaces::IObjectReverseRadianceDetector::GetTargetObject ( ) {
    long _result = 0;
    HRESULT _hr = get_TargetObject(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6588)
inline void ZOSAPI_Interfaces::IObjectReverseRadianceDetector::PutTargetObject ( long pRetVal ) {
    HRESULT _hr = put_TargetObject(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6589)
inline long ZOSAPI_Interfaces::IObjectReverseRadianceDetector::GetBoundaryObject ( ) {
    long _result = 0;
    HRESULT _hr = get_BoundaryObject(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6590)
inline void ZOSAPI_Interfaces::IObjectReverseRadianceDetector::PutBoundaryObject ( long pRetVal ) {
    HRESULT _hr = put_BoundaryObject(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6591)
inline long ZOSAPI_Interfaces::IObjectReverseRadianceDetector::GetReverseRayColor ( ) {
    long _result = 0;
    HRESULT _hr = get_ReverseRayColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6592)
inline void ZOSAPI_Interfaces::IObjectReverseRadianceDetector::PutReverseRayColor ( long pRetVal ) {
    HRESULT _hr = put_ReverseRayColor(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectReverseRadianceTarget wrapper method implementations
//

#pragma implementation_key(6593)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectReverseRadianceTarget::GetShapeCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ShapeCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6594)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectReverseRadianceTarget::GetXHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6595)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectReverseRadianceTarget::GetYHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_YHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6596)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectReverseRadianceTarget::GetNumberOfXPixelsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberOfXPixelsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6597)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectReverseRadianceTarget::GetNumberOfYPixelsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberOfYPixelsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6598)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectReverseRadianceTarget::GetNumberOfPPixelsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberOfPPixelsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6599)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectReverseRadianceTarget::GetNumberOfAPixelsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberOfAPixelsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6600)
inline enum ZOSAPI_Interfaces::ShapeChoices ZOSAPI_Interfaces::IObjectReverseRadianceTarget::GetShape ( ) {
    enum ShapeChoices _result;
    HRESULT _hr = get_Shape(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6601)
inline void ZOSAPI_Interfaces::IObjectReverseRadianceTarget::PutShape ( enum ShapeChoices pRetVal ) {
    HRESULT _hr = put_Shape(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6602)
inline double ZOSAPI_Interfaces::IObjectReverseRadianceTarget::GetXHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_XHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6603)
inline void ZOSAPI_Interfaces::IObjectReverseRadianceTarget::PutXHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_XHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6604)
inline double ZOSAPI_Interfaces::IObjectReverseRadianceTarget::GetYHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_YHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6605)
inline void ZOSAPI_Interfaces::IObjectReverseRadianceTarget::PutYHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_YHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6606)
inline long ZOSAPI_Interfaces::IObjectReverseRadianceTarget::GetNumberOfXPixels ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfXPixels(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6607)
inline void ZOSAPI_Interfaces::IObjectReverseRadianceTarget::PutNumberOfXPixels ( long pRetVal ) {
    HRESULT _hr = put_NumberOfXPixels(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6608)
inline long ZOSAPI_Interfaces::IObjectReverseRadianceTarget::GetNumberOfYPixels ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfYPixels(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6609)
inline void ZOSAPI_Interfaces::IObjectReverseRadianceTarget::PutNumberOfYPixels ( long pRetVal ) {
    HRESULT _hr = put_NumberOfYPixels(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6610)
inline long ZOSAPI_Interfaces::IObjectReverseRadianceTarget::GetNumberOfPPixels ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfPPixels(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6611)
inline void ZOSAPI_Interfaces::IObjectReverseRadianceTarget::PutNumberOfPPixels ( long pRetVal ) {
    HRESULT _hr = put_NumberOfPPixels(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6612)
inline long ZOSAPI_Interfaces::IObjectReverseRadianceTarget::GetNumberOfAPixels ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfAPixels(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6613)
inline void ZOSAPI_Interfaces::IObjectReverseRadianceTarget::PutNumberOfAPixels ( long pRetVal ) {
    HRESULT _hr = put_NumberOfAPixels(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectSlide wrapper method implementations
//

#pragma implementation_key(6614)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSlide::GetXFullWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XFullWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6615)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSlide::GetAspectRatioCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_AspectRatioCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6616)
inline double ZOSAPI_Interfaces::IObjectSlide::GetXFullWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_XFullWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6617)
inline void ZOSAPI_Interfaces::IObjectSlide::PutXFullWidth ( double pRetVal ) {
    HRESULT _hr = put_XFullWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6618)
inline double ZOSAPI_Interfaces::IObjectSlide::GetAspectRatio ( ) {
    double _result = 0;
    HRESULT _hr = get_AspectRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6619)
inline void ZOSAPI_Interfaces::IObjectSlide::PutAspectRatio ( double pRetVal ) {
    HRESULT _hr = put_AspectRatio(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectSources wrapper method implementations
//

#pragma implementation_key(6620)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSources::GetNumberOfLayoutRaysCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberOfLayoutRaysCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6621)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSources::GetNumberOfAnalysisRaysCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberOfAnalysisRaysCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6622)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSources::GetPowerCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_PowerCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6623)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSources::GetWaveNumberCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_WaveNumberCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6624)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSources::GetColorNumberCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ColorNumberCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6625)
inline long ZOSAPI_Interfaces::IObjectSources::GetNumberOfLayoutRays ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfLayoutRays(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6626)
inline void ZOSAPI_Interfaces::IObjectSources::PutNumberOfLayoutRays ( long pRetVal ) {
    HRESULT _hr = put_NumberOfLayoutRays(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6627)
inline long ZOSAPI_Interfaces::IObjectSources::GetNumberOfAnalysisRays ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfAnalysisRays(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6628)
inline void ZOSAPI_Interfaces::IObjectSources::PutNumberOfAnalysisRays ( long pRetVal ) {
    HRESULT _hr = put_NumberOfAnalysisRays(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6629)
inline double ZOSAPI_Interfaces::IObjectSources::GetPower ( ) {
    double _result = 0;
    HRESULT _hr = get_Power(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6630)
inline void ZOSAPI_Interfaces::IObjectSources::PutPower ( double pRetVal ) {
    HRESULT _hr = put_Power(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6631)
inline long ZOSAPI_Interfaces::IObjectSources::GetwaveNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_waveNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6632)
inline void ZOSAPI_Interfaces::IObjectSources::PutwaveNumber ( long pRetVal ) {
    HRESULT _hr = put_waveNumber(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6633)
inline long ZOSAPI_Interfaces::IObjectSources::GetColorNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_ColorNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6634)
inline void ZOSAPI_Interfaces::IObjectSources::PutColorNumber ( long pRetVal ) {
    HRESULT _hr = put_ColorNumber(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectSourceDiffractive wrapper method implementations
//

#pragma implementation_key(6635)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceDiffractive::GetSamplingCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_SamplingCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6636)
inline enum ZOSAPI_Interfaces::SampleSizes ZOSAPI_Interfaces::IObjectSourceDiffractive::GetSampling ( ) {
    enum SampleSizes _result;
    HRESULT _hr = get_Sampling(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6637)
inline void ZOSAPI_Interfaces::IObjectSourceDiffractive::PutSampling ( enum SampleSizes pRetVal ) {
    HRESULT _hr = put_Sampling(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectSourceDiode wrapper method implementations
//

#pragma implementation_key(6638)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceDiode::GetAstigmatismCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_AstigmatismCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6639)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceDiode::GetXMinusDivergenceCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XMinusDivergenceCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6640)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceDiode::GetXMinusSuperGaussCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XMinusSuperGaussCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6641)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceDiode::GetYMinusDivergenceCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_YMinusDivergenceCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6642)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceDiode::GetYMinusSuperGaussCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_YMinusSuperGaussCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6643)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceDiode::GetNumberXCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberXCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6644)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceDiode::GetNumberYCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberYCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6645)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceDiode::GetDeltaXCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_DeltaXCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6646)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceDiode::GetDeltaYCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_DeltaYCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6647)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceDiode::GetXMinusWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XMinusWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6648)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceDiode::GetXMinusSigmaCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XMinusSigmaCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6649)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceDiode::GetXMinusWidthHXCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XMinusWidthHXCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6650)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceDiode::GetYMinusWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_YMinusWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6651)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceDiode::GetYMinusSigmaCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_YMinusSigmaCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6652)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceDiode::GetYMinusWidthHYCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_YMinusWidthHYCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6653)
inline double ZOSAPI_Interfaces::IObjectSourceDiode::GetAstigmatism ( ) {
    double _result = 0;
    HRESULT _hr = get_Astigmatism(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6654)
inline void ZOSAPI_Interfaces::IObjectSourceDiode::PutAstigmatism ( double pRetVal ) {
    HRESULT _hr = put_Astigmatism(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6655)
inline double ZOSAPI_Interfaces::IObjectSourceDiode::GetXMinusDivergence ( ) {
    double _result = 0;
    HRESULT _hr = get_XMinusDivergence(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6656)
inline void ZOSAPI_Interfaces::IObjectSourceDiode::PutXMinusDivergence ( double pRetVal ) {
    HRESULT _hr = put_XMinusDivergence(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6657)
inline double ZOSAPI_Interfaces::IObjectSourceDiode::GetXMinusSuperGauss ( ) {
    double _result = 0;
    HRESULT _hr = get_XMinusSuperGauss(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6658)
inline void ZOSAPI_Interfaces::IObjectSourceDiode::PutXMinusSuperGauss ( double pRetVal ) {
    HRESULT _hr = put_XMinusSuperGauss(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6659)
inline double ZOSAPI_Interfaces::IObjectSourceDiode::GetYMinusDivergence ( ) {
    double _result = 0;
    HRESULT _hr = get_YMinusDivergence(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6660)
inline void ZOSAPI_Interfaces::IObjectSourceDiode::PutYMinusDivergence ( double pRetVal ) {
    HRESULT _hr = put_YMinusDivergence(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6661)
inline double ZOSAPI_Interfaces::IObjectSourceDiode::GetYMinusSuperGauss ( ) {
    double _result = 0;
    HRESULT _hr = get_YMinusSuperGauss(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6662)
inline void ZOSAPI_Interfaces::IObjectSourceDiode::PutYMinusSuperGauss ( double pRetVal ) {
    HRESULT _hr = put_YMinusSuperGauss(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6663)
inline long ZOSAPI_Interfaces::IObjectSourceDiode::GetNumberX ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6664)
inline void ZOSAPI_Interfaces::IObjectSourceDiode::PutNumberX ( long pRetVal ) {
    HRESULT _hr = put_NumberX(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6665)
inline long ZOSAPI_Interfaces::IObjectSourceDiode::GetNumberY ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6666)
inline void ZOSAPI_Interfaces::IObjectSourceDiode::PutNumberY ( long pRetVal ) {
    HRESULT _hr = put_NumberY(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6667)
inline double ZOSAPI_Interfaces::IObjectSourceDiode::GetDeltaX ( ) {
    double _result = 0;
    HRESULT _hr = get_DeltaX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6668)
inline void ZOSAPI_Interfaces::IObjectSourceDiode::PutDeltaX ( double pRetVal ) {
    HRESULT _hr = put_DeltaX(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6669)
inline double ZOSAPI_Interfaces::IObjectSourceDiode::GetDeltaY ( ) {
    double _result = 0;
    HRESULT _hr = get_DeltaY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6670)
inline void ZOSAPI_Interfaces::IObjectSourceDiode::PutDeltaY ( double pRetVal ) {
    HRESULT _hr = put_DeltaY(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6671)
inline double ZOSAPI_Interfaces::IObjectSourceDiode::GetXMinusWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_XMinusWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6672)
inline void ZOSAPI_Interfaces::IObjectSourceDiode::PutXMinusWidth ( double pRetVal ) {
    HRESULT _hr = put_XMinusWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6673)
inline double ZOSAPI_Interfaces::IObjectSourceDiode::GetXMinusSigma ( ) {
    double _result = 0;
    HRESULT _hr = get_XMinusSigma(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6674)
inline void ZOSAPI_Interfaces::IObjectSourceDiode::PutXMinusSigma ( double pRetVal ) {
    HRESULT _hr = put_XMinusSigma(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6675)
inline double ZOSAPI_Interfaces::IObjectSourceDiode::GetXMinusWidthHX ( ) {
    double _result = 0;
    HRESULT _hr = get_XMinusWidthHX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6676)
inline void ZOSAPI_Interfaces::IObjectSourceDiode::PutXMinusWidthHX ( double pRetVal ) {
    HRESULT _hr = put_XMinusWidthHX(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6677)
inline double ZOSAPI_Interfaces::IObjectSourceDiode::GetYMinusWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_YMinusWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6678)
inline void ZOSAPI_Interfaces::IObjectSourceDiode::PutYMinusWidth ( double pRetVal ) {
    HRESULT _hr = put_YMinusWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6679)
inline double ZOSAPI_Interfaces::IObjectSourceDiode::GetYMinusSigma ( ) {
    double _result = 0;
    HRESULT _hr = get_YMinusSigma(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6680)
inline void ZOSAPI_Interfaces::IObjectSourceDiode::PutYMinusSigma ( double pRetVal ) {
    HRESULT _hr = put_YMinusSigma(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6681)
inline double ZOSAPI_Interfaces::IObjectSourceDiode::GetYMinusWidthHY ( ) {
    double _result = 0;
    HRESULT _hr = get_YMinusWidthHY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6682)
inline void ZOSAPI_Interfaces::IObjectSourceDiode::PutYMinusWidthHY ( double pRetVal ) {
    HRESULT _hr = put_YMinusWidthHY(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectSourceEllipse wrapper method implementations
//

#pragma implementation_key(6683)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceEllipse::GetXHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6684)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceEllipse::GetYHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_YHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6685)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceEllipse::GetSourceDistanceCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_SourceDistanceCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6686)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceEllipse::GetCosineExponentCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CosineExponentCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6687)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceEllipse::GetGaussGXCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_GaussGXCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6688)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceEllipse::GetGaussGYCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_GaussGYCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6689)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceEllipse::GetSourceXCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_SourceXCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6690)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceEllipse::GetSourceYCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_SourceYCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6691)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceEllipse::GetMinXHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_MinXHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6692)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceEllipse::GetMinYHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_MinYHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6693)
inline double ZOSAPI_Interfaces::IObjectSourceEllipse::GetXHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_XHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6694)
inline void ZOSAPI_Interfaces::IObjectSourceEllipse::PutXHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_XHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6695)
inline double ZOSAPI_Interfaces::IObjectSourceEllipse::GetYHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_YHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6696)
inline void ZOSAPI_Interfaces::IObjectSourceEllipse::PutYHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_YHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6697)
inline double ZOSAPI_Interfaces::IObjectSourceEllipse::GetSourceDistance ( ) {
    double _result = 0;
    HRESULT _hr = get_SourceDistance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6698)
inline void ZOSAPI_Interfaces::IObjectSourceEllipse::PutSourceDistance ( double pRetVal ) {
    HRESULT _hr = put_SourceDistance(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6699)
inline double ZOSAPI_Interfaces::IObjectSourceEllipse::GetCosineExponent ( ) {
    double _result = 0;
    HRESULT _hr = get_CosineExponent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6700)
inline void ZOSAPI_Interfaces::IObjectSourceEllipse::PutCosineExponent ( double pRetVal ) {
    HRESULT _hr = put_CosineExponent(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6701)
inline double ZOSAPI_Interfaces::IObjectSourceEllipse::GetGaussGX ( ) {
    double _result = 0;
    HRESULT _hr = get_GaussGX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6702)
inline void ZOSAPI_Interfaces::IObjectSourceEllipse::PutGaussGX ( double pRetVal ) {
    HRESULT _hr = put_GaussGX(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6703)
inline double ZOSAPI_Interfaces::IObjectSourceEllipse::GetGaussGY ( ) {
    double _result = 0;
    HRESULT _hr = get_GaussGY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6704)
inline void ZOSAPI_Interfaces::IObjectSourceEllipse::PutGaussGY ( double pRetVal ) {
    HRESULT _hr = put_GaussGY(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6705)
inline double ZOSAPI_Interfaces::IObjectSourceEllipse::GetSourceX ( ) {
    double _result = 0;
    HRESULT _hr = get_SourceX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6706)
inline void ZOSAPI_Interfaces::IObjectSourceEllipse::PutSourceX ( double pRetVal ) {
    HRESULT _hr = put_SourceX(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6707)
inline double ZOSAPI_Interfaces::IObjectSourceEllipse::GetSourceY ( ) {
    double _result = 0;
    HRESULT _hr = get_SourceY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6708)
inline void ZOSAPI_Interfaces::IObjectSourceEllipse::PutSourceY ( double pRetVal ) {
    HRESULT _hr = put_SourceY(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6709)
inline double ZOSAPI_Interfaces::IObjectSourceEllipse::GetMinXHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_MinXHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6710)
inline void ZOSAPI_Interfaces::IObjectSourceEllipse::PutMinXHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_MinXHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6711)
inline double ZOSAPI_Interfaces::IObjectSourceEllipse::GetMinYHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_MinYHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6712)
inline void ZOSAPI_Interfaces::IObjectSourceEllipse::PutMinYHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_MinYHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectSourceEULUMDATFile wrapper method implementations
//

#pragma implementation_key(6713)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceEULUMDATFile::GetLumensInFileCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_LumensInFileCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6714)
inline double ZOSAPI_Interfaces::IObjectSourceEULUMDATFile::GetLumensInFile ( ) {
    double _result = 0;
    HRESULT _hr = get_LumensInFile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6715)
inline void ZOSAPI_Interfaces::IObjectSourceEULUMDATFile::PutLumensInFile ( double pRetVal ) {
    HRESULT _hr = put_LumensInFile(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectSourceFilament wrapper method implementations
//

#pragma implementation_key(6716)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceFilament::GetLengthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_LengthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6717)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceFilament::GetRadiusACell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RadiusACell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6718)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceFilament::GetTurnsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_TurnsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6719)
inline double ZOSAPI_Interfaces::IObjectSourceFilament::GetLength ( ) {
    double _result = 0;
    HRESULT _hr = get_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6720)
inline void ZOSAPI_Interfaces::IObjectSourceFilament::PutLength ( double pRetVal ) {
    HRESULT _hr = put_Length(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6721)
inline double ZOSAPI_Interfaces::IObjectSourceFilament::GetRadiusA ( ) {
    double _result = 0;
    HRESULT _hr = get_RadiusA(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6722)
inline void ZOSAPI_Interfaces::IObjectSourceFilament::PutRadiusA ( double pRetVal ) {
    HRESULT _hr = put_RadiusA(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6723)
inline double ZOSAPI_Interfaces::IObjectSourceFilament::GetTurns ( ) {
    double _result = 0;
    HRESULT _hr = get_Turns(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6724)
inline void ZOSAPI_Interfaces::IObjectSourceFilament::PutTurns ( double pRetVal ) {
    HRESULT _hr = put_Turns(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectSourceFile wrapper method implementations
//

#pragma implementation_key(6725)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceFile::GetRandomizeCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RandomizeCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6726)
inline VARIANT_BOOL ZOSAPI_Interfaces::IObjectSourceFile::GetRandomize ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Randomize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6727)
inline void ZOSAPI_Interfaces::IObjectSourceFile::PutRandomize ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_Randomize(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6728)
inline double ZOSAPI_Interfaces::IObjectSourceFile::GetSourceUnits ( ) {
    double _result = 0;
    HRESULT _hr = get_SourceUnits(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6729)
inline double ZOSAPI_Interfaces::IObjectSourceFile::GetminWave ( ) {
    double _result = 0;
    HRESULT _hr = get_minWave(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6730)
inline double ZOSAPI_Interfaces::IObjectSourceFile::GetmaxWave ( ) {
    double _result = 0;
    HRESULT _hr = get_maxWave(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IObjectSourceGaussian wrapper method implementations
//

#pragma implementation_key(6731)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceGaussian::GetBeamSizeCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_BeamSizeCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6732)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceGaussian::GetPositionCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_PositionCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6733)
inline double ZOSAPI_Interfaces::IObjectSourceGaussian::GetBeamSize ( ) {
    double _result = 0;
    HRESULT _hr = get_BeamSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6734)
inline void ZOSAPI_Interfaces::IObjectSourceGaussian::PutBeamSize ( double pRetVal ) {
    HRESULT _hr = put_BeamSize(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6735)
inline double ZOSAPI_Interfaces::IObjectSourceGaussian::Getposition ( ) {
    double _result = 0;
    HRESULT _hr = get_position(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6736)
inline void ZOSAPI_Interfaces::IObjectSourceGaussian::Putposition ( double pRetVal ) {
    HRESULT _hr = put_position(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectSourceIESNAFile wrapper method implementations
//

#pragma implementation_key(6737)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceIESNAFile::GetLumensInFileCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_LumensInFileCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6738)
inline double ZOSAPI_Interfaces::IObjectSourceIESNAFile::GetLumensInFile ( ) {
    double _result = 0;
    HRESULT _hr = get_LumensInFile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6739)
inline void ZOSAPI_Interfaces::IObjectSourceIESNAFile::PutLumensInFile ( double pRetVal ) {
    HRESULT _hr = put_LumensInFile(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectSourceImported wrapper method implementations
//

#pragma implementation_key(6740)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceImported::GetScaleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ScaleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6741)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceImported::GetCosFactorCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CosFactorCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6742)
inline double ZOSAPI_Interfaces::IObjectSourceImported::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6743)
inline void ZOSAPI_Interfaces::IObjectSourceImported::PutScale ( double pRetVal ) {
    HRESULT _hr = put_Scale(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6744)
inline double ZOSAPI_Interfaces::IObjectSourceImported::GetCosFactor ( ) {
    double _result = 0;
    HRESULT _hr = get_CosFactor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6745)
inline void ZOSAPI_Interfaces::IObjectSourceImported::PutCosFactor ( double pRetVal ) {
    HRESULT _hr = put_CosFactor(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectSourceObject wrapper method implementations
//

#pragma implementation_key(6746)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceObject::GetParentObjectNumberCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ParentObjectNumberCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6747)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceObject::GetChordTolCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ChordTolCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6748)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceObject::GetCosFactorCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CosFactorCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6749)
inline long ZOSAPI_Interfaces::IObjectSourceObject::GetParentObjectNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_ParentObjectNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6750)
inline void ZOSAPI_Interfaces::IObjectSourceObject::PutParentObjectNumber ( long pRetVal ) {
    HRESULT _hr = put_ParentObjectNumber(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6751)
inline double ZOSAPI_Interfaces::IObjectSourceObject::GetChordTol ( ) {
    double _result = 0;
    HRESULT _hr = get_ChordTol(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6752)
inline void ZOSAPI_Interfaces::IObjectSourceObject::PutChordTol ( double pRetVal ) {
    HRESULT _hr = put_ChordTol(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6753)
inline double ZOSAPI_Interfaces::IObjectSourceObject::GetCosFactor ( ) {
    double _result = 0;
    HRESULT _hr = get_CosFactor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6754)
inline void ZOSAPI_Interfaces::IObjectSourceObject::PutCosFactor ( double pRetVal ) {
    HRESULT _hr = put_CosFactor(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectSourcePoint wrapper method implementations
//

#pragma implementation_key(6755)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourcePoint::GetConeAngleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ConeAngleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6756)
inline double ZOSAPI_Interfaces::IObjectSourcePoint::GetConeAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_ConeAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6757)
inline void ZOSAPI_Interfaces::IObjectSourcePoint::PutConeAngle ( double pRetVal ) {
    HRESULT _hr = put_ConeAngle(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectSourceRadial wrapper method implementations
//

#pragma implementation_key(6758)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceRadial::GetXHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6759)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceRadial::GetYHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_YHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6760)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceRadial::GetMinAngleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_MinAngleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6761)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceRadial::GetMaxAngleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_MaxAngleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6762)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceRadial::GetNumberOfPointsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberOfPointsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6763)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceRadial::SubAngleICell ( long i ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_SubAngleICell(i, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6764)
inline double ZOSAPI_Interfaces::IObjectSourceRadial::GetXHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_XHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6765)
inline void ZOSAPI_Interfaces::IObjectSourceRadial::PutXHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_XHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6766)
inline double ZOSAPI_Interfaces::IObjectSourceRadial::GetYHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_YHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6767)
inline void ZOSAPI_Interfaces::IObjectSourceRadial::PutYHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_YHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6768)
inline double ZOSAPI_Interfaces::IObjectSourceRadial::GetMinAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_MinAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6769)
inline void ZOSAPI_Interfaces::IObjectSourceRadial::PutMinAngle ( double pRetVal ) {
    HRESULT _hr = put_MinAngle(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6770)
inline double ZOSAPI_Interfaces::IObjectSourceRadial::GetMaxAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_MaxAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6771)
inline void ZOSAPI_Interfaces::IObjectSourceRadial::PutMaxAngle ( double pRetVal ) {
    HRESULT _hr = put_MaxAngle(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6772)
inline long ZOSAPI_Interfaces::IObjectSourceRadial::GetNumberOfPoints ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfPoints(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6773)
inline void ZOSAPI_Interfaces::IObjectSourceRadial::PutNumberOfPoints ( long pRetVal ) {
    HRESULT _hr = put_NumberOfPoints(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6774)
inline double ZOSAPI_Interfaces::IObjectSourceRadial::GetSubAngleI ( long i ) {
    double _result = 0;
    HRESULT _hr = raw_GetSubAngleI(i, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6775)
inline HRESULT ZOSAPI_Interfaces::IObjectSourceRadial::SetSubAngleI ( long i, double v ) {
    HRESULT _hr = raw_SetSubAngleI(i, v);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IObjectSourceRay wrapper method implementations
//

#pragma implementation_key(6776)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceRay::GetXCosineCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XCosineCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6777)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceRay::GetYCosineCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_YCosineCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6778)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceRay::GetZCosineCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ZCosineCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6779)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceRay::GetRandomSeedCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RandomSeedCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6780)
inline double ZOSAPI_Interfaces::IObjectSourceRay::GetXCosine ( ) {
    double _result = 0;
    HRESULT _hr = get_XCosine(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6781)
inline void ZOSAPI_Interfaces::IObjectSourceRay::PutXCosine ( double pRetVal ) {
    HRESULT _hr = put_XCosine(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6782)
inline double ZOSAPI_Interfaces::IObjectSourceRay::GetYCosine ( ) {
    double _result = 0;
    HRESULT _hr = get_YCosine(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6783)
inline void ZOSAPI_Interfaces::IObjectSourceRay::PutYCosine ( double pRetVal ) {
    HRESULT _hr = put_YCosine(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6784)
inline double ZOSAPI_Interfaces::IObjectSourceRay::GetZCosine ( ) {
    double _result = 0;
    HRESULT _hr = get_ZCosine(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6785)
inline void ZOSAPI_Interfaces::IObjectSourceRay::PutZCosine ( double pRetVal ) {
    HRESULT _hr = put_ZCosine(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6786)
inline VARIANT_BOOL ZOSAPI_Interfaces::IObjectSourceRay::GetRandomSeed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_RandomSeed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6787)
inline void ZOSAPI_Interfaces::IObjectSourceRay::PutRandomSeed ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_RandomSeed(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectSourceRectangle wrapper method implementations
//

#pragma implementation_key(6788)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceRectangle::GetXHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6789)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceRectangle::GetYHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_YHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6790)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceRectangle::GetSourceDistanceCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_SourceDistanceCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6791)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceRectangle::GetCosineExponentCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CosineExponentCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6792)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceRectangle::GetGaussGXCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_GaussGXCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6793)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceRectangle::GetGaussGYCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_GaussGYCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6794)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceRectangle::GetSourceXCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_SourceXCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6795)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceRectangle::GetSourceYCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_SourceYCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6796)
inline double ZOSAPI_Interfaces::IObjectSourceRectangle::GetXHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_XHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6797)
inline void ZOSAPI_Interfaces::IObjectSourceRectangle::PutXHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_XHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6798)
inline double ZOSAPI_Interfaces::IObjectSourceRectangle::GetYHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_YHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6799)
inline void ZOSAPI_Interfaces::IObjectSourceRectangle::PutYHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_YHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6800)
inline double ZOSAPI_Interfaces::IObjectSourceRectangle::GetSourceDistance ( ) {
    double _result = 0;
    HRESULT _hr = get_SourceDistance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6801)
inline void ZOSAPI_Interfaces::IObjectSourceRectangle::PutSourceDistance ( double pRetVal ) {
    HRESULT _hr = put_SourceDistance(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6802)
inline double ZOSAPI_Interfaces::IObjectSourceRectangle::GetCosineExponent ( ) {
    double _result = 0;
    HRESULT _hr = get_CosineExponent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6803)
inline void ZOSAPI_Interfaces::IObjectSourceRectangle::PutCosineExponent ( double pRetVal ) {
    HRESULT _hr = put_CosineExponent(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6804)
inline double ZOSAPI_Interfaces::IObjectSourceRectangle::GetGaussGX ( ) {
    double _result = 0;
    HRESULT _hr = get_GaussGX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6805)
inline void ZOSAPI_Interfaces::IObjectSourceRectangle::PutGaussGX ( double pRetVal ) {
    HRESULT _hr = put_GaussGX(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6806)
inline double ZOSAPI_Interfaces::IObjectSourceRectangle::GetGaussGY ( ) {
    double _result = 0;
    HRESULT _hr = get_GaussGY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6807)
inline void ZOSAPI_Interfaces::IObjectSourceRectangle::PutGaussGY ( double pRetVal ) {
    HRESULT _hr = put_GaussGY(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6808)
inline double ZOSAPI_Interfaces::IObjectSourceRectangle::GetSourceX ( ) {
    double _result = 0;
    HRESULT _hr = get_SourceX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6809)
inline void ZOSAPI_Interfaces::IObjectSourceRectangle::PutSourceX ( double pRetVal ) {
    HRESULT _hr = put_SourceX(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6810)
inline double ZOSAPI_Interfaces::IObjectSourceRectangle::GetSourceY ( ) {
    double _result = 0;
    HRESULT _hr = get_SourceY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6811)
inline void ZOSAPI_Interfaces::IObjectSourceRectangle::PutSourceY ( double pRetVal ) {
    HRESULT _hr = put_SourceY(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectSourceTube wrapper method implementations
//

#pragma implementation_key(6812)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceTube::GetLengthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_LengthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6813)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceTube::GetRadiusACell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RadiusACell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6814)
inline double ZOSAPI_Interfaces::IObjectSourceTube::GetLength ( ) {
    double _result = 0;
    HRESULT _hr = get_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6815)
inline void ZOSAPI_Interfaces::IObjectSourceTube::PutLength ( double pRetVal ) {
    HRESULT _hr = put_Length(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6816)
inline double ZOSAPI_Interfaces::IObjectSourceTube::GetRadiusA ( ) {
    double _result = 0;
    HRESULT _hr = get_RadiusA(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6817)
inline void ZOSAPI_Interfaces::IObjectSourceTube::PutRadiusA ( double pRetVal ) {
    HRESULT _hr = put_RadiusA(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectSourceTwoAngle wrapper method implementations
//

#pragma implementation_key(6818)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceTwoAngle::GetXHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6819)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceTwoAngle::GetYHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_YHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6820)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceTwoAngle::GetXHalfAngleDegreeCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XHalfAngleDegreeCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6821)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceTwoAngle::GetYHalfAngleDegreeCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_YHalfAngleDegreeCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6822)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceTwoAngle::GetSpatialShapeCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_SpatialShapeCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6823)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceTwoAngle::GetAngularShapeCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_AngularShapeCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6824)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceTwoAngle::GetUniformAngleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_UniformAngleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6825)
inline double ZOSAPI_Interfaces::IObjectSourceTwoAngle::GetXHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_XHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6826)
inline void ZOSAPI_Interfaces::IObjectSourceTwoAngle::PutXHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_XHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6827)
inline double ZOSAPI_Interfaces::IObjectSourceTwoAngle::GetYHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_YHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6828)
inline void ZOSAPI_Interfaces::IObjectSourceTwoAngle::PutYHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_YHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6829)
inline double ZOSAPI_Interfaces::IObjectSourceTwoAngle::GetXHalfAngleDegree ( ) {
    double _result = 0;
    HRESULT _hr = get_XHalfAngleDegree(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6830)
inline void ZOSAPI_Interfaces::IObjectSourceTwoAngle::PutXHalfAngleDegree ( double pRetVal ) {
    HRESULT _hr = put_XHalfAngleDegree(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6831)
inline double ZOSAPI_Interfaces::IObjectSourceTwoAngle::GetYHalfAngleDegree ( ) {
    double _result = 0;
    HRESULT _hr = get_YHalfAngleDegree(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6832)
inline void ZOSAPI_Interfaces::IObjectSourceTwoAngle::PutYHalfAngleDegree ( double pRetVal ) {
    HRESULT _hr = put_YHalfAngleDegree(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6833)
inline enum ZOSAPI_Interfaces::ShapeChoices ZOSAPI_Interfaces::IObjectSourceTwoAngle::GetSpatialShape ( ) {
    enum ShapeChoices _result;
    HRESULT _hr = get_SpatialShape(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6834)
inline void ZOSAPI_Interfaces::IObjectSourceTwoAngle::PutSpatialShape ( enum ShapeChoices pRetVal ) {
    HRESULT _hr = put_SpatialShape(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6835)
inline enum ZOSAPI_Interfaces::ShapeChoices ZOSAPI_Interfaces::IObjectSourceTwoAngle::GetAngularShape ( ) {
    enum ShapeChoices _result;
    HRESULT _hr = get_AngularShape(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6836)
inline void ZOSAPI_Interfaces::IObjectSourceTwoAngle::PutAngularShape ( enum ShapeChoices pRetVal ) {
    HRESULT _hr = put_AngularShape(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6837)
inline enum ZOSAPI_Interfaces::UniformAngleChoices ZOSAPI_Interfaces::IObjectSourceTwoAngle::GetUniformAngle ( ) {
    enum UniformAngleChoices _result;
    HRESULT _hr = get_UniformAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6838)
inline void ZOSAPI_Interfaces::IObjectSourceTwoAngle::PutUniformAngle ( enum UniformAngleChoices pRetVal ) {
    HRESULT _hr = put_UniformAngle(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectSourceVolumeCylindrical wrapper method implementations
//

#pragma implementation_key(6839)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceVolumeCylindrical::GetXHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6840)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceVolumeCylindrical::GetYHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_YHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6841)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceVolumeCylindrical::GetZHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ZHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6842)
inline double ZOSAPI_Interfaces::IObjectSourceVolumeCylindrical::GetXHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_XHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6843)
inline void ZOSAPI_Interfaces::IObjectSourceVolumeCylindrical::PutXHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_XHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6844)
inline double ZOSAPI_Interfaces::IObjectSourceVolumeCylindrical::GetYHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_YHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6845)
inline void ZOSAPI_Interfaces::IObjectSourceVolumeCylindrical::PutYHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_YHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6846)
inline double ZOSAPI_Interfaces::IObjectSourceVolumeCylindrical::GetZHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_ZHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6847)
inline void ZOSAPI_Interfaces::IObjectSourceVolumeCylindrical::PutZHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_ZHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectSourceVolumeElliptical wrapper method implementations
//

#pragma implementation_key(6848)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceVolumeElliptical::GetXHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6849)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceVolumeElliptical::GetYHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_YHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6850)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceVolumeElliptical::GetZHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ZHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6851)
inline double ZOSAPI_Interfaces::IObjectSourceVolumeElliptical::GetXHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_XHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6852)
inline void ZOSAPI_Interfaces::IObjectSourceVolumeElliptical::PutXHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_XHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6853)
inline double ZOSAPI_Interfaces::IObjectSourceVolumeElliptical::GetYHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_YHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6854)
inline void ZOSAPI_Interfaces::IObjectSourceVolumeElliptical::PutYHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_YHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6855)
inline double ZOSAPI_Interfaces::IObjectSourceVolumeElliptical::GetZHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_ZHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6856)
inline void ZOSAPI_Interfaces::IObjectSourceVolumeElliptical::PutZHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_ZHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectSourceVolumeRectangular wrapper method implementations
//

#pragma implementation_key(6857)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceVolumeRectangular::GetXHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6858)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceVolumeRectangular::GetYHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_YHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6859)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSourceVolumeRectangular::GetZHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ZHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6860)
inline double ZOSAPI_Interfaces::IObjectSourceVolumeRectangular::GetXHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_XHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6861)
inline void ZOSAPI_Interfaces::IObjectSourceVolumeRectangular::PutXHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_XHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6862)
inline double ZOSAPI_Interfaces::IObjectSourceVolumeRectangular::GetYHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_YHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6863)
inline void ZOSAPI_Interfaces::IObjectSourceVolumeRectangular::PutYHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_YHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6864)
inline double ZOSAPI_Interfaces::IObjectSourceVolumeRectangular::GetZHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_ZHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6865)
inline void ZOSAPI_Interfaces::IObjectSourceVolumeRectangular::PutZHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_ZHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectSphere wrapper method implementations
//

#pragma implementation_key(6866)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSphere::GetRadiusCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RadiusCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6867)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSphere::GetIsVolumeCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_IsVolumeCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6868)
inline double ZOSAPI_Interfaces::IObjectSphere::GetRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_Radius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6869)
inline void ZOSAPI_Interfaces::IObjectSphere::PutRadius ( double pRetVal ) {
    HRESULT _hr = put_Radius(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6870)
inline VARIANT_BOOL ZOSAPI_Interfaces::IObjectSphere::GetIsVolume ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsVolume(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6871)
inline void ZOSAPI_Interfaces::IObjectSphere::PutIsVolume ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsVolume(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectStandardLens wrapper method implementations
//

#pragma implementation_key(6872)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectStandardLens::GetRadius1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Radius1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6873)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectStandardLens::GetConic1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Conic1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6874)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectStandardLens::GetClear1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Clear1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6875)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectStandardLens::GetEdge1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Edge1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6876)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectStandardLens::GetThicknessCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ThicknessCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6877)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectStandardLens::GetRadius2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Radius2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6878)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectStandardLens::GetConic2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Conic2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6879)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectStandardLens::GetClear2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Clear2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6880)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectStandardLens::GetEdge2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Edge2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6881)
inline double ZOSAPI_Interfaces::IObjectStandardLens::GetRadius1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Radius1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6882)
inline void ZOSAPI_Interfaces::IObjectStandardLens::PutRadius1 ( double pRetVal ) {
    HRESULT _hr = put_Radius1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6883)
inline double ZOSAPI_Interfaces::IObjectStandardLens::GetConic1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Conic1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6884)
inline void ZOSAPI_Interfaces::IObjectStandardLens::PutConic1 ( double pRetVal ) {
    HRESULT _hr = put_Conic1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6885)
inline double ZOSAPI_Interfaces::IObjectStandardLens::GetClear1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Clear1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6886)
inline void ZOSAPI_Interfaces::IObjectStandardLens::PutClear1 ( double pRetVal ) {
    HRESULT _hr = put_Clear1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6887)
inline double ZOSAPI_Interfaces::IObjectStandardLens::GetEdge1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Edge1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6888)
inline void ZOSAPI_Interfaces::IObjectStandardLens::PutEdge1 ( double pRetVal ) {
    HRESULT _hr = put_Edge1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6889)
inline double ZOSAPI_Interfaces::IObjectStandardLens::GetThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_Thickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6890)
inline void ZOSAPI_Interfaces::IObjectStandardLens::PutThickness ( double pRetVal ) {
    HRESULT _hr = put_Thickness(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6891)
inline double ZOSAPI_Interfaces::IObjectStandardLens::GetRadius2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Radius2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6892)
inline void ZOSAPI_Interfaces::IObjectStandardLens::PutRadius2 ( double pRetVal ) {
    HRESULT _hr = put_Radius2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6893)
inline double ZOSAPI_Interfaces::IObjectStandardLens::GetConic2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Conic2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6894)
inline void ZOSAPI_Interfaces::IObjectStandardLens::PutConic2 ( double pRetVal ) {
    HRESULT _hr = put_Conic2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6895)
inline double ZOSAPI_Interfaces::IObjectStandardLens::GetClear2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Clear2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6896)
inline void ZOSAPI_Interfaces::IObjectStandardLens::PutClear2 ( double pRetVal ) {
    HRESULT _hr = put_Clear2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6897)
inline double ZOSAPI_Interfaces::IObjectStandardLens::GetEdge2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Edge2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6898)
inline void ZOSAPI_Interfaces::IObjectStandardLens::PutEdge2 ( double pRetVal ) {
    HRESULT _hr = put_Edge2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectStandardSurface wrapper method implementations
//

#pragma implementation_key(6899)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectStandardSurface::GetRadiusCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RadiusCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6900)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectStandardSurface::GetConicCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ConicCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6901)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectStandardSurface::GetMaxApertureCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_MaxApertureCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6902)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectStandardSurface::GetMinApertureCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_MinApertureCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6903)
inline double ZOSAPI_Interfaces::IObjectStandardSurface::GetRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_Radius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6904)
inline void ZOSAPI_Interfaces::IObjectStandardSurface::PutRadius ( double pRetVal ) {
    HRESULT _hr = put_Radius(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6905)
inline double ZOSAPI_Interfaces::IObjectStandardSurface::GetConic ( ) {
    double _result = 0;
    HRESULT _hr = get_Conic(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6906)
inline void ZOSAPI_Interfaces::IObjectStandardSurface::PutConic ( double pRetVal ) {
    HRESULT _hr = put_Conic(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6907)
inline double ZOSAPI_Interfaces::IObjectStandardSurface::GetMaxAperture ( ) {
    double _result = 0;
    HRESULT _hr = get_MaxAperture(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6908)
inline void ZOSAPI_Interfaces::IObjectStandardSurface::PutMaxAperture ( double pRetVal ) {
    HRESULT _hr = put_MaxAperture(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6909)
inline double ZOSAPI_Interfaces::IObjectStandardSurface::GetMinAperture ( ) {
    double _result = 0;
    HRESULT _hr = get_MinAperture(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6910)
inline void ZOSAPI_Interfaces::IObjectStandardSurface::PutMinAperture ( double pRetVal ) {
    HRESULT _hr = put_MinAperture(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectSwept wrapper method implementations
//

#pragma implementation_key(6911)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSwept::GetParentObjectNumberCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ParentObjectNumberCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6912)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSwept::GetCenterXCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CenterXCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6913)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSwept::GetCenterYCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CenterYCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6914)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSwept::GetCenterZCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CenterZCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6915)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSwept::GetAxisXCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_AxisXCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6916)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSwept::GetAxisYCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_AxisYCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6917)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSwept::GetAxisZCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_AxisZCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6918)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSwept::GetPlaneXCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_PlaneXCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6919)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSwept::GetPlaneYCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_PlaneYCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6920)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSwept::GetPlaneZCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_PlaneZCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6921)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSwept::GetAngleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_AngleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6922)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSwept::GetEndCapsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_EndCapsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6923)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectSwept::GetIsVolumeCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_IsVolumeCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6924)
inline long ZOSAPI_Interfaces::IObjectSwept::GetParentObjectNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_ParentObjectNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6925)
inline void ZOSAPI_Interfaces::IObjectSwept::PutParentObjectNumber ( long pRetVal ) {
    HRESULT _hr = put_ParentObjectNumber(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6926)
inline double ZOSAPI_Interfaces::IObjectSwept::GetCenterX ( ) {
    double _result = 0;
    HRESULT _hr = get_CenterX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6927)
inline void ZOSAPI_Interfaces::IObjectSwept::PutCenterX ( double pRetVal ) {
    HRESULT _hr = put_CenterX(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6928)
inline double ZOSAPI_Interfaces::IObjectSwept::GetCenterY ( ) {
    double _result = 0;
    HRESULT _hr = get_CenterY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6929)
inline void ZOSAPI_Interfaces::IObjectSwept::PutCenterY ( double pRetVal ) {
    HRESULT _hr = put_CenterY(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6930)
inline double ZOSAPI_Interfaces::IObjectSwept::GetCenterZ ( ) {
    double _result = 0;
    HRESULT _hr = get_CenterZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6931)
inline void ZOSAPI_Interfaces::IObjectSwept::PutCenterZ ( double pRetVal ) {
    HRESULT _hr = put_CenterZ(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6932)
inline double ZOSAPI_Interfaces::IObjectSwept::GetAxisX ( ) {
    double _result = 0;
    HRESULT _hr = get_AxisX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6933)
inline void ZOSAPI_Interfaces::IObjectSwept::PutAxisX ( double pRetVal ) {
    HRESULT _hr = put_AxisX(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6934)
inline double ZOSAPI_Interfaces::IObjectSwept::GetAxisY ( ) {
    double _result = 0;
    HRESULT _hr = get_AxisY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6935)
inline void ZOSAPI_Interfaces::IObjectSwept::PutAxisY ( double pRetVal ) {
    HRESULT _hr = put_AxisY(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6936)
inline double ZOSAPI_Interfaces::IObjectSwept::GetAxisZ ( ) {
    double _result = 0;
    HRESULT _hr = get_AxisZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6937)
inline void ZOSAPI_Interfaces::IObjectSwept::PutAxisZ ( double pRetVal ) {
    HRESULT _hr = put_AxisZ(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6938)
inline double ZOSAPI_Interfaces::IObjectSwept::GetPlaneX ( ) {
    double _result = 0;
    HRESULT _hr = get_PlaneX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6939)
inline void ZOSAPI_Interfaces::IObjectSwept::PutPlaneX ( double pRetVal ) {
    HRESULT _hr = put_PlaneX(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6940)
inline double ZOSAPI_Interfaces::IObjectSwept::GetPlaneY ( ) {
    double _result = 0;
    HRESULT _hr = get_PlaneY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6941)
inline void ZOSAPI_Interfaces::IObjectSwept::PutPlaneY ( double pRetVal ) {
    HRESULT _hr = put_PlaneY(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6942)
inline double ZOSAPI_Interfaces::IObjectSwept::GetPlaneZ ( ) {
    double _result = 0;
    HRESULT _hr = get_PlaneZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6943)
inline void ZOSAPI_Interfaces::IObjectSwept::PutPlaneZ ( double pRetVal ) {
    HRESULT _hr = put_PlaneZ(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6944)
inline double ZOSAPI_Interfaces::IObjectSwept::GetAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_Angle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6945)
inline void ZOSAPI_Interfaces::IObjectSwept::PutAngle ( double pRetVal ) {
    HRESULT _hr = put_Angle(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6946)
inline enum ZOSAPI_Interfaces::EndCapOptions ZOSAPI_Interfaces::IObjectSwept::GetEndCaps ( ) {
    enum EndCapOptions _result;
    HRESULT _hr = get_EndCaps(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6947)
inline void ZOSAPI_Interfaces::IObjectSwept::PutEndCaps ( enum EndCapOptions pRetVal ) {
    HRESULT _hr = put_EndCaps(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6948)
inline VARIANT_BOOL ZOSAPI_Interfaces::IObjectSwept::GetIsVolume ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsVolume(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6949)
inline void ZOSAPI_Interfaces::IObjectSwept::PutIsVolume ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsVolume(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectTabulatedFactedRadial wrapper method implementations
//

#pragma implementation_key(6950)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectTabulatedFactedRadial::GetScaleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ScaleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6951)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectTabulatedFactedRadial::GetIsVolumeCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_IsVolumeCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6952)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectTabulatedFactedRadial::GetStartAngleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_StartAngleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6953)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectTabulatedFactedRadial::GetStopAngleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_StopAngleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6954)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectTabulatedFactedRadial::ZoneIFacetsCell ( long i ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_ZoneIFacetsCell(i, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6955)
inline double ZOSAPI_Interfaces::IObjectTabulatedFactedRadial::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6956)
inline void ZOSAPI_Interfaces::IObjectTabulatedFactedRadial::PutScale ( double pRetVal ) {
    HRESULT _hr = put_Scale(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6957)
inline VARIANT_BOOL ZOSAPI_Interfaces::IObjectTabulatedFactedRadial::GetIsVolume ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsVolume(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6958)
inline void ZOSAPI_Interfaces::IObjectTabulatedFactedRadial::PutIsVolume ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsVolume(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6959)
inline double ZOSAPI_Interfaces::IObjectTabulatedFactedRadial::GetStartAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_StartAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6960)
inline void ZOSAPI_Interfaces::IObjectTabulatedFactedRadial::PutStartAngle ( double pRetVal ) {
    HRESULT _hr = put_StartAngle(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6961)
inline double ZOSAPI_Interfaces::IObjectTabulatedFactedRadial::GetStopAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_StopAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6962)
inline void ZOSAPI_Interfaces::IObjectTabulatedFactedRadial::PutStopAngle ( double pRetVal ) {
    HRESULT _hr = put_StopAngle(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6963)
inline long ZOSAPI_Interfaces::IObjectTabulatedFactedRadial::GetZoneIFacets ( long i ) {
    long _result = 0;
    HRESULT _hr = raw_GetZoneIFacets(i, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6964)
inline HRESULT ZOSAPI_Interfaces::IObjectTabulatedFactedRadial::SetZoneIFacets ( long i, long v ) {
    HRESULT _hr = raw_SetZoneIFacets(i, v);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IObjectTabulatedFactedToroid wrapper method implementations
//

#pragma implementation_key(6965)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectTabulatedFactedToroid::GetScaleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ScaleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6966)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectTabulatedFactedToroid::GetRadiusCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RadiusCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6967)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectTabulatedFactedToroid::GetStartAngleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_StartAngleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6968)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectTabulatedFactedToroid::GetStopAngleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_StopAngleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6969)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectTabulatedFactedToroid::ZoneIFacetsCell ( long i ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_ZoneIFacetsCell(i, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6970)
inline double ZOSAPI_Interfaces::IObjectTabulatedFactedToroid::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6971)
inline void ZOSAPI_Interfaces::IObjectTabulatedFactedToroid::PutScale ( double pRetVal ) {
    HRESULT _hr = put_Scale(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6972)
inline double ZOSAPI_Interfaces::IObjectTabulatedFactedToroid::GetRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_Radius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6973)
inline void ZOSAPI_Interfaces::IObjectTabulatedFactedToroid::PutRadius ( double pRetVal ) {
    HRESULT _hr = put_Radius(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6974)
inline double ZOSAPI_Interfaces::IObjectTabulatedFactedToroid::GetStartAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_StartAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6975)
inline void ZOSAPI_Interfaces::IObjectTabulatedFactedToroid::PutStartAngle ( double pRetVal ) {
    HRESULT _hr = put_StartAngle(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6976)
inline double ZOSAPI_Interfaces::IObjectTabulatedFactedToroid::GetStopAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_StopAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6977)
inline void ZOSAPI_Interfaces::IObjectTabulatedFactedToroid::PutStopAngle ( double pRetVal ) {
    HRESULT _hr = put_StopAngle(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6978)
inline long ZOSAPI_Interfaces::IObjectTabulatedFactedToroid::GetZoneIFacets ( long i ) {
    long _result = 0;
    HRESULT _hr = raw_GetZoneIFacets(i, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6979)
inline HRESULT ZOSAPI_Interfaces::IObjectTabulatedFactedToroid::SetZoneIFacets ( long i, long v ) {
    HRESULT _hr = raw_SetZoneIFacets(i, v);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IObjectTabulatedFrenselRadial wrapper method implementations
//

#pragma implementation_key(6980)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectTabulatedFrenselRadial::GetScaleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ScaleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6981)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectTabulatedFrenselRadial::GetIsVolumeCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_IsVolumeCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6982)
inline double ZOSAPI_Interfaces::IObjectTabulatedFrenselRadial::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6983)
inline void ZOSAPI_Interfaces::IObjectTabulatedFrenselRadial::PutScale ( double pRetVal ) {
    HRESULT _hr = put_Scale(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6984)
inline VARIANT_BOOL ZOSAPI_Interfaces::IObjectTabulatedFrenselRadial::GetIsVolume ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsVolume(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6985)
inline void ZOSAPI_Interfaces::IObjectTabulatedFrenselRadial::PutIsVolume ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsVolume(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectToroidalHologram wrapper method implementations
//

#pragma implementation_key(6986)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalHologram::GetRadialHeightCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RadialHeightCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6987)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalHologram::GetXHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6988)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalHologram::GetThicknessCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ThicknessCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6989)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalHologram::GetRotationR1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RotationR1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6990)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalHologram::GetRadius1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Radius1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6991)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalHologram::GetConic1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Conic1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6992)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalHologram::GetCoeff1YPower2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff1YPower2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6993)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalHologram::GetCoeff1YPower4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff1YPower4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6994)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalHologram::GetCoeff1YPower6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff1YPower6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6995)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalHologram::GetCoeff1YPower8Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff1YPower8Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6996)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalHologram::GetCoeff1YPower10Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff1YPower10Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6997)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalHologram::GetCoeff1YPower12Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff1YPower12Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6998)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalHologram::GetRotationR2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RotationR2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(6999)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalHologram::GetRadius2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Radius2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7000)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalHologram::GetConic2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Conic2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7001)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalHologram::GetCoeff2YPower2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff2YPower2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7002)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalHologram::GetCoeff2YPower4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff2YPower4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7003)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalHologram::GetCoeff2YPower6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff2YPower6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7004)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalHologram::GetCoeff2YPower8Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff2YPower8Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7005)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalHologram::GetCoeff2YPower10Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff2YPower10Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7006)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalHologram::GetCoeff2YPower12Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff2YPower12Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7007)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalHologram::GetHoloTypeCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_HoloTypeCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7008)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalHologram::GetOrderCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_OrderCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7009)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalHologram::GetX1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7010)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalHologram::GetY1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Y1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7011)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalHologram::GetZ1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Z1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7012)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalHologram::GetX2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7013)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalHologram::GetY2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Y2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7014)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalHologram::GetZ2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Z2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7015)
inline double ZOSAPI_Interfaces::IObjectToroidalHologram::GetRadialHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_RadialHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7016)
inline void ZOSAPI_Interfaces::IObjectToroidalHologram::PutRadialHeight ( double pRetVal ) {
    HRESULT _hr = put_RadialHeight(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7017)
inline double ZOSAPI_Interfaces::IObjectToroidalHologram::GetXHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_XHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7018)
inline void ZOSAPI_Interfaces::IObjectToroidalHologram::PutXHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_XHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7019)
inline double ZOSAPI_Interfaces::IObjectToroidalHologram::GetThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_Thickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7020)
inline void ZOSAPI_Interfaces::IObjectToroidalHologram::PutThickness ( double pRetVal ) {
    HRESULT _hr = put_Thickness(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7021)
inline double ZOSAPI_Interfaces::IObjectToroidalHologram::GetRotationR1 ( ) {
    double _result = 0;
    HRESULT _hr = get_RotationR1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7022)
inline void ZOSAPI_Interfaces::IObjectToroidalHologram::PutRotationR1 ( double pRetVal ) {
    HRESULT _hr = put_RotationR1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7023)
inline double ZOSAPI_Interfaces::IObjectToroidalHologram::GetRadius1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Radius1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7024)
inline void ZOSAPI_Interfaces::IObjectToroidalHologram::PutRadius1 ( double pRetVal ) {
    HRESULT _hr = put_Radius1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7025)
inline double ZOSAPI_Interfaces::IObjectToroidalHologram::GetConic1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Conic1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7026)
inline void ZOSAPI_Interfaces::IObjectToroidalHologram::PutConic1 ( double pRetVal ) {
    HRESULT _hr = put_Conic1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7027)
inline double ZOSAPI_Interfaces::IObjectToroidalHologram::GetCoeff1YPower2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff1YPower2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7028)
inline void ZOSAPI_Interfaces::IObjectToroidalHologram::PutCoeff1YPower2 ( double pRetVal ) {
    HRESULT _hr = put_Coeff1YPower2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7029)
inline double ZOSAPI_Interfaces::IObjectToroidalHologram::GetCoeff1YPower4 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff1YPower4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7030)
inline void ZOSAPI_Interfaces::IObjectToroidalHologram::PutCoeff1YPower4 ( double pRetVal ) {
    HRESULT _hr = put_Coeff1YPower4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7031)
inline double ZOSAPI_Interfaces::IObjectToroidalHologram::GetCoeff1YPower6 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff1YPower6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7032)
inline void ZOSAPI_Interfaces::IObjectToroidalHologram::PutCoeff1YPower6 ( double pRetVal ) {
    HRESULT _hr = put_Coeff1YPower6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7033)
inline double ZOSAPI_Interfaces::IObjectToroidalHologram::GetCoeff1YPower8 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff1YPower8(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7034)
inline void ZOSAPI_Interfaces::IObjectToroidalHologram::PutCoeff1YPower8 ( double pRetVal ) {
    HRESULT _hr = put_Coeff1YPower8(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7035)
inline double ZOSAPI_Interfaces::IObjectToroidalHologram::GetCoeff1YPower10 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff1YPower10(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7036)
inline void ZOSAPI_Interfaces::IObjectToroidalHologram::PutCoeff1YPower10 ( double pRetVal ) {
    HRESULT _hr = put_Coeff1YPower10(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7037)
inline double ZOSAPI_Interfaces::IObjectToroidalHologram::GetCoeff1YPower12 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff1YPower12(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7038)
inline void ZOSAPI_Interfaces::IObjectToroidalHologram::PutCoeff1YPower12 ( double pRetVal ) {
    HRESULT _hr = put_Coeff1YPower12(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7039)
inline double ZOSAPI_Interfaces::IObjectToroidalHologram::GetRotationR2 ( ) {
    double _result = 0;
    HRESULT _hr = get_RotationR2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7040)
inline void ZOSAPI_Interfaces::IObjectToroidalHologram::PutRotationR2 ( double pRetVal ) {
    HRESULT _hr = put_RotationR2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7041)
inline double ZOSAPI_Interfaces::IObjectToroidalHologram::GetRadius2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Radius2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7042)
inline void ZOSAPI_Interfaces::IObjectToroidalHologram::PutRadius2 ( double pRetVal ) {
    HRESULT _hr = put_Radius2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7043)
inline double ZOSAPI_Interfaces::IObjectToroidalHologram::GetConic2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Conic2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7044)
inline void ZOSAPI_Interfaces::IObjectToroidalHologram::PutConic2 ( double pRetVal ) {
    HRESULT _hr = put_Conic2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7045)
inline double ZOSAPI_Interfaces::IObjectToroidalHologram::GetCoeff2YPower2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff2YPower2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7046)
inline void ZOSAPI_Interfaces::IObjectToroidalHologram::PutCoeff2YPower2 ( double pRetVal ) {
    HRESULT _hr = put_Coeff2YPower2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7047)
inline double ZOSAPI_Interfaces::IObjectToroidalHologram::GetCoeff2YPower4 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff2YPower4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7048)
inline void ZOSAPI_Interfaces::IObjectToroidalHologram::PutCoeff2YPower4 ( double pRetVal ) {
    HRESULT _hr = put_Coeff2YPower4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7049)
inline double ZOSAPI_Interfaces::IObjectToroidalHologram::GetCoeff2YPower6 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff2YPower6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7050)
inline void ZOSAPI_Interfaces::IObjectToroidalHologram::PutCoeff2YPower6 ( double pRetVal ) {
    HRESULT _hr = put_Coeff2YPower6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7051)
inline double ZOSAPI_Interfaces::IObjectToroidalHologram::GetCoeff2YPower8 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff2YPower8(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7052)
inline void ZOSAPI_Interfaces::IObjectToroidalHologram::PutCoeff2YPower8 ( double pRetVal ) {
    HRESULT _hr = put_Coeff2YPower8(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7053)
inline double ZOSAPI_Interfaces::IObjectToroidalHologram::GetCoeff2YPower10 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff2YPower10(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7054)
inline void ZOSAPI_Interfaces::IObjectToroidalHologram::PutCoeff2YPower10 ( double pRetVal ) {
    HRESULT _hr = put_Coeff2YPower10(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7055)
inline double ZOSAPI_Interfaces::IObjectToroidalHologram::GetCoeff2YPower12 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff2YPower12(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7056)
inline void ZOSAPI_Interfaces::IObjectToroidalHologram::PutCoeff2YPower12 ( double pRetVal ) {
    HRESULT _hr = put_Coeff2YPower12(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7057)
inline long ZOSAPI_Interfaces::IObjectToroidalHologram::GetHologramType ( ) {
    long _result = 0;
    HRESULT _hr = get_HologramType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7058)
inline void ZOSAPI_Interfaces::IObjectToroidalHologram::PutHologramType ( long pRetVal ) {
    HRESULT _hr = put_HologramType(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7059)
inline double ZOSAPI_Interfaces::IObjectToroidalHologram::GetOrder ( ) {
    double _result = 0;
    HRESULT _hr = get_Order(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7060)
inline void ZOSAPI_Interfaces::IObjectToroidalHologram::PutOrder ( double pRetVal ) {
    HRESULT _hr = put_Order(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7061)
inline double ZOSAPI_Interfaces::IObjectToroidalHologram::GetX1 ( ) {
    double _result = 0;
    HRESULT _hr = get_X1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7062)
inline void ZOSAPI_Interfaces::IObjectToroidalHologram::PutX1 ( double pRetVal ) {
    HRESULT _hr = put_X1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7063)
inline double ZOSAPI_Interfaces::IObjectToroidalHologram::GetY1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Y1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7064)
inline void ZOSAPI_Interfaces::IObjectToroidalHologram::PutY1 ( double pRetVal ) {
    HRESULT _hr = put_Y1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7065)
inline double ZOSAPI_Interfaces::IObjectToroidalHologram::GetZ1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Z1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7066)
inline void ZOSAPI_Interfaces::IObjectToroidalHologram::PutZ1 ( double pRetVal ) {
    HRESULT _hr = put_Z1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7067)
inline double ZOSAPI_Interfaces::IObjectToroidalHologram::GetX2 ( ) {
    double _result = 0;
    HRESULT _hr = get_X2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7068)
inline void ZOSAPI_Interfaces::IObjectToroidalHologram::PutX2 ( double pRetVal ) {
    HRESULT _hr = put_X2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7069)
inline double ZOSAPI_Interfaces::IObjectToroidalHologram::GetY2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Y2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7070)
inline void ZOSAPI_Interfaces::IObjectToroidalHologram::PutY2 ( double pRetVal ) {
    HRESULT _hr = put_Y2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7071)
inline double ZOSAPI_Interfaces::IObjectToroidalHologram::GetZ2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Z2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7072)
inline void ZOSAPI_Interfaces::IObjectToroidalHologram::PutZ2 ( double pRetVal ) {
    HRESULT _hr = put_Z2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectToroidalLens wrapper method implementations
//

#pragma implementation_key(7073)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalLens::GetRadialHeightCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RadialHeightCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7074)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalLens::GetXHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7075)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalLens::GetThicknessCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ThicknessCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7076)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalLens::GetRotationR1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RotationR1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7077)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalLens::GetRadius1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Radius1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7078)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalLens::GetConic1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Conic1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7079)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalLens::GetCoeff1YPower2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff1YPower2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7080)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalLens::GetCoeff1YPower4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff1YPower4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7081)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalLens::GetCoeff1YPower6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff1YPower6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7082)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalLens::GetCoeff1YPower8Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff1YPower8Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7083)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalLens::GetCoeff1YPower10Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff1YPower10Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7084)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalLens::GetCoeff1YPower12Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff1YPower12Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7085)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalLens::GetRotationR2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RotationR2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7086)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalLens::GetRadius2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Radius2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7087)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalLens::GetConic2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Conic2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7088)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalLens::GetCoeff2YPower2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff2YPower2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7089)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalLens::GetCoeff2YPower4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff2YPower4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7090)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalLens::GetCoeff2YPower6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff2YPower6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7091)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalLens::GetCoeff2YPower8Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff2YPower8Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7092)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalLens::GetCoeff2YPower10Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff2YPower10Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7093)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalLens::GetCoeff2YPower12Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff2YPower12Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7094)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalLens::GetCoeff1YPower14Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff1YPower14Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7095)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalLens::GetCoeff2YPower14Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Coeff2YPower14Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7096)
inline double ZOSAPI_Interfaces::IObjectToroidalLens::GetRadialHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_RadialHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7097)
inline void ZOSAPI_Interfaces::IObjectToroidalLens::PutRadialHeight ( double pRetVal ) {
    HRESULT _hr = put_RadialHeight(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7098)
inline double ZOSAPI_Interfaces::IObjectToroidalLens::GetXHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_XHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7099)
inline void ZOSAPI_Interfaces::IObjectToroidalLens::PutXHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_XHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7100)
inline double ZOSAPI_Interfaces::IObjectToroidalLens::GetThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_Thickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7101)
inline void ZOSAPI_Interfaces::IObjectToroidalLens::PutThickness ( double pRetVal ) {
    HRESULT _hr = put_Thickness(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7102)
inline double ZOSAPI_Interfaces::IObjectToroidalLens::GetRotationR1 ( ) {
    double _result = 0;
    HRESULT _hr = get_RotationR1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7103)
inline void ZOSAPI_Interfaces::IObjectToroidalLens::PutRotationR1 ( double pRetVal ) {
    HRESULT _hr = put_RotationR1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7104)
inline double ZOSAPI_Interfaces::IObjectToroidalLens::GetRadius1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Radius1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7105)
inline void ZOSAPI_Interfaces::IObjectToroidalLens::PutRadius1 ( double pRetVal ) {
    HRESULT _hr = put_Radius1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7106)
inline double ZOSAPI_Interfaces::IObjectToroidalLens::GetConic1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Conic1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7107)
inline void ZOSAPI_Interfaces::IObjectToroidalLens::PutConic1 ( double pRetVal ) {
    HRESULT _hr = put_Conic1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7108)
inline double ZOSAPI_Interfaces::IObjectToroidalLens::GetCoeff1YPower2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff1YPower2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7109)
inline void ZOSAPI_Interfaces::IObjectToroidalLens::PutCoeff1YPower2 ( double pRetVal ) {
    HRESULT _hr = put_Coeff1YPower2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7110)
inline double ZOSAPI_Interfaces::IObjectToroidalLens::GetCoeff1YPower4 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff1YPower4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7111)
inline void ZOSAPI_Interfaces::IObjectToroidalLens::PutCoeff1YPower4 ( double pRetVal ) {
    HRESULT _hr = put_Coeff1YPower4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7112)
inline double ZOSAPI_Interfaces::IObjectToroidalLens::GetCoeff1YPower6 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff1YPower6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7113)
inline void ZOSAPI_Interfaces::IObjectToroidalLens::PutCoeff1YPower6 ( double pRetVal ) {
    HRESULT _hr = put_Coeff1YPower6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7114)
inline double ZOSAPI_Interfaces::IObjectToroidalLens::GetCoeff1YPower8 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff1YPower8(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7115)
inline void ZOSAPI_Interfaces::IObjectToroidalLens::PutCoeff1YPower8 ( double pRetVal ) {
    HRESULT _hr = put_Coeff1YPower8(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7116)
inline double ZOSAPI_Interfaces::IObjectToroidalLens::GetCoeff1YPower10 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff1YPower10(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7117)
inline void ZOSAPI_Interfaces::IObjectToroidalLens::PutCoeff1YPower10 ( double pRetVal ) {
    HRESULT _hr = put_Coeff1YPower10(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7118)
inline double ZOSAPI_Interfaces::IObjectToroidalLens::GetCoeff1YPower12 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff1YPower12(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7119)
inline void ZOSAPI_Interfaces::IObjectToroidalLens::PutCoeff1YPower12 ( double pRetVal ) {
    HRESULT _hr = put_Coeff1YPower12(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7120)
inline double ZOSAPI_Interfaces::IObjectToroidalLens::GetRotationR2 ( ) {
    double _result = 0;
    HRESULT _hr = get_RotationR2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7121)
inline void ZOSAPI_Interfaces::IObjectToroidalLens::PutRotationR2 ( double pRetVal ) {
    HRESULT _hr = put_RotationR2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7122)
inline double ZOSAPI_Interfaces::IObjectToroidalLens::GetRadius2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Radius2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7123)
inline void ZOSAPI_Interfaces::IObjectToroidalLens::PutRadius2 ( double pRetVal ) {
    HRESULT _hr = put_Radius2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7124)
inline double ZOSAPI_Interfaces::IObjectToroidalLens::GetConic2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Conic2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7125)
inline void ZOSAPI_Interfaces::IObjectToroidalLens::PutConic2 ( double pRetVal ) {
    HRESULT _hr = put_Conic2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7126)
inline double ZOSAPI_Interfaces::IObjectToroidalLens::GetCoeff2YPower2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff2YPower2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7127)
inline void ZOSAPI_Interfaces::IObjectToroidalLens::PutCoeff2YPower2 ( double pRetVal ) {
    HRESULT _hr = put_Coeff2YPower2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7128)
inline double ZOSAPI_Interfaces::IObjectToroidalLens::GetCoeff2YPower4 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff2YPower4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7129)
inline void ZOSAPI_Interfaces::IObjectToroidalLens::PutCoeff2YPower4 ( double pRetVal ) {
    HRESULT _hr = put_Coeff2YPower4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7130)
inline double ZOSAPI_Interfaces::IObjectToroidalLens::GetCoeff2YPower6 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff2YPower6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7131)
inline void ZOSAPI_Interfaces::IObjectToroidalLens::PutCoeff2YPower6 ( double pRetVal ) {
    HRESULT _hr = put_Coeff2YPower6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7132)
inline double ZOSAPI_Interfaces::IObjectToroidalLens::GetCoeff2YPower8 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff2YPower8(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7133)
inline void ZOSAPI_Interfaces::IObjectToroidalLens::PutCoeff2YPower8 ( double pRetVal ) {
    HRESULT _hr = put_Coeff2YPower8(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7134)
inline double ZOSAPI_Interfaces::IObjectToroidalLens::GetCoeff2YPower10 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff2YPower10(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7135)
inline void ZOSAPI_Interfaces::IObjectToroidalLens::PutCoeff2YPower10 ( double pRetVal ) {
    HRESULT _hr = put_Coeff2YPower10(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7136)
inline double ZOSAPI_Interfaces::IObjectToroidalLens::GetCoeff2YPower12 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff2YPower12(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7137)
inline void ZOSAPI_Interfaces::IObjectToroidalLens::PutCoeff2YPower12 ( double pRetVal ) {
    HRESULT _hr = put_Coeff2YPower12(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7138)
inline double ZOSAPI_Interfaces::IObjectToroidalLens::GetCoeff1YPower14 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff1YPower14(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7139)
inline void ZOSAPI_Interfaces::IObjectToroidalLens::PutCoeff1YPower14 ( double pRetVal ) {
    HRESULT _hr = put_Coeff1YPower14(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7140)
inline double ZOSAPI_Interfaces::IObjectToroidalLens::GetCoeff2YPower14 ( ) {
    double _result = 0;
    HRESULT _hr = get_Coeff2YPower14(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7141)
inline void ZOSAPI_Interfaces::IObjectToroidalLens::PutCoeff2YPower14 ( double pRetVal ) {
    HRESULT _hr = put_Coeff2YPower14(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectToroidalSurface wrapper method implementations
//

#pragma implementation_key(7142)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalSurface::GetXHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7143)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalSurface::GetYHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_YHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7144)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalSurface::GetRotationRCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RotationRCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7145)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalSurface::GetRadiusCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RadiusCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7146)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalSurface::GetConicCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ConicCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7147)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalSurface::GetCoeffYPower2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffYPower2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7148)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalSurface::GetCoeffYPower4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffYPower4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7149)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalSurface::GetCoeffYPower6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffYPower6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7150)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalSurface::GetCoeffYPower8Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffYPower8Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7151)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalSurface::GetCoeffYPower10Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffYPower10Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7152)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalSurface::GetCoeffYPower12Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffYPower12Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7153)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalSurface::GetCoeffYPower14Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffYPower14Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7154)
inline double ZOSAPI_Interfaces::IObjectToroidalSurface::GetXHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_XHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7155)
inline void ZOSAPI_Interfaces::IObjectToroidalSurface::PutXHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_XHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7156)
inline double ZOSAPI_Interfaces::IObjectToroidalSurface::GetYHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_YHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7157)
inline void ZOSAPI_Interfaces::IObjectToroidalSurface::PutYHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_YHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7158)
inline double ZOSAPI_Interfaces::IObjectToroidalSurface::GetRotationR ( ) {
    double _result = 0;
    HRESULT _hr = get_RotationR(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7159)
inline void ZOSAPI_Interfaces::IObjectToroidalSurface::PutRotationR ( double pRetVal ) {
    HRESULT _hr = put_RotationR(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7160)
inline double ZOSAPI_Interfaces::IObjectToroidalSurface::GetRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_Radius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7161)
inline void ZOSAPI_Interfaces::IObjectToroidalSurface::PutRadius ( double pRetVal ) {
    HRESULT _hr = put_Radius(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7162)
inline double ZOSAPI_Interfaces::IObjectToroidalSurface::GetConic ( ) {
    double _result = 0;
    HRESULT _hr = get_Conic(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7163)
inline void ZOSAPI_Interfaces::IObjectToroidalSurface::PutConic ( double pRetVal ) {
    HRESULT _hr = put_Conic(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7164)
inline double ZOSAPI_Interfaces::IObjectToroidalSurface::GetCoeffYPower2 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffYPower2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7165)
inline void ZOSAPI_Interfaces::IObjectToroidalSurface::PutCoeffYPower2 ( double pRetVal ) {
    HRESULT _hr = put_CoeffYPower2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7166)
inline double ZOSAPI_Interfaces::IObjectToroidalSurface::GetCoeffYPower4 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffYPower4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7167)
inline void ZOSAPI_Interfaces::IObjectToroidalSurface::PutCoeffYPower4 ( double pRetVal ) {
    HRESULT _hr = put_CoeffYPower4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7168)
inline double ZOSAPI_Interfaces::IObjectToroidalSurface::GetCoeffYPower6 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffYPower6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7169)
inline void ZOSAPI_Interfaces::IObjectToroidalSurface::PutCoeffYPower6 ( double pRetVal ) {
    HRESULT _hr = put_CoeffYPower6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7170)
inline double ZOSAPI_Interfaces::IObjectToroidalSurface::GetCoeffYPower8 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffYPower8(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7171)
inline void ZOSAPI_Interfaces::IObjectToroidalSurface::PutCoeffYPower8 ( double pRetVal ) {
    HRESULT _hr = put_CoeffYPower8(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7172)
inline double ZOSAPI_Interfaces::IObjectToroidalSurface::GetCoeffYPower10 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffYPower10(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7173)
inline void ZOSAPI_Interfaces::IObjectToroidalSurface::PutCoeffYPower10 ( double pRetVal ) {
    HRESULT _hr = put_CoeffYPower10(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7174)
inline double ZOSAPI_Interfaces::IObjectToroidalSurface::GetCoeffYPower12 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffYPower12(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7175)
inline void ZOSAPI_Interfaces::IObjectToroidalSurface::PutCoeffYPower12 ( double pRetVal ) {
    HRESULT _hr = put_CoeffYPower12(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7176)
inline double ZOSAPI_Interfaces::IObjectToroidalSurface::GetCoeffYPower14 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffYPower14(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7177)
inline void ZOSAPI_Interfaces::IObjectToroidalSurface::PutCoeffYPower14 ( double pRetVal ) {
    HRESULT _hr = put_CoeffYPower14(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectToroidalSurfaceOddASphere wrapper method implementations
//

#pragma implementation_key(7178)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalSurfaceOddASphere::GetXHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7179)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalSurfaceOddASphere::GetYHalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_YHalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7180)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalSurfaceOddASphere::GetRotationRCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RotationRCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7181)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalSurfaceOddASphere::GetRadiusCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RadiusCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7182)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalSurfaceOddASphere::GetConicCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ConicCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7183)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalSurfaceOddASphere::GetCoeffOnYPower1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffOnYPower1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7184)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalSurfaceOddASphere::GetCoeffOnYPower2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffOnYPower2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7185)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalSurfaceOddASphere::GetCoeffOnYPower3Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffOnYPower3Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7186)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalSurfaceOddASphere::GetCoeffOnYPower4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffOnYPower4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7187)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalSurfaceOddASphere::GetCoeffOnYPower5Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffOnYPower5Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7188)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalSurfaceOddASphere::GetCoeffOnYPower6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffOnYPower6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7189)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalSurfaceOddASphere::GetCoeffOnYPower7Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffOnYPower7Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7190)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectToroidalSurfaceOddASphere::GetCoeffOnYPower8Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffOnYPower8Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7191)
inline double ZOSAPI_Interfaces::IObjectToroidalSurfaceOddASphere::GetXHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_XHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7192)
inline void ZOSAPI_Interfaces::IObjectToroidalSurfaceOddASphere::PutXHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_XHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7193)
inline double ZOSAPI_Interfaces::IObjectToroidalSurfaceOddASphere::GetYHalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_YHalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7194)
inline void ZOSAPI_Interfaces::IObjectToroidalSurfaceOddASphere::PutYHalfWidth ( double pRetVal ) {
    HRESULT _hr = put_YHalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7195)
inline double ZOSAPI_Interfaces::IObjectToroidalSurfaceOddASphere::GetRotationR ( ) {
    double _result = 0;
    HRESULT _hr = get_RotationR(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7196)
inline void ZOSAPI_Interfaces::IObjectToroidalSurfaceOddASphere::PutRotationR ( double pRetVal ) {
    HRESULT _hr = put_RotationR(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7197)
inline double ZOSAPI_Interfaces::IObjectToroidalSurfaceOddASphere::GetRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_Radius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7198)
inline void ZOSAPI_Interfaces::IObjectToroidalSurfaceOddASphere::PutRadius ( double pRetVal ) {
    HRESULT _hr = put_Radius(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7199)
inline double ZOSAPI_Interfaces::IObjectToroidalSurfaceOddASphere::GetConic ( ) {
    double _result = 0;
    HRESULT _hr = get_Conic(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7200)
inline void ZOSAPI_Interfaces::IObjectToroidalSurfaceOddASphere::PutConic ( double pRetVal ) {
    HRESULT _hr = put_Conic(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7201)
inline double ZOSAPI_Interfaces::IObjectToroidalSurfaceOddASphere::GetCoeffOnYPower1 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffOnYPower1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7202)
inline void ZOSAPI_Interfaces::IObjectToroidalSurfaceOddASphere::PutCoeffOnYPower1 ( double pRetVal ) {
    HRESULT _hr = put_CoeffOnYPower1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7203)
inline double ZOSAPI_Interfaces::IObjectToroidalSurfaceOddASphere::GetCoeffOnYPower2 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffOnYPower2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7204)
inline void ZOSAPI_Interfaces::IObjectToroidalSurfaceOddASphere::PutCoeffOnYPower2 ( double pRetVal ) {
    HRESULT _hr = put_CoeffOnYPower2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7205)
inline double ZOSAPI_Interfaces::IObjectToroidalSurfaceOddASphere::GetCoeffOnYPower3 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffOnYPower3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7206)
inline void ZOSAPI_Interfaces::IObjectToroidalSurfaceOddASphere::PutCoeffOnYPower3 ( double pRetVal ) {
    HRESULT _hr = put_CoeffOnYPower3(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7207)
inline double ZOSAPI_Interfaces::IObjectToroidalSurfaceOddASphere::GetCoeffOnYPower4 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffOnYPower4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7208)
inline void ZOSAPI_Interfaces::IObjectToroidalSurfaceOddASphere::PutCoeffOnYPower4 ( double pRetVal ) {
    HRESULT _hr = put_CoeffOnYPower4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7209)
inline double ZOSAPI_Interfaces::IObjectToroidalSurfaceOddASphere::GetCoeffOnYPower5 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffOnYPower5(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7210)
inline void ZOSAPI_Interfaces::IObjectToroidalSurfaceOddASphere::PutCoeffOnYPower5 ( double pRetVal ) {
    HRESULT _hr = put_CoeffOnYPower5(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7211)
inline double ZOSAPI_Interfaces::IObjectToroidalSurfaceOddASphere::GetCoeffOnYPower6 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffOnYPower6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7212)
inline void ZOSAPI_Interfaces::IObjectToroidalSurfaceOddASphere::PutCoeffOnYPower6 ( double pRetVal ) {
    HRESULT _hr = put_CoeffOnYPower6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7213)
inline double ZOSAPI_Interfaces::IObjectToroidalSurfaceOddASphere::GetCoeffOnYPower7 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffOnYPower7(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7214)
inline void ZOSAPI_Interfaces::IObjectToroidalSurfaceOddASphere::PutCoeffOnYPower7 ( double pRetVal ) {
    HRESULT _hr = put_CoeffOnYPower7(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7215)
inline double ZOSAPI_Interfaces::IObjectToroidalSurfaceOddASphere::GetCoeffOnYPower8 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffOnYPower8(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7216)
inline void ZOSAPI_Interfaces::IObjectToroidalSurfaceOddASphere::PutCoeffOnYPower8 ( double pRetVal ) {
    HRESULT _hr = put_CoeffOnYPower8(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectTorusSurface wrapper method implementations
//

#pragma implementation_key(7217)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectTorusSurface::GetRotationRCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RotationRCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7218)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectTorusSurface::GetRadiusRCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RadiusRCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7219)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectTorusSurface::GetStartAngleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_StartAngleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7220)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectTorusSurface::GetStopAngleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_StopAngleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7221)
inline double ZOSAPI_Interfaces::IObjectTorusSurface::GetRotationR ( ) {
    double _result = 0;
    HRESULT _hr = get_RotationR(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7222)
inline void ZOSAPI_Interfaces::IObjectTorusSurface::PutRotationR ( double pRetVal ) {
    HRESULT _hr = put_RotationR(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7223)
inline double ZOSAPI_Interfaces::IObjectTorusSurface::GetRadiusR ( ) {
    double _result = 0;
    HRESULT _hr = get_RadiusR(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7224)
inline void ZOSAPI_Interfaces::IObjectTorusSurface::PutRadiusR ( double pRetVal ) {
    HRESULT _hr = put_RadiusR(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7225)
inline double ZOSAPI_Interfaces::IObjectTorusSurface::GetStartAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_StartAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7226)
inline void ZOSAPI_Interfaces::IObjectTorusSurface::PutStartAngle ( double pRetVal ) {
    HRESULT _hr = put_StartAngle(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7227)
inline double ZOSAPI_Interfaces::IObjectTorusSurface::GetStopAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_StopAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7228)
inline void ZOSAPI_Interfaces::IObjectTorusSurface::PutStopAngle ( double pRetVal ) {
    HRESULT _hr = put_StopAngle(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectTorusVolume wrapper method implementations
//

#pragma implementation_key(7229)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectTorusVolume::GetRotationRCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RotationRCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7230)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectTorusVolume::GetRadiusRCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RadiusRCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7231)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectTorusVolume::GetStartAngleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_StartAngleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7232)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectTorusVolume::GetStopAngleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_StopAngleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7233)
inline double ZOSAPI_Interfaces::IObjectTorusVolume::GetRotationR ( ) {
    double _result = 0;
    HRESULT _hr = get_RotationR(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7234)
inline void ZOSAPI_Interfaces::IObjectTorusVolume::PutRotationR ( double pRetVal ) {
    HRESULT _hr = put_RotationR(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7235)
inline double ZOSAPI_Interfaces::IObjectTorusVolume::GetRadiusR ( ) {
    double _result = 0;
    HRESULT _hr = get_RadiusR(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7236)
inline void ZOSAPI_Interfaces::IObjectTorusVolume::PutRadiusR ( double pRetVal ) {
    HRESULT _hr = put_RadiusR(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7237)
inline double ZOSAPI_Interfaces::IObjectTorusVolume::GetStartAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_StartAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7238)
inline void ZOSAPI_Interfaces::IObjectTorusVolume::PutStartAngle ( double pRetVal ) {
    HRESULT _hr = put_StartAngle(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7239)
inline double ZOSAPI_Interfaces::IObjectTorusVolume::GetStopAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_StopAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7240)
inline void ZOSAPI_Interfaces::IObjectTorusVolume::PutStopAngle ( double pRetVal ) {
    HRESULT _hr = put_StopAngle(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectTriangularCorner wrapper method implementations
//

#pragma implementation_key(7241)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectTriangularCorner::GetWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_WidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7242)
inline double ZOSAPI_Interfaces::IObjectTriangularCorner::GetWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_Width(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7243)
inline void ZOSAPI_Interfaces::IObjectTriangularCorner::PutWidth ( double pRetVal ) {
    HRESULT _hr = put_Width(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectTriangle wrapper method implementations
//

#pragma implementation_key(7244)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectTriangle::GetX1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7245)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectTriangle::GetY1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Y1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7246)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectTriangle::GetX2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7247)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectTriangle::GetY2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Y2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7248)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectTriangle::GetX3Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X3Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7249)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectTriangle::GetY3Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Y3Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7250)
inline double ZOSAPI_Interfaces::IObjectTriangle::GetX1 ( ) {
    double _result = 0;
    HRESULT _hr = get_X1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7251)
inline void ZOSAPI_Interfaces::IObjectTriangle::PutX1 ( double pRetVal ) {
    HRESULT _hr = put_X1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7252)
inline double ZOSAPI_Interfaces::IObjectTriangle::GetY1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Y1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7253)
inline void ZOSAPI_Interfaces::IObjectTriangle::PutY1 ( double pRetVal ) {
    HRESULT _hr = put_Y1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7254)
inline double ZOSAPI_Interfaces::IObjectTriangle::GetX2 ( ) {
    double _result = 0;
    HRESULT _hr = get_X2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7255)
inline void ZOSAPI_Interfaces::IObjectTriangle::PutX2 ( double pRetVal ) {
    HRESULT _hr = put_X2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7256)
inline double ZOSAPI_Interfaces::IObjectTriangle::GetY2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Y2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7257)
inline void ZOSAPI_Interfaces::IObjectTriangle::PutY2 ( double pRetVal ) {
    HRESULT _hr = put_Y2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7258)
inline double ZOSAPI_Interfaces::IObjectTriangle::GetX3 ( ) {
    double _result = 0;
    HRESULT _hr = get_X3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7259)
inline void ZOSAPI_Interfaces::IObjectTriangle::PutX3 ( double pRetVal ) {
    HRESULT _hr = put_X3(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7260)
inline double ZOSAPI_Interfaces::IObjectTriangle::GetY3 ( ) {
    double _result = 0;
    HRESULT _hr = get_Y3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7261)
inline void ZOSAPI_Interfaces::IObjectTriangle::PutY3 ( double pRetVal ) {
    HRESULT _hr = put_Y3(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectWolterSurface wrapper method implementations
//

#pragma implementation_key(7262)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectWolterSurface::GetZLengthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ZLengthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7263)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectWolterSurface::GetR0Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_R0Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7264)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectWolterSurface::GetAngleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_AngleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7265)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectWolterSurface::GetCoeffZPower2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffZPower2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7266)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectWolterSurface::GetCoeffZPower3Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffZPower3Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7267)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectWolterSurface::GetCoeffZPower4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffZPower4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7268)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectWolterSurface::GetCoeffZPower5Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffZPower5Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7269)
inline double ZOSAPI_Interfaces::IObjectWolterSurface::GetZLength ( ) {
    double _result = 0;
    HRESULT _hr = get_ZLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7270)
inline void ZOSAPI_Interfaces::IObjectWolterSurface::PutZLength ( double pRetVal ) {
    HRESULT _hr = put_ZLength(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7271)
inline double ZOSAPI_Interfaces::IObjectWolterSurface::GetR0 ( ) {
    double _result = 0;
    HRESULT _hr = get_R0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7272)
inline void ZOSAPI_Interfaces::IObjectWolterSurface::PutR0 ( double pRetVal ) {
    HRESULT _hr = put_R0(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7273)
inline double ZOSAPI_Interfaces::IObjectWolterSurface::GetAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_Angle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7274)
inline void ZOSAPI_Interfaces::IObjectWolterSurface::PutAngle ( double pRetVal ) {
    HRESULT _hr = put_Angle(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7275)
inline double ZOSAPI_Interfaces::IObjectWolterSurface::GetCoeffZPower2 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffZPower2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7276)
inline void ZOSAPI_Interfaces::IObjectWolterSurface::PutCoeffZPower2 ( double pRetVal ) {
    HRESULT _hr = put_CoeffZPower2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7277)
inline double ZOSAPI_Interfaces::IObjectWolterSurface::GetCoeffZPower3 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffZPower3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7278)
inline void ZOSAPI_Interfaces::IObjectWolterSurface::PutCoeffZPower3 ( double pRetVal ) {
    HRESULT _hr = put_CoeffZPower3(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7279)
inline double ZOSAPI_Interfaces::IObjectWolterSurface::GetCoeffZPower4 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffZPower4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7280)
inline void ZOSAPI_Interfaces::IObjectWolterSurface::PutCoeffZPower4 ( double pRetVal ) {
    HRESULT _hr = put_CoeffZPower4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7281)
inline double ZOSAPI_Interfaces::IObjectWolterSurface::GetCoeffZPower5 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffZPower5(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7282)
inline void ZOSAPI_Interfaces::IObjectWolterSurface::PutCoeffZPower5 ( double pRetVal ) {
    HRESULT _hr = put_CoeffZPower5(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IObjectZernikeSurface wrapper method implementations
//

#pragma implementation_key(7283)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectZernikeSurface::GetRadiusCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RadiusCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7284)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectZernikeSurface::GetConicCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ConicCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7285)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectZernikeSurface::GetMaxApertureCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_MaxApertureCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7286)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectZernikeSurface::GetNormRadCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NormRadCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7287)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectZernikeSurface::GetXDecenterCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XDecenterCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7288)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectZernikeSurface::GetYDecenterCellCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_YDecenterCellCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7289)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectZernikeSurface::GetCoeffRPower2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffRPower2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7290)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectZernikeSurface::GetCoeffRPower4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffRPower4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7291)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectZernikeSurface::GetCoeffRPower6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffRPower6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7292)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectZernikeSurface::GetCoeffRPower8Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffRPower8Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7293)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectZernikeSurface::GetCoeffRPower10Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffRPower10Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7294)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectZernikeSurface::GetCoeffRPower12Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffRPower12Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7295)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectZernikeSurface::GetCoeffRPower14Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffRPower14Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7296)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectZernikeSurface::GetCoeffRPower16Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoeffRPower16Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7297)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectZernikeSurface::GetNumberOfZTermsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberOfZTermsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7298)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IObjectZernikeSurface::GetZICell ( long i ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_GetZICell(i, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7299)
inline double ZOSAPI_Interfaces::IObjectZernikeSurface::GetRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_Radius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7300)
inline void ZOSAPI_Interfaces::IObjectZernikeSurface::PutRadius ( double pRetVal ) {
    HRESULT _hr = put_Radius(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7301)
inline double ZOSAPI_Interfaces::IObjectZernikeSurface::GetConic ( ) {
    double _result = 0;
    HRESULT _hr = get_Conic(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7302)
inline void ZOSAPI_Interfaces::IObjectZernikeSurface::PutConic ( double pRetVal ) {
    HRESULT _hr = put_Conic(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7303)
inline double ZOSAPI_Interfaces::IObjectZernikeSurface::GetMaxAperture ( ) {
    double _result = 0;
    HRESULT _hr = get_MaxAperture(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7304)
inline void ZOSAPI_Interfaces::IObjectZernikeSurface::PutMaxAperture ( double pRetVal ) {
    HRESULT _hr = put_MaxAperture(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7305)
inline double ZOSAPI_Interfaces::IObjectZernikeSurface::GetNormRad ( ) {
    double _result = 0;
    HRESULT _hr = get_NormRad(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7306)
inline void ZOSAPI_Interfaces::IObjectZernikeSurface::PutNormRad ( double pRetVal ) {
    HRESULT _hr = put_NormRad(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7307)
inline double ZOSAPI_Interfaces::IObjectZernikeSurface::GetXDecenter ( ) {
    double _result = 0;
    HRESULT _hr = get_XDecenter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7308)
inline void ZOSAPI_Interfaces::IObjectZernikeSurface::PutXDecenter ( double pRetVal ) {
    HRESULT _hr = put_XDecenter(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7309)
inline double ZOSAPI_Interfaces::IObjectZernikeSurface::GetYDecenter ( ) {
    double _result = 0;
    HRESULT _hr = get_YDecenter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7310)
inline void ZOSAPI_Interfaces::IObjectZernikeSurface::PutYDecenter ( double pRetVal ) {
    HRESULT _hr = put_YDecenter(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7311)
inline double ZOSAPI_Interfaces::IObjectZernikeSurface::GetCoeffRPower2 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffRPower2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7312)
inline void ZOSAPI_Interfaces::IObjectZernikeSurface::PutCoeffRPower2 ( double pRetVal ) {
    HRESULT _hr = put_CoeffRPower2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7313)
inline double ZOSAPI_Interfaces::IObjectZernikeSurface::GetCoeffRPower4 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffRPower4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7314)
inline void ZOSAPI_Interfaces::IObjectZernikeSurface::PutCoeffRPower4 ( double pRetVal ) {
    HRESULT _hr = put_CoeffRPower4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7315)
inline double ZOSAPI_Interfaces::IObjectZernikeSurface::GetCoeffRPower6 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffRPower6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7316)
inline void ZOSAPI_Interfaces::IObjectZernikeSurface::PutCoeffRPower6 ( double pRetVal ) {
    HRESULT _hr = put_CoeffRPower6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7317)
inline double ZOSAPI_Interfaces::IObjectZernikeSurface::GetCoeffRPower8 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffRPower8(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7318)
inline void ZOSAPI_Interfaces::IObjectZernikeSurface::PutCoeffRPower8 ( double pRetVal ) {
    HRESULT _hr = put_CoeffRPower8(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7319)
inline double ZOSAPI_Interfaces::IObjectZernikeSurface::GetCoeffRPower10 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffRPower10(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7320)
inline void ZOSAPI_Interfaces::IObjectZernikeSurface::PutCoeffRPower10 ( double pRetVal ) {
    HRESULT _hr = put_CoeffRPower10(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7321)
inline double ZOSAPI_Interfaces::IObjectZernikeSurface::GetCoeffRPower12 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffRPower12(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7322)
inline void ZOSAPI_Interfaces::IObjectZernikeSurface::PutCoeffRPower12 ( double pRetVal ) {
    HRESULT _hr = put_CoeffRPower12(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7323)
inline double ZOSAPI_Interfaces::IObjectZernikeSurface::GetCoeffRPower14 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffRPower14(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7324)
inline void ZOSAPI_Interfaces::IObjectZernikeSurface::PutCoeffRPower14 ( double pRetVal ) {
    HRESULT _hr = put_CoeffRPower14(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7325)
inline double ZOSAPI_Interfaces::IObjectZernikeSurface::GetCoeffRPower16 ( ) {
    double _result = 0;
    HRESULT _hr = get_CoeffRPower16(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7326)
inline void ZOSAPI_Interfaces::IObjectZernikeSurface::PutCoeffRPower16 ( double pRetVal ) {
    HRESULT _hr = put_CoeffRPower16(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7327)
inline long ZOSAPI_Interfaces::IObjectZernikeSurface::GetNumberOfZTerms ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfZTerms(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7328)
inline void ZOSAPI_Interfaces::IObjectZernikeSurface::PutNumberOfZTerms ( long pRetVal ) {
    HRESULT _hr = put_NumberOfZTerms(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7329)
inline double ZOSAPI_Interfaces::IObjectZernikeSurface::GetFrontTerm ( long i ) {
    double _result = 0;
    HRESULT _hr = raw_GetFrontTerm(i, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7330)
inline HRESULT ZOSAPI_Interfaces::IObjectZernikeSurface::SetFrontTerm ( long i, double Value ) {
    HRESULT _hr = raw_SetFrontTerm(i, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISurfaceXYPolynomial wrapper method implementations
//

#pragma implementation_key(7331)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetNumberOfTermsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberOfTermsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7332)
inline long ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetNumberOfTerms ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfTerms(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7333)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutNumberOfTerms ( long pRetVal ) {
    HRESULT _hr = put_NumberOfTerms(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7334)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX1Y0Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X1Y0Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7335)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX0Y1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X0Y1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7336)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX2Y0Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X2Y0Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7337)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX1Y1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X1Y1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7338)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX0Y2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X0Y2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7339)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX3Y0Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X3Y0Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7340)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX2Y1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X2Y1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7341)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX1Y2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X1Y2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7342)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX0Y3Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X0Y3Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7343)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX4Y0Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X4Y0Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7344)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX3Y1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X3Y1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7345)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX2Y2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X2Y2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7346)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX1Y3Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X1Y3Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7347)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX0Y4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X0Y4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7348)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX5Y0Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X5Y0Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7349)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX4Y1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X4Y1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7350)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX3Y2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X3Y2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7351)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX2Y3Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X2Y3Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7352)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX1Y4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X1Y4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7353)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX0Y5Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X0Y5Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7354)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX6Y0Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X6Y0Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7355)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX5Y1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X5Y1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7356)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX4Y2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X4Y2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7357)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX3Y3Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X3Y3Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7358)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX2Y4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X2Y4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7359)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX1Y5Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X1Y5Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7360)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX0Y6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X0Y6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7361)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX7Y0Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X7Y0Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7362)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX6Y1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X6Y1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7363)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX5Y2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X5Y2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7364)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX4Y3Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X4Y3Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7365)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX3Y4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X3Y4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7366)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX2Y5Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X2Y5Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7367)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX1Y6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X1Y6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7368)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX0Y7Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X0Y7Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7369)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX8Y0Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X8Y0Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7370)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX7Y1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X7Y1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7371)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX6Y2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X6Y2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7372)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX5Y3Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X5Y3Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7373)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX4Y4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X4Y4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7374)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX3Y5Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X3Y5Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7375)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX2Y6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X2Y6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7376)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX1Y7Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X1Y7Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7377)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX0Y8Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X0Y8Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7378)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX9Y0Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X9Y0Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7379)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX8Y1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X8Y1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7380)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX7Y2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X7Y2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7381)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX6Y3Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X6Y3Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7382)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX5Y4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X5Y4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7383)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX4Y5Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X4Y5Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7384)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX3Y6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X3Y6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7385)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX2Y7Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X2Y7Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7386)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX1Y8Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X1Y8Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7387)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX0Y9Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X0Y9Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7388)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX10Y0Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X10Y0Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7389)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX9Y1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X9Y1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7390)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX8Y2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X8Y2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7391)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX7Y3Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X7Y3Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7392)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX6Y4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X6Y4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7393)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX5Y5Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X5Y5Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7394)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX4Y6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X4Y6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7395)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX3Y7Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X3Y7Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7396)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX2Y8Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X2Y8Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7397)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX1Y9Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X1Y9Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7398)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX0Y10Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X0Y10Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7399)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX11Y0Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X11Y0Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7400)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX10Y1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X10Y1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7401)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX9Y2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X9Y2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7402)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX8Y3Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X8Y3Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7403)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX7Y4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X7Y4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7404)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX6Y5Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X6Y5Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7405)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX5Y6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X5Y6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7406)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX4Y7Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X4Y7Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7407)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX3Y8Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X3Y8Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7408)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX2Y9Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X2Y9Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7409)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX1Y10Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X1Y10Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7410)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX0Y11Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X0Y11Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7411)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX12Y0Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X12Y0Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7412)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX11Y1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X11Y1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7413)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX10Y2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X10Y2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7414)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX9Y3Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X9Y3Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7415)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX8Y4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X8Y4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7416)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX7Y5Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X7Y5Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7417)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX6Y6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X6Y6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7418)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX5Y7Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X5Y7Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7419)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX4Y8Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X4Y8Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7420)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX3Y9Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X3Y9Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7421)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX2Y10Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X2Y10Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7422)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX1Y11Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X1Y11Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7423)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX0Y12Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X0Y12Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7424)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX13Y0Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X13Y0Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7425)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX12Y1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X12Y1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7426)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX11Y2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X11Y2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7427)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX10Y3Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X10Y3Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7428)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX9Y4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X9Y4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7429)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX8Y5Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X8Y5Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7430)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX7Y6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X7Y6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7431)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX6Y7Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X6Y7Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7432)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX5Y8Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X5Y8Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7433)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX4Y9Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X4Y9Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7434)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX3Y10Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X3Y10Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7435)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX2Y11Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X2Y11Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7436)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX1Y12Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X1Y12Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7437)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX0Y13Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X0Y13Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7438)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX14Y0Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X14Y0Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7439)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX13Y1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X13Y1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7440)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX12Y2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X12Y2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7441)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX11Y3Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X11Y3Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7442)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX10Y4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X10Y4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7443)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX9Y5Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X9Y5Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7444)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX8Y6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X8Y6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7445)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX7Y7Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X7Y7Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7446)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX6Y8Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X6Y8Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7447)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX5Y9Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X5Y9Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7448)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX4Y10Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X4Y10Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7449)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX3Y11Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X3Y11Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7450)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX2Y12Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X2Y12Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7451)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX1Y13Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X1Y13Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7452)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX0Y14Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X0Y14Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7453)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX15Y0Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X15Y0Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7454)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX14Y1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X14Y1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7455)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX13Y2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X13Y2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7456)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX12Y3Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X12Y3Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7457)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX11Y4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X11Y4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7458)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX10Y5Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X10Y5Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7459)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX9Y6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X9Y6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7460)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX8Y7Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X8Y7Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7461)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX7Y8Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X7Y8Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7462)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX6Y9Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X6Y9Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7463)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX5Y10Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X5Y10Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7464)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX4Y11Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X4Y11Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7465)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX3Y12Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X3Y12Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7466)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX2Y13Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X2Y13Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7467)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX1Y14Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X1Y14Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7468)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX0Y15Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X0Y15Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7469)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX16Y0Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X16Y0Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7470)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX15Y1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X15Y1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7471)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX14Y2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X14Y2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7472)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX13Y3Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X13Y3Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7473)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX12Y4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X12Y4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7474)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX11Y5Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X11Y5Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7475)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX10Y6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X10Y6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7476)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX9Y7Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X9Y7Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7477)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX8Y8Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X8Y8Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7478)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX7Y9Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X7Y9Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7479)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX6Y10Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X6Y10Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7480)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX5Y11Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X5Y11Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7481)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX4Y12Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X4Y12Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7482)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX3Y13Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X3Y13Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7483)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX2Y14Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X2Y14Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7484)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX1Y15Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X1Y15Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7485)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX0Y16Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X0Y16Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7486)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX17Y0Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X17Y0Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7487)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX16Y1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X16Y1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7488)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX15Y2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X15Y2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7489)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX14Y3Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X14Y3Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7490)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX13Y4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X13Y4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7491)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX12Y5Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X12Y5Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7492)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX11Y6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X11Y6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7493)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX10Y7Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X10Y7Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7494)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX9Y8Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X9Y8Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7495)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX8Y9Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X8Y9Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7496)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX7Y10Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X7Y10Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7497)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX6Y11Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X6Y11Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7498)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX5Y12Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X5Y12Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7499)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX4Y13Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X4Y13Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7500)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX3Y14Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X3Y14Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7501)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX2Y15Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X2Y15Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7502)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX1Y16Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X1Y16Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7503)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX0Y17Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X0Y17Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7504)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX18Y0Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X18Y0Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7505)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX17Y1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X17Y1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7506)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX16Y2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X16Y2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7507)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX15Y3Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X15Y3Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7508)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX14Y4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X14Y4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7509)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX13Y5Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X13Y5Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7510)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX12Y6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X12Y6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7511)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX11Y7Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X11Y7Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7512)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX10Y8Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X10Y8Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7513)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX9Y9Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X9Y9Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7514)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX8Y10Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X8Y10Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7515)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX7Y11Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X7Y11Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7516)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX6Y12Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X6Y12Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7517)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX5Y13Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X5Y13Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7518)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX4Y14Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X4Y14Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7519)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX3Y15Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X3Y15Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7520)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX2Y16Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X2Y16Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7521)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX1Y17Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X1Y17Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7522)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX0Y18Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X0Y18Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7523)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX19Y0Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X19Y0Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7524)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX18Y1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X18Y1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7525)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX17Y2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X17Y2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7526)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX16Y3Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X16Y3Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7527)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX15Y4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X15Y4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7528)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX14Y5Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X14Y5Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7529)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX13Y6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X13Y6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7530)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX12Y7Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X12Y7Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7531)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX11Y8Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X11Y8Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7532)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX10Y9Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X10Y9Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7533)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX9Y10Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X9Y10Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7534)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX8Y11Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X8Y11Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7535)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX7Y12Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X7Y12Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7536)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX6Y13Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X6Y13Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7537)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX5Y14Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X5Y14Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7538)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX4Y15Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X4Y15Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7539)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX3Y16Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X3Y16Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7540)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX2Y17Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X2Y17Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7541)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX1Y18Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X1Y18Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7542)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX0Y19Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X0Y19Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7543)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX20Y0Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X20Y0Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7544)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX19Y1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X19Y1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7545)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX18Y2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X18Y2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7546)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX17Y3Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X17Y3Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7547)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX16Y4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X16Y4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7548)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX15Y5Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X15Y5Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7549)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX14Y6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X14Y6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7550)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX13Y7Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X13Y7Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7551)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX12Y8Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X12Y8Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7552)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX11Y9Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X11Y9Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7553)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX10Y10Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X10Y10Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7554)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX9Y11Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X9Y11Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7555)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX8Y12Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X8Y12Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7556)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX7Y13Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X7Y13Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7557)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX6Y14Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X6Y14Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7558)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX5Y15Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X5Y15Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7559)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX4Y16Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X4Y16Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7560)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX3Y17Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X3Y17Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7561)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX2Y18Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X2Y18Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7562)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX1Y19Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X1Y19Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7563)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX0Y20Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X0Y20Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7564)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX21Y0Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X21Y0Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7565)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX20Y1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X20Y1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7566)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX19Y2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X19Y2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7567)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX18Y3Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X18Y3Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7568)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX17Y4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X17Y4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7569)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX16Y5Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X16Y5Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7570)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX15Y6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X15Y6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7571)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX14Y7Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X14Y7Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7572)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX13Y8Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X13Y8Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7573)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX12Y9Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X12Y9Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7574)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX11Y10Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X11Y10Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7575)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX10Y11Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X10Y11Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7576)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX9Y12Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X9Y12Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7577)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX8Y13Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X8Y13Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7578)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX7Y14Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X7Y14Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7579)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX6Y15Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X6Y15Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7580)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX5Y16Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X5Y16Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7581)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX4Y17Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X4Y17Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7582)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX3Y18Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X3Y18Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7583)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX2Y19Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X2Y19Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(7584)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX1Y0 ( ) {
    double _result = 0;
    HRESULT _hr = get_X1Y0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7585)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX1Y0 ( double pRetVal ) {
    HRESULT _hr = put_X1Y0(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7586)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX0Y1 ( ) {
    double _result = 0;
    HRESULT _hr = get_X0Y1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7587)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX0Y1 ( double pRetVal ) {
    HRESULT _hr = put_X0Y1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7588)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX2Y0 ( ) {
    double _result = 0;
    HRESULT _hr = get_X2Y0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7589)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX2Y0 ( double pRetVal ) {
    HRESULT _hr = put_X2Y0(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7590)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX1Y1 ( ) {
    double _result = 0;
    HRESULT _hr = get_X1Y1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7591)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX1Y1 ( double pRetVal ) {
    HRESULT _hr = put_X1Y1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7592)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX0Y2 ( ) {
    double _result = 0;
    HRESULT _hr = get_X0Y2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7593)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX0Y2 ( double pRetVal ) {
    HRESULT _hr = put_X0Y2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7594)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX3Y0 ( ) {
    double _result = 0;
    HRESULT _hr = get_X3Y0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7595)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX3Y0 ( double pRetVal ) {
    HRESULT _hr = put_X3Y0(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7596)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX2Y1 ( ) {
    double _result = 0;
    HRESULT _hr = get_X2Y1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7597)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX2Y1 ( double pRetVal ) {
    HRESULT _hr = put_X2Y1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7598)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX1Y2 ( ) {
    double _result = 0;
    HRESULT _hr = get_X1Y2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7599)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX1Y2 ( double pRetVal ) {
    HRESULT _hr = put_X1Y2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7600)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX0Y3 ( ) {
    double _result = 0;
    HRESULT _hr = get_X0Y3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7601)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX0Y3 ( double pRetVal ) {
    HRESULT _hr = put_X0Y3(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7602)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX4Y0 ( ) {
    double _result = 0;
    HRESULT _hr = get_X4Y0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7603)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX4Y0 ( double pRetVal ) {
    HRESULT _hr = put_X4Y0(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7604)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX3Y1 ( ) {
    double _result = 0;
    HRESULT _hr = get_X3Y1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7605)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX3Y1 ( double pRetVal ) {
    HRESULT _hr = put_X3Y1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7606)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX2Y2 ( ) {
    double _result = 0;
    HRESULT _hr = get_X2Y2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7607)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX2Y2 ( double pRetVal ) {
    HRESULT _hr = put_X2Y2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7608)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX1Y3 ( ) {
    double _result = 0;
    HRESULT _hr = get_X1Y3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7609)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX1Y3 ( double pRetVal ) {
    HRESULT _hr = put_X1Y3(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7610)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX0Y4 ( ) {
    double _result = 0;
    HRESULT _hr = get_X0Y4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7611)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX0Y4 ( double pRetVal ) {
    HRESULT _hr = put_X0Y4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7612)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX5Y0 ( ) {
    double _result = 0;
    HRESULT _hr = get_X5Y0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7613)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX5Y0 ( double pRetVal ) {
    HRESULT _hr = put_X5Y0(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7614)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX4Y1 ( ) {
    double _result = 0;
    HRESULT _hr = get_X4Y1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7615)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX4Y1 ( double pRetVal ) {
    HRESULT _hr = put_X4Y1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7616)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX3Y2 ( ) {
    double _result = 0;
    HRESULT _hr = get_X3Y2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7617)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX3Y2 ( double pRetVal ) {
    HRESULT _hr = put_X3Y2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7618)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX2Y3 ( ) {
    double _result = 0;
    HRESULT _hr = get_X2Y3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7619)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX2Y3 ( double pRetVal ) {
    HRESULT _hr = put_X2Y3(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7620)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX1Y4 ( ) {
    double _result = 0;
    HRESULT _hr = get_X1Y4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7621)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX1Y4 ( double pRetVal ) {
    HRESULT _hr = put_X1Y4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7622)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX0Y5 ( ) {
    double _result = 0;
    HRESULT _hr = get_X0Y5(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7623)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX0Y5 ( double pRetVal ) {
    HRESULT _hr = put_X0Y5(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7624)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX6Y0 ( ) {
    double _result = 0;
    HRESULT _hr = get_X6Y0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7625)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX6Y0 ( double pRetVal ) {
    HRESULT _hr = put_X6Y0(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7626)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX5Y1 ( ) {
    double _result = 0;
    HRESULT _hr = get_X5Y1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7627)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX5Y1 ( double pRetVal ) {
    HRESULT _hr = put_X5Y1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7628)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX4Y2 ( ) {
    double _result = 0;
    HRESULT _hr = get_X4Y2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7629)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX4Y2 ( double pRetVal ) {
    HRESULT _hr = put_X4Y2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7630)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX3Y3 ( ) {
    double _result = 0;
    HRESULT _hr = get_X3Y3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7631)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX3Y3 ( double pRetVal ) {
    HRESULT _hr = put_X3Y3(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7632)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX2Y4 ( ) {
    double _result = 0;
    HRESULT _hr = get_X2Y4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7633)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX2Y4 ( double pRetVal ) {
    HRESULT _hr = put_X2Y4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7634)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX1Y5 ( ) {
    double _result = 0;
    HRESULT _hr = get_X1Y5(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7635)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX1Y5 ( double pRetVal ) {
    HRESULT _hr = put_X1Y5(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7636)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX0Y6 ( ) {
    double _result = 0;
    HRESULT _hr = get_X0Y6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7637)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX0Y6 ( double pRetVal ) {
    HRESULT _hr = put_X0Y6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7638)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX7Y0 ( ) {
    double _result = 0;
    HRESULT _hr = get_X7Y0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7639)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX7Y0 ( double pRetVal ) {
    HRESULT _hr = put_X7Y0(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7640)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX6Y1 ( ) {
    double _result = 0;
    HRESULT _hr = get_X6Y1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7641)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX6Y1 ( double pRetVal ) {
    HRESULT _hr = put_X6Y1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7642)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX5Y2 ( ) {
    double _result = 0;
    HRESULT _hr = get_X5Y2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7643)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX5Y2 ( double pRetVal ) {
    HRESULT _hr = put_X5Y2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7644)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX4Y3 ( ) {
    double _result = 0;
    HRESULT _hr = get_X4Y3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7645)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX4Y3 ( double pRetVal ) {
    HRESULT _hr = put_X4Y3(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7646)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX3Y4 ( ) {
    double _result = 0;
    HRESULT _hr = get_X3Y4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7647)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX3Y4 ( double pRetVal ) {
    HRESULT _hr = put_X3Y4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7648)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX2Y5 ( ) {
    double _result = 0;
    HRESULT _hr = get_X2Y5(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7649)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX2Y5 ( double pRetVal ) {
    HRESULT _hr = put_X2Y5(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7650)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX1Y6 ( ) {
    double _result = 0;
    HRESULT _hr = get_X1Y6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7651)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX1Y6 ( double pRetVal ) {
    HRESULT _hr = put_X1Y6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7652)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX0Y7 ( ) {
    double _result = 0;
    HRESULT _hr = get_X0Y7(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7653)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX0Y7 ( double pRetVal ) {
    HRESULT _hr = put_X0Y7(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7654)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX8Y0 ( ) {
    double _result = 0;
    HRESULT _hr = get_X8Y0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7655)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX8Y0 ( double pRetVal ) {
    HRESULT _hr = put_X8Y0(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7656)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX7Y1 ( ) {
    double _result = 0;
    HRESULT _hr = get_X7Y1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7657)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX7Y1 ( double pRetVal ) {
    HRESULT _hr = put_X7Y1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7658)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX6Y2 ( ) {
    double _result = 0;
    HRESULT _hr = get_X6Y2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7659)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX6Y2 ( double pRetVal ) {
    HRESULT _hr = put_X6Y2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7660)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX5Y3 ( ) {
    double _result = 0;
    HRESULT _hr = get_X5Y3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7661)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX5Y3 ( double pRetVal ) {
    HRESULT _hr = put_X5Y3(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7662)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX4Y4 ( ) {
    double _result = 0;
    HRESULT _hr = get_X4Y4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7663)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX4Y4 ( double pRetVal ) {
    HRESULT _hr = put_X4Y4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7664)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX3Y5 ( ) {
    double _result = 0;
    HRESULT _hr = get_X3Y5(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7665)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX3Y5 ( double pRetVal ) {
    HRESULT _hr = put_X3Y5(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7666)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX2Y6 ( ) {
    double _result = 0;
    HRESULT _hr = get_X2Y6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7667)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX2Y6 ( double pRetVal ) {
    HRESULT _hr = put_X2Y6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7668)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX1Y7 ( ) {
    double _result = 0;
    HRESULT _hr = get_X1Y7(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7669)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX1Y7 ( double pRetVal ) {
    HRESULT _hr = put_X1Y7(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7670)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX0Y8 ( ) {
    double _result = 0;
    HRESULT _hr = get_X0Y8(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7671)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX0Y8 ( double pRetVal ) {
    HRESULT _hr = put_X0Y8(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7672)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX9Y0 ( ) {
    double _result = 0;
    HRESULT _hr = get_X9Y0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7673)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX9Y0 ( double pRetVal ) {
    HRESULT _hr = put_X9Y0(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7674)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX8Y1 ( ) {
    double _result = 0;
    HRESULT _hr = get_X8Y1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7675)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX8Y1 ( double pRetVal ) {
    HRESULT _hr = put_X8Y1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7676)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX7Y2 ( ) {
    double _result = 0;
    HRESULT _hr = get_X7Y2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7677)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX7Y2 ( double pRetVal ) {
    HRESULT _hr = put_X7Y2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7678)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX6Y3 ( ) {
    double _result = 0;
    HRESULT _hr = get_X6Y3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7679)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX6Y3 ( double pRetVal ) {
    HRESULT _hr = put_X6Y3(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7680)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX5Y4 ( ) {
    double _result = 0;
    HRESULT _hr = get_X5Y4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7681)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX5Y4 ( double pRetVal ) {
    HRESULT _hr = put_X5Y4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7682)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX4Y5 ( ) {
    double _result = 0;
    HRESULT _hr = get_X4Y5(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7683)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX4Y5 ( double pRetVal ) {
    HRESULT _hr = put_X4Y5(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7684)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX3Y6 ( ) {
    double _result = 0;
    HRESULT _hr = get_X3Y6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7685)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX3Y6 ( double pRetVal ) {
    HRESULT _hr = put_X3Y6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7686)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX2Y7 ( ) {
    double _result = 0;
    HRESULT _hr = get_X2Y7(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7687)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX2Y7 ( double pRetVal ) {
    HRESULT _hr = put_X2Y7(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7688)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX1Y8 ( ) {
    double _result = 0;
    HRESULT _hr = get_X1Y8(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7689)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX1Y8 ( double pRetVal ) {
    HRESULT _hr = put_X1Y8(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7690)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX0Y9 ( ) {
    double _result = 0;
    HRESULT _hr = get_X0Y9(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7691)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX0Y9 ( double pRetVal ) {
    HRESULT _hr = put_X0Y9(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7692)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX10Y0 ( ) {
    double _result = 0;
    HRESULT _hr = get_X10Y0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7693)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX10Y0 ( double pRetVal ) {
    HRESULT _hr = put_X10Y0(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7694)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX9Y1 ( ) {
    double _result = 0;
    HRESULT _hr = get_X9Y1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7695)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX9Y1 ( double pRetVal ) {
    HRESULT _hr = put_X9Y1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7696)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX8Y2 ( ) {
    double _result = 0;
    HRESULT _hr = get_X8Y2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7697)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX8Y2 ( double pRetVal ) {
    HRESULT _hr = put_X8Y2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7698)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX7Y3 ( ) {
    double _result = 0;
    HRESULT _hr = get_X7Y3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7699)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX7Y3 ( double pRetVal ) {
    HRESULT _hr = put_X7Y3(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7700)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX6Y4 ( ) {
    double _result = 0;
    HRESULT _hr = get_X6Y4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7701)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX6Y4 ( double pRetVal ) {
    HRESULT _hr = put_X6Y4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7702)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX5Y5 ( ) {
    double _result = 0;
    HRESULT _hr = get_X5Y5(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7703)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX5Y5 ( double pRetVal ) {
    HRESULT _hr = put_X5Y5(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7704)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX4Y6 ( ) {
    double _result = 0;
    HRESULT _hr = get_X4Y6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7705)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX4Y6 ( double pRetVal ) {
    HRESULT _hr = put_X4Y6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7706)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX3Y7 ( ) {
    double _result = 0;
    HRESULT _hr = get_X3Y7(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7707)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX3Y7 ( double pRetVal ) {
    HRESULT _hr = put_X3Y7(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7708)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX2Y8 ( ) {
    double _result = 0;
    HRESULT _hr = get_X2Y8(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7709)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX2Y8 ( double pRetVal ) {
    HRESULT _hr = put_X2Y8(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7710)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX1Y9 ( ) {
    double _result = 0;
    HRESULT _hr = get_X1Y9(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7711)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX1Y9 ( double pRetVal ) {
    HRESULT _hr = put_X1Y9(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7712)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX0Y10 ( ) {
    double _result = 0;
    HRESULT _hr = get_X0Y10(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7713)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX0Y10 ( double pRetVal ) {
    HRESULT _hr = put_X0Y10(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7714)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX11Y0 ( ) {
    double _result = 0;
    HRESULT _hr = get_X11Y0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7715)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX11Y0 ( double pRetVal ) {
    HRESULT _hr = put_X11Y0(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7716)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX10Y1 ( ) {
    double _result = 0;
    HRESULT _hr = get_X10Y1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7717)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX10Y1 ( double pRetVal ) {
    HRESULT _hr = put_X10Y1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7718)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX9Y2 ( ) {
    double _result = 0;
    HRESULT _hr = get_X9Y2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7719)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX9Y2 ( double pRetVal ) {
    HRESULT _hr = put_X9Y2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7720)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX8Y3 ( ) {
    double _result = 0;
    HRESULT _hr = get_X8Y3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7721)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX8Y3 ( double pRetVal ) {
    HRESULT _hr = put_X8Y3(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7722)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX7Y4 ( ) {
    double _result = 0;
    HRESULT _hr = get_X7Y4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7723)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX7Y4 ( double pRetVal ) {
    HRESULT _hr = put_X7Y4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7724)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX6Y5 ( ) {
    double _result = 0;
    HRESULT _hr = get_X6Y5(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7725)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX6Y5 ( double pRetVal ) {
    HRESULT _hr = put_X6Y5(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7726)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX5Y6 ( ) {
    double _result = 0;
    HRESULT _hr = get_X5Y6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7727)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX5Y6 ( double pRetVal ) {
    HRESULT _hr = put_X5Y6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7728)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX4Y7 ( ) {
    double _result = 0;
    HRESULT _hr = get_X4Y7(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7729)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX4Y7 ( double pRetVal ) {
    HRESULT _hr = put_X4Y7(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7730)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX3Y8 ( ) {
    double _result = 0;
    HRESULT _hr = get_X3Y8(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7731)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX3Y8 ( double pRetVal ) {
    HRESULT _hr = put_X3Y8(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7732)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX2Y9 ( ) {
    double _result = 0;
    HRESULT _hr = get_X2Y9(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7733)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX2Y9 ( double pRetVal ) {
    HRESULT _hr = put_X2Y9(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7734)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX1Y10 ( ) {
    double _result = 0;
    HRESULT _hr = get_X1Y10(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7735)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX1Y10 ( double pRetVal ) {
    HRESULT _hr = put_X1Y10(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7736)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX0Y11 ( ) {
    double _result = 0;
    HRESULT _hr = get_X0Y11(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7737)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX0Y11 ( double pRetVal ) {
    HRESULT _hr = put_X0Y11(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7738)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX12Y0 ( ) {
    double _result = 0;
    HRESULT _hr = get_X12Y0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7739)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX12Y0 ( double pRetVal ) {
    HRESULT _hr = put_X12Y0(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7740)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX11Y1 ( ) {
    double _result = 0;
    HRESULT _hr = get_X11Y1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7741)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX11Y1 ( double pRetVal ) {
    HRESULT _hr = put_X11Y1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7742)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX10Y2 ( ) {
    double _result = 0;
    HRESULT _hr = get_X10Y2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7743)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX10Y2 ( double pRetVal ) {
    HRESULT _hr = put_X10Y2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7744)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX9Y3 ( ) {
    double _result = 0;
    HRESULT _hr = get_X9Y3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7745)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX9Y3 ( double pRetVal ) {
    HRESULT _hr = put_X9Y3(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7746)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX8Y4 ( ) {
    double _result = 0;
    HRESULT _hr = get_X8Y4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7747)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX8Y4 ( double pRetVal ) {
    HRESULT _hr = put_X8Y4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7748)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX7Y5 ( ) {
    double _result = 0;
    HRESULT _hr = get_X7Y5(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7749)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX7Y5 ( double pRetVal ) {
    HRESULT _hr = put_X7Y5(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7750)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX6Y6 ( ) {
    double _result = 0;
    HRESULT _hr = get_X6Y6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7751)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX6Y6 ( double pRetVal ) {
    HRESULT _hr = put_X6Y6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7752)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX5Y7 ( ) {
    double _result = 0;
    HRESULT _hr = get_X5Y7(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7753)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX5Y7 ( double pRetVal ) {
    HRESULT _hr = put_X5Y7(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7754)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX4Y8 ( ) {
    double _result = 0;
    HRESULT _hr = get_X4Y8(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7755)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX4Y8 ( double pRetVal ) {
    HRESULT _hr = put_X4Y8(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7756)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX3Y9 ( ) {
    double _result = 0;
    HRESULT _hr = get_X3Y9(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7757)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX3Y9 ( double pRetVal ) {
    HRESULT _hr = put_X3Y9(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7758)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX2Y10 ( ) {
    double _result = 0;
    HRESULT _hr = get_X2Y10(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7759)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX2Y10 ( double pRetVal ) {
    HRESULT _hr = put_X2Y10(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7760)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX1Y11 ( ) {
    double _result = 0;
    HRESULT _hr = get_X1Y11(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7761)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX1Y11 ( double pRetVal ) {
    HRESULT _hr = put_X1Y11(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7762)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX0Y12 ( ) {
    double _result = 0;
    HRESULT _hr = get_X0Y12(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7763)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX0Y12 ( double pRetVal ) {
    HRESULT _hr = put_X0Y12(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7764)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX13Y0 ( ) {
    double _result = 0;
    HRESULT _hr = get_X13Y0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7765)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX13Y0 ( double pRetVal ) {
    HRESULT _hr = put_X13Y0(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7766)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX12Y1 ( ) {
    double _result = 0;
    HRESULT _hr = get_X12Y1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7767)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX12Y1 ( double pRetVal ) {
    HRESULT _hr = put_X12Y1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7768)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX11Y2 ( ) {
    double _result = 0;
    HRESULT _hr = get_X11Y2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7769)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX11Y2 ( double pRetVal ) {
    HRESULT _hr = put_X11Y2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7770)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX10Y3 ( ) {
    double _result = 0;
    HRESULT _hr = get_X10Y3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7771)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX10Y3 ( double pRetVal ) {
    HRESULT _hr = put_X10Y3(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7772)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX9Y4 ( ) {
    double _result = 0;
    HRESULT _hr = get_X9Y4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7773)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX9Y4 ( double pRetVal ) {
    HRESULT _hr = put_X9Y4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7774)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX8Y5 ( ) {
    double _result = 0;
    HRESULT _hr = get_X8Y5(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7775)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX8Y5 ( double pRetVal ) {
    HRESULT _hr = put_X8Y5(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7776)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX7Y6 ( ) {
    double _result = 0;
    HRESULT _hr = get_X7Y6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7777)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX7Y6 ( double pRetVal ) {
    HRESULT _hr = put_X7Y6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7778)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX6Y7 ( ) {
    double _result = 0;
    HRESULT _hr = get_X6Y7(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7779)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX6Y7 ( double pRetVal ) {
    HRESULT _hr = put_X6Y7(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7780)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX5Y8 ( ) {
    double _result = 0;
    HRESULT _hr = get_X5Y8(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7781)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX5Y8 ( double pRetVal ) {
    HRESULT _hr = put_X5Y8(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7782)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX4Y9 ( ) {
    double _result = 0;
    HRESULT _hr = get_X4Y9(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7783)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX4Y9 ( double pRetVal ) {
    HRESULT _hr = put_X4Y9(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7784)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX3Y10 ( ) {
    double _result = 0;
    HRESULT _hr = get_X3Y10(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7785)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX3Y10 ( double pRetVal ) {
    HRESULT _hr = put_X3Y10(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7786)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX2Y11 ( ) {
    double _result = 0;
    HRESULT _hr = get_X2Y11(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7787)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX2Y11 ( double pRetVal ) {
    HRESULT _hr = put_X2Y11(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7788)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX1Y12 ( ) {
    double _result = 0;
    HRESULT _hr = get_X1Y12(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7789)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX1Y12 ( double pRetVal ) {
    HRESULT _hr = put_X1Y12(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7790)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX0Y13 ( ) {
    double _result = 0;
    HRESULT _hr = get_X0Y13(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7791)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX0Y13 ( double pRetVal ) {
    HRESULT _hr = put_X0Y13(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7792)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX14Y0 ( ) {
    double _result = 0;
    HRESULT _hr = get_X14Y0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7793)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX14Y0 ( double pRetVal ) {
    HRESULT _hr = put_X14Y0(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7794)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX13Y1 ( ) {
    double _result = 0;
    HRESULT _hr = get_X13Y1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7795)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX13Y1 ( double pRetVal ) {
    HRESULT _hr = put_X13Y1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7796)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX12Y2 ( ) {
    double _result = 0;
    HRESULT _hr = get_X12Y2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7797)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX12Y2 ( double pRetVal ) {
    HRESULT _hr = put_X12Y2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7798)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX11Y3 ( ) {
    double _result = 0;
    HRESULT _hr = get_X11Y3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7799)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX11Y3 ( double pRetVal ) {
    HRESULT _hr = put_X11Y3(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7800)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX10Y4 ( ) {
    double _result = 0;
    HRESULT _hr = get_X10Y4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7801)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX10Y4 ( double pRetVal ) {
    HRESULT _hr = put_X10Y4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7802)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX9Y5 ( ) {
    double _result = 0;
    HRESULT _hr = get_X9Y5(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7803)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX9Y5 ( double pRetVal ) {
    HRESULT _hr = put_X9Y5(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7804)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX8Y6 ( ) {
    double _result = 0;
    HRESULT _hr = get_X8Y6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7805)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX8Y6 ( double pRetVal ) {
    HRESULT _hr = put_X8Y6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7806)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX7Y7 ( ) {
    double _result = 0;
    HRESULT _hr = get_X7Y7(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7807)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX7Y7 ( double pRetVal ) {
    HRESULT _hr = put_X7Y7(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7808)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX6Y8 ( ) {
    double _result = 0;
    HRESULT _hr = get_X6Y8(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7809)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX6Y8 ( double pRetVal ) {
    HRESULT _hr = put_X6Y8(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7810)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX5Y9 ( ) {
    double _result = 0;
    HRESULT _hr = get_X5Y9(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7811)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX5Y9 ( double pRetVal ) {
    HRESULT _hr = put_X5Y9(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7812)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX4Y10 ( ) {
    double _result = 0;
    HRESULT _hr = get_X4Y10(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7813)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX4Y10 ( double pRetVal ) {
    HRESULT _hr = put_X4Y10(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7814)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX3Y11 ( ) {
    double _result = 0;
    HRESULT _hr = get_X3Y11(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7815)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX3Y11 ( double pRetVal ) {
    HRESULT _hr = put_X3Y11(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7816)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX2Y12 ( ) {
    double _result = 0;
    HRESULT _hr = get_X2Y12(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7817)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX2Y12 ( double pRetVal ) {
    HRESULT _hr = put_X2Y12(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7818)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX1Y13 ( ) {
    double _result = 0;
    HRESULT _hr = get_X1Y13(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7819)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX1Y13 ( double pRetVal ) {
    HRESULT _hr = put_X1Y13(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7820)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX0Y14 ( ) {
    double _result = 0;
    HRESULT _hr = get_X0Y14(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7821)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX0Y14 ( double pRetVal ) {
    HRESULT _hr = put_X0Y14(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7822)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX15Y0 ( ) {
    double _result = 0;
    HRESULT _hr = get_X15Y0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7823)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX15Y0 ( double pRetVal ) {
    HRESULT _hr = put_X15Y0(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7824)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX14Y1 ( ) {
    double _result = 0;
    HRESULT _hr = get_X14Y1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7825)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX14Y1 ( double pRetVal ) {
    HRESULT _hr = put_X14Y1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7826)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX13Y2 ( ) {
    double _result = 0;
    HRESULT _hr = get_X13Y2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7827)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX13Y2 ( double pRetVal ) {
    HRESULT _hr = put_X13Y2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7828)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX12Y3 ( ) {
    double _result = 0;
    HRESULT _hr = get_X12Y3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7829)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX12Y3 ( double pRetVal ) {
    HRESULT _hr = put_X12Y3(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7830)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX11Y4 ( ) {
    double _result = 0;
    HRESULT _hr = get_X11Y4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7831)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX11Y4 ( double pRetVal ) {
    HRESULT _hr = put_X11Y4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7832)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX10Y5 ( ) {
    double _result = 0;
    HRESULT _hr = get_X10Y5(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7833)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX10Y5 ( double pRetVal ) {
    HRESULT _hr = put_X10Y5(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7834)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX9Y6 ( ) {
    double _result = 0;
    HRESULT _hr = get_X9Y6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7835)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX9Y6 ( double pRetVal ) {
    HRESULT _hr = put_X9Y6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7836)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX8Y7 ( ) {
    double _result = 0;
    HRESULT _hr = get_X8Y7(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7837)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX8Y7 ( double pRetVal ) {
    HRESULT _hr = put_X8Y7(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7838)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX7Y8 ( ) {
    double _result = 0;
    HRESULT _hr = get_X7Y8(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7839)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX7Y8 ( double pRetVal ) {
    HRESULT _hr = put_X7Y8(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7840)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX6Y9 ( ) {
    double _result = 0;
    HRESULT _hr = get_X6Y9(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7841)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX6Y9 ( double pRetVal ) {
    HRESULT _hr = put_X6Y9(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7842)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX5Y10 ( ) {
    double _result = 0;
    HRESULT _hr = get_X5Y10(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7843)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX5Y10 ( double pRetVal ) {
    HRESULT _hr = put_X5Y10(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7844)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX4Y11 ( ) {
    double _result = 0;
    HRESULT _hr = get_X4Y11(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7845)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX4Y11 ( double pRetVal ) {
    HRESULT _hr = put_X4Y11(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7846)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX3Y12 ( ) {
    double _result = 0;
    HRESULT _hr = get_X3Y12(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7847)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX3Y12 ( double pRetVal ) {
    HRESULT _hr = put_X3Y12(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7848)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX2Y13 ( ) {
    double _result = 0;
    HRESULT _hr = get_X2Y13(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7849)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX2Y13 ( double pRetVal ) {
    HRESULT _hr = put_X2Y13(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7850)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX1Y14 ( ) {
    double _result = 0;
    HRESULT _hr = get_X1Y14(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7851)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX1Y14 ( double pRetVal ) {
    HRESULT _hr = put_X1Y14(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7852)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX0Y15 ( ) {
    double _result = 0;
    HRESULT _hr = get_X0Y15(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7853)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX0Y15 ( double pRetVal ) {
    HRESULT _hr = put_X0Y15(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7854)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX16Y0 ( ) {
    double _result = 0;
    HRESULT _hr = get_X16Y0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7855)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX16Y0 ( double pRetVal ) {
    HRESULT _hr = put_X16Y0(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7856)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX15Y1 ( ) {
    double _result = 0;
    HRESULT _hr = get_X15Y1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7857)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX15Y1 ( double pRetVal ) {
    HRESULT _hr = put_X15Y1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7858)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX14Y2 ( ) {
    double _result = 0;
    HRESULT _hr = get_X14Y2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7859)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX14Y2 ( double pRetVal ) {
    HRESULT _hr = put_X14Y2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7860)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX13Y3 ( ) {
    double _result = 0;
    HRESULT _hr = get_X13Y3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7861)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX13Y3 ( double pRetVal ) {
    HRESULT _hr = put_X13Y3(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7862)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX12Y4 ( ) {
    double _result = 0;
    HRESULT _hr = get_X12Y4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7863)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX12Y4 ( double pRetVal ) {
    HRESULT _hr = put_X12Y4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7864)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX11Y5 ( ) {
    double _result = 0;
    HRESULT _hr = get_X11Y5(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7865)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX11Y5 ( double pRetVal ) {
    HRESULT _hr = put_X11Y5(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7866)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX10Y6 ( ) {
    double _result = 0;
    HRESULT _hr = get_X10Y6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7867)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX10Y6 ( double pRetVal ) {
    HRESULT _hr = put_X10Y6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7868)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX9Y7 ( ) {
    double _result = 0;
    HRESULT _hr = get_X9Y7(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7869)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX9Y7 ( double pRetVal ) {
    HRESULT _hr = put_X9Y7(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7870)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX8Y8 ( ) {
    double _result = 0;
    HRESULT _hr = get_X8Y8(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7871)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX8Y8 ( double pRetVal ) {
    HRESULT _hr = put_X8Y8(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7872)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX7Y9 ( ) {
    double _result = 0;
    HRESULT _hr = get_X7Y9(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7873)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX7Y9 ( double pRetVal ) {
    HRESULT _hr = put_X7Y9(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7874)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX6Y10 ( ) {
    double _result = 0;
    HRESULT _hr = get_X6Y10(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7875)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX6Y10 ( double pRetVal ) {
    HRESULT _hr = put_X6Y10(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7876)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX5Y11 ( ) {
    double _result = 0;
    HRESULT _hr = get_X5Y11(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7877)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX5Y11 ( double pRetVal ) {
    HRESULT _hr = put_X5Y11(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7878)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX4Y12 ( ) {
    double _result = 0;
    HRESULT _hr = get_X4Y12(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7879)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX4Y12 ( double pRetVal ) {
    HRESULT _hr = put_X4Y12(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7880)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX3Y13 ( ) {
    double _result = 0;
    HRESULT _hr = get_X3Y13(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7881)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX3Y13 ( double pRetVal ) {
    HRESULT _hr = put_X3Y13(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7882)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX2Y14 ( ) {
    double _result = 0;
    HRESULT _hr = get_X2Y14(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7883)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX2Y14 ( double pRetVal ) {
    HRESULT _hr = put_X2Y14(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7884)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX1Y15 ( ) {
    double _result = 0;
    HRESULT _hr = get_X1Y15(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7885)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX1Y15 ( double pRetVal ) {
    HRESULT _hr = put_X1Y15(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7886)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX0Y16 ( ) {
    double _result = 0;
    HRESULT _hr = get_X0Y16(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7887)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX0Y16 ( double pRetVal ) {
    HRESULT _hr = put_X0Y16(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7888)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX17Y0 ( ) {
    double _result = 0;
    HRESULT _hr = get_X17Y0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7889)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX17Y0 ( double pRetVal ) {
    HRESULT _hr = put_X17Y0(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7890)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX16Y1 ( ) {
    double _result = 0;
    HRESULT _hr = get_X16Y1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7891)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX16Y1 ( double pRetVal ) {
    HRESULT _hr = put_X16Y1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7892)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX15Y2 ( ) {
    double _result = 0;
    HRESULT _hr = get_X15Y2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7893)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX15Y2 ( double pRetVal ) {
    HRESULT _hr = put_X15Y2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7894)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX14Y3 ( ) {
    double _result = 0;
    HRESULT _hr = get_X14Y3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7895)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX14Y3 ( double pRetVal ) {
    HRESULT _hr = put_X14Y3(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7896)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX13Y4 ( ) {
    double _result = 0;
    HRESULT _hr = get_X13Y4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7897)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX13Y4 ( double pRetVal ) {
    HRESULT _hr = put_X13Y4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7898)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX12Y5 ( ) {
    double _result = 0;
    HRESULT _hr = get_X12Y5(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7899)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX12Y5 ( double pRetVal ) {
    HRESULT _hr = put_X12Y5(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7900)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX11Y6 ( ) {
    double _result = 0;
    HRESULT _hr = get_X11Y6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7901)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX11Y6 ( double pRetVal ) {
    HRESULT _hr = put_X11Y6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7902)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX10Y7 ( ) {
    double _result = 0;
    HRESULT _hr = get_X10Y7(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7903)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX10Y7 ( double pRetVal ) {
    HRESULT _hr = put_X10Y7(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7904)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX9Y8 ( ) {
    double _result = 0;
    HRESULT _hr = get_X9Y8(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7905)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX9Y8 ( double pRetVal ) {
    HRESULT _hr = put_X9Y8(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7906)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX8Y9 ( ) {
    double _result = 0;
    HRESULT _hr = get_X8Y9(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7907)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX8Y9 ( double pRetVal ) {
    HRESULT _hr = put_X8Y9(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7908)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX7Y10 ( ) {
    double _result = 0;
    HRESULT _hr = get_X7Y10(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7909)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX7Y10 ( double pRetVal ) {
    HRESULT _hr = put_X7Y10(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7910)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX6Y11 ( ) {
    double _result = 0;
    HRESULT _hr = get_X6Y11(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7911)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX6Y11 ( double pRetVal ) {
    HRESULT _hr = put_X6Y11(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7912)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX5Y12 ( ) {
    double _result = 0;
    HRESULT _hr = get_X5Y12(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7913)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX5Y12 ( double pRetVal ) {
    HRESULT _hr = put_X5Y12(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7914)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX4Y13 ( ) {
    double _result = 0;
    HRESULT _hr = get_X4Y13(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7915)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX4Y13 ( double pRetVal ) {
    HRESULT _hr = put_X4Y13(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7916)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX3Y14 ( ) {
    double _result = 0;
    HRESULT _hr = get_X3Y14(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7917)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX3Y14 ( double pRetVal ) {
    HRESULT _hr = put_X3Y14(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7918)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX2Y15 ( ) {
    double _result = 0;
    HRESULT _hr = get_X2Y15(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7919)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX2Y15 ( double pRetVal ) {
    HRESULT _hr = put_X2Y15(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7920)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX1Y16 ( ) {
    double _result = 0;
    HRESULT _hr = get_X1Y16(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7921)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX1Y16 ( double pRetVal ) {
    HRESULT _hr = put_X1Y16(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7922)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX0Y17 ( ) {
    double _result = 0;
    HRESULT _hr = get_X0Y17(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7923)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX0Y17 ( double pRetVal ) {
    HRESULT _hr = put_X0Y17(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7924)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX18Y0 ( ) {
    double _result = 0;
    HRESULT _hr = get_X18Y0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7925)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX18Y0 ( double pRetVal ) {
    HRESULT _hr = put_X18Y0(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7926)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX17Y1 ( ) {
    double _result = 0;
    HRESULT _hr = get_X17Y1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7927)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX17Y1 ( double pRetVal ) {
    HRESULT _hr = put_X17Y1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7928)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX16Y2 ( ) {
    double _result = 0;
    HRESULT _hr = get_X16Y2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7929)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX16Y2 ( double pRetVal ) {
    HRESULT _hr = put_X16Y2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7930)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX15Y3 ( ) {
    double _result = 0;
    HRESULT _hr = get_X15Y3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7931)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX15Y3 ( double pRetVal ) {
    HRESULT _hr = put_X15Y3(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7932)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX14Y4 ( ) {
    double _result = 0;
    HRESULT _hr = get_X14Y4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7933)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX14Y4 ( double pRetVal ) {
    HRESULT _hr = put_X14Y4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7934)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX13Y5 ( ) {
    double _result = 0;
    HRESULT _hr = get_X13Y5(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7935)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX13Y5 ( double pRetVal ) {
    HRESULT _hr = put_X13Y5(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7936)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX12Y6 ( ) {
    double _result = 0;
    HRESULT _hr = get_X12Y6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7937)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX12Y6 ( double pRetVal ) {
    HRESULT _hr = put_X12Y6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7938)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX11Y7 ( ) {
    double _result = 0;
    HRESULT _hr = get_X11Y7(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7939)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX11Y7 ( double pRetVal ) {
    HRESULT _hr = put_X11Y7(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7940)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX10Y8 ( ) {
    double _result = 0;
    HRESULT _hr = get_X10Y8(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7941)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX10Y8 ( double pRetVal ) {
    HRESULT _hr = put_X10Y8(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7942)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX9Y9 ( ) {
    double _result = 0;
    HRESULT _hr = get_X9Y9(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7943)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX9Y9 ( double pRetVal ) {
    HRESULT _hr = put_X9Y9(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7944)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX8Y10 ( ) {
    double _result = 0;
    HRESULT _hr = get_X8Y10(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7945)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX8Y10 ( double pRetVal ) {
    HRESULT _hr = put_X8Y10(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7946)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX7Y11 ( ) {
    double _result = 0;
    HRESULT _hr = get_X7Y11(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7947)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX7Y11 ( double pRetVal ) {
    HRESULT _hr = put_X7Y11(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7948)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX6Y12 ( ) {
    double _result = 0;
    HRESULT _hr = get_X6Y12(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7949)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX6Y12 ( double pRetVal ) {
    HRESULT _hr = put_X6Y12(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7950)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX5Y13 ( ) {
    double _result = 0;
    HRESULT _hr = get_X5Y13(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7951)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX5Y13 ( double pRetVal ) {
    HRESULT _hr = put_X5Y13(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7952)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX4Y14 ( ) {
    double _result = 0;
    HRESULT _hr = get_X4Y14(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7953)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX4Y14 ( double pRetVal ) {
    HRESULT _hr = put_X4Y14(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7954)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX3Y15 ( ) {
    double _result = 0;
    HRESULT _hr = get_X3Y15(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7955)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX3Y15 ( double pRetVal ) {
    HRESULT _hr = put_X3Y15(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7956)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX2Y16 ( ) {
    double _result = 0;
    HRESULT _hr = get_X2Y16(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7957)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX2Y16 ( double pRetVal ) {
    HRESULT _hr = put_X2Y16(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7958)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX1Y17 ( ) {
    double _result = 0;
    HRESULT _hr = get_X1Y17(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7959)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX1Y17 ( double pRetVal ) {
    HRESULT _hr = put_X1Y17(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7960)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX0Y18 ( ) {
    double _result = 0;
    HRESULT _hr = get_X0Y18(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7961)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX0Y18 ( double pRetVal ) {
    HRESULT _hr = put_X0Y18(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7962)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX19Y0 ( ) {
    double _result = 0;
    HRESULT _hr = get_X19Y0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7963)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX19Y0 ( double pRetVal ) {
    HRESULT _hr = put_X19Y0(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7964)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX18Y1 ( ) {
    double _result = 0;
    HRESULT _hr = get_X18Y1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7965)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX18Y1 ( double pRetVal ) {
    HRESULT _hr = put_X18Y1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7966)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX17Y2 ( ) {
    double _result = 0;
    HRESULT _hr = get_X17Y2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7967)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX17Y2 ( double pRetVal ) {
    HRESULT _hr = put_X17Y2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7968)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX16Y3 ( ) {
    double _result = 0;
    HRESULT _hr = get_X16Y3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7969)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX16Y3 ( double pRetVal ) {
    HRESULT _hr = put_X16Y3(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7970)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX15Y4 ( ) {
    double _result = 0;
    HRESULT _hr = get_X15Y4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7971)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX15Y4 ( double pRetVal ) {
    HRESULT _hr = put_X15Y4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7972)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX14Y5 ( ) {
    double _result = 0;
    HRESULT _hr = get_X14Y5(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7973)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX14Y5 ( double pRetVal ) {
    HRESULT _hr = put_X14Y5(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7974)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX13Y6 ( ) {
    double _result = 0;
    HRESULT _hr = get_X13Y6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7975)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX13Y6 ( double pRetVal ) {
    HRESULT _hr = put_X13Y6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7976)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX12Y7 ( ) {
    double _result = 0;
    HRESULT _hr = get_X12Y7(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7977)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX12Y7 ( double pRetVal ) {
    HRESULT _hr = put_X12Y7(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7978)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX11Y8 ( ) {
    double _result = 0;
    HRESULT _hr = get_X11Y8(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7979)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX11Y8 ( double pRetVal ) {
    HRESULT _hr = put_X11Y8(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7980)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX10Y9 ( ) {
    double _result = 0;
    HRESULT _hr = get_X10Y9(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7981)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX10Y9 ( double pRetVal ) {
    HRESULT _hr = put_X10Y9(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7982)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX9Y10 ( ) {
    double _result = 0;
    HRESULT _hr = get_X9Y10(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7983)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX9Y10 ( double pRetVal ) {
    HRESULT _hr = put_X9Y10(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7984)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX8Y11 ( ) {
    double _result = 0;
    HRESULT _hr = get_X8Y11(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7985)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX8Y11 ( double pRetVal ) {
    HRESULT _hr = put_X8Y11(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7986)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX7Y12 ( ) {
    double _result = 0;
    HRESULT _hr = get_X7Y12(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7987)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX7Y12 ( double pRetVal ) {
    HRESULT _hr = put_X7Y12(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7988)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX6Y13 ( ) {
    double _result = 0;
    HRESULT _hr = get_X6Y13(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7989)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX6Y13 ( double pRetVal ) {
    HRESULT _hr = put_X6Y13(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7990)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX5Y14 ( ) {
    double _result = 0;
    HRESULT _hr = get_X5Y14(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7991)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX5Y14 ( double pRetVal ) {
    HRESULT _hr = put_X5Y14(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7992)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX4Y15 ( ) {
    double _result = 0;
    HRESULT _hr = get_X4Y15(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7993)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX4Y15 ( double pRetVal ) {
    HRESULT _hr = put_X4Y15(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7994)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX3Y16 ( ) {
    double _result = 0;
    HRESULT _hr = get_X3Y16(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7995)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX3Y16 ( double pRetVal ) {
    HRESULT _hr = put_X3Y16(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7996)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX2Y17 ( ) {
    double _result = 0;
    HRESULT _hr = get_X2Y17(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7997)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX2Y17 ( double pRetVal ) {
    HRESULT _hr = put_X2Y17(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7998)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX1Y18 ( ) {
    double _result = 0;
    HRESULT _hr = get_X1Y18(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7999)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX1Y18 ( double pRetVal ) {
    HRESULT _hr = put_X1Y18(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8000)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX0Y19 ( ) {
    double _result = 0;
    HRESULT _hr = get_X0Y19(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8001)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX0Y19 ( double pRetVal ) {
    HRESULT _hr = put_X0Y19(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8002)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX20Y0 ( ) {
    double _result = 0;
    HRESULT _hr = get_X20Y0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8003)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX20Y0 ( double pRetVal ) {
    HRESULT _hr = put_X20Y0(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8004)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX19Y1 ( ) {
    double _result = 0;
    HRESULT _hr = get_X19Y1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8005)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX19Y1 ( double pRetVal ) {
    HRESULT _hr = put_X19Y1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8006)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX18Y2 ( ) {
    double _result = 0;
    HRESULT _hr = get_X18Y2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8007)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX18Y2 ( double pRetVal ) {
    HRESULT _hr = put_X18Y2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8008)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX17Y3 ( ) {
    double _result = 0;
    HRESULT _hr = get_X17Y3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8009)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX17Y3 ( double pRetVal ) {
    HRESULT _hr = put_X17Y3(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8010)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX16Y4 ( ) {
    double _result = 0;
    HRESULT _hr = get_X16Y4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8011)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX16Y4 ( double pRetVal ) {
    HRESULT _hr = put_X16Y4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8012)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX15Y5 ( ) {
    double _result = 0;
    HRESULT _hr = get_X15Y5(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8013)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX15Y5 ( double pRetVal ) {
    HRESULT _hr = put_X15Y5(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8014)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX14Y6 ( ) {
    double _result = 0;
    HRESULT _hr = get_X14Y6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8015)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX14Y6 ( double pRetVal ) {
    HRESULT _hr = put_X14Y6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8016)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX13Y7 ( ) {
    double _result = 0;
    HRESULT _hr = get_X13Y7(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8017)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX13Y7 ( double pRetVal ) {
    HRESULT _hr = put_X13Y7(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8018)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX12Y8 ( ) {
    double _result = 0;
    HRESULT _hr = get_X12Y8(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8019)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX12Y8 ( double pRetVal ) {
    HRESULT _hr = put_X12Y8(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8020)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX11Y9 ( ) {
    double _result = 0;
    HRESULT _hr = get_X11Y9(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8021)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX11Y9 ( double pRetVal ) {
    HRESULT _hr = put_X11Y9(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8022)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX10Y10 ( ) {
    double _result = 0;
    HRESULT _hr = get_X10Y10(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8023)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX10Y10 ( double pRetVal ) {
    HRESULT _hr = put_X10Y10(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8024)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX9Y11 ( ) {
    double _result = 0;
    HRESULT _hr = get_X9Y11(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8025)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX9Y11 ( double pRetVal ) {
    HRESULT _hr = put_X9Y11(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8026)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX8Y12 ( ) {
    double _result = 0;
    HRESULT _hr = get_X8Y12(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8027)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX8Y12 ( double pRetVal ) {
    HRESULT _hr = put_X8Y12(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8028)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX7Y13 ( ) {
    double _result = 0;
    HRESULT _hr = get_X7Y13(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8029)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX7Y13 ( double pRetVal ) {
    HRESULT _hr = put_X7Y13(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8030)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX6Y14 ( ) {
    double _result = 0;
    HRESULT _hr = get_X6Y14(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8031)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX6Y14 ( double pRetVal ) {
    HRESULT _hr = put_X6Y14(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8032)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX5Y15 ( ) {
    double _result = 0;
    HRESULT _hr = get_X5Y15(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8033)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX5Y15 ( double pRetVal ) {
    HRESULT _hr = put_X5Y15(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8034)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX4Y16 ( ) {
    double _result = 0;
    HRESULT _hr = get_X4Y16(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8035)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX4Y16 ( double pRetVal ) {
    HRESULT _hr = put_X4Y16(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8036)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX3Y17 ( ) {
    double _result = 0;
    HRESULT _hr = get_X3Y17(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8037)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX3Y17 ( double pRetVal ) {
    HRESULT _hr = put_X3Y17(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8038)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX2Y18 ( ) {
    double _result = 0;
    HRESULT _hr = get_X2Y18(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8039)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX2Y18 ( double pRetVal ) {
    HRESULT _hr = put_X2Y18(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8040)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX1Y19 ( ) {
    double _result = 0;
    HRESULT _hr = get_X1Y19(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8041)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX1Y19 ( double pRetVal ) {
    HRESULT _hr = put_X1Y19(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8042)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX0Y20 ( ) {
    double _result = 0;
    HRESULT _hr = get_X0Y20(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8043)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX0Y20 ( double pRetVal ) {
    HRESULT _hr = put_X0Y20(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8044)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX21Y0 ( ) {
    double _result = 0;
    HRESULT _hr = get_X21Y0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8045)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX21Y0 ( double pRetVal ) {
    HRESULT _hr = put_X21Y0(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8046)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX20Y1 ( ) {
    double _result = 0;
    HRESULT _hr = get_X20Y1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8047)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX20Y1 ( double pRetVal ) {
    HRESULT _hr = put_X20Y1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8048)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX19Y2 ( ) {
    double _result = 0;
    HRESULT _hr = get_X19Y2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8049)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX19Y2 ( double pRetVal ) {
    HRESULT _hr = put_X19Y2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8050)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX18Y3 ( ) {
    double _result = 0;
    HRESULT _hr = get_X18Y3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8051)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX18Y3 ( double pRetVal ) {
    HRESULT _hr = put_X18Y3(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8052)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX17Y4 ( ) {
    double _result = 0;
    HRESULT _hr = get_X17Y4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8053)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX17Y4 ( double pRetVal ) {
    HRESULT _hr = put_X17Y4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8054)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX16Y5 ( ) {
    double _result = 0;
    HRESULT _hr = get_X16Y5(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8055)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX16Y5 ( double pRetVal ) {
    HRESULT _hr = put_X16Y5(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8056)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX15Y6 ( ) {
    double _result = 0;
    HRESULT _hr = get_X15Y6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8057)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX15Y6 ( double pRetVal ) {
    HRESULT _hr = put_X15Y6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8058)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX14Y7 ( ) {
    double _result = 0;
    HRESULT _hr = get_X14Y7(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8059)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX14Y7 ( double pRetVal ) {
    HRESULT _hr = put_X14Y7(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8060)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX13Y8 ( ) {
    double _result = 0;
    HRESULT _hr = get_X13Y8(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8061)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX13Y8 ( double pRetVal ) {
    HRESULT _hr = put_X13Y8(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8062)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX12Y9 ( ) {
    double _result = 0;
    HRESULT _hr = get_X12Y9(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8063)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX12Y9 ( double pRetVal ) {
    HRESULT _hr = put_X12Y9(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8064)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX11Y10 ( ) {
    double _result = 0;
    HRESULT _hr = get_X11Y10(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8065)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX11Y10 ( double pRetVal ) {
    HRESULT _hr = put_X11Y10(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8066)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX10Y11 ( ) {
    double _result = 0;
    HRESULT _hr = get_X10Y11(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8067)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX10Y11 ( double pRetVal ) {
    HRESULT _hr = put_X10Y11(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8068)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX9Y12 ( ) {
    double _result = 0;
    HRESULT _hr = get_X9Y12(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8069)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX9Y12 ( double pRetVal ) {
    HRESULT _hr = put_X9Y12(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8070)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX8Y13 ( ) {
    double _result = 0;
    HRESULT _hr = get_X8Y13(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8071)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX8Y13 ( double pRetVal ) {
    HRESULT _hr = put_X8Y13(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8072)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX7Y14 ( ) {
    double _result = 0;
    HRESULT _hr = get_X7Y14(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8073)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX7Y14 ( double pRetVal ) {
    HRESULT _hr = put_X7Y14(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8074)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX6Y15 ( ) {
    double _result = 0;
    HRESULT _hr = get_X6Y15(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8075)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX6Y15 ( double pRetVal ) {
    HRESULT _hr = put_X6Y15(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8076)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX5Y16 ( ) {
    double _result = 0;
    HRESULT _hr = get_X5Y16(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8077)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX5Y16 ( double pRetVal ) {
    HRESULT _hr = put_X5Y16(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8078)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX4Y17 ( ) {
    double _result = 0;
    HRESULT _hr = get_X4Y17(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8079)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX4Y17 ( double pRetVal ) {
    HRESULT _hr = put_X4Y17(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8080)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX3Y18 ( ) {
    double _result = 0;
    HRESULT _hr = get_X3Y18(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8081)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX3Y18 ( double pRetVal ) {
    HRESULT _hr = put_X3Y18(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8082)
inline double ZOSAPI_Interfaces::ISurfaceXYPolynomial::GetX2Y19 ( ) {
    double _result = 0;
    HRESULT _hr = get_X2Y19(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8083)
inline void ZOSAPI_Interfaces::ISurfaceXYPolynomial::PutX2Y19 ( double pRetVal ) {
    HRESULT _hr = put_X2Y19(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceNthOrderTerms wrapper method implementations
//

#pragma implementation_key(8084)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceNthOrderTerms::NthOrderTermCell ( long N ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_NthOrderTermCell(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8085)
inline double ZOSAPI_Interfaces::ISurfaceNthOrderTerms::GetNthOrderTerm ( long N ) {
    double _result = 0;
    HRESULT _hr = raw_GetNthOrderTerm(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8086)
inline HRESULT ZOSAPI_Interfaces::ISurfaceNthOrderTerms::SetNthOrderTerm ( long N, double Value ) {
    HRESULT _hr = raw_SetNthOrderTerm(N, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISurfaceNthEvenOrderTerms wrapper method implementations
//

#pragma implementation_key(8087)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceNthEvenOrderTerms::NthEvenOrderTermCell ( long N ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_NthEvenOrderTermCell(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8088)
inline double ZOSAPI_Interfaces::ISurfaceNthEvenOrderTerms::GetNthEvenOrderTerm ( long N ) {
    double _result = 0;
    HRESULT _hr = raw_GetNthEvenOrderTerm(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8089)
inline HRESULT ZOSAPI_Interfaces::ISurfaceNthEvenOrderTerms::SetNthEvenOrderTerm ( long N, double Value ) {
    HRESULT _hr = raw_SetNthEvenOrderTerm(N, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISurfaceNthThickness wrapper method implementations
//

#pragma implementation_key(8090)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceNthThickness::GetNumberOfTermsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberOfTermsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8091)
inline long ZOSAPI_Interfaces::ISurfaceNthThickness::GetNumberOfTerms ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfTerms(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8092)
inline void ZOSAPI_Interfaces::ISurfaceNthThickness::PutNumberOfTerms ( long pRetVal ) {
    HRESULT _hr = put_NumberOfTerms(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8093)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceNthThickness::NthThicknessCell ( long N ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_NthThicknessCell(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8094)
inline double ZOSAPI_Interfaces::ISurfaceNthThickness::GetNthThickness ( long N ) {
    double _result = 0;
    HRESULT _hr = raw_GetNthThickness(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8095)
inline HRESULT ZOSAPI_Interfaces::ISurfaceNthThickness::SetNthThickness ( long N, double Value ) {
    HRESULT _hr = raw_SetNthThickness(N, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISurfaceCoeff_P_NthPower wrapper method implementations
//

#pragma implementation_key(8096)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceCoeff_P_NthPower::GetNumberOfTermsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberOfTermsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8097)
inline long ZOSAPI_Interfaces::ISurfaceCoeff_P_NthPower::GetNumberOfTerms ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfTerms(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8098)
inline void ZOSAPI_Interfaces::ISurfaceCoeff_P_NthPower::PutNumberOfTerms ( long pRetVal ) {
    HRESULT _hr = put_NumberOfTerms(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8099)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceCoeff_P_NthPower::Coeff_P_NthPowerCell ( long N ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_Coeff_P_NthPowerCell(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8100)
inline double ZOSAPI_Interfaces::ISurfaceCoeff_P_NthPower::GetCoeff_P_NthPower ( long N ) {
    double _result = 0;
    HRESULT _hr = raw_GetCoeff_P_NthPower(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8101)
inline HRESULT ZOSAPI_Interfaces::ISurfaceCoeff_P_NthPower::SetCoeff_P_NthPower ( long N, double Value ) {
    HRESULT _hr = raw_SetCoeff_P_NthPower(N, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISurfaceCoeff_R_NthPower wrapper method implementations
//

#pragma implementation_key(8102)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceCoeff_R_NthPower::Coeff_R_NthPowerCell ( long N ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_Coeff_R_NthPowerCell(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8103)
inline double ZOSAPI_Interfaces::ISurfaceCoeff_R_NthPower::GetCoeff_R_NthPower ( long N ) {
    double _result = 0;
    HRESULT _hr = raw_GetCoeff_R_NthPower(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8104)
inline HRESULT ZOSAPI_Interfaces::ISurfaceCoeff_R_NthPower::SetCoeff_R_NthPower ( long N, double Value ) {
    HRESULT _hr = raw_SetCoeff_R_NthPower(N, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISurfaceCoeff_P_NthEvenPower wrapper method implementations
//

#pragma implementation_key(8105)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceCoeff_P_NthEvenPower::GetNumberOfTermsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberOfTermsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8106)
inline long ZOSAPI_Interfaces::ISurfaceCoeff_P_NthEvenPower::GetNumberOfTerms ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfTerms(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8107)
inline void ZOSAPI_Interfaces::ISurfaceCoeff_P_NthEvenPower::PutNumberOfTerms ( long pRetVal ) {
    HRESULT _hr = put_NumberOfTerms(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8108)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceCoeff_P_NthEvenPower::Coeff_P_NthEvenPowerCell ( long N ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_Coeff_P_NthEvenPowerCell(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8109)
inline double ZOSAPI_Interfaces::ISurfaceCoeff_P_NthEvenPower::GetCoeff_P_NthEvenPower ( long N ) {
    double _result = 0;
    HRESULT _hr = raw_GetCoeff_P_NthEvenPower(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8110)
inline HRESULT ZOSAPI_Interfaces::ISurfaceCoeff_P_NthEvenPower::SetCoeff_P_NthEvenPower ( long N, double Value ) {
    HRESULT _hr = raw_SetCoeff_P_NthEvenPower(N, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISurfaceCoeff_R_NthEvenPower wrapper method implementations
//

#pragma implementation_key(8111)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceCoeff_R_NthEvenPower::GetNumberOfTermsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberOfTermsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8112)
inline long ZOSAPI_Interfaces::ISurfaceCoeff_R_NthEvenPower::GetNumberOfTerms ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfTerms(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8113)
inline void ZOSAPI_Interfaces::ISurfaceCoeff_R_NthEvenPower::PutNumberOfTerms ( long pRetVal ) {
    HRESULT _hr = put_NumberOfTerms(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8114)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceCoeff_R_NthEvenPower::Coeff_R_NthEvenPowerCell ( long N ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_Coeff_R_NthEvenPowerCell(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8115)
inline double ZOSAPI_Interfaces::ISurfaceCoeff_R_NthEvenPower::GetCoeff_R_NthEvenPower ( long N ) {
    double _result = 0;
    HRESULT _hr = raw_GetCoeff_R_NthEvenPower(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8116)
inline HRESULT ZOSAPI_Interfaces::ISurfaceCoeff_R_NthEvenPower::SetCoeff_R_NthEvenPower ( long N, double Value ) {
    HRESULT _hr = raw_SetCoeff_R_NthEvenPower(N, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISurfaceCoeff_X_NthEvenPower_8 wrapper method implementations
//

#pragma implementation_key(8117)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceCoeff_X_NthEvenPower_8::Coeff_X_NthEvenPowerCell ( long N ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_Coeff_X_NthEvenPowerCell(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8118)
inline double ZOSAPI_Interfaces::ISurfaceCoeff_X_NthEvenPower_8::GetCoeff_X_NthEvenPower ( long N ) {
    double _result = 0;
    HRESULT _hr = raw_GetCoeff_X_NthEvenPower(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8119)
inline HRESULT ZOSAPI_Interfaces::ISurfaceCoeff_X_NthEvenPower_8::SetCoeff_X_NthEvenPower ( long N, double Value ) {
    HRESULT _hr = raw_SetCoeff_X_NthEvenPower(N, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISurfaceCoeff_X_NthEvenPower wrapper method implementations
//

#pragma implementation_key(8120)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceCoeff_X_NthEvenPower::GetNumberOfTermsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberOfTermsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8121)
inline long ZOSAPI_Interfaces::ISurfaceCoeff_X_NthEvenPower::GetNumberOfTerms ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfTerms(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8122)
inline void ZOSAPI_Interfaces::ISurfaceCoeff_X_NthEvenPower::PutNumberOfTerms ( long pRetVal ) {
    HRESULT _hr = put_NumberOfTerms(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8123)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceCoeff_X_NthEvenPower::Coeff_X_NthEvenPowerCell ( long N ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_Coeff_X_NthEvenPowerCell(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8124)
inline double ZOSAPI_Interfaces::ISurfaceCoeff_X_NthEvenPower::GetCoeff_X_NthEvenPower ( long N ) {
    double _result = 0;
    HRESULT _hr = raw_GetCoeff_X_NthEvenPower(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8125)
inline HRESULT ZOSAPI_Interfaces::ISurfaceCoeff_X_NthEvenPower::SetCoeff_X_NthEvenPower ( long N, double Value ) {
    HRESULT _hr = raw_SetCoeff_X_NthEvenPower(N, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISurfaceCoeff_Y_NthEvenPower_8 wrapper method implementations
//

#pragma implementation_key(8126)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceCoeff_Y_NthEvenPower_8::Coeff_Y_NthEvenPowerCell ( long N ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_Coeff_Y_NthEvenPowerCell(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8127)
inline double ZOSAPI_Interfaces::ISurfaceCoeff_Y_NthEvenPower_8::GetCoeff_Y_NthEvenPower ( long N ) {
    double _result = 0;
    HRESULT _hr = raw_GetCoeff_Y_NthEvenPower(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8128)
inline HRESULT ZOSAPI_Interfaces::ISurfaceCoeff_Y_NthEvenPower_8::SetCoeff_Y_NthEvenPower ( long N, double Value ) {
    HRESULT _hr = raw_SetCoeff_Y_NthEvenPower(N, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISurfaceCoeff_Y_NthEvenPower wrapper method implementations
//

#pragma implementation_key(8129)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceCoeff_Y_NthEvenPower::GetNumberOfTermsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberOfTermsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8130)
inline long ZOSAPI_Interfaces::ISurfaceCoeff_Y_NthEvenPower::GetNumberOfTerms ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfTerms(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8131)
inline void ZOSAPI_Interfaces::ISurfaceCoeff_Y_NthEvenPower::PutNumberOfTerms ( long pRetVal ) {
    HRESULT _hr = put_NumberOfTerms(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8132)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceCoeff_Y_NthEvenPower::Coeff_Y_NthEvenPowerCell ( long N ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_Coeff_Y_NthEvenPowerCell(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8133)
inline double ZOSAPI_Interfaces::ISurfaceCoeff_Y_NthEvenPower::GetCoeff_Y_NthEvenPower ( long N ) {
    double _result = 0;
    HRESULT _hr = raw_GetCoeff_Y_NthEvenPower(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8134)
inline HRESULT ZOSAPI_Interfaces::ISurfaceCoeff_Y_NthEvenPower::SetCoeff_Y_NthEvenPower ( long N, double Value ) {
    HRESULT _hr = raw_SetCoeff_Y_NthEvenPower(N, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISurfaceCoeff_X1P1X2P2_NthEvenPower wrapper method implementations
//

#pragma implementation_key(8135)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceCoeff_X1P1X2P2_NthEvenPower::Coeff_X1_NthEvenPowerCell ( long N ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_Coeff_X1_NthEvenPowerCell(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8136)
inline double ZOSAPI_Interfaces::ISurfaceCoeff_X1P1X2P2_NthEvenPower::GetCoeff_X1_NthEvenPower ( long N ) {
    double _result = 0;
    HRESULT _hr = raw_GetCoeff_X1_NthEvenPower(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8137)
inline HRESULT ZOSAPI_Interfaces::ISurfaceCoeff_X1P1X2P2_NthEvenPower::SetCoeff_X1_NthEvenPower ( long N, double Value ) {
    HRESULT _hr = raw_SetCoeff_X1_NthEvenPower(N, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8138)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceCoeff_X1P1X2P2_NthEvenPower::Coeff_P1_NthEvenPowerCell ( long N ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_Coeff_P1_NthEvenPowerCell(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8139)
inline double ZOSAPI_Interfaces::ISurfaceCoeff_X1P1X2P2_NthEvenPower::GetCoeff_P1_NthEvenPower ( long N ) {
    double _result = 0;
    HRESULT _hr = raw_GetCoeff_P1_NthEvenPower(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8140)
inline HRESULT ZOSAPI_Interfaces::ISurfaceCoeff_X1P1X2P2_NthEvenPower::SetCoeff_P1_NthEvenPower ( long N, double Value ) {
    HRESULT _hr = raw_SetCoeff_P1_NthEvenPower(N, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8141)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceCoeff_X1P1X2P2_NthEvenPower::Coeff_X2_NthEvenPowerCell ( long N ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_Coeff_X2_NthEvenPowerCell(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8142)
inline double ZOSAPI_Interfaces::ISurfaceCoeff_X1P1X2P2_NthEvenPower::GetCoeff_X2_NthEvenPower ( long N ) {
    double _result = 0;
    HRESULT _hr = raw_GetCoeff_X2_NthEvenPower(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8143)
inline HRESULT ZOSAPI_Interfaces::ISurfaceCoeff_X1P1X2P2_NthEvenPower::SetCoeff_X2_NthEvenPower ( long N, double Value ) {
    HRESULT _hr = raw_SetCoeff_X2_NthEvenPower(N, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8144)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceCoeff_X1P1X2P2_NthEvenPower::Coeff_P2_NthEvenPowerCell ( long N ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_Coeff_P2_NthEvenPowerCell(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8145)
inline double ZOSAPI_Interfaces::ISurfaceCoeff_X1P1X2P2_NthEvenPower::GetCoeff_P2_NthEvenPower ( long N ) {
    double _result = 0;
    HRESULT _hr = raw_GetCoeff_P2_NthEvenPower(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8146)
inline HRESULT ZOSAPI_Interfaces::ISurfaceCoeff_X1P1X2P2_NthEvenPower::SetCoeff_P2_NthEvenPower ( long N, double Value ) {
    HRESULT _hr = raw_SetCoeff_P2_NthEvenPower(N, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISurfaceNthZernike wrapper method implementations
//

#pragma implementation_key(8147)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceNthZernike::GetNumberOfTermsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberOfTermsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8148)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceNthZernike::GetNormRadiusCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NormRadiusCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8149)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceNthZernike::NthZernikeCoefficientCell ( long N ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_NthZernikeCoefficientCell(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8150)
inline long ZOSAPI_Interfaces::ISurfaceNthZernike::GetNumberOfTerms ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfTerms(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8151)
inline void ZOSAPI_Interfaces::ISurfaceNthZernike::PutNumberOfTerms ( long pRetVal ) {
    HRESULT _hr = put_NumberOfTerms(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8152)
inline double ZOSAPI_Interfaces::ISurfaceNthZernike::GetNormRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_NormRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8153)
inline void ZOSAPI_Interfaces::ISurfaceNthZernike::PutNormRadius ( double pRetVal ) {
    HRESULT _hr = put_NormRadius(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8154)
inline double ZOSAPI_Interfaces::ISurfaceNthZernike::GetNthZernikeCoefficient ( long N ) {
    double _result = 0;
    HRESULT _hr = raw_GetNthZernikeCoefficient(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8155)
inline HRESULT ZOSAPI_Interfaces::ISurfaceNthZernike::SetNthZernikeCoefficient ( long N, double Value ) {
    HRESULT _hr = raw_SetNthZernikeCoefficient(N, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISurfaceAPBC wrapper method implementations
//

#pragma implementation_key(8156)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceAPBC::AnCell ( long N ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_AnCell(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8157)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceAPBC::PnCell ( long N ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_PnCell(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8158)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceAPBC::BnCell ( long N ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_BnCell(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8159)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceAPBC::CnCell ( long N ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_CnCell(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8160)
inline double ZOSAPI_Interfaces::ISurfaceAPBC::GetAn ( long N ) {
    double _result = 0;
    HRESULT _hr = raw_GetAn(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8161)
inline HRESULT ZOSAPI_Interfaces::ISurfaceAPBC::SetAn ( long N, double Value ) {
    HRESULT _hr = raw_SetAn(N, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8162)
inline double ZOSAPI_Interfaces::ISurfaceAPBC::GetPn ( long N ) {
    double _result = 0;
    HRESULT _hr = raw_GetPn(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8163)
inline HRESULT ZOSAPI_Interfaces::ISurfaceAPBC::SetPn ( long N, double Value ) {
    HRESULT _hr = raw_SetPn(N, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8164)
inline double ZOSAPI_Interfaces::ISurfaceAPBC::GetBn ( long N ) {
    double _result = 0;
    HRESULT _hr = raw_GetBn(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8165)
inline HRESULT ZOSAPI_Interfaces::ISurfaceAPBC::SetBn ( long N, double Value ) {
    HRESULT _hr = raw_SetBn(N, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8166)
inline double ZOSAPI_Interfaces::ISurfaceAPBC::GetCn ( long N ) {
    double _result = 0;
    HRESULT _hr = raw_GetCn(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8167)
inline HRESULT ZOSAPI_Interfaces::ISurfaceAPBC::SetCn ( long N, double Value ) {
    HRESULT _hr = raw_SetCn(N, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISurfaceABCD wrapper method implementations
//

#pragma implementation_key(8168)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceABCD::GetAxCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_AxCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8169)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceABCD::GetBxCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_BxCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8170)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceABCD::GetCxCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CxCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8171)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceABCD::GetDxCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_DxCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8172)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceABCD::GetAyCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_AyCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8173)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceABCD::GetByCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ByCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8174)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceABCD::GetCyCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CyCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8175)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceABCD::GetDyCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_DyCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8176)
inline double ZOSAPI_Interfaces::ISurfaceABCD::GetAx ( ) {
    double _result = 0;
    HRESULT _hr = get_Ax(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8177)
inline void ZOSAPI_Interfaces::ISurfaceABCD::PutAx ( double pRetVal ) {
    HRESULT _hr = put_Ax(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8178)
inline double ZOSAPI_Interfaces::ISurfaceABCD::GetBx ( ) {
    double _result = 0;
    HRESULT _hr = get_Bx(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8179)
inline void ZOSAPI_Interfaces::ISurfaceABCD::PutBx ( double pRetVal ) {
    HRESULT _hr = put_Bx(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8180)
inline double ZOSAPI_Interfaces::ISurfaceABCD::Getcx ( ) {
    double _result = 0;
    HRESULT _hr = get_cx(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8181)
inline void ZOSAPI_Interfaces::ISurfaceABCD::Putcx ( double pRetVal ) {
    HRESULT _hr = put_cx(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8182)
inline double ZOSAPI_Interfaces::ISurfaceABCD::GetDx ( ) {
    double _result = 0;
    HRESULT _hr = get_Dx(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8183)
inline void ZOSAPI_Interfaces::ISurfaceABCD::PutDx ( double pRetVal ) {
    HRESULT _hr = put_Dx(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8184)
inline double ZOSAPI_Interfaces::ISurfaceABCD::GetAy ( ) {
    double _result = 0;
    HRESULT _hr = get_Ay(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8185)
inline void ZOSAPI_Interfaces::ISurfaceABCD::PutAy ( double pRetVal ) {
    HRESULT _hr = put_Ay(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8186)
inline double ZOSAPI_Interfaces::ISurfaceABCD::GetBy ( ) {
    double _result = 0;
    HRESULT _hr = get_By(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8187)
inline void ZOSAPI_Interfaces::ISurfaceABCD::PutBy ( double pRetVal ) {
    HRESULT _hr = put_By(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8188)
inline double ZOSAPI_Interfaces::ISurfaceABCD::GetCy ( ) {
    double _result = 0;
    HRESULT _hr = get_Cy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8189)
inline void ZOSAPI_Interfaces::ISurfaceABCD::PutCy ( double pRetVal ) {
    HRESULT _hr = put_Cy(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8190)
inline double ZOSAPI_Interfaces::ISurfaceABCD::GetDy ( ) {
    double _result = 0;
    HRESULT _hr = get_Dy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8191)
inline void ZOSAPI_Interfaces::ISurfaceABCD::PutDy ( double pRetVal ) {
    HRESULT _hr = put_Dy(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceAnnularZernikeSag wrapper method implementations
//

#pragma implementation_key(8192)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceAnnularZernikeSag::GetExtrapolateCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ExtrapolateCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8193)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceAnnularZernikeSag::GetObscurationCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ObscurationCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8194)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceAnnularZernikeSag::GetNumberOfTermsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberOfTermsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8195)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceAnnularZernikeSag::GetNormRadiusCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NormRadiusCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8196)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceAnnularZernikeSag::GetZernikeTermCell ( long termN ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_GetZernikeTermCell(termN, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8197)
inline long ZOSAPI_Interfaces::ISurfaceAnnularZernikeSag::GetExtrapolate ( ) {
    long _result = 0;
    HRESULT _hr = get_Extrapolate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8198)
inline void ZOSAPI_Interfaces::ISurfaceAnnularZernikeSag::PutExtrapolate ( long pRetVal ) {
    HRESULT _hr = put_Extrapolate(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8199)
inline double ZOSAPI_Interfaces::ISurfaceAnnularZernikeSag::GetObscuration ( ) {
    double _result = 0;
    HRESULT _hr = get_Obscuration(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8200)
inline void ZOSAPI_Interfaces::ISurfaceAnnularZernikeSag::PutObscuration ( double pRetVal ) {
    HRESULT _hr = put_Obscuration(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8201)
inline long ZOSAPI_Interfaces::ISurfaceAnnularZernikeSag::GetNumberOfTerms ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfTerms(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8202)
inline void ZOSAPI_Interfaces::ISurfaceAnnularZernikeSag::PutNumberOfTerms ( long pRetVal ) {
    HRESULT _hr = put_NumberOfTerms(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8203)
inline double ZOSAPI_Interfaces::ISurfaceAnnularZernikeSag::GetNormRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_NormRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8204)
inline void ZOSAPI_Interfaces::ISurfaceAnnularZernikeSag::PutNormRadius ( double pRetVal ) {
    HRESULT _hr = put_NormRadius(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8205)
inline double ZOSAPI_Interfaces::ISurfaceAnnularZernikeSag::GetZernikeTerm ( long termN ) {
    double _result = 0;
    HRESULT _hr = raw_GetZernikeTerm(termN, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8206)
inline HRESULT ZOSAPI_Interfaces::ISurfaceAnnularZernikeSag::SetZernikeTerm ( long termN, double Value ) {
    HRESULT _hr = raw_SetZernikeTerm(termN, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISurfaceAtmospheric wrapper method implementations
//

#pragma implementation_key(8207)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceAtmospheric::GetZenithCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ZenithCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8208)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceAtmospheric::GetHeightCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_HeightCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8209)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceAtmospheric::GetTemperatureCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_TemperatureCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8210)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceAtmospheric::GetPressureCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_PressureCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8211)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceAtmospheric::GetHumidityCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_HumidityCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8212)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceAtmospheric::GetLatitudeCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_LatitudeCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8213)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceAtmospheric::GetIsAbsoluteCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_IsAbsoluteCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8214)
inline double ZOSAPI_Interfaces::ISurfaceAtmospheric::GetZenith ( ) {
    double _result = 0;
    HRESULT _hr = get_Zenith(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8215)
inline void ZOSAPI_Interfaces::ISurfaceAtmospheric::PutZenith ( double pRetVal ) {
    HRESULT _hr = put_Zenith(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8216)
inline double ZOSAPI_Interfaces::ISurfaceAtmospheric::GetHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_Height(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8217)
inline void ZOSAPI_Interfaces::ISurfaceAtmospheric::PutHeight ( double pRetVal ) {
    HRESULT _hr = put_Height(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8218)
inline double ZOSAPI_Interfaces::ISurfaceAtmospheric::GetTemperature ( ) {
    double _result = 0;
    HRESULT _hr = get_Temperature(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8219)
inline void ZOSAPI_Interfaces::ISurfaceAtmospheric::PutTemperature ( double pRetVal ) {
    HRESULT _hr = put_Temperature(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8220)
inline double ZOSAPI_Interfaces::ISurfaceAtmospheric::GetPressure ( ) {
    double _result = 0;
    HRESULT _hr = get_Pressure(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8221)
inline void ZOSAPI_Interfaces::ISurfaceAtmospheric::PutPressure ( double pRetVal ) {
    HRESULT _hr = put_Pressure(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8222)
inline double ZOSAPI_Interfaces::ISurfaceAtmospheric::GetHumidity ( ) {
    double _result = 0;
    HRESULT _hr = get_Humidity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8223)
inline void ZOSAPI_Interfaces::ISurfaceAtmospheric::PutHumidity ( double pRetVal ) {
    HRESULT _hr = put_Humidity(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8224)
inline double ZOSAPI_Interfaces::ISurfaceAtmospheric::GetLatitude ( ) {
    double _result = 0;
    HRESULT _hr = get_Latitude(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8225)
inline void ZOSAPI_Interfaces::ISurfaceAtmospheric::PutLatitude ( double pRetVal ) {
    HRESULT _hr = put_Latitude(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8226)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISurfaceAtmospheric::GetIsAbsolute ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAbsolute(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8227)
inline void ZOSAPI_Interfaces::ISurfaceAtmospheric::PutIsAbsolute ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsAbsolute(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceBiconic wrapper method implementations
//

#pragma implementation_key(8228)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceBiconic::GetXRadiusCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XRadiusCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8229)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceBiconic::GetXConicCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XConicCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8230)
inline double ZOSAPI_Interfaces::ISurfaceBiconic::GetXRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_XRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8231)
inline void ZOSAPI_Interfaces::ISurfaceBiconic::PutXRadius ( double pRetVal ) {
    HRESULT _hr = put_XRadius(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8232)
inline double ZOSAPI_Interfaces::ISurfaceBiconic::GetXConic ( ) {
    double _result = 0;
    HRESULT _hr = get_XConic(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8233)
inline void ZOSAPI_Interfaces::ISurfaceBiconic::PutXConic ( double pRetVal ) {
    HRESULT _hr = put_XConic(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceBiconicZernike wrapper method implementations
//

#pragma implementation_key(8234)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceBiconicZernike::GetExtrapolateCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ExtrapolateCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8235)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceBiconicZernike::GetXRadiusCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XRadiusCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8236)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceBiconicZernike::GetXConicCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XConicCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8237)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceBiconicZernike::GetNumberOfTermsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberOfTermsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8238)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceBiconicZernike::GetNormRadiusCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NormRadiusCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8239)
inline long ZOSAPI_Interfaces::ISurfaceBiconicZernike::GetExtrapolate ( ) {
    long _result = 0;
    HRESULT _hr = get_Extrapolate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8240)
inline void ZOSAPI_Interfaces::ISurfaceBiconicZernike::PutExtrapolate ( long pRetVal ) {
    HRESULT _hr = put_Extrapolate(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8241)
inline double ZOSAPI_Interfaces::ISurfaceBiconicZernike::GetXRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_XRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8242)
inline void ZOSAPI_Interfaces::ISurfaceBiconicZernike::PutXRadius ( double pRetVal ) {
    HRESULT _hr = put_XRadius(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8243)
inline double ZOSAPI_Interfaces::ISurfaceBiconicZernike::GetXConic ( ) {
    double _result = 0;
    HRESULT _hr = get_XConic(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8244)
inline void ZOSAPI_Interfaces::ISurfaceBiconicZernike::PutXConic ( double pRetVal ) {
    HRESULT _hr = put_XConic(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8245)
inline long ZOSAPI_Interfaces::ISurfaceBiconicZernike::GetNumberOfTerms ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfTerms(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8246)
inline void ZOSAPI_Interfaces::ISurfaceBiconicZernike::PutNumberOfTerms ( long pRetVal ) {
    HRESULT _hr = put_NumberOfTerms(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8247)
inline double ZOSAPI_Interfaces::ISurfaceBiconicZernike::GetNormRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_NormRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8248)
inline void ZOSAPI_Interfaces::ISurfaceBiconicZernike::PutNormRadius ( double pRetVal ) {
    HRESULT _hr = put_NormRadius(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8249)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceBiconicZernike::GetCellXn ( long N ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_GetCellXn(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8250)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceBiconicZernike::GetCellYn ( long N ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_GetCellYn(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8251)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceBiconicZernike::GetCellZn ( long N ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_GetCellZn(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8252)
inline double ZOSAPI_Interfaces::ISurfaceBiconicZernike::GetXn ( long N ) {
    double _result = 0;
    HRESULT _hr = raw_GetXn(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8253)
inline double ZOSAPI_Interfaces::ISurfaceBiconicZernike::GetYn ( long N ) {
    double _result = 0;
    HRESULT _hr = raw_GetYn(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8254)
inline double ZOSAPI_Interfaces::ISurfaceBiconicZernike::GetZn ( long N ) {
    double _result = 0;
    HRESULT _hr = raw_GetZn(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8255)
inline HRESULT ZOSAPI_Interfaces::ISurfaceBiconicZernike::SetXn ( long N, double v ) {
    HRESULT _hr = raw_SetXn(N, v);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8256)
inline HRESULT ZOSAPI_Interfaces::ISurfaceBiconicZernike::SetYn ( long N, double v ) {
    HRESULT _hr = raw_SetYn(N, v);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8257)
inline HRESULT ZOSAPI_Interfaces::ISurfaceBiconicZernike::SetZn ( long N, double v ) {
    HRESULT _hr = raw_SetZn(N, v);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISurfaceBinary1 wrapper method implementations
//

#pragma implementation_key(8258)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceBinary1::GetDiffractOrderCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_DiffractOrderCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8259)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceBinary1::GetIsAbsoluteCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_IsAbsoluteCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8260)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceBinary1::GetNormRadiusCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NormRadiusCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8261)
inline double ZOSAPI_Interfaces::ISurfaceBinary1::GetDiffractOrder ( ) {
    double _result = 0;
    HRESULT _hr = get_DiffractOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8262)
inline void ZOSAPI_Interfaces::ISurfaceBinary1::PutDiffractOrder ( double pRetVal ) {
    HRESULT _hr = put_DiffractOrder(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8263)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISurfaceBinary1::GetIsAbsolute ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAbsolute(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8264)
inline void ZOSAPI_Interfaces::ISurfaceBinary1::PutIsAbsolute ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsAbsolute(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8265)
inline double ZOSAPI_Interfaces::ISurfaceBinary1::GetNormRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_NormRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8266)
inline void ZOSAPI_Interfaces::ISurfaceBinary1::PutNormRadius ( double pRetVal ) {
    HRESULT _hr = put_NormRadius(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceBinary2 wrapper method implementations
//

#pragma implementation_key(8267)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceBinary2::GetDiffractOrderCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_DiffractOrderCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8268)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceBinary2::GetNormRadiusCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NormRadiusCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8269)
inline double ZOSAPI_Interfaces::ISurfaceBinary2::GetDiffractOrder ( ) {
    double _result = 0;
    HRESULT _hr = get_DiffractOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8270)
inline void ZOSAPI_Interfaces::ISurfaceBinary2::PutDiffractOrder ( double pRetVal ) {
    HRESULT _hr = put_DiffractOrder(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8271)
inline double ZOSAPI_Interfaces::ISurfaceBinary2::GetNormRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_NormRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8272)
inline void ZOSAPI_Interfaces::ISurfaceBinary2::PutNormRadius ( double pRetVal ) {
    HRESULT _hr = put_NormRadius(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceBinary3 wrapper method implementations
//

#pragma implementation_key(8273)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceBinary3::GetR2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_R2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8274)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceBinary3::GetK2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_K2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8275)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceBinary3::GetA1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_A1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8276)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceBinary3::GetA2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_A2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8277)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceBinary3::GetM1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_M1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8278)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceBinary3::GetM2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_M2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8279)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceBinary3::GetSinDeltaZeroCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_SinDeltaZeroCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8280)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceBinary3::GetBreakCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_BreakCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8281)
inline double ZOSAPI_Interfaces::ISurfaceBinary3::GetR2 ( ) {
    double _result = 0;
    HRESULT _hr = get_R2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8282)
inline void ZOSAPI_Interfaces::ISurfaceBinary3::PutR2 ( double pRetVal ) {
    HRESULT _hr = put_R2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8283)
inline double ZOSAPI_Interfaces::ISurfaceBinary3::GetK2 ( ) {
    double _result = 0;
    HRESULT _hr = get_K2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8284)
inline void ZOSAPI_Interfaces::ISurfaceBinary3::PutK2 ( double pRetVal ) {
    HRESULT _hr = put_K2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8285)
inline double ZOSAPI_Interfaces::ISurfaceBinary3::GetA1 ( ) {
    double _result = 0;
    HRESULT _hr = get_A1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8286)
inline void ZOSAPI_Interfaces::ISurfaceBinary3::PutA1 ( double pRetVal ) {
    HRESULT _hr = put_A1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8287)
inline double ZOSAPI_Interfaces::ISurfaceBinary3::GetA2 ( ) {
    double _result = 0;
    HRESULT _hr = get_A2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8288)
inline void ZOSAPI_Interfaces::ISurfaceBinary3::PutA2 ( double pRetVal ) {
    HRESULT _hr = put_A2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8289)
inline double ZOSAPI_Interfaces::ISurfaceBinary3::GetM1 ( ) {
    double _result = 0;
    HRESULT _hr = get_M1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8290)
inline void ZOSAPI_Interfaces::ISurfaceBinary3::PutM1 ( double pRetVal ) {
    HRESULT _hr = put_M1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8291)
inline double ZOSAPI_Interfaces::ISurfaceBinary3::Getm2 ( ) {
    double _result = 0;
    HRESULT _hr = get_m2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8292)
inline void ZOSAPI_Interfaces::ISurfaceBinary3::Putm2 ( double pRetVal ) {
    HRESULT _hr = put_m2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8293)
inline double ZOSAPI_Interfaces::ISurfaceBinary3::GetSinDeltaZero ( ) {
    double _result = 0;
    HRESULT _hr = get_SinDeltaZero(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8294)
inline void ZOSAPI_Interfaces::ISurfaceBinary3::PutSinDeltaZero ( double pRetVal ) {
    HRESULT _hr = put_SinDeltaZero(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8295)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISurfaceBinary3::GetBreak ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Break(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8296)
inline void ZOSAPI_Interfaces::ISurfaceBinary3::PutBreak ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_Break(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceBinary4 wrapper method implementations
//

#pragma implementation_key(8297)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceBinary4::GetNumberOfRadialZonesCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberOfRadialZonesCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8298)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceBinary4::GetNumberOfAsphericTermsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberOfAsphericTermsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8299)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceBinary4::GetNumberOfPhaseTermsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberOfPhaseTermsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8300)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceBinary4::GetSineDeltaZeroCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_SineDeltaZeroCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8301)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceBinary4::RadialApertureInZoneCell ( long zoneN ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_RadialApertureInZoneCell(zoneN, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8302)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceBinary4::RadiusInZoneCell ( long zoneN ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_RadiusInZoneCell(zoneN, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8303)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceBinary4::ConicInZoneCell ( long zoneN ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_ConicInZoneCell(zoneN, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8304)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceBinary4::OrderInZoneCell ( long zoneN ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_OrderInZoneCell(zoneN, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8305)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceBinary4::AsphereInZone_P_NthEvenPowerCell ( long zoneN, long N ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_AsphereInZone_P_NthEvenPowerCell(zoneN, N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8306)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceBinary4::PhaseInZone_P_NthEvenPowerCell ( long zoneN, long N ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_PhaseInZone_P_NthEvenPowerCell(zoneN, N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8307)
inline long ZOSAPI_Interfaces::ISurfaceBinary4::GetNumberOfRadialZones ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfRadialZones(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8308)
inline void ZOSAPI_Interfaces::ISurfaceBinary4::PutNumberOfRadialZones ( long pRetVal ) {
    HRESULT _hr = put_NumberOfRadialZones(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8309)
inline long ZOSAPI_Interfaces::ISurfaceBinary4::GetNumberOfAsphericTerms ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfAsphericTerms(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8310)
inline void ZOSAPI_Interfaces::ISurfaceBinary4::PutNumberOfAsphericTerms ( long pRetVal ) {
    HRESULT _hr = put_NumberOfAsphericTerms(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8311)
inline long ZOSAPI_Interfaces::ISurfaceBinary4::GetNumberOfPhaseTerms ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfPhaseTerms(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8312)
inline void ZOSAPI_Interfaces::ISurfaceBinary4::PutNumberOfPhaseTerms ( long pRetVal ) {
    HRESULT _hr = put_NumberOfPhaseTerms(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8313)
inline double ZOSAPI_Interfaces::ISurfaceBinary4::GetSineDeltaZero ( ) {
    double _result = 0;
    HRESULT _hr = get_SineDeltaZero(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8314)
inline void ZOSAPI_Interfaces::ISurfaceBinary4::PutSineDeltaZero ( double pRetVal ) {
    HRESULT _hr = put_SineDeltaZero(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8315)
inline double ZOSAPI_Interfaces::ISurfaceBinary4::GetRadialApertureInZone ( long zoneN ) {
    double _result = 0;
    HRESULT _hr = raw_GetRadialApertureInZone(zoneN, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8316)
inline HRESULT ZOSAPI_Interfaces::ISurfaceBinary4::SetRadialApertureInZone ( long zoneN, double Value ) {
    HRESULT _hr = raw_SetRadialApertureInZone(zoneN, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8317)
inline double ZOSAPI_Interfaces::ISurfaceBinary4::GetRadiusInZone ( long zoneN ) {
    double _result = 0;
    HRESULT _hr = raw_GetRadiusInZone(zoneN, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8318)
inline HRESULT ZOSAPI_Interfaces::ISurfaceBinary4::SetRadiusInZone ( long zoneN, double Value ) {
    HRESULT _hr = raw_SetRadiusInZone(zoneN, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8319)
inline double ZOSAPI_Interfaces::ISurfaceBinary4::GetConicInZone ( long zoneN ) {
    double _result = 0;
    HRESULT _hr = raw_GetConicInZone(zoneN, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8320)
inline HRESULT ZOSAPI_Interfaces::ISurfaceBinary4::SetConicInZone ( long zoneN, double Value ) {
    HRESULT _hr = raw_SetConicInZone(zoneN, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8321)
inline double ZOSAPI_Interfaces::ISurfaceBinary4::GetOrderInZone ( long zoneN ) {
    double _result = 0;
    HRESULT _hr = raw_GetOrderInZone(zoneN, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8322)
inline HRESULT ZOSAPI_Interfaces::ISurfaceBinary4::SetOrderInZone ( long zoneN, double Value ) {
    HRESULT _hr = raw_SetOrderInZone(zoneN, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8323)
inline double ZOSAPI_Interfaces::ISurfaceBinary4::GetAsphereInZone_P_NthEvenPower ( long zoneN, long N ) {
    double _result = 0;
    HRESULT _hr = raw_GetAsphereInZone_P_NthEvenPower(zoneN, N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8324)
inline HRESULT ZOSAPI_Interfaces::ISurfaceBinary4::SetAsphereInZone_P_NthEvenPower ( long zoneN, long N, double Value ) {
    HRESULT _hr = raw_SetAsphereInZone_P_NthEvenPower(zoneN, N, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8325)
inline double ZOSAPI_Interfaces::ISurfaceBinary4::GetPhaseInZone_P_NthEvenPower ( long zoneN, long N ) {
    double _result = 0;
    HRESULT _hr = raw_GetPhaseInZone_P_NthEvenPower(zoneN, N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8326)
inline HRESULT ZOSAPI_Interfaces::ISurfaceBinary4::SetPhaseInZone_P_NthEvenPower ( long zoneN, long N, double Value ) {
    HRESULT _hr = raw_SetPhaseInZone_P_NthEvenPower(zoneN, N, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISurfaceBirefringentIn wrapper method implementations
//

#pragma implementation_key(8327)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceBirefringentIn::GetDrawAxisCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_DrawAxisCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8328)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceBirefringentIn::GetModeCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ModeCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8329)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceBirefringentIn::GetX_CosineCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X_CosineCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8330)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceBirefringentIn::GetY_CosineCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Y_CosineCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8331)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceBirefringentIn::GetZ_CosineCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Z_CosineCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8332)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceBirefringentIn::GetIgnoreParaxialRaysCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_IgnoreParaxialRaysCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8333)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceBirefringentIn::GetShapeCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ShapeCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8334)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceBirefringentIn::GetRadiusOfRotationCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RadiusOfRotationCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8335)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceBirefringentIn::NthEvenOrderTermCell ( long N ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_NthEvenOrderTermCell(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8336)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceBirefringentIn::GetGradientModeCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_GradientModeCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8337)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceBirefringentIn::GetDeltaTCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_DeltaTCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8338)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceBirefringentIn::CxCell ( long N ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_CxCell(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8339)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceBirefringentIn::CyCell ( long N ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_CyCell(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8340)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceBirefringentIn::CzCell ( long N ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_CzCell(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8341)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceBirefringentIn::PhiCell ( long N ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_PhiCell(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8342)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceBirefringentIn::aCell ( long N ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_aCell(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8343)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceBirefringentIn::GetOCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_OCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8344)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceBirefringentIn::GetECell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ECell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8345)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceBirefringentIn::GetACell_2 ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ACell_2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8346)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceBirefringentIn::GetBCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_BCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8347)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceBirefringentIn::Mode7CxCell ( long N ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_Mode7CxCell(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8348)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceBirefringentIn::GetazCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_azCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8349)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceBirefringentIn::GetZ0Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Z0Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8350)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceBirefringentIn::GetZnCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ZnCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8351)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceBirefringentIn::CmnCell ( long M, long N ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_CmnCell(M, N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8352)
inline double ZOSAPI_Interfaces::ISurfaceBirefringentIn::GetDrawAxis ( ) {
    double _result = 0;
    HRESULT _hr = get_DrawAxis(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8353)
inline void ZOSAPI_Interfaces::ISurfaceBirefringentIn::PutDrawAxis ( double pRetVal ) {
    HRESULT _hr = put_DrawAxis(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8354)
inline long ZOSAPI_Interfaces::ISurfaceBirefringentIn::GetMode ( ) {
    long _result = 0;
    HRESULT _hr = get_Mode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8355)
inline void ZOSAPI_Interfaces::ISurfaceBirefringentIn::PutMode ( long pRetVal ) {
    HRESULT _hr = put_Mode(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8356)
inline double ZOSAPI_Interfaces::ISurfaceBirefringentIn::GetX_Cosine ( ) {
    double _result = 0;
    HRESULT _hr = get_X_Cosine(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8357)
inline void ZOSAPI_Interfaces::ISurfaceBirefringentIn::PutX_Cosine ( double pRetVal ) {
    HRESULT _hr = put_X_Cosine(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8358)
inline double ZOSAPI_Interfaces::ISurfaceBirefringentIn::GetY_Cosine ( ) {
    double _result = 0;
    HRESULT _hr = get_Y_Cosine(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8359)
inline void ZOSAPI_Interfaces::ISurfaceBirefringentIn::PutY_Cosine ( double pRetVal ) {
    HRESULT _hr = put_Y_Cosine(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8360)
inline double ZOSAPI_Interfaces::ISurfaceBirefringentIn::GetZ_Cosine ( ) {
    double _result = 0;
    HRESULT _hr = get_Z_Cosine(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8361)
inline void ZOSAPI_Interfaces::ISurfaceBirefringentIn::PutZ_Cosine ( double pRetVal ) {
    HRESULT _hr = put_Z_Cosine(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8362)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISurfaceBirefringentIn::GetIgnoreParaxialRays ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IgnoreParaxialRays(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8363)
inline void ZOSAPI_Interfaces::ISurfaceBirefringentIn::PutIgnoreParaxialRays ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IgnoreParaxialRays(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8364)
inline long ZOSAPI_Interfaces::ISurfaceBirefringentIn::GetShape ( ) {
    long _result = 0;
    HRESULT _hr = get_Shape(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8365)
inline void ZOSAPI_Interfaces::ISurfaceBirefringentIn::PutShape ( long pRetVal ) {
    HRESULT _hr = put_Shape(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8366)
inline double ZOSAPI_Interfaces::ISurfaceBirefringentIn::GetRadiusOfRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_RadiusOfRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8367)
inline void ZOSAPI_Interfaces::ISurfaceBirefringentIn::PutRadiusOfRotation ( double pRetVal ) {
    HRESULT _hr = put_RadiusOfRotation(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8368)
inline double ZOSAPI_Interfaces::ISurfaceBirefringentIn::GetNthEvenOrderTerm ( long N ) {
    double _result = 0;
    HRESULT _hr = raw_GetNthEvenOrderTerm(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8369)
inline HRESULT ZOSAPI_Interfaces::ISurfaceBirefringentIn::SetNthEvenOrderTerm ( long N, double Value ) {
    HRESULT _hr = raw_SetNthEvenOrderTerm(N, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8370)
inline long ZOSAPI_Interfaces::ISurfaceBirefringentIn::GetGradientMode ( ) {
    long _result = 0;
    HRESULT _hr = get_GradientMode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8371)
inline void ZOSAPI_Interfaces::ISurfaceBirefringentIn::PutGradientMode ( long pRetVal ) {
    HRESULT _hr = put_GradientMode(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8372)
inline double ZOSAPI_Interfaces::ISurfaceBirefringentIn::GetDeltaT ( ) {
    double _result = 0;
    HRESULT _hr = get_DeltaT(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8373)
inline void ZOSAPI_Interfaces::ISurfaceBirefringentIn::PutDeltaT ( double pRetVal ) {
    HRESULT _hr = put_DeltaT(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8374)
inline double ZOSAPI_Interfaces::ISurfaceBirefringentIn::GetCx ( long N ) {
    double _result = 0;
    HRESULT _hr = raw_GetCx(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8375)
inline HRESULT ZOSAPI_Interfaces::ISurfaceBirefringentIn::SetCx ( long N, double Value ) {
    HRESULT _hr = raw_SetCx(N, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8376)
inline double ZOSAPI_Interfaces::ISurfaceBirefringentIn::GetCy ( long N ) {
    double _result = 0;
    HRESULT _hr = raw_GetCy(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8377)
inline HRESULT ZOSAPI_Interfaces::ISurfaceBirefringentIn::SetCy ( long N, double Value ) {
    HRESULT _hr = raw_SetCy(N, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8378)
inline double ZOSAPI_Interfaces::ISurfaceBirefringentIn::GetCz ( long N ) {
    double _result = 0;
    HRESULT _hr = raw_GetCz(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8379)
inline HRESULT ZOSAPI_Interfaces::ISurfaceBirefringentIn::SetCz ( long N, double Value ) {
    HRESULT _hr = raw_SetCz(N, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8380)
inline double ZOSAPI_Interfaces::ISurfaceBirefringentIn::GetPhi ( long N ) {
    double _result = 0;
    HRESULT _hr = raw_GetPhi(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8381)
inline HRESULT ZOSAPI_Interfaces::ISurfaceBirefringentIn::SetPhi ( long N, double Value ) {
    HRESULT _hr = raw_SetPhi(N, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8382)
inline double ZOSAPI_Interfaces::ISurfaceBirefringentIn::Get_a ( long N ) {
    double _result = 0;
    HRESULT _hr = raw_Get_a(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8383)
inline HRESULT ZOSAPI_Interfaces::ISurfaceBirefringentIn::Set_a ( long N, double Value ) {
    HRESULT _hr = raw_Set_a(N, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8384)
inline double ZOSAPI_Interfaces::ISurfaceBirefringentIn::GetO ( ) {
    double _result = 0;
    HRESULT _hr = get_O(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8385)
inline void ZOSAPI_Interfaces::ISurfaceBirefringentIn::PutO ( double pRetVal ) {
    HRESULT _hr = put_O(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8386)
inline double ZOSAPI_Interfaces::ISurfaceBirefringentIn::GetE ( ) {
    double _result = 0;
    HRESULT _hr = get_E(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8387)
inline void ZOSAPI_Interfaces::ISurfaceBirefringentIn::PutE ( double pRetVal ) {
    HRESULT _hr = put_E(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8388)
inline double ZOSAPI_Interfaces::ISurfaceBirefringentIn::GetA ( ) {
    double _result = 0;
    HRESULT _hr = get_A(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8389)
inline void ZOSAPI_Interfaces::ISurfaceBirefringentIn::PutA ( double pRetVal ) {
    HRESULT _hr = put_A(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8390)
inline double ZOSAPI_Interfaces::ISurfaceBirefringentIn::GetB ( ) {
    double _result = 0;
    HRESULT _hr = get_B(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8391)
inline void ZOSAPI_Interfaces::ISurfaceBirefringentIn::PutB ( double pRetVal ) {
    HRESULT _hr = put_B(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8392)
inline double ZOSAPI_Interfaces::ISurfaceBirefringentIn::GetMode7Cx ( long N ) {
    double _result = 0;
    HRESULT _hr = raw_GetMode7Cx(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8393)
inline HRESULT ZOSAPI_Interfaces::ISurfaceBirefringentIn::SetMode7Cx ( long N, double Value ) {
    HRESULT _hr = raw_SetMode7Cx(N, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8394)
inline double ZOSAPI_Interfaces::ISurfaceBirefringentIn::GetAz ( ) {
    double _result = 0;
    HRESULT _hr = get_Az(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8395)
inline void ZOSAPI_Interfaces::ISurfaceBirefringentIn::PutAz ( double pRetVal ) {
    HRESULT _hr = put_Az(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8396)
inline double ZOSAPI_Interfaces::ISurfaceBirefringentIn::GetZ0 ( ) {
    double _result = 0;
    HRESULT _hr = get_Z0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8397)
inline void ZOSAPI_Interfaces::ISurfaceBirefringentIn::PutZ0 ( double pRetVal ) {
    HRESULT _hr = put_Z0(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8398)
inline double ZOSAPI_Interfaces::ISurfaceBirefringentIn::GetZn ( ) {
    double _result = 0;
    HRESULT _hr = get_Zn(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8399)
inline void ZOSAPI_Interfaces::ISurfaceBirefringentIn::PutZn ( double pRetVal ) {
    HRESULT _hr = put_Zn(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8400)
inline double ZOSAPI_Interfaces::ISurfaceBirefringentIn::GetCmn ( long M, long N ) {
    double _result = 0;
    HRESULT _hr = raw_GetCmn(M, N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8401)
inline HRESULT ZOSAPI_Interfaces::ISurfaceBirefringentIn::SetCmn ( long M, long N, double Value ) {
    HRESULT _hr = raw_SetCmn(M, N, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISurfaceBirefringentOut wrapper method implementations
//

#pragma implementation_key(8402)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceBirefringentOut::GetShapeCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ShapeCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8403)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceBirefringentOut::GetRadiusOfRotationCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RadiusOfRotationCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8404)
inline long ZOSAPI_Interfaces::ISurfaceBirefringentOut::GetShape ( ) {
    long _result = 0;
    HRESULT _hr = get_Shape(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8405)
inline void ZOSAPI_Interfaces::ISurfaceBirefringentOut::PutShape ( long pRetVal ) {
    HRESULT _hr = put_Shape(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8406)
inline double ZOSAPI_Interfaces::ISurfaceBirefringentOut::GetRadiusOfRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_RadiusOfRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8407)
inline void ZOSAPI_Interfaces::ISurfaceBirefringentOut::PutRadiusOfRotation ( double pRetVal ) {
    HRESULT _hr = put_RadiusOfRotation(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceChebyShv wrapper method implementations
//

#pragma implementation_key(8408)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceChebyShv::GetNumberOf_X_OrdersCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberOf_X_OrdersCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8409)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceChebyShv::GetNumberOf_Y_OrdersCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberOf_Y_OrdersCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8410)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceChebyShv::GetNorm_X_LengthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Norm_X_LengthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8411)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceChebyShv::GetNorm_Y_LengthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Norm_Y_LengthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8412)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceChebyShv::CxyCell ( long orderX, long orderY ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_CxyCell(orderX, orderY, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8413)
inline long ZOSAPI_Interfaces::ISurfaceChebyShv::GetNumberOf_X_Orders ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOf_X_Orders(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8414)
inline void ZOSAPI_Interfaces::ISurfaceChebyShv::PutNumberOf_X_Orders ( long pRetVal ) {
    HRESULT _hr = put_NumberOf_X_Orders(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8415)
inline long ZOSAPI_Interfaces::ISurfaceChebyShv::GetNumberOf_Y_Orders ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOf_Y_Orders(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8416)
inline void ZOSAPI_Interfaces::ISurfaceChebyShv::PutNumberOf_Y_Orders ( long pRetVal ) {
    HRESULT _hr = put_NumberOf_Y_Orders(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8417)
inline double ZOSAPI_Interfaces::ISurfaceChebyShv::GetNorm_X_Length ( ) {
    double _result = 0;
    HRESULT _hr = get_Norm_X_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8418)
inline void ZOSAPI_Interfaces::ISurfaceChebyShv::PutNorm_X_Length ( double pRetVal ) {
    HRESULT _hr = put_Norm_X_Length(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8419)
inline double ZOSAPI_Interfaces::ISurfaceChebyShv::GetNorm_Y_Length ( ) {
    double _result = 0;
    HRESULT _hr = get_Norm_Y_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8420)
inline void ZOSAPI_Interfaces::ISurfaceChebyShv::PutNorm_Y_Length ( double pRetVal ) {
    HRESULT _hr = put_Norm_Y_Length(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8421)
inline double ZOSAPI_Interfaces::ISurfaceChebyShv::GetCxy ( long orderX, long orderY ) {
    double _result = 0;
    HRESULT _hr = raw_GetCxy(orderX, orderY, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8422)
inline HRESULT ZOSAPI_Interfaces::ISurfaceChebyShv::SetCxy ( long orderX, long orderY, double Value ) {
    HRESULT _hr = raw_SetCxy(orderX, orderY, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISurfaceConjugate wrapper method implementations
//

#pragma implementation_key(8423)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceConjugate::GetX1_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X1_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8424)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceConjugate::GetY1_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Y1_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8425)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceConjugate::GetZ1_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Z1_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8426)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceConjugate::GetX2_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X2_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8427)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceConjugate::GetY2_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Y2_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8428)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceConjugate::GetZ2_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Z2_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8429)
inline double ZOSAPI_Interfaces::ISurfaceConjugate::GetX1 ( ) {
    double _result = 0;
    HRESULT _hr = get_X1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8430)
inline void ZOSAPI_Interfaces::ISurfaceConjugate::PutX1 ( double pRetVal ) {
    HRESULT _hr = put_X1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8431)
inline double ZOSAPI_Interfaces::ISurfaceConjugate::GetY1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Y1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8432)
inline void ZOSAPI_Interfaces::ISurfaceConjugate::PutY1 ( double pRetVal ) {
    HRESULT _hr = put_Y1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8433)
inline double ZOSAPI_Interfaces::ISurfaceConjugate::GetZ1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Z1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8434)
inline void ZOSAPI_Interfaces::ISurfaceConjugate::PutZ1 ( double pRetVal ) {
    HRESULT _hr = put_Z1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8435)
inline double ZOSAPI_Interfaces::ISurfaceConjugate::GetX2 ( ) {
    double _result = 0;
    HRESULT _hr = get_X2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8436)
inline void ZOSAPI_Interfaces::ISurfaceConjugate::PutX2 ( double pRetVal ) {
    HRESULT _hr = put_X2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8437)
inline double ZOSAPI_Interfaces::ISurfaceConjugate::GetY2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Y2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8438)
inline void ZOSAPI_Interfaces::ISurfaceConjugate::PutY2 ( double pRetVal ) {
    HRESULT _hr = put_Y2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8439)
inline double ZOSAPI_Interfaces::ISurfaceConjugate::GetZ2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Z2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8440)
inline void ZOSAPI_Interfaces::ISurfaceConjugate::PutZ2 ( double pRetVal ) {
    HRESULT _hr = put_Z2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceCoordinateBreak wrapper method implementations
//

#pragma implementation_key(8441)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceCoordinateBreak::GetDecenter_X_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Decenter_X_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8442)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceCoordinateBreak::GetDecenter_Y_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Decenter_Y_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8443)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceCoordinateBreak::GetTiltAbout_X_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_TiltAbout_X_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8444)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceCoordinateBreak::GetTiltAbout_Y_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_TiltAbout_Y_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8445)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceCoordinateBreak::GetTiltAbout_Z_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_TiltAbout_Z_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8446)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceCoordinateBreak::GetOrderCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_OrderCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8447)
inline double ZOSAPI_Interfaces::ISurfaceCoordinateBreak::GetDecenter_X ( ) {
    double _result = 0;
    HRESULT _hr = get_Decenter_X(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8448)
inline void ZOSAPI_Interfaces::ISurfaceCoordinateBreak::PutDecenter_X ( double pRetVal ) {
    HRESULT _hr = put_Decenter_X(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8449)
inline double ZOSAPI_Interfaces::ISurfaceCoordinateBreak::GetDecenter_Y ( ) {
    double _result = 0;
    HRESULT _hr = get_Decenter_Y(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8450)
inline void ZOSAPI_Interfaces::ISurfaceCoordinateBreak::PutDecenter_Y ( double pRetVal ) {
    HRESULT _hr = put_Decenter_Y(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8451)
inline double ZOSAPI_Interfaces::ISurfaceCoordinateBreak::GetTiltAbout_X ( ) {
    double _result = 0;
    HRESULT _hr = get_TiltAbout_X(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8452)
inline void ZOSAPI_Interfaces::ISurfaceCoordinateBreak::PutTiltAbout_X ( double pRetVal ) {
    HRESULT _hr = put_TiltAbout_X(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8453)
inline double ZOSAPI_Interfaces::ISurfaceCoordinateBreak::GetTiltAbout_Y ( ) {
    double _result = 0;
    HRESULT _hr = get_TiltAbout_Y(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8454)
inline void ZOSAPI_Interfaces::ISurfaceCoordinateBreak::PutTiltAbout_Y ( double pRetVal ) {
    HRESULT _hr = put_TiltAbout_Y(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8455)
inline double ZOSAPI_Interfaces::ISurfaceCoordinateBreak::GetTiltAbout_Z ( ) {
    double _result = 0;
    HRESULT _hr = get_TiltAbout_Z(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8456)
inline void ZOSAPI_Interfaces::ISurfaceCoordinateBreak::PutTiltAbout_Z ( double pRetVal ) {
    HRESULT _hr = put_TiltAbout_Z(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8457)
inline long ZOSAPI_Interfaces::ISurfaceCoordinateBreak::GetOrder ( ) {
    long _result = 0;
    HRESULT _hr = get_Order(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8458)
inline void ZOSAPI_Interfaces::ISurfaceCoordinateBreak::PutOrder ( long pRetVal ) {
    HRESULT _hr = put_Order(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceCubicSpline wrapper method implementations
//

#pragma implementation_key(8459)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceCubicSpline::Z_nEigthsCell ( long N ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_Z_nEigthsCell(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8460)
inline double ZOSAPI_Interfaces::ISurfaceCubicSpline::Get_Z_nEighths ( long N ) {
    double _result = 0;
    HRESULT _hr = raw_Get_Z_nEighths(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8461)
inline HRESULT ZOSAPI_Interfaces::ISurfaceCubicSpline::Set_Z_nEighths ( long N, double Value ) {
    HRESULT _hr = raw_Set_Z_nEighths(N, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISurfaceCylinderFrensel wrapper method implementations
//

#pragma implementation_key(8462)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceCylinderFrensel::GetCurvatureCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CurvatureCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8463)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceCylinderFrensel::GetConicCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ConicCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8464)
inline double ZOSAPI_Interfaces::ISurfaceCylinderFrensel::GetCurvature ( ) {
    double _result = 0;
    HRESULT _hr = get_Curvature(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8465)
inline void ZOSAPI_Interfaces::ISurfaceCylinderFrensel::PutCurvature ( double pRetVal ) {
    HRESULT _hr = put_Curvature(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8466)
inline double ZOSAPI_Interfaces::ISurfaceCylinderFrensel::GetConic ( ) {
    double _result = 0;
    HRESULT _hr = get_Conic(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8467)
inline void ZOSAPI_Interfaces::ISurfaceCylinderFrensel::PutConic ( double pRetVal ) {
    HRESULT _hr = put_Conic(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceData wrapper method implementations
//

#pragma implementation_key(8468)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceData::NthExtraDataCell ( long N ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_NthExtraDataCell(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8469)
inline double ZOSAPI_Interfaces::ISurfaceData::GetNthExtraData ( long N ) {
    double _result = 0;
    HRESULT _hr = raw_GetNthExtraData(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8470)
inline HRESULT ZOSAPI_Interfaces::ISurfaceData::SetNthExtraData ( long N, double Value ) {
    HRESULT _hr = raw_SetNthExtraData(N, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISurfaceDiffractionGrating wrapper method implementations
//

#pragma implementation_key(8471)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceDiffractionGrating::GetLinesPerMicroMeterCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_LinesPerMicroMeterCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8472)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceDiffractionGrating::GetDiffractionOrderCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_DiffractionOrderCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8473)
inline double ZOSAPI_Interfaces::ISurfaceDiffractionGrating::GetLinesPerMicroMeter ( ) {
    double _result = 0;
    HRESULT _hr = get_LinesPerMicroMeter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8474)
inline void ZOSAPI_Interfaces::ISurfaceDiffractionGrating::PutLinesPerMicroMeter ( double pRetVal ) {
    HRESULT _hr = put_LinesPerMicroMeter(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8475)
inline double ZOSAPI_Interfaces::ISurfaceDiffractionGrating::GetDiffractionOrder ( ) {
    double _result = 0;
    HRESULT _hr = get_DiffractionOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8476)
inline void ZOSAPI_Interfaces::ISurfaceDiffractionGrating::PutDiffractionOrder ( double pRetVal ) {
    HRESULT _hr = put_DiffractionOrder(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceEllipticalGrating1 wrapper method implementations
//

#pragma implementation_key(8477)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceEllipticalGrating1::GetLinesPerMicroMeterCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_LinesPerMicroMeterCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8478)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceEllipticalGrating1::GetDiffractionOrderCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_DiffractionOrderCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8479)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceEllipticalGrating1::GetaCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_aCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8480)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceEllipticalGrating1::GetBCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_BCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8481)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceEllipticalGrating1::GetcCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_cCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8482)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceEllipticalGrating1::GetAlphaCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_AlphaCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8483)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceEllipticalGrating1::GetBetaCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_BetaCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8484)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceEllipticalGrating1::GetGammaCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_GammaCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8485)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceEllipticalGrating1::GetDeltaCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_DeltaCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8486)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceEllipticalGrating1::GetEpsilonCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_EpsilonCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8487)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceEllipticalGrating1::GetNormRadiusCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NormRadiusCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8488)
inline double ZOSAPI_Interfaces::ISurfaceEllipticalGrating1::GetLinesPerMicroMeter ( ) {
    double _result = 0;
    HRESULT _hr = get_LinesPerMicroMeter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8489)
inline void ZOSAPI_Interfaces::ISurfaceEllipticalGrating1::PutLinesPerMicroMeter ( double pRetVal ) {
    HRESULT _hr = put_LinesPerMicroMeter(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8490)
inline double ZOSAPI_Interfaces::ISurfaceEllipticalGrating1::GetDiffractionOrder ( ) {
    double _result = 0;
    HRESULT _hr = get_DiffractionOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8491)
inline void ZOSAPI_Interfaces::ISurfaceEllipticalGrating1::PutDiffractionOrder ( double pRetVal ) {
    HRESULT _hr = put_DiffractionOrder(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8492)
inline double ZOSAPI_Interfaces::ISurfaceEllipticalGrating1::GetA ( ) {
    double _result = 0;
    HRESULT _hr = get_A(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8493)
inline void ZOSAPI_Interfaces::ISurfaceEllipticalGrating1::PutA ( double pRetVal ) {
    HRESULT _hr = put_A(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8494)
inline double ZOSAPI_Interfaces::ISurfaceEllipticalGrating1::GetB ( ) {
    double _result = 0;
    HRESULT _hr = get_B(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8495)
inline void ZOSAPI_Interfaces::ISurfaceEllipticalGrating1::PutB ( double pRetVal ) {
    HRESULT _hr = put_B(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8496)
inline double ZOSAPI_Interfaces::ISurfaceEllipticalGrating1::Getc ( ) {
    double _result = 0;
    HRESULT _hr = get_c(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8497)
inline void ZOSAPI_Interfaces::ISurfaceEllipticalGrating1::Putc ( double pRetVal ) {
    HRESULT _hr = put_c(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8498)
inline double ZOSAPI_Interfaces::ISurfaceEllipticalGrating1::GetAlpha ( ) {
    double _result = 0;
    HRESULT _hr = get_Alpha(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8499)
inline void ZOSAPI_Interfaces::ISurfaceEllipticalGrating1::PutAlpha ( double pRetVal ) {
    HRESULT _hr = put_Alpha(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8500)
inline double ZOSAPI_Interfaces::ISurfaceEllipticalGrating1::GetBeta ( ) {
    double _result = 0;
    HRESULT _hr = get_Beta(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8501)
inline void ZOSAPI_Interfaces::ISurfaceEllipticalGrating1::PutBeta ( double pRetVal ) {
    HRESULT _hr = put_Beta(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8502)
inline double ZOSAPI_Interfaces::ISurfaceEllipticalGrating1::GetGamma ( ) {
    double _result = 0;
    HRESULT _hr = get_Gamma(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8503)
inline void ZOSAPI_Interfaces::ISurfaceEllipticalGrating1::PutGamma ( double pRetVal ) {
    HRESULT _hr = put_Gamma(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8504)
inline double ZOSAPI_Interfaces::ISurfaceEllipticalGrating1::GetDelta ( ) {
    double _result = 0;
    HRESULT _hr = get_Delta(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8505)
inline void ZOSAPI_Interfaces::ISurfaceEllipticalGrating1::PutDelta ( double pRetVal ) {
    HRESULT _hr = put_Delta(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8506)
inline double ZOSAPI_Interfaces::ISurfaceEllipticalGrating1::GetEpsilon ( ) {
    double _result = 0;
    HRESULT _hr = get_Epsilon(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8507)
inline void ZOSAPI_Interfaces::ISurfaceEllipticalGrating1::PutEpsilon ( double pRetVal ) {
    HRESULT _hr = put_Epsilon(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8508)
inline double ZOSAPI_Interfaces::ISurfaceEllipticalGrating1::GetNormRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_NormRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8509)
inline void ZOSAPI_Interfaces::ISurfaceEllipticalGrating1::PutNormRadius ( double pRetVal ) {
    HRESULT _hr = put_NormRadius(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceEllipticalGrating2 wrapper method implementations
//

#pragma implementation_key(8510)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceEllipticalGrating2::GetLinesPerMicroMeterCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_LinesPerMicroMeterCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8511)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceEllipticalGrating2::GetDiffractionOrderCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_DiffractionOrderCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8512)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceEllipticalGrating2::GetaCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_aCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8513)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceEllipticalGrating2::GetBCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_BCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8514)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceEllipticalGrating2::GetcCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_cCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8515)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceEllipticalGrating2::GetThetaCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ThetaCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8516)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceEllipticalGrating2::GetNormRadiusCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NormRadiusCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8517)
inline double ZOSAPI_Interfaces::ISurfaceEllipticalGrating2::GetLinesPerMicroMeter ( ) {
    double _result = 0;
    HRESULT _hr = get_LinesPerMicroMeter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8518)
inline void ZOSAPI_Interfaces::ISurfaceEllipticalGrating2::PutLinesPerMicroMeter ( double pRetVal ) {
    HRESULT _hr = put_LinesPerMicroMeter(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8519)
inline double ZOSAPI_Interfaces::ISurfaceEllipticalGrating2::GetDiffractionOrder ( ) {
    double _result = 0;
    HRESULT _hr = get_DiffractionOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8520)
inline void ZOSAPI_Interfaces::ISurfaceEllipticalGrating2::PutDiffractionOrder ( double pRetVal ) {
    HRESULT _hr = put_DiffractionOrder(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8521)
inline double ZOSAPI_Interfaces::ISurfaceEllipticalGrating2::GetA ( ) {
    double _result = 0;
    HRESULT _hr = get_A(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8522)
inline void ZOSAPI_Interfaces::ISurfaceEllipticalGrating2::PutA ( double pRetVal ) {
    HRESULT _hr = put_A(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8523)
inline double ZOSAPI_Interfaces::ISurfaceEllipticalGrating2::GetB ( ) {
    double _result = 0;
    HRESULT _hr = get_B(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8524)
inline void ZOSAPI_Interfaces::ISurfaceEllipticalGrating2::PutB ( double pRetVal ) {
    HRESULT _hr = put_B(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8525)
inline double ZOSAPI_Interfaces::ISurfaceEllipticalGrating2::Getc ( ) {
    double _result = 0;
    HRESULT _hr = get_c(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8526)
inline void ZOSAPI_Interfaces::ISurfaceEllipticalGrating2::Putc ( double pRetVal ) {
    HRESULT _hr = put_c(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8527)
inline double ZOSAPI_Interfaces::ISurfaceEllipticalGrating2::GetTheta ( ) {
    double _result = 0;
    HRESULT _hr = get_Theta(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8528)
inline void ZOSAPI_Interfaces::ISurfaceEllipticalGrating2::PutTheta ( double pRetVal ) {
    HRESULT _hr = put_Theta(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8529)
inline double ZOSAPI_Interfaces::ISurfaceEllipticalGrating2::GetNormRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_NormRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8530)
inline void ZOSAPI_Interfaces::ISurfaceEllipticalGrating2::PutNormRadius ( double pRetVal ) {
    HRESULT _hr = put_NormRadius(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceExtendedToroidalGrating wrapper method implementations
//

#pragma implementation_key(8531)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceExtendedToroidalGrating::GetRadiusOfRotationCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RadiusOfRotationCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8532)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceExtendedToroidalGrating::GetLinesPerMicroMeterCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_LinesPerMicroMeterCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8533)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceExtendedToroidalGrating::GetDiffractionOrderCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_DiffractionOrderCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8534)
inline double ZOSAPI_Interfaces::ISurfaceExtendedToroidalGrating::GetRadiusOfRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_RadiusOfRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8535)
inline void ZOSAPI_Interfaces::ISurfaceExtendedToroidalGrating::PutRadiusOfRotation ( double pRetVal ) {
    HRESULT _hr = put_RadiusOfRotation(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8536)
inline double ZOSAPI_Interfaces::ISurfaceExtendedToroidalGrating::GetLinesPerMicroMeter ( ) {
    double _result = 0;
    HRESULT _hr = get_LinesPerMicroMeter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8537)
inline void ZOSAPI_Interfaces::ISurfaceExtendedToroidalGrating::PutLinesPerMicroMeter ( double pRetVal ) {
    HRESULT _hr = put_LinesPerMicroMeter(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8538)
inline double ZOSAPI_Interfaces::ISurfaceExtendedToroidalGrating::GetDiffractionOrder ( ) {
    double _result = 0;
    HRESULT _hr = get_DiffractionOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8539)
inline void ZOSAPI_Interfaces::ISurfaceExtendedToroidalGrating::PutDiffractionOrder ( double pRetVal ) {
    HRESULT _hr = put_DiffractionOrder(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8540)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceExtendedToroidalGrating::GetNormRadiusCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NormRadiusCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8541)
inline double ZOSAPI_Interfaces::ISurfaceExtendedToroidalGrating::GetNormRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_NormRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8542)
inline void ZOSAPI_Interfaces::ISurfaceExtendedToroidalGrating::PutNormRadius ( double pRetVal ) {
    HRESULT _hr = put_NormRadius(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceExtendedAsphere wrapper method implementations
//

#pragma implementation_key(8543)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceExtendedAsphere::GetNormRadiusCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NormRadiusCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8544)
inline double ZOSAPI_Interfaces::ISurfaceExtendedAsphere::GetNormRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_NormRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8545)
inline void ZOSAPI_Interfaces::ISurfaceExtendedAsphere::PutNormRadius ( double pRetVal ) {
    HRESULT _hr = put_NormRadius(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceExtendedCubicSpline wrapper method implementations
//

#pragma implementation_key(8546)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceExtendedCubicSpline::GetNumberOfStepsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberOfStepsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8547)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceExtendedCubicSpline::GetStepSizeCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_StepSizeCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8548)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceExtendedCubicSpline::SagAtNthStepCell ( long N ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_SagAtNthStepCell(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8549)
inline long ZOSAPI_Interfaces::ISurfaceExtendedCubicSpline::GetNumberOfSteps ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfSteps(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8550)
inline void ZOSAPI_Interfaces::ISurfaceExtendedCubicSpline::PutNumberOfSteps ( long pRetVal ) {
    HRESULT _hr = put_NumberOfSteps(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8551)
inline double ZOSAPI_Interfaces::ISurfaceExtendedCubicSpline::GetStepSize ( ) {
    double _result = 0;
    HRESULT _hr = get_StepSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8552)
inline void ZOSAPI_Interfaces::ISurfaceExtendedCubicSpline::PutStepSize ( double pRetVal ) {
    HRESULT _hr = put_StepSize(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8553)
inline double ZOSAPI_Interfaces::ISurfaceExtendedCubicSpline::GetSagAtNthStep ( long N ) {
    double _result = 0;
    HRESULT _hr = raw_GetSagAtNthStep(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8554)
inline HRESULT ZOSAPI_Interfaces::ISurfaceExtendedCubicSpline::SetSagAtNthStep ( long N, double Value ) {
    HRESULT _hr = raw_SetSagAtNthStep(N, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISurfaceExtendedFresnel wrapper method implementations
//

#pragma implementation_key(8555)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceExtendedFresnel::GetCurvatureCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CurvatureCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8556)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceExtendedFresnel::GetConicCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ConicCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8557)
inline double ZOSAPI_Interfaces::ISurfaceExtendedFresnel::GetCurvature ( ) {
    double _result = 0;
    HRESULT _hr = get_Curvature(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8558)
inline void ZOSAPI_Interfaces::ISurfaceExtendedFresnel::PutCurvature ( double pRetVal ) {
    HRESULT _hr = put_Curvature(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8559)
inline double ZOSAPI_Interfaces::ISurfaceExtendedFresnel::GetConic ( ) {
    double _result = 0;
    HRESULT _hr = get_Conic(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8560)
inline void ZOSAPI_Interfaces::ISurfaceExtendedFresnel::PutConic ( double pRetVal ) {
    HRESULT _hr = put_Conic(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceExtendedOddAsphere wrapper method implementations
//

#pragma implementation_key(8561)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceExtendedOddAsphere::GetNormRadiusCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NormRadiusCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8562)
inline double ZOSAPI_Interfaces::ISurfaceExtendedOddAsphere::GetNormRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_NormRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8563)
inline void ZOSAPI_Interfaces::ISurfaceExtendedOddAsphere::PutNormRadius ( double pRetVal ) {
    HRESULT _hr = put_NormRadius(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceExtendedPolynomial wrapper method implementations
//

#pragma implementation_key(8564)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceExtendedPolynomial::GetNormRadiusCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NormRadiusCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8565)
inline double ZOSAPI_Interfaces::ISurfaceExtendedPolynomial::GetNormRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_NormRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8566)
inline void ZOSAPI_Interfaces::ISurfaceExtendedPolynomial::PutNormRadius ( double pRetVal ) {
    HRESULT _hr = put_NormRadius(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceGeneralizedFresnel wrapper method implementations
//

#pragma implementation_key(8567)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGeneralizedFresnel::GetNormRadiusCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NormRadiusCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8568)
inline double ZOSAPI_Interfaces::ISurfaceGeneralizedFresnel::GetNormRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_NormRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8569)
inline void ZOSAPI_Interfaces::ISurfaceGeneralizedFresnel::PutNormRadius ( double pRetVal ) {
    HRESULT _hr = put_NormRadius(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceGradient1 wrapper method implementations
//

#pragma implementation_key(8570)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient1::GetDeltaTCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_DeltaTCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8571)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient1::Getn0Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_n0Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8572)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient1::GetNr2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Nr2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8573)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient1::GetNr1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Nr1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8574)
inline double ZOSAPI_Interfaces::ISurfaceGradient1::GetDeltaT ( ) {
    double _result = 0;
    HRESULT _hr = get_DeltaT(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8575)
inline void ZOSAPI_Interfaces::ISurfaceGradient1::PutDeltaT ( double pRetVal ) {
    HRESULT _hr = put_DeltaT(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8576)
inline double ZOSAPI_Interfaces::ISurfaceGradient1::Getn0 ( ) {
    double _result = 0;
    HRESULT _hr = get_n0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8577)
inline void ZOSAPI_Interfaces::ISurfaceGradient1::Putn0 ( double pRetVal ) {
    HRESULT _hr = put_n0(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8578)
inline double ZOSAPI_Interfaces::ISurfaceGradient1::GetNr2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Nr2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8579)
inline void ZOSAPI_Interfaces::ISurfaceGradient1::PutNr2 ( double pRetVal ) {
    HRESULT _hr = put_Nr2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8580)
inline double ZOSAPI_Interfaces::ISurfaceGradient1::GetNr1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Nr1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8581)
inline void ZOSAPI_Interfaces::ISurfaceGradient1::PutNr1 ( double pRetVal ) {
    HRESULT _hr = put_Nr1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceGradient2 wrapper method implementations
//

#pragma implementation_key(8582)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient2::GetDeltaTCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_DeltaTCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8583)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient2::Getn0Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_n0Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8584)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient2::GetNr2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Nr2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8585)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient2::GetNr4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Nr4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8586)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient2::GetNr6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Nr6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8587)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient2::GetNr8Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Nr8Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8588)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient2::GetNr10Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Nr10Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8589)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient2::GetNr12Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Nr12Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8590)
inline double ZOSAPI_Interfaces::ISurfaceGradient2::GetDeltaT ( ) {
    double _result = 0;
    HRESULT _hr = get_DeltaT(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8591)
inline void ZOSAPI_Interfaces::ISurfaceGradient2::PutDeltaT ( double pRetVal ) {
    HRESULT _hr = put_DeltaT(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8592)
inline double ZOSAPI_Interfaces::ISurfaceGradient2::Getn0 ( ) {
    double _result = 0;
    HRESULT _hr = get_n0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8593)
inline void ZOSAPI_Interfaces::ISurfaceGradient2::Putn0 ( double pRetVal ) {
    HRESULT _hr = put_n0(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8594)
inline double ZOSAPI_Interfaces::ISurfaceGradient2::GetNr2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Nr2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8595)
inline void ZOSAPI_Interfaces::ISurfaceGradient2::PutNr2 ( double pRetVal ) {
    HRESULT _hr = put_Nr2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8596)
inline double ZOSAPI_Interfaces::ISurfaceGradient2::GetNr4 ( ) {
    double _result = 0;
    HRESULT _hr = get_Nr4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8597)
inline void ZOSAPI_Interfaces::ISurfaceGradient2::PutNr4 ( double pRetVal ) {
    HRESULT _hr = put_Nr4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8598)
inline double ZOSAPI_Interfaces::ISurfaceGradient2::GetNr6 ( ) {
    double _result = 0;
    HRESULT _hr = get_Nr6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8599)
inline void ZOSAPI_Interfaces::ISurfaceGradient2::PutNr6 ( double pRetVal ) {
    HRESULT _hr = put_Nr6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8600)
inline double ZOSAPI_Interfaces::ISurfaceGradient2::GetNr8 ( ) {
    double _result = 0;
    HRESULT _hr = get_Nr8(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8601)
inline void ZOSAPI_Interfaces::ISurfaceGradient2::PutNr8 ( double pRetVal ) {
    HRESULT _hr = put_Nr8(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8602)
inline double ZOSAPI_Interfaces::ISurfaceGradient2::GetNr10 ( ) {
    double _result = 0;
    HRESULT _hr = get_Nr10(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8603)
inline void ZOSAPI_Interfaces::ISurfaceGradient2::PutNr10 ( double pRetVal ) {
    HRESULT _hr = put_Nr10(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8604)
inline double ZOSAPI_Interfaces::ISurfaceGradient2::GetNr12 ( ) {
    double _result = 0;
    HRESULT _hr = get_Nr12(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8605)
inline void ZOSAPI_Interfaces::ISurfaceGradient2::PutNr12 ( double pRetVal ) {
    HRESULT _hr = put_Nr12(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceGradient3 wrapper method implementations
//

#pragma implementation_key(8606)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient3::GetDeltaTCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_DeltaTCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8607)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient3::Getn0Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_n0Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8608)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient3::GetNr2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Nr2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8609)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient3::GetNr4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Nr4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8610)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient3::GetNr6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Nr6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8611)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient3::GetNz1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Nz1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8612)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient3::GetNz2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Nz2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8613)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient3::GetNz3Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Nz3Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8614)
inline double ZOSAPI_Interfaces::ISurfaceGradient3::GetDeltaT ( ) {
    double _result = 0;
    HRESULT _hr = get_DeltaT(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8615)
inline void ZOSAPI_Interfaces::ISurfaceGradient3::PutDeltaT ( double pRetVal ) {
    HRESULT _hr = put_DeltaT(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8616)
inline double ZOSAPI_Interfaces::ISurfaceGradient3::Getn0 ( ) {
    double _result = 0;
    HRESULT _hr = get_n0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8617)
inline void ZOSAPI_Interfaces::ISurfaceGradient3::Putn0 ( double pRetVal ) {
    HRESULT _hr = put_n0(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8618)
inline double ZOSAPI_Interfaces::ISurfaceGradient3::GetNr2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Nr2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8619)
inline void ZOSAPI_Interfaces::ISurfaceGradient3::PutNr2 ( double pRetVal ) {
    HRESULT _hr = put_Nr2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8620)
inline double ZOSAPI_Interfaces::ISurfaceGradient3::GetNr4 ( ) {
    double _result = 0;
    HRESULT _hr = get_Nr4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8621)
inline void ZOSAPI_Interfaces::ISurfaceGradient3::PutNr4 ( double pRetVal ) {
    HRESULT _hr = put_Nr4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8622)
inline double ZOSAPI_Interfaces::ISurfaceGradient3::GetNr6 ( ) {
    double _result = 0;
    HRESULT _hr = get_Nr6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8623)
inline void ZOSAPI_Interfaces::ISurfaceGradient3::PutNr6 ( double pRetVal ) {
    HRESULT _hr = put_Nr6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8624)
inline double ZOSAPI_Interfaces::ISurfaceGradient3::GetNz1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Nz1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8625)
inline void ZOSAPI_Interfaces::ISurfaceGradient3::PutNz1 ( double pRetVal ) {
    HRESULT _hr = put_Nz1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8626)
inline double ZOSAPI_Interfaces::ISurfaceGradient3::GetNz2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Nz2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8627)
inline void ZOSAPI_Interfaces::ISurfaceGradient3::PutNz2 ( double pRetVal ) {
    HRESULT _hr = put_Nz2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8628)
inline double ZOSAPI_Interfaces::ISurfaceGradient3::GetNz3 ( ) {
    double _result = 0;
    HRESULT _hr = get_Nz3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8629)
inline void ZOSAPI_Interfaces::ISurfaceGradient3::PutNz3 ( double pRetVal ) {
    HRESULT _hr = put_Nz3(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceGradient4 wrapper method implementations
//

#pragma implementation_key(8630)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient4::GetDeltaTCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_DeltaTCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8631)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient4::Getn0Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_n0Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8632)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient4::GetNx1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Nx1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8633)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient4::GetNx2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Nx2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8634)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient4::GetNy1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Ny1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8635)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient4::GetNy2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Ny2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8636)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient4::GetNz1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Nz1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8637)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient4::GetNz2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Nz2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8638)
inline double ZOSAPI_Interfaces::ISurfaceGradient4::GetDeltaT ( ) {
    double _result = 0;
    HRESULT _hr = get_DeltaT(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8639)
inline void ZOSAPI_Interfaces::ISurfaceGradient4::PutDeltaT ( double pRetVal ) {
    HRESULT _hr = put_DeltaT(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8640)
inline double ZOSAPI_Interfaces::ISurfaceGradient4::Getn0 ( ) {
    double _result = 0;
    HRESULT _hr = get_n0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8641)
inline void ZOSAPI_Interfaces::ISurfaceGradient4::Putn0 ( double pRetVal ) {
    HRESULT _hr = put_n0(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8642)
inline double ZOSAPI_Interfaces::ISurfaceGradient4::GetNx1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Nx1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8643)
inline void ZOSAPI_Interfaces::ISurfaceGradient4::PutNx1 ( double pRetVal ) {
    HRESULT _hr = put_Nx1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8644)
inline double ZOSAPI_Interfaces::ISurfaceGradient4::GetNx2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Nx2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8645)
inline void ZOSAPI_Interfaces::ISurfaceGradient4::PutNx2 ( double pRetVal ) {
    HRESULT _hr = put_Nx2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8646)
inline double ZOSAPI_Interfaces::ISurfaceGradient4::GetNy1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Ny1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8647)
inline void ZOSAPI_Interfaces::ISurfaceGradient4::PutNy1 ( double pRetVal ) {
    HRESULT _hr = put_Ny1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8648)
inline double ZOSAPI_Interfaces::ISurfaceGradient4::GetNy2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Ny2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8649)
inline void ZOSAPI_Interfaces::ISurfaceGradient4::PutNy2 ( double pRetVal ) {
    HRESULT _hr = put_Ny2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8650)
inline double ZOSAPI_Interfaces::ISurfaceGradient4::GetNz1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Nz1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8651)
inline void ZOSAPI_Interfaces::ISurfaceGradient4::PutNz1 ( double pRetVal ) {
    HRESULT _hr = put_Nz1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8652)
inline double ZOSAPI_Interfaces::ISurfaceGradient4::GetNz2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Nz2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8653)
inline void ZOSAPI_Interfaces::ISurfaceGradient4::PutNz2 ( double pRetVal ) {
    HRESULT _hr = put_Nz2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceGradient5 wrapper method implementations
//

#pragma implementation_key(8654)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient5::GetDeltaTCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_DeltaTCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8655)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient5::Getn0Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_n0Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8656)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient5::GetNr2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Nr2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8657)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient5::GetNr4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Nr4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8658)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient5::GetNz1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Nz1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8659)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient5::GetNz2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Nz2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8660)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient5::GetNz3Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Nz3Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8661)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient5::GetNz4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Nz4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8662)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient5::GetX_TangentCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X_TangentCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8663)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient5::GetY_TangentCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Y_TangentCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8664)
inline double ZOSAPI_Interfaces::ISurfaceGradient5::GetDeltaT ( ) {
    double _result = 0;
    HRESULT _hr = get_DeltaT(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8665)
inline void ZOSAPI_Interfaces::ISurfaceGradient5::PutDeltaT ( double pRetVal ) {
    HRESULT _hr = put_DeltaT(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8666)
inline double ZOSAPI_Interfaces::ISurfaceGradient5::Getn0 ( ) {
    double _result = 0;
    HRESULT _hr = get_n0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8667)
inline void ZOSAPI_Interfaces::ISurfaceGradient5::Putn0 ( double pRetVal ) {
    HRESULT _hr = put_n0(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8668)
inline double ZOSAPI_Interfaces::ISurfaceGradient5::GetNr2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Nr2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8669)
inline void ZOSAPI_Interfaces::ISurfaceGradient5::PutNr2 ( double pRetVal ) {
    HRESULT _hr = put_Nr2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8670)
inline double ZOSAPI_Interfaces::ISurfaceGradient5::GetNr4 ( ) {
    double _result = 0;
    HRESULT _hr = get_Nr4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8671)
inline void ZOSAPI_Interfaces::ISurfaceGradient5::PutNr4 ( double pRetVal ) {
    HRESULT _hr = put_Nr4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8672)
inline double ZOSAPI_Interfaces::ISurfaceGradient5::GetNz1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Nz1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8673)
inline void ZOSAPI_Interfaces::ISurfaceGradient5::PutNz1 ( double pRetVal ) {
    HRESULT _hr = put_Nz1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8674)
inline double ZOSAPI_Interfaces::ISurfaceGradient5::GetNz2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Nz2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8675)
inline void ZOSAPI_Interfaces::ISurfaceGradient5::PutNz2 ( double pRetVal ) {
    HRESULT _hr = put_Nz2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8676)
inline double ZOSAPI_Interfaces::ISurfaceGradient5::GetNz3 ( ) {
    double _result = 0;
    HRESULT _hr = get_Nz3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8677)
inline void ZOSAPI_Interfaces::ISurfaceGradient5::PutNz3 ( double pRetVal ) {
    HRESULT _hr = put_Nz3(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8678)
inline double ZOSAPI_Interfaces::ISurfaceGradient5::GetNz4 ( ) {
    double _result = 0;
    HRESULT _hr = get_Nz4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8679)
inline void ZOSAPI_Interfaces::ISurfaceGradient5::PutNz4 ( double pRetVal ) {
    HRESULT _hr = put_Nz4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8680)
inline double ZOSAPI_Interfaces::ISurfaceGradient5::GetX_Tangent ( ) {
    double _result = 0;
    HRESULT _hr = get_X_Tangent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8681)
inline void ZOSAPI_Interfaces::ISurfaceGradient5::PutX_Tangent ( double pRetVal ) {
    HRESULT _hr = put_X_Tangent(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8682)
inline double ZOSAPI_Interfaces::ISurfaceGradient5::GetY_Tangent ( ) {
    double _result = 0;
    HRESULT _hr = get_Y_Tangent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8683)
inline void ZOSAPI_Interfaces::ISurfaceGradient5::PutY_Tangent ( double pRetVal ) {
    HRESULT _hr = put_Y_Tangent(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceGradient6 wrapper method implementations
//

#pragma implementation_key(8684)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient6::GetDeltaTCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_DeltaTCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8685)
inline double ZOSAPI_Interfaces::ISurfaceGradient6::GetDeltaT ( ) {
    double _result = 0;
    HRESULT _hr = get_DeltaT(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8686)
inline void ZOSAPI_Interfaces::ISurfaceGradient6::PutDeltaT ( double pRetVal ) {
    HRESULT _hr = put_DeltaT(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceGradient7 wrapper method implementations
//

#pragma implementation_key(8687)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient7::GetDeltaTCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_DeltaTCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8688)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient7::Getn0Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_n0Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8689)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient7::GetRCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8690)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient7::GetAlphaCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_AlphaCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8691)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient7::GetBetaCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_BetaCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8692)
inline double ZOSAPI_Interfaces::ISurfaceGradient7::GetDeltaT ( ) {
    double _result = 0;
    HRESULT _hr = get_DeltaT(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8693)
inline void ZOSAPI_Interfaces::ISurfaceGradient7::PutDeltaT ( double pRetVal ) {
    HRESULT _hr = put_DeltaT(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8694)
inline double ZOSAPI_Interfaces::ISurfaceGradient7::Getn0 ( ) {
    double _result = 0;
    HRESULT _hr = get_n0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8695)
inline void ZOSAPI_Interfaces::ISurfaceGradient7::Putn0 ( double pRetVal ) {
    HRESULT _hr = put_n0(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8696)
inline double ZOSAPI_Interfaces::ISurfaceGradient7::GetR ( ) {
    double _result = 0;
    HRESULT _hr = get_R(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8697)
inline void ZOSAPI_Interfaces::ISurfaceGradient7::PutR ( double pRetVal ) {
    HRESULT _hr = put_R(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8698)
inline double ZOSAPI_Interfaces::ISurfaceGradient7::GetAlpha ( ) {
    double _result = 0;
    HRESULT _hr = get_Alpha(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8699)
inline void ZOSAPI_Interfaces::ISurfaceGradient7::PutAlpha ( double pRetVal ) {
    HRESULT _hr = put_Alpha(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8700)
inline double ZOSAPI_Interfaces::ISurfaceGradient7::GetBeta ( ) {
    double _result = 0;
    HRESULT _hr = get_Beta(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8701)
inline void ZOSAPI_Interfaces::ISurfaceGradient7::PutBeta ( double pRetVal ) {
    HRESULT _hr = put_Beta(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceGradient9 wrapper method implementations
//

#pragma implementation_key(8702)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient9::GetDeltaTCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_DeltaTCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8703)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient9::GetX_TangentCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X_TangentCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8704)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient9::GetY_TangentCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Y_TangentCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8705)
inline double ZOSAPI_Interfaces::ISurfaceGradient9::GetDeltaT ( ) {
    double _result = 0;
    HRESULT _hr = get_DeltaT(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8706)
inline void ZOSAPI_Interfaces::ISurfaceGradient9::PutDeltaT ( double pRetVal ) {
    HRESULT _hr = put_DeltaT(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8707)
inline double ZOSAPI_Interfaces::ISurfaceGradient9::GetX_Tangent ( ) {
    double _result = 0;
    HRESULT _hr = get_X_Tangent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8708)
inline void ZOSAPI_Interfaces::ISurfaceGradient9::PutX_Tangent ( double pRetVal ) {
    HRESULT _hr = put_X_Tangent(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8709)
inline double ZOSAPI_Interfaces::ISurfaceGradient9::GetY_Tangent ( ) {
    double _result = 0;
    HRESULT _hr = get_Y_Tangent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8710)
inline void ZOSAPI_Interfaces::ISurfaceGradient9::PutY_Tangent ( double pRetVal ) {
    HRESULT _hr = put_Y_Tangent(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceGradient10 wrapper method implementations
//

#pragma implementation_key(8711)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient10::GetDeltaTCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_DeltaTCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8712)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient10::Getn0Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_n0Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8713)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient10::GetNy1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Ny1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8714)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient10::GetNy2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Ny2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8715)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient10::GetNy3Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Ny3Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8716)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient10::GetNy4Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Ny4Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8717)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient10::GetNy5Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Ny5Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8718)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient10::GetNy6Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Ny6Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8719)
inline double ZOSAPI_Interfaces::ISurfaceGradient10::GetDeltaT ( ) {
    double _result = 0;
    HRESULT _hr = get_DeltaT(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8720)
inline void ZOSAPI_Interfaces::ISurfaceGradient10::PutDeltaT ( double pRetVal ) {
    HRESULT _hr = put_DeltaT(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8721)
inline double ZOSAPI_Interfaces::ISurfaceGradient10::Getn0 ( ) {
    double _result = 0;
    HRESULT _hr = get_n0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8722)
inline void ZOSAPI_Interfaces::ISurfaceGradient10::Putn0 ( double pRetVal ) {
    HRESULT _hr = put_n0(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8723)
inline double ZOSAPI_Interfaces::ISurfaceGradient10::GetNy1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Ny1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8724)
inline void ZOSAPI_Interfaces::ISurfaceGradient10::PutNy1 ( double pRetVal ) {
    HRESULT _hr = put_Ny1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8725)
inline double ZOSAPI_Interfaces::ISurfaceGradient10::GetNy2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Ny2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8726)
inline void ZOSAPI_Interfaces::ISurfaceGradient10::PutNy2 ( double pRetVal ) {
    HRESULT _hr = put_Ny2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8727)
inline double ZOSAPI_Interfaces::ISurfaceGradient10::GetNy3 ( ) {
    double _result = 0;
    HRESULT _hr = get_Ny3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8728)
inline void ZOSAPI_Interfaces::ISurfaceGradient10::PutNy3 ( double pRetVal ) {
    HRESULT _hr = put_Ny3(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8729)
inline double ZOSAPI_Interfaces::ISurfaceGradient10::GetNy4 ( ) {
    double _result = 0;
    HRESULT _hr = get_Ny4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8730)
inline void ZOSAPI_Interfaces::ISurfaceGradient10::PutNy4 ( double pRetVal ) {
    HRESULT _hr = put_Ny4(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8731)
inline double ZOSAPI_Interfaces::ISurfaceGradient10::GetNy5 ( ) {
    double _result = 0;
    HRESULT _hr = get_Ny5(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8732)
inline void ZOSAPI_Interfaces::ISurfaceGradient10::PutNy5 ( double pRetVal ) {
    HRESULT _hr = put_Ny5(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8733)
inline double ZOSAPI_Interfaces::ISurfaceGradient10::GetNy6 ( ) {
    double _result = 0;
    HRESULT _hr = get_Ny6(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8734)
inline void ZOSAPI_Interfaces::ISurfaceGradient10::PutNy6 ( double pRetVal ) {
    HRESULT _hr = put_Ny6(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceGradient12 wrapper method implementations
//

#pragma implementation_key(8735)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient12::GetDeltaTCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_DeltaTCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8736)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient12::GetOrderCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_OrderCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8737)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient12::Getn0Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_n0Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8738)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient12::NthNxCell ( long N ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_NthNxCell(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8739)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient12::NthNyCell ( long N ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_NthNyCell(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8740)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradient12::NthNzCell ( long N ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_NthNzCell(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8741)
inline double ZOSAPI_Interfaces::ISurfaceGradient12::GetDeltaT ( ) {
    double _result = 0;
    HRESULT _hr = get_DeltaT(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8742)
inline void ZOSAPI_Interfaces::ISurfaceGradient12::PutDeltaT ( double pRetVal ) {
    HRESULT _hr = put_DeltaT(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8743)
inline long ZOSAPI_Interfaces::ISurfaceGradient12::GetOrder ( ) {
    long _result = 0;
    HRESULT _hr = get_Order(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8744)
inline void ZOSAPI_Interfaces::ISurfaceGradient12::PutOrder ( long pRetVal ) {
    HRESULT _hr = put_Order(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8745)
inline double ZOSAPI_Interfaces::ISurfaceGradient12::Getn0 ( ) {
    double _result = 0;
    HRESULT _hr = get_n0(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8746)
inline void ZOSAPI_Interfaces::ISurfaceGradient12::Putn0 ( double pRetVal ) {
    HRESULT _hr = put_n0(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8747)
inline double ZOSAPI_Interfaces::ISurfaceGradient12::GetNthNx ( long N ) {
    double _result = 0;
    HRESULT _hr = raw_GetNthNx(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8748)
inline double ZOSAPI_Interfaces::ISurfaceGradient12::GetNthNy ( long N ) {
    double _result = 0;
    HRESULT _hr = raw_GetNthNy(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8749)
inline double ZOSAPI_Interfaces::ISurfaceGradient12::GetNthNz ( long N ) {
    double _result = 0;
    HRESULT _hr = raw_GetNthNz(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8750)
inline HRESULT ZOSAPI_Interfaces::ISurfaceGradient12::SetNthNx ( long N, double Value ) {
    HRESULT _hr = raw_SetNthNx(N, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8751)
inline HRESULT ZOSAPI_Interfaces::ISurfaceGradient12::SetNthNy ( long N, double Value ) {
    HRESULT _hr = raw_SetNthNy(N, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8752)
inline HRESULT ZOSAPI_Interfaces::ISurfaceGradient12::SetNthNz ( long N, double Value ) {
    HRESULT _hr = raw_SetNthNz(N, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISurfaceGradium wrapper method implementations
//

#pragma implementation_key(8753)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradium::GetBouleThicknessCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_BouleThicknessCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8754)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradium::GetDeltaTCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_DeltaTCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8755)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradium::GetDeltaZCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_DeltaZCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8756)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradium::GetRef_n_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Ref_n_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8757)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradium::GetDec_x_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Dec_x_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8758)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradium::GetDec_y_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Dec_y_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8759)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradium::GetTilt_x_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Tilt_x_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8760)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradium::GetTilt_y_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Tilt_y_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8761)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGradium::GetCappingCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CappingCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8762)
inline double ZOSAPI_Interfaces::ISurfaceGradium::GetBouleThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_BouleThickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8763)
inline void ZOSAPI_Interfaces::ISurfaceGradium::PutBouleThickness ( double pRetVal ) {
    HRESULT _hr = put_BouleThickness(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8764)
inline double ZOSAPI_Interfaces::ISurfaceGradium::GetDeltaT ( ) {
    double _result = 0;
    HRESULT _hr = get_DeltaT(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8765)
inline void ZOSAPI_Interfaces::ISurfaceGradium::PutDeltaT ( double pRetVal ) {
    HRESULT _hr = put_DeltaT(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8766)
inline double ZOSAPI_Interfaces::ISurfaceGradium::GetDeltaZ ( ) {
    double _result = 0;
    HRESULT _hr = get_DeltaZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8767)
inline void ZOSAPI_Interfaces::ISurfaceGradium::PutDeltaZ ( double pRetVal ) {
    HRESULT _hr = put_DeltaZ(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8768)
inline double ZOSAPI_Interfaces::ISurfaceGradium::GetRef_n ( ) {
    double _result = 0;
    HRESULT _hr = get_Ref_n(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8769)
inline void ZOSAPI_Interfaces::ISurfaceGradium::PutRef_n ( double pRetVal ) {
    HRESULT _hr = put_Ref_n(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8770)
inline double ZOSAPI_Interfaces::ISurfaceGradium::GetDec_x ( ) {
    double _result = 0;
    HRESULT _hr = get_Dec_x(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8771)
inline void ZOSAPI_Interfaces::ISurfaceGradium::PutDec_x ( double pRetVal ) {
    HRESULT _hr = put_Dec_x(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8772)
inline double ZOSAPI_Interfaces::ISurfaceGradium::GetDec_y ( ) {
    double _result = 0;
    HRESULT _hr = get_Dec_y(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8773)
inline void ZOSAPI_Interfaces::ISurfaceGradium::PutDec_y ( double pRetVal ) {
    HRESULT _hr = put_Dec_y(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8774)
inline double ZOSAPI_Interfaces::ISurfaceGradium::GetTilt_x ( ) {
    double _result = 0;
    HRESULT _hr = get_Tilt_x(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8775)
inline void ZOSAPI_Interfaces::ISurfaceGradium::PutTilt_x ( double pRetVal ) {
    HRESULT _hr = put_Tilt_x(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8776)
inline double ZOSAPI_Interfaces::ISurfaceGradium::GetTilt_y ( ) {
    double _result = 0;
    HRESULT _hr = get_Tilt_y(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8777)
inline void ZOSAPI_Interfaces::ISurfaceGradium::PutTilt_y ( double pRetVal ) {
    HRESULT _hr = put_Tilt_y(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8778)
inline double ZOSAPI_Interfaces::ISurfaceGradium::GetCapping ( ) {
    double _result = 0;
    HRESULT _hr = get_Capping(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8779)
inline void ZOSAPI_Interfaces::ISurfaceGradium::PutCapping ( double pRetVal ) {
    HRESULT _hr = put_Capping(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceGridGradient wrapper method implementations
//

#pragma implementation_key(8780)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGridGradient::GetDeltaTCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_DeltaTCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8781)
inline double ZOSAPI_Interfaces::ISurfaceGridGradient::GetDeltaT ( ) {
    double _result = 0;
    HRESULT _hr = get_DeltaT(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8782)
inline void ZOSAPI_Interfaces::ISurfaceGridGradient::PutDeltaT ( double pRetVal ) {
    HRESULT _hr = put_DeltaT(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceGridPhase wrapper method implementations
//

#pragma implementation_key(8783)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGridPhase::GetDiffractOrderCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_DiffractOrderCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8784)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGridPhase::GetShearDistanceCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ShearDistanceCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8785)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGridPhase::GetInterpolateCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_InterpolateCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8786)
inline double ZOSAPI_Interfaces::ISurfaceGridPhase::GetDiffractOrder ( ) {
    double _result = 0;
    HRESULT _hr = get_DiffractOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8787)
inline void ZOSAPI_Interfaces::ISurfaceGridPhase::PutDiffractOrder ( double pRetVal ) {
    HRESULT _hr = put_DiffractOrder(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8788)
inline double ZOSAPI_Interfaces::ISurfaceGridPhase::GetShearDistance ( ) {
    double _result = 0;
    HRESULT _hr = get_ShearDistance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8789)
inline void ZOSAPI_Interfaces::ISurfaceGridPhase::PutShearDistance ( double pRetVal ) {
    HRESULT _hr = put_ShearDistance(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8790)
inline enum ZOSAPI_Interfaces::InterpolationMethod ZOSAPI_Interfaces::ISurfaceGridPhase::GetInterpolate ( ) {
    enum InterpolationMethod _result;
    HRESULT _hr = get_Interpolate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8791)
inline void ZOSAPI_Interfaces::ISurfaceGridPhase::PutInterpolate ( enum InterpolationMethod pRetVal ) {
    HRESULT _hr = put_Interpolate(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceGridSag wrapper method implementations
//

#pragma implementation_key(8792)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGridSag::GetInterpolateCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_InterpolateCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8793)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGridSag::GetZernikeDecenter_X_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ZernikeDecenter_X_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8794)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceGridSag::GetZernikeDecenter_Y_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ZernikeDecenter_Y_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8795)
inline enum ZOSAPI_Interfaces::InterpolationMethod ZOSAPI_Interfaces::ISurfaceGridSag::GetInterpolate ( ) {
    enum InterpolationMethod _result;
    HRESULT _hr = get_Interpolate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8796)
inline void ZOSAPI_Interfaces::ISurfaceGridSag::PutInterpolate ( enum InterpolationMethod pRetVal ) {
    HRESULT _hr = put_Interpolate(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8797)
inline double ZOSAPI_Interfaces::ISurfaceGridSag::GetZernikeDecenter_X ( ) {
    double _result = 0;
    HRESULT _hr = get_ZernikeDecenter_X(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8798)
inline void ZOSAPI_Interfaces::ISurfaceGridSag::PutZernikeDecenter_X ( double pRetVal ) {
    HRESULT _hr = put_ZernikeDecenter_X(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8799)
inline double ZOSAPI_Interfaces::ISurfaceGridSag::GetZernikeDecenter_Y ( ) {
    double _result = 0;
    HRESULT _hr = get_ZernikeDecenter_Y(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8800)
inline void ZOSAPI_Interfaces::ISurfaceGridSag::PutZernikeDecenter_Y ( double pRetVal ) {
    HRESULT _hr = put_ZernikeDecenter_Y(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceHologram1 wrapper method implementations
//

#pragma implementation_key(8801)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceHologram1::GetConstruct_X1_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Construct_X1_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8802)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceHologram1::GetConstruct_Y1_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Construct_Y1_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8803)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceHologram1::GetConstruct_Z1_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Construct_Z1_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8804)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceHologram1::GetConstruct_X2_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Construct_X2_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8805)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceHologram1::GetConstruct_Y2_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Construct_Y2_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8806)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceHologram1::GetConstruct_Z2_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Construct_Z2_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8807)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceHologram1::GetConstructWaveCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ConstructWaveCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8808)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceHologram1::GetDiffractOrderCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_DiffractOrderCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8809)
inline double ZOSAPI_Interfaces::ISurfaceHologram1::GetConstruct_X1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Construct_X1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8810)
inline void ZOSAPI_Interfaces::ISurfaceHologram1::PutConstruct_X1 ( double pRetVal ) {
    HRESULT _hr = put_Construct_X1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8811)
inline double ZOSAPI_Interfaces::ISurfaceHologram1::GetConstruct_Y1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Construct_Y1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8812)
inline void ZOSAPI_Interfaces::ISurfaceHologram1::PutConstruct_Y1 ( double pRetVal ) {
    HRESULT _hr = put_Construct_Y1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8813)
inline double ZOSAPI_Interfaces::ISurfaceHologram1::GetConstruct_Z1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Construct_Z1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8814)
inline void ZOSAPI_Interfaces::ISurfaceHologram1::PutConstruct_Z1 ( double pRetVal ) {
    HRESULT _hr = put_Construct_Z1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8815)
inline double ZOSAPI_Interfaces::ISurfaceHologram1::GetConstruct_X2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Construct_X2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8816)
inline void ZOSAPI_Interfaces::ISurfaceHologram1::PutConstruct_X2 ( double pRetVal ) {
    HRESULT _hr = put_Construct_X2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8817)
inline double ZOSAPI_Interfaces::ISurfaceHologram1::GetConstruct_Y2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Construct_Y2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8818)
inline void ZOSAPI_Interfaces::ISurfaceHologram1::PutConstruct_Y2 ( double pRetVal ) {
    HRESULT _hr = put_Construct_Y2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8819)
inline double ZOSAPI_Interfaces::ISurfaceHologram1::GetConstruct_Z2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Construct_Z2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8820)
inline void ZOSAPI_Interfaces::ISurfaceHologram1::PutConstruct_Z2 ( double pRetVal ) {
    HRESULT _hr = put_Construct_Z2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8821)
inline double ZOSAPI_Interfaces::ISurfaceHologram1::GetConstructWave ( ) {
    double _result = 0;
    HRESULT _hr = get_ConstructWave(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8822)
inline void ZOSAPI_Interfaces::ISurfaceHologram1::PutConstructWave ( double pRetVal ) {
    HRESULT _hr = put_ConstructWave(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8823)
inline double ZOSAPI_Interfaces::ISurfaceHologram1::GetDiffractOrder ( ) {
    double _result = 0;
    HRESULT _hr = get_DiffractOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8824)
inline void ZOSAPI_Interfaces::ISurfaceHologram1::PutDiffractOrder ( double pRetVal ) {
    HRESULT _hr = put_DiffractOrder(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceHologram2 wrapper method implementations
//

#pragma implementation_key(8825)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceHologram2::GetConstruct_X1_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Construct_X1_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8826)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceHologram2::GetConstruct_Y1_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Construct_Y1_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8827)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceHologram2::GetConstruct_Z1_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Construct_Z1_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8828)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceHologram2::GetConstruct_X2_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Construct_X2_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8829)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceHologram2::GetConstruct_Y2_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Construct_Y2_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8830)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceHologram2::GetConstruct_Z2_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Construct_Z2_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8831)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceHologram2::GetConstructWaveCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ConstructWaveCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8832)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceHologram2::GetDiffractOrderCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_DiffractOrderCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8833)
inline double ZOSAPI_Interfaces::ISurfaceHologram2::GetConstruct_X1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Construct_X1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8834)
inline void ZOSAPI_Interfaces::ISurfaceHologram2::PutConstruct_X1 ( double pRetVal ) {
    HRESULT _hr = put_Construct_X1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8835)
inline double ZOSAPI_Interfaces::ISurfaceHologram2::GetConstruct_Y1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Construct_Y1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8836)
inline void ZOSAPI_Interfaces::ISurfaceHologram2::PutConstruct_Y1 ( double pRetVal ) {
    HRESULT _hr = put_Construct_Y1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8837)
inline double ZOSAPI_Interfaces::ISurfaceHologram2::GetConstruct_Z1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Construct_Z1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8838)
inline void ZOSAPI_Interfaces::ISurfaceHologram2::PutConstruct_Z1 ( double pRetVal ) {
    HRESULT _hr = put_Construct_Z1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8839)
inline double ZOSAPI_Interfaces::ISurfaceHologram2::GetConstruct_X2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Construct_X2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8840)
inline void ZOSAPI_Interfaces::ISurfaceHologram2::PutConstruct_X2 ( double pRetVal ) {
    HRESULT _hr = put_Construct_X2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8841)
inline double ZOSAPI_Interfaces::ISurfaceHologram2::GetConstruct_Y2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Construct_Y2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8842)
inline void ZOSAPI_Interfaces::ISurfaceHologram2::PutConstruct_Y2 ( double pRetVal ) {
    HRESULT _hr = put_Construct_Y2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8843)
inline double ZOSAPI_Interfaces::ISurfaceHologram2::GetConstruct_Z2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Construct_Z2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8844)
inline void ZOSAPI_Interfaces::ISurfaceHologram2::PutConstruct_Z2 ( double pRetVal ) {
    HRESULT _hr = put_Construct_Z2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8845)
inline double ZOSAPI_Interfaces::ISurfaceHologram2::GetConstructWave ( ) {
    double _result = 0;
    HRESULT _hr = get_ConstructWave(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8846)
inline void ZOSAPI_Interfaces::ISurfaceHologram2::PutConstructWave ( double pRetVal ) {
    HRESULT _hr = put_ConstructWave(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8847)
inline double ZOSAPI_Interfaces::ISurfaceHologram2::GetDiffractOrder ( ) {
    double _result = 0;
    HRESULT _hr = get_DiffractOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8848)
inline void ZOSAPI_Interfaces::ISurfaceHologram2::PutDiffractOrder ( double pRetVal ) {
    HRESULT _hr = put_DiffractOrder(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceIrregular wrapper method implementations
//

#pragma implementation_key(8849)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceIrregular::GetDecenter_X_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Decenter_X_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8850)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceIrregular::GetDecenter_Y_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Decenter_Y_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8851)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceIrregular::GetTiltAbout_X_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_TiltAbout_X_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8852)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceIrregular::GetTiltAbout_Y_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_TiltAbout_Y_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8853)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceIrregular::GetSphericalCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_SphericalCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8854)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceIrregular::GetAstigmatismCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_AstigmatismCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8855)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceIrregular::GetComaCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ComaCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8856)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceIrregular::GetAngleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_AngleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8857)
inline double ZOSAPI_Interfaces::ISurfaceIrregular::GetDecenter_X ( ) {
    double _result = 0;
    HRESULT _hr = get_Decenter_X(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8858)
inline void ZOSAPI_Interfaces::ISurfaceIrregular::PutDecenter_X ( double pRetVal ) {
    HRESULT _hr = put_Decenter_X(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8859)
inline double ZOSAPI_Interfaces::ISurfaceIrregular::GetDecenter_Y ( ) {
    double _result = 0;
    HRESULT _hr = get_Decenter_Y(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8860)
inline void ZOSAPI_Interfaces::ISurfaceIrregular::PutDecenter_Y ( double pRetVal ) {
    HRESULT _hr = put_Decenter_Y(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8861)
inline double ZOSAPI_Interfaces::ISurfaceIrregular::GetTiltAbout_X ( ) {
    double _result = 0;
    HRESULT _hr = get_TiltAbout_X(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8862)
inline void ZOSAPI_Interfaces::ISurfaceIrregular::PutTiltAbout_X ( double pRetVal ) {
    HRESULT _hr = put_TiltAbout_X(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8863)
inline double ZOSAPI_Interfaces::ISurfaceIrregular::GetTiltAbout_Y ( ) {
    double _result = 0;
    HRESULT _hr = get_TiltAbout_Y(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8864)
inline void ZOSAPI_Interfaces::ISurfaceIrregular::PutTiltAbout_Y ( double pRetVal ) {
    HRESULT _hr = put_TiltAbout_Y(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8865)
inline double ZOSAPI_Interfaces::ISurfaceIrregular::GetSpherical ( ) {
    double _result = 0;
    HRESULT _hr = get_Spherical(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8866)
inline void ZOSAPI_Interfaces::ISurfaceIrregular::PutSpherical ( double pRetVal ) {
    HRESULT _hr = put_Spherical(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8867)
inline double ZOSAPI_Interfaces::ISurfaceIrregular::GetAstigmatism ( ) {
    double _result = 0;
    HRESULT _hr = get_Astigmatism(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8868)
inline void ZOSAPI_Interfaces::ISurfaceIrregular::PutAstigmatism ( double pRetVal ) {
    HRESULT _hr = put_Astigmatism(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8869)
inline double ZOSAPI_Interfaces::ISurfaceIrregular::GetComa ( ) {
    double _result = 0;
    HRESULT _hr = get_Coma(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8870)
inline void ZOSAPI_Interfaces::ISurfaceIrregular::PutComa ( double pRetVal ) {
    HRESULT _hr = put_Coma(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8871)
inline double ZOSAPI_Interfaces::ISurfaceIrregular::GetAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_Angle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8872)
inline void ZOSAPI_Interfaces::ISurfaceIrregular::PutAngle ( double pRetVal ) {
    HRESULT _hr = put_Angle(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceJonesMatrix wrapper method implementations
//

#pragma implementation_key(8873)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceJonesMatrix::GetAr_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Ar_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8874)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceJonesMatrix::GetAi_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Ai_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8875)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceJonesMatrix::GetBr_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Br_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8876)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceJonesMatrix::GetBi_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Bi_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8877)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceJonesMatrix::GetCr_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Cr_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8878)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceJonesMatrix::GetCi_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Ci_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8879)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceJonesMatrix::GetDr_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Dr_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8880)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceJonesMatrix::GetDi_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Di_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8881)
inline double ZOSAPI_Interfaces::ISurfaceJonesMatrix::GetAr ( ) {
    double _result = 0;
    HRESULT _hr = get_Ar(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8882)
inline void ZOSAPI_Interfaces::ISurfaceJonesMatrix::PutAr ( double pRetVal ) {
    HRESULT _hr = put_Ar(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8883)
inline double ZOSAPI_Interfaces::ISurfaceJonesMatrix::GetAi ( ) {
    double _result = 0;
    HRESULT _hr = get_Ai(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8884)
inline void ZOSAPI_Interfaces::ISurfaceJonesMatrix::PutAi ( double pRetVal ) {
    HRESULT _hr = put_Ai(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8885)
inline double ZOSAPI_Interfaces::ISurfaceJonesMatrix::GetBr ( ) {
    double _result = 0;
    HRESULT _hr = get_Br(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8886)
inline void ZOSAPI_Interfaces::ISurfaceJonesMatrix::PutBr ( double pRetVal ) {
    HRESULT _hr = put_Br(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8887)
inline double ZOSAPI_Interfaces::ISurfaceJonesMatrix::GetBi ( ) {
    double _result = 0;
    HRESULT _hr = get_Bi(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8888)
inline void ZOSAPI_Interfaces::ISurfaceJonesMatrix::PutBi ( double pRetVal ) {
    HRESULT _hr = put_Bi(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8889)
inline double ZOSAPI_Interfaces::ISurfaceJonesMatrix::GetCr ( ) {
    double _result = 0;
    HRESULT _hr = get_Cr(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8890)
inline void ZOSAPI_Interfaces::ISurfaceJonesMatrix::PutCr ( double pRetVal ) {
    HRESULT _hr = put_Cr(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8891)
inline double ZOSAPI_Interfaces::ISurfaceJonesMatrix::GetCi ( ) {
    double _result = 0;
    HRESULT _hr = get_Ci(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8892)
inline void ZOSAPI_Interfaces::ISurfaceJonesMatrix::PutCi ( double pRetVal ) {
    HRESULT _hr = put_Ci(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8893)
inline double ZOSAPI_Interfaces::ISurfaceJonesMatrix::GetDr ( ) {
    double _result = 0;
    HRESULT _hr = get_Dr(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8894)
inline void ZOSAPI_Interfaces::ISurfaceJonesMatrix::PutDr ( double pRetVal ) {
    HRESULT _hr = put_Dr(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8895)
inline double ZOSAPI_Interfaces::ISurfaceJonesMatrix::GetDi ( ) {
    double _result = 0;
    HRESULT _hr = get_Di(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8896)
inline void ZOSAPI_Interfaces::ISurfaceJonesMatrix::PutDi ( double pRetVal ) {
    HRESULT _hr = put_Di(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceNonSequential wrapper method implementations
//

#pragma implementation_key(8897)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceNonSequential::GetDrawPortsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_DrawPortsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8898)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceNonSequential::GetExitLocation_X_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ExitLocation_X_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8899)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceNonSequential::GetExitLocation_Y_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ExitLocation_Y_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8900)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceNonSequential::GetExitLocation_Z_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ExitLocation_Z_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8901)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceNonSequential::GetExitTilt_X_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ExitTilt_X_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8902)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceNonSequential::GetExitTilt_Y_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ExitTilt_Y_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8903)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceNonSequential::GetExitTilt_Z_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ExitTilt_Z_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8904)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceNonSequential::GetOrderCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_OrderCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8905)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceNonSequential::GetReverseRaysCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ReverseRaysCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8906)
inline long ZOSAPI_Interfaces::ISurfaceNonSequential::GetDrawPorts ( ) {
    long _result = 0;
    HRESULT _hr = get_DrawPorts(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8907)
inline void ZOSAPI_Interfaces::ISurfaceNonSequential::PutDrawPorts ( long pRetVal ) {
    HRESULT _hr = put_DrawPorts(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8908)
inline double ZOSAPI_Interfaces::ISurfaceNonSequential::GetExitLocation_X ( ) {
    double _result = 0;
    HRESULT _hr = get_ExitLocation_X(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8909)
inline void ZOSAPI_Interfaces::ISurfaceNonSequential::PutExitLocation_X ( double pRetVal ) {
    HRESULT _hr = put_ExitLocation_X(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8910)
inline double ZOSAPI_Interfaces::ISurfaceNonSequential::GetExitLocation_Y ( ) {
    double _result = 0;
    HRESULT _hr = get_ExitLocation_Y(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8911)
inline void ZOSAPI_Interfaces::ISurfaceNonSequential::PutExitLocation_Y ( double pRetVal ) {
    HRESULT _hr = put_ExitLocation_Y(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8912)
inline double ZOSAPI_Interfaces::ISurfaceNonSequential::GetExitLocation_Z ( ) {
    double _result = 0;
    HRESULT _hr = get_ExitLocation_Z(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8913)
inline void ZOSAPI_Interfaces::ISurfaceNonSequential::PutExitLocation_Z ( double pRetVal ) {
    HRESULT _hr = put_ExitLocation_Z(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8914)
inline double ZOSAPI_Interfaces::ISurfaceNonSequential::GetExitTilt_X ( ) {
    double _result = 0;
    HRESULT _hr = get_ExitTilt_X(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8915)
inline void ZOSAPI_Interfaces::ISurfaceNonSequential::PutExitTilt_X ( double pRetVal ) {
    HRESULT _hr = put_ExitTilt_X(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8916)
inline double ZOSAPI_Interfaces::ISurfaceNonSequential::GetExitTilt_Y ( ) {
    double _result = 0;
    HRESULT _hr = get_ExitTilt_Y(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8917)
inline void ZOSAPI_Interfaces::ISurfaceNonSequential::PutExitTilt_Y ( double pRetVal ) {
    HRESULT _hr = put_ExitTilt_Y(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8918)
inline double ZOSAPI_Interfaces::ISurfaceNonSequential::GetExitTilt_Z ( ) {
    double _result = 0;
    HRESULT _hr = get_ExitTilt_Z(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8919)
inline void ZOSAPI_Interfaces::ISurfaceNonSequential::PutExitTilt_Z ( double pRetVal ) {
    HRESULT _hr = put_ExitTilt_Z(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8920)
inline long ZOSAPI_Interfaces::ISurfaceNonSequential::GetOrder ( ) {
    long _result = 0;
    HRESULT _hr = get_Order(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8921)
inline void ZOSAPI_Interfaces::ISurfaceNonSequential::PutOrder ( long pRetVal ) {
    HRESULT _hr = put_Order(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8922)
inline long ZOSAPI_Interfaces::ISurfaceNonSequential::GetReverseRays ( ) {
    long _result = 0;
    HRESULT _hr = get_ReverseRays(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8923)
inline void ZOSAPI_Interfaces::ISurfaceNonSequential::PutReverseRays ( long pRetVal ) {
    HRESULT _hr = put_ReverseRays(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceOddCosine wrapper method implementations
//

#pragma implementation_key(8924)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceOddCosine::GetNumberOfTermsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberOfTermsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8925)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceOddCosine::GetNormRadiusCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NormRadiusCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8926)
inline long ZOSAPI_Interfaces::ISurfaceOddCosine::GetNumberOfTerms ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfTerms(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8927)
inline void ZOSAPI_Interfaces::ISurfaceOddCosine::PutNumberOfTerms ( long pRetVal ) {
    HRESULT _hr = put_NumberOfTerms(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8928)
inline double ZOSAPI_Interfaces::ISurfaceOddCosine::GetNormRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_NormRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8929)
inline void ZOSAPI_Interfaces::ISurfaceOddCosine::PutNormRadius ( double pRetVal ) {
    HRESULT _hr = put_NormRadius(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceOpticallyFabricatedHologram wrapper method implementations
//

#pragma implementation_key(8930)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceOpticallyFabricatedHologram::GetShapeCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ShapeCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8931)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceOpticallyFabricatedHologram::GetHologramTypeCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_HologramTypeCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8932)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceOpticallyFabricatedHologram::GetOPDModeCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_OPDModeCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8933)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceOpticallyFabricatedHologram::GetDiffractOrderCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_DiffractOrderCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8934)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceOpticallyFabricatedHologram::GetCurvatureCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CurvatureCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8935)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceOpticallyFabricatedHologram::GetConicCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ConicCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8936)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceOpticallyFabricatedHologram::GetRotation_R_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Rotation_R_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8937)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceOpticallyFabricatedHologram::GetaCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_aCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8938)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceOpticallyFabricatedHologram::GetBCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_BCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8939)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceOpticallyFabricatedHologram::GetcCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_cCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8940)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceOpticallyFabricatedHologram::GetNormRadiusCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NormRadiusCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8941)
inline long ZOSAPI_Interfaces::ISurfaceOpticallyFabricatedHologram::GetShape ( ) {
    long _result = 0;
    HRESULT _hr = get_Shape(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8942)
inline void ZOSAPI_Interfaces::ISurfaceOpticallyFabricatedHologram::PutShape ( long pRetVal ) {
    HRESULT _hr = put_Shape(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8943)
inline long ZOSAPI_Interfaces::ISurfaceOpticallyFabricatedHologram::GetHologramType ( ) {
    long _result = 0;
    HRESULT _hr = get_HologramType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8944)
inline void ZOSAPI_Interfaces::ISurfaceOpticallyFabricatedHologram::PutHologramType ( long pRetVal ) {
    HRESULT _hr = put_HologramType(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8945)
inline long ZOSAPI_Interfaces::ISurfaceOpticallyFabricatedHologram::GetOPDMode ( ) {
    long _result = 0;
    HRESULT _hr = get_OPDMode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8946)
inline void ZOSAPI_Interfaces::ISurfaceOpticallyFabricatedHologram::PutOPDMode ( long pRetVal ) {
    HRESULT _hr = put_OPDMode(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8947)
inline double ZOSAPI_Interfaces::ISurfaceOpticallyFabricatedHologram::GetDiffractOrder ( ) {
    double _result = 0;
    HRESULT _hr = get_DiffractOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8948)
inline void ZOSAPI_Interfaces::ISurfaceOpticallyFabricatedHologram::PutDiffractOrder ( double pRetVal ) {
    HRESULT _hr = put_DiffractOrder(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8949)
inline double ZOSAPI_Interfaces::ISurfaceOpticallyFabricatedHologram::GetCurvature ( ) {
    double _result = 0;
    HRESULT _hr = get_Curvature(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8950)
inline void ZOSAPI_Interfaces::ISurfaceOpticallyFabricatedHologram::PutCurvature ( double pRetVal ) {
    HRESULT _hr = put_Curvature(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8951)
inline double ZOSAPI_Interfaces::ISurfaceOpticallyFabricatedHologram::GetConic ( ) {
    double _result = 0;
    HRESULT _hr = get_Conic(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8952)
inline void ZOSAPI_Interfaces::ISurfaceOpticallyFabricatedHologram::PutConic ( double pRetVal ) {
    HRESULT _hr = put_Conic(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8953)
inline double ZOSAPI_Interfaces::ISurfaceOpticallyFabricatedHologram::GetRotation_R ( ) {
    double _result = 0;
    HRESULT _hr = get_Rotation_R(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8954)
inline void ZOSAPI_Interfaces::ISurfaceOpticallyFabricatedHologram::PutRotation_R ( double pRetVal ) {
    HRESULT _hr = put_Rotation_R(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8955)
inline double ZOSAPI_Interfaces::ISurfaceOpticallyFabricatedHologram::GetA ( ) {
    double _result = 0;
    HRESULT _hr = get_A(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8956)
inline void ZOSAPI_Interfaces::ISurfaceOpticallyFabricatedHologram::PutA ( double pRetVal ) {
    HRESULT _hr = put_A(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8957)
inline double ZOSAPI_Interfaces::ISurfaceOpticallyFabricatedHologram::GetB ( ) {
    double _result = 0;
    HRESULT _hr = get_B(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8958)
inline void ZOSAPI_Interfaces::ISurfaceOpticallyFabricatedHologram::PutB ( double pRetVal ) {
    HRESULT _hr = put_B(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8959)
inline double ZOSAPI_Interfaces::ISurfaceOpticallyFabricatedHologram::Getc ( ) {
    double _result = 0;
    HRESULT _hr = get_c(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8960)
inline void ZOSAPI_Interfaces::ISurfaceOpticallyFabricatedHologram::Putc ( double pRetVal ) {
    HRESULT _hr = put_c(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8961)
inline double ZOSAPI_Interfaces::ISurfaceOpticallyFabricatedHologram::GetNormRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_NormRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8962)
inline void ZOSAPI_Interfaces::ISurfaceOpticallyFabricatedHologram::PutNormRadius ( double pRetVal ) {
    HRESULT _hr = put_NormRadius(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceParaxial wrapper method implementations
//

#pragma implementation_key(8963)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceParaxial::GetFocalLengthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FocalLengthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8964)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceParaxial::GetOPDModeCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_OPDModeCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8965)
inline double ZOSAPI_Interfaces::ISurfaceParaxial::GetFocalLength ( ) {
    double _result = 0;
    HRESULT _hr = get_FocalLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8966)
inline void ZOSAPI_Interfaces::ISurfaceParaxial::PutFocalLength ( double pRetVal ) {
    HRESULT _hr = put_FocalLength(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8967)
inline long ZOSAPI_Interfaces::ISurfaceParaxial::GetOPDMode ( ) {
    long _result = 0;
    HRESULT _hr = get_OPDMode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8968)
inline void ZOSAPI_Interfaces::ISurfaceParaxial::PutOPDMode ( long pRetVal ) {
    HRESULT _hr = put_OPDMode(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceParaxialXY wrapper method implementations
//

#pragma implementation_key(8969)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceParaxialXY::GetX_PowerCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X_PowerCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8970)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceParaxialXY::GetY_PowerCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Y_PowerCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8971)
inline double ZOSAPI_Interfaces::ISurfaceParaxialXY::GetX_Power ( ) {
    double _result = 0;
    HRESULT _hr = get_X_Power(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8972)
inline void ZOSAPI_Interfaces::ISurfaceParaxialXY::PutX_Power ( double pRetVal ) {
    HRESULT _hr = put_X_Power(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8973)
inline double ZOSAPI_Interfaces::ISurfaceParaxialXY::GetY_Power ( ) {
    double _result = 0;
    HRESULT _hr = get_Y_Power(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8974)
inline void ZOSAPI_Interfaces::ISurfaceParaxialXY::PutY_Power ( double pRetVal ) {
    HRESULT _hr = put_Y_Power(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfacePeriodic wrapper method implementations
//

#pragma implementation_key(8975)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfacePeriodic::GetAmplitudeCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_AmplitudeCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8976)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfacePeriodic::GetX_FrequencyCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X_FrequencyCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8977)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfacePeriodic::GetY_FrequencyCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Y_FrequencyCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8978)
inline double ZOSAPI_Interfaces::ISurfacePeriodic::GetAmplitude ( ) {
    double _result = 0;
    HRESULT _hr = get_Amplitude(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8979)
inline void ZOSAPI_Interfaces::ISurfacePeriodic::PutAmplitude ( double pRetVal ) {
    HRESULT _hr = put_Amplitude(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8980)
inline double ZOSAPI_Interfaces::ISurfacePeriodic::GetX_Frequency ( ) {
    double _result = 0;
    HRESULT _hr = get_X_Frequency(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8981)
inline void ZOSAPI_Interfaces::ISurfacePeriodic::PutX_Frequency ( double pRetVal ) {
    HRESULT _hr = put_X_Frequency(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8982)
inline double ZOSAPI_Interfaces::ISurfacePeriodic::GetY_Frequency ( ) {
    double _result = 0;
    HRESULT _hr = get_Y_Frequency(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8983)
inline void ZOSAPI_Interfaces::ISurfacePeriodic::PutY_Frequency ( double pRetVal ) {
    HRESULT _hr = put_Y_Frequency(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceQTypeAsphere wrapper method implementations
//

#pragma implementation_key(8984)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceQTypeAsphere::GetTypeCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_TypeCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8985)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceQTypeAsphere::GetNumberOfTermsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberOfTermsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8986)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceQTypeAsphere::GetNormRadiusCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NormRadiusCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8987)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceQTypeAsphere::AnCell ( long N ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_AnCell(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8988)
inline enum ZOSAPI_Interfaces::QTypes ZOSAPI_Interfaces::ISurfaceQTypeAsphere::GetQType ( ) {
    enum QTypes _result;
    HRESULT _hr = get_QType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8989)
inline void ZOSAPI_Interfaces::ISurfaceQTypeAsphere::PutQType ( enum QTypes pRetVal ) {
    HRESULT _hr = put_QType(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8990)
inline long ZOSAPI_Interfaces::ISurfaceQTypeAsphere::GetNumberOfTerms ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfTerms(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8991)
inline void ZOSAPI_Interfaces::ISurfaceQTypeAsphere::PutNumberOfTerms ( long pRetVal ) {
    HRESULT _hr = put_NumberOfTerms(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8992)
inline double ZOSAPI_Interfaces::ISurfaceQTypeAsphere::GetNormRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_NormRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8993)
inline void ZOSAPI_Interfaces::ISurfaceQTypeAsphere::PutNormRadius ( double pRetVal ) {
    HRESULT _hr = put_NormRadius(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8994)
inline double ZOSAPI_Interfaces::ISurfaceQTypeAsphere::GetAn ( long N ) {
    double _result = 0;
    HRESULT _hr = raw_GetAn(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8995)
inline HRESULT ZOSAPI_Interfaces::ISurfaceQTypeAsphere::SetAn ( long N, double Value ) {
    HRESULT _hr = raw_SetAn(N, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISurfaceRadialGrating wrapper method implementations
//

#pragma implementation_key(8996)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceRadialGrating::GetDeffractOrderCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_DeffractOrderCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8997)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceRadialGrating::GetGratingModeCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_GratingModeCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8998)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceRadialGrating::GetNormRadiusCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NormRadiusCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(8999)
inline double ZOSAPI_Interfaces::ISurfaceRadialGrating::GetDeffractOrder ( ) {
    double _result = 0;
    HRESULT _hr = get_DeffractOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9000)
inline void ZOSAPI_Interfaces::ISurfaceRadialGrating::PutDeffractOrder ( double pRetVal ) {
    HRESULT _hr = put_DeffractOrder(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9001)
inline long ZOSAPI_Interfaces::ISurfaceRadialGrating::GetGratingMode ( ) {
    long _result = 0;
    HRESULT _hr = get_GratingMode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9002)
inline void ZOSAPI_Interfaces::ISurfaceRadialGrating::PutGratingMode ( long pRetVal ) {
    HRESULT _hr = put_GratingMode(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9003)
inline double ZOSAPI_Interfaces::ISurfaceRadialGrating::GetNormRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_NormRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9004)
inline void ZOSAPI_Interfaces::ISurfaceRadialGrating::PutNormRadius ( double pRetVal ) {
    HRESULT _hr = put_NormRadius(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceRadialNurbs wrapper method implementations
//

#pragma implementation_key(9005)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceRadialNurbs::GetNumberOfTermsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberOfTermsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9006)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceRadialNurbs::YnCell ( long N ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_YnCell(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9007)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceRadialNurbs::ZnCell ( long N ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_ZnCell(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9008)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceRadialNurbs::WnCell ( long N ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_WnCell(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9009)
inline long ZOSAPI_Interfaces::ISurfaceRadialNurbs::GetNumberOfTerms ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfTerms(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9010)
inline void ZOSAPI_Interfaces::ISurfaceRadialNurbs::PutNumberOfTerms ( long pRetVal ) {
    HRESULT _hr = put_NumberOfTerms(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9011)
inline double ZOSAPI_Interfaces::ISurfaceRadialNurbs::GetYn ( long N ) {
    double _result = 0;
    HRESULT _hr = raw_GetYn(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9012)
inline HRESULT ZOSAPI_Interfaces::ISurfaceRadialNurbs::SetYn ( long N, double Value ) {
    HRESULT _hr = raw_SetYn(N, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(9013)
inline double ZOSAPI_Interfaces::ISurfaceRadialNurbs::GetZn ( long N ) {
    double _result = 0;
    HRESULT _hr = raw_GetZn(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9014)
inline HRESULT ZOSAPI_Interfaces::ISurfaceRadialNurbs::SetZn ( long N, double Value ) {
    HRESULT _hr = raw_SetZn(N, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(9015)
inline double ZOSAPI_Interfaces::ISurfaceRadialNurbs::GetWn ( long N ) {
    double _result = 0;
    HRESULT _hr = raw_GetWn(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9016)
inline HRESULT ZOSAPI_Interfaces::ISurfaceRadialNurbs::SetWn ( long N, double Value ) {
    HRESULT _hr = raw_SetWn(N, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISurfaceSlide wrapper method implementations
//

#pragma implementation_key(9017)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceSlide::GetModeCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ModeCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9018)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceSlide::GetX_HalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X_HalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9019)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceSlide::GetY_HalfWidthCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Y_HalfWidthCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9020)
inline long ZOSAPI_Interfaces::ISurfaceSlide::GetMode ( ) {
    long _result = 0;
    HRESULT _hr = get_Mode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9021)
inline void ZOSAPI_Interfaces::ISurfaceSlide::PutMode ( long pRetVal ) {
    HRESULT _hr = put_Mode(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9022)
inline double ZOSAPI_Interfaces::ISurfaceSlide::GetX_HalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_X_HalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9023)
inline void ZOSAPI_Interfaces::ISurfaceSlide::PutX_HalfWidth ( double pRetVal ) {
    HRESULT _hr = put_X_HalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9024)
inline double ZOSAPI_Interfaces::ISurfaceSlide::GetY_HalfWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_Y_HalfWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9025)
inline void ZOSAPI_Interfaces::ISurfaceSlide::PutY_HalfWidth ( double pRetVal ) {
    HRESULT _hr = put_Y_HalfWidth(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceSuperconic wrapper method implementations
//

#pragma implementation_key(9026)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceSuperconic::GetNumberOfTermsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberOfTermsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9027)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceSuperconic::VnCell ( long N ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_VnCell(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9028)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceSuperconic::UnCell ( long N ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_UnCell(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9029)
inline long ZOSAPI_Interfaces::ISurfaceSuperconic::GetNumberOfTerms ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfTerms(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9030)
inline void ZOSAPI_Interfaces::ISurfaceSuperconic::PutNumberOfTerms ( long pRetVal ) {
    HRESULT _hr = put_NumberOfTerms(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9031)
inline double ZOSAPI_Interfaces::ISurfaceSuperconic::GetVn ( long N ) {
    double _result = 0;
    HRESULT _hr = raw_GetVn(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9032)
inline HRESULT ZOSAPI_Interfaces::ISurfaceSuperconic::SetVn ( long N, double Value ) {
    HRESULT _hr = raw_SetVn(N, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(9033)
inline double ZOSAPI_Interfaces::ISurfaceSuperconic::GetUn ( long N ) {
    double _result = 0;
    HRESULT _hr = raw_GetUn(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9034)
inline HRESULT ZOSAPI_Interfaces::ISurfaceSuperconic::SetUn ( long N, double Value ) {
    HRESULT _hr = raw_SetUn(N, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISurfaceTilted wrapper method implementations
//

#pragma implementation_key(9035)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceTilted::GetX_TangentCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_X_TangentCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9036)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceTilted::GetY_TangentCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Y_TangentCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9037)
inline double ZOSAPI_Interfaces::ISurfaceTilted::GetX_Tangent ( ) {
    double _result = 0;
    HRESULT _hr = get_X_Tangent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9038)
inline void ZOSAPI_Interfaces::ISurfaceTilted::PutX_Tangent ( double pRetVal ) {
    HRESULT _hr = put_X_Tangent(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9039)
inline double ZOSAPI_Interfaces::ISurfaceTilted::GetY_Tangent ( ) {
    double _result = 0;
    HRESULT _hr = get_Y_Tangent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9040)
inline void ZOSAPI_Interfaces::ISurfaceTilted::PutY_Tangent ( double pRetVal ) {
    HRESULT _hr = put_Y_Tangent(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceToroidal wrapper method implementations
//

#pragma implementation_key(9041)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceToroidal::GetExtrapolateCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ExtrapolateCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9042)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceToroidal::GetRadiusOfRotationCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RadiusOfRotationCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9043)
inline long ZOSAPI_Interfaces::ISurfaceToroidal::GetExtrapolate ( ) {
    long _result = 0;
    HRESULT _hr = get_Extrapolate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9044)
inline void ZOSAPI_Interfaces::ISurfaceToroidal::PutExtrapolate ( long pRetVal ) {
    HRESULT _hr = put_Extrapolate(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9045)
inline double ZOSAPI_Interfaces::ISurfaceToroidal::GetRadiusOfRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_RadiusOfRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9046)
inline void ZOSAPI_Interfaces::ISurfaceToroidal::PutRadiusOfRotation ( double pRetVal ) {
    HRESULT _hr = put_RadiusOfRotation(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceToroidalGrat wrapper method implementations
//

#pragma implementation_key(9047)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceToroidalGrat::GetRadiusOfRotationCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RadiusOfRotationCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9048)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceToroidalGrat::GetLinesPerMicroMeterCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_LinesPerMicroMeterCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9049)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceToroidalGrat::GetDiffractionOrderCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_DiffractionOrderCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9050)
inline double ZOSAPI_Interfaces::ISurfaceToroidalGrat::GetRadiusOfRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_RadiusOfRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9051)
inline void ZOSAPI_Interfaces::ISurfaceToroidalGrat::PutRadiusOfRotation ( double pRetVal ) {
    HRESULT _hr = put_RadiusOfRotation(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9052)
inline double ZOSAPI_Interfaces::ISurfaceToroidalGrat::GetLinesPerMicroMeter ( ) {
    double _result = 0;
    HRESULT _hr = get_LinesPerMicroMeter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9053)
inline void ZOSAPI_Interfaces::ISurfaceToroidalGrat::PutLinesPerMicroMeter ( double pRetVal ) {
    HRESULT _hr = put_LinesPerMicroMeter(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9054)
inline double ZOSAPI_Interfaces::ISurfaceToroidalGrat::GetDiffractionOrder ( ) {
    double _result = 0;
    HRESULT _hr = get_DiffractionOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9055)
inline void ZOSAPI_Interfaces::ISurfaceToroidalGrat::PutDiffractionOrder ( double pRetVal ) {
    HRESULT _hr = put_DiffractionOrder(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceToroidalHologram wrapper method implementations
//

#pragma implementation_key(9056)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceToroidalHologram::GetRadiusOfRotationCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RadiusOfRotationCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9057)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceToroidalHologram::GetConst_X1_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Const_X1_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9058)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceToroidalHologram::GetConst_Y1_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Const_Y1_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9059)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceToroidalHologram::GetConst_Z1_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Const_Z1_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9060)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceToroidalHologram::GetConst_X2_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Const_X2_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9061)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceToroidalHologram::GetConst_Y2_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Const_Y2_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9062)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceToroidalHologram::GetConst_Z2_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Const_Z2_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9063)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceToroidalHologram::GetConstWaveCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ConstWaveCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9064)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceToroidalHologram::GetOrderCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_OrderCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9065)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceToroidalHologram::GetFlagCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FlagCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9066)
inline double ZOSAPI_Interfaces::ISurfaceToroidalHologram::GetRadiusOfRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_RadiusOfRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9067)
inline void ZOSAPI_Interfaces::ISurfaceToroidalHologram::PutRadiusOfRotation ( double pRetVal ) {
    HRESULT _hr = put_RadiusOfRotation(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9068)
inline double ZOSAPI_Interfaces::ISurfaceToroidalHologram::GetConst_X1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Const_X1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9069)
inline void ZOSAPI_Interfaces::ISurfaceToroidalHologram::PutConst_X1 ( double pRetVal ) {
    HRESULT _hr = put_Const_X1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9070)
inline double ZOSAPI_Interfaces::ISurfaceToroidalHologram::GetConst_Y1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Const_Y1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9071)
inline void ZOSAPI_Interfaces::ISurfaceToroidalHologram::PutConst_Y1 ( double pRetVal ) {
    HRESULT _hr = put_Const_Y1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9072)
inline double ZOSAPI_Interfaces::ISurfaceToroidalHologram::GetConst_Z1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Const_Z1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9073)
inline void ZOSAPI_Interfaces::ISurfaceToroidalHologram::PutConst_Z1 ( double pRetVal ) {
    HRESULT _hr = put_Const_Z1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9074)
inline double ZOSAPI_Interfaces::ISurfaceToroidalHologram::GetConst_X2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Const_X2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9075)
inline void ZOSAPI_Interfaces::ISurfaceToroidalHologram::PutConst_X2 ( double pRetVal ) {
    HRESULT _hr = put_Const_X2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9076)
inline double ZOSAPI_Interfaces::ISurfaceToroidalHologram::GetConst_Y2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Const_Y2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9077)
inline void ZOSAPI_Interfaces::ISurfaceToroidalHologram::PutConst_Y2 ( double pRetVal ) {
    HRESULT _hr = put_Const_Y2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9078)
inline double ZOSAPI_Interfaces::ISurfaceToroidalHologram::GetConst_Z2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Const_Z2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9079)
inline void ZOSAPI_Interfaces::ISurfaceToroidalHologram::PutConst_Z2 ( double pRetVal ) {
    HRESULT _hr = put_Const_Z2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9080)
inline double ZOSAPI_Interfaces::ISurfaceToroidalHologram::GetConstWave ( ) {
    double _result = 0;
    HRESULT _hr = get_ConstWave(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9081)
inline void ZOSAPI_Interfaces::ISurfaceToroidalHologram::PutConstWave ( double pRetVal ) {
    HRESULT _hr = put_ConstWave(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9082)
inline double ZOSAPI_Interfaces::ISurfaceToroidalHologram::GetOrder ( ) {
    double _result = 0;
    HRESULT _hr = get_Order(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9083)
inline void ZOSAPI_Interfaces::ISurfaceToroidalHologram::PutOrder ( double pRetVal ) {
    HRESULT _hr = put_Order(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9084)
inline long ZOSAPI_Interfaces::ISurfaceToroidalHologram::GetFlag ( ) {
    long _result = 0;
    HRESULT _hr = get_Flag(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9085)
inline void ZOSAPI_Interfaces::ISurfaceToroidalHologram::PutFlag ( long pRetVal ) {
    HRESULT _hr = put_Flag(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceToroidalNurbs wrapper method implementations
//

#pragma implementation_key(9086)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceToroidalNurbs::GetRadiusOfRotationCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RadiusOfRotationCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9087)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceToroidalNurbs::GetMinimum_X_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Minimum_X_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9088)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceToroidalNurbs::GetMinimumAngleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_MinimumAngleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9089)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceToroidalNurbs::GetMaximum_X_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Maximum_X_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9090)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceToroidalNurbs::GetMaximumAngleCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_MaximumAngleCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9091)
inline double ZOSAPI_Interfaces::ISurfaceToroidalNurbs::GetRadiusOfRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_RadiusOfRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9092)
inline void ZOSAPI_Interfaces::ISurfaceToroidalNurbs::PutRadiusOfRotation ( double pRetVal ) {
    HRESULT _hr = put_RadiusOfRotation(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9093)
inline double ZOSAPI_Interfaces::ISurfaceToroidalNurbs::GetMinimum_X ( ) {
    double _result = 0;
    HRESULT _hr = get_Minimum_X(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9094)
inline void ZOSAPI_Interfaces::ISurfaceToroidalNurbs::PutMinimum_X ( double pRetVal ) {
    HRESULT _hr = put_Minimum_X(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9095)
inline double ZOSAPI_Interfaces::ISurfaceToroidalNurbs::GetMinimumAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_MinimumAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9096)
inline void ZOSAPI_Interfaces::ISurfaceToroidalNurbs::PutMinimumAngle ( double pRetVal ) {
    HRESULT _hr = put_MinimumAngle(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9097)
inline double ZOSAPI_Interfaces::ISurfaceToroidalNurbs::GetMaximum_X ( ) {
    double _result = 0;
    HRESULT _hr = get_Maximum_X(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9098)
inline void ZOSAPI_Interfaces::ISurfaceToroidalNurbs::PutMaximum_X ( double pRetVal ) {
    HRESULT _hr = put_Maximum_X(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9099)
inline double ZOSAPI_Interfaces::ISurfaceToroidalNurbs::GetMaximumAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_MaximumAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9100)
inline void ZOSAPI_Interfaces::ISurfaceToroidalNurbs::PutMaximumAngle ( double pRetVal ) {
    HRESULT _hr = put_MaximumAngle(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9101)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceToroidalNurbs::GetNumberOfTermsCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NumberOfTermsCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9102)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceToroidalNurbs::YnCell ( long N ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_YnCell(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9103)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceToroidalNurbs::ZnCell ( long N ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_ZnCell(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9104)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceToroidalNurbs::WnCell ( long N ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_WnCell(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9105)
inline long ZOSAPI_Interfaces::ISurfaceToroidalNurbs::GetNumberOfTerms ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfTerms(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9106)
inline void ZOSAPI_Interfaces::ISurfaceToroidalNurbs::PutNumberOfTerms ( long pRetVal ) {
    HRESULT _hr = put_NumberOfTerms(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9107)
inline double ZOSAPI_Interfaces::ISurfaceToroidalNurbs::GetYn ( long N ) {
    double _result = 0;
    HRESULT _hr = raw_GetYn(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9108)
inline double ZOSAPI_Interfaces::ISurfaceToroidalNurbs::GetZn ( long N ) {
    double _result = 0;
    HRESULT _hr = raw_GetZn(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9109)
inline double ZOSAPI_Interfaces::ISurfaceToroidalNurbs::GetWn ( long N ) {
    double _result = 0;
    HRESULT _hr = raw_GetWn(N, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9110)
inline HRESULT ZOSAPI_Interfaces::ISurfaceToroidalNurbs::SetYn ( long N, double Value ) {
    HRESULT _hr = raw_SetYn(N, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(9111)
inline HRESULT ZOSAPI_Interfaces::ISurfaceToroidalNurbs::SetZn ( long N, double Value ) {
    HRESULT _hr = raw_SetZn(N, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(9112)
inline HRESULT ZOSAPI_Interfaces::ISurfaceToroidalNurbs::SetWn ( long N, double Value ) {
    HRESULT _hr = raw_SetWn(N, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISurfaceVariableLineSpaceGrating wrapper method implementations
//

#pragma implementation_key(9113)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceVariableLineSpaceGrating::GetDiffractOrderCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_DiffractOrderCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9114)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceVariableLineSpaceGrating::GetFocalRadius_L_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_FocalRadius_L_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9115)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceVariableLineSpaceGrating::GetCosineAlphaCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CosineAlphaCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9116)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceVariableLineSpaceGrating::GetCosineBetaCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CosineBetaCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9117)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceVariableLineSpaceGrating::GetLambdaZeroCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_LambdaZeroCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9118)
inline double ZOSAPI_Interfaces::ISurfaceVariableLineSpaceGrating::GetDiffractOrder ( ) {
    double _result = 0;
    HRESULT _hr = get_DiffractOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9119)
inline void ZOSAPI_Interfaces::ISurfaceVariableLineSpaceGrating::PutDiffractOrder ( double pRetVal ) {
    HRESULT _hr = put_DiffractOrder(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9120)
inline double ZOSAPI_Interfaces::ISurfaceVariableLineSpaceGrating::GetFocalRadius_L ( ) {
    double _result = 0;
    HRESULT _hr = get_FocalRadius_L(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9121)
inline void ZOSAPI_Interfaces::ISurfaceVariableLineSpaceGrating::PutFocalRadius_L ( double pRetVal ) {
    HRESULT _hr = put_FocalRadius_L(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9122)
inline double ZOSAPI_Interfaces::ISurfaceVariableLineSpaceGrating::GetCosineAlpha ( ) {
    double _result = 0;
    HRESULT _hr = get_CosineAlpha(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9123)
inline void ZOSAPI_Interfaces::ISurfaceVariableLineSpaceGrating::PutCosineAlpha ( double pRetVal ) {
    HRESULT _hr = put_CosineAlpha(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9124)
inline double ZOSAPI_Interfaces::ISurfaceVariableLineSpaceGrating::GetCosineBeta ( ) {
    double _result = 0;
    HRESULT _hr = get_CosineBeta(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9125)
inline void ZOSAPI_Interfaces::ISurfaceVariableLineSpaceGrating::PutCosineBeta ( double pRetVal ) {
    HRESULT _hr = put_CosineBeta(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9126)
inline double ZOSAPI_Interfaces::ISurfaceVariableLineSpaceGrating::GetLambdaZero ( ) {
    double _result = 0;
    HRESULT _hr = get_LambdaZero(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9127)
inline void ZOSAPI_Interfaces::ISurfaceVariableLineSpaceGrating::PutLambdaZero ( double pRetVal ) {
    HRESULT _hr = put_LambdaZero(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceZernikeAnnularPhase wrapper method implementations
//

#pragma implementation_key(9128)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceZernikeAnnularPhase::GetDiffractOrderCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_DiffractOrderCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9129)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceZernikeAnnularPhase::GetExtrapolateCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ExtrapolateCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9130)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceZernikeAnnularPhase::GetObscurationCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ObscurationCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9131)
inline double ZOSAPI_Interfaces::ISurfaceZernikeAnnularPhase::GetDiffractOrder ( ) {
    double _result = 0;
    HRESULT _hr = get_DiffractOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9132)
inline void ZOSAPI_Interfaces::ISurfaceZernikeAnnularPhase::PutDiffractOrder ( double pRetVal ) {
    HRESULT _hr = put_DiffractOrder(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9133)
inline long ZOSAPI_Interfaces::ISurfaceZernikeAnnularPhase::GetExtrapolate ( ) {
    long _result = 0;
    HRESULT _hr = get_Extrapolate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9134)
inline void ZOSAPI_Interfaces::ISurfaceZernikeAnnularPhase::PutExtrapolate ( long pRetVal ) {
    HRESULT _hr = put_Extrapolate(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9135)
inline double ZOSAPI_Interfaces::ISurfaceZernikeAnnularPhase::GetObscuration ( ) {
    double _result = 0;
    HRESULT _hr = get_Obscuration(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9136)
inline void ZOSAPI_Interfaces::ISurfaceZernikeAnnularPhase::PutObscuration ( double pRetVal ) {
    HRESULT _hr = put_Obscuration(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceZernikeFringePhase wrapper method implementations
//

#pragma implementation_key(9137)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceZernikeFringePhase::GetDiffractOrderCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_DiffractOrderCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9138)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceZernikeFringePhase::GetExtrapolateCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ExtrapolateCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9139)
inline double ZOSAPI_Interfaces::ISurfaceZernikeFringePhase::GetDiffractOrder ( ) {
    double _result = 0;
    HRESULT _hr = get_DiffractOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9140)
inline void ZOSAPI_Interfaces::ISurfaceZernikeFringePhase::PutDiffractOrder ( double pRetVal ) {
    HRESULT _hr = put_DiffractOrder(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9141)
inline long ZOSAPI_Interfaces::ISurfaceZernikeFringePhase::GetExtrapolate ( ) {
    long _result = 0;
    HRESULT _hr = get_Extrapolate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9142)
inline void ZOSAPI_Interfaces::ISurfaceZernikeFringePhase::PutExtrapolate ( long pRetVal ) {
    HRESULT _hr = put_Extrapolate(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceZernikeFringeSag wrapper method implementations
//

#pragma implementation_key(9143)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceZernikeFringeSag::GetExtrapolateCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ExtrapolateCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9144)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceZernikeFringeSag::GetZernikeDecenter_X_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ZernikeDecenter_X_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9145)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceZernikeFringeSag::GetZernikeDecenter_Y_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ZernikeDecenter_Y_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9146)
inline long ZOSAPI_Interfaces::ISurfaceZernikeFringeSag::GetExtrapolate ( ) {
    long _result = 0;
    HRESULT _hr = get_Extrapolate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9147)
inline void ZOSAPI_Interfaces::ISurfaceZernikeFringeSag::PutExtrapolate ( long pRetVal ) {
    HRESULT _hr = put_Extrapolate(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9148)
inline double ZOSAPI_Interfaces::ISurfaceZernikeFringeSag::GetZernikeDecenter_X ( ) {
    double _result = 0;
    HRESULT _hr = get_ZernikeDecenter_X(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9149)
inline void ZOSAPI_Interfaces::ISurfaceZernikeFringeSag::PutZernikeDecenter_X ( double pRetVal ) {
    HRESULT _hr = put_ZernikeDecenter_X(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9150)
inline double ZOSAPI_Interfaces::ISurfaceZernikeFringeSag::GetZernikeDecenter_Y ( ) {
    double _result = 0;
    HRESULT _hr = get_ZernikeDecenter_Y(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9151)
inline void ZOSAPI_Interfaces::ISurfaceZernikeFringeSag::PutZernikeDecenter_Y ( double pRetVal ) {
    HRESULT _hr = put_ZernikeDecenter_Y(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceZernikeStandardPhase wrapper method implementations
//

#pragma implementation_key(9152)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceZernikeStandardPhase::GetDiffractOrderCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_DiffractOrderCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9153)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceZernikeStandardPhase::GetExtrapolateCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ExtrapolateCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9154)
inline double ZOSAPI_Interfaces::ISurfaceZernikeStandardPhase::GetDiffractOrder ( ) {
    double _result = 0;
    HRESULT _hr = get_DiffractOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9155)
inline void ZOSAPI_Interfaces::ISurfaceZernikeStandardPhase::PutDiffractOrder ( double pRetVal ) {
    HRESULT _hr = put_DiffractOrder(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9156)
inline long ZOSAPI_Interfaces::ISurfaceZernikeStandardPhase::GetExtrapolate ( ) {
    long _result = 0;
    HRESULT _hr = get_Extrapolate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9157)
inline void ZOSAPI_Interfaces::ISurfaceZernikeStandardPhase::PutExtrapolate ( long pRetVal ) {
    HRESULT _hr = put_Extrapolate(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceZernikeStandardSag wrapper method implementations
//

#pragma implementation_key(9158)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceZernikeStandardSag::GetExtrapolateCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ExtrapolateCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9159)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceZernikeStandardSag::GetZernikeDecenter_X_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ZernikeDecenter_X_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9160)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceZernikeStandardSag::GetZernikeDecenter_Y_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ZernikeDecenter_Y_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9161)
inline long ZOSAPI_Interfaces::ISurfaceZernikeStandardSag::GetExtrapolate ( ) {
    long _result = 0;
    HRESULT _hr = get_Extrapolate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9162)
inline void ZOSAPI_Interfaces::ISurfaceZernikeStandardSag::PutExtrapolate ( long pRetVal ) {
    HRESULT _hr = put_Extrapolate(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9163)
inline double ZOSAPI_Interfaces::ISurfaceZernikeStandardSag::GetZernikeDecenter_X ( ) {
    double _result = 0;
    HRESULT _hr = get_ZernikeDecenter_X(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9164)
inline void ZOSAPI_Interfaces::ISurfaceZernikeStandardSag::PutZernikeDecenter_X ( double pRetVal ) {
    HRESULT _hr = put_ZernikeDecenter_X(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9165)
inline double ZOSAPI_Interfaces::ISurfaceZernikeStandardSag::GetZernikeDecenter_Y ( ) {
    double _result = 0;
    HRESULT _hr = get_ZernikeDecenter_Y(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9166)
inline void ZOSAPI_Interfaces::ISurfaceZernikeStandardSag::PutZernikeDecenter_Y ( double pRetVal ) {
    HRESULT _hr = put_ZernikeDecenter_Y(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISurfaceZonePlate wrapper method implementations
//

#pragma implementation_key(9167)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceZonePlate::GetModeCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ModeCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9168)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceZonePlate::GetDelta_R_Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Delta_R_Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9169)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ISurfaceZonePlate::GetReferenceWaveCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ReferenceWaveCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9170)
inline double ZOSAPI_Interfaces::ISurfaceZonePlate::GetMode ( ) {
    double _result = 0;
    HRESULT _hr = get_Mode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9171)
inline void ZOSAPI_Interfaces::ISurfaceZonePlate::PutMode ( double pRetVal ) {
    HRESULT _hr = put_Mode(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9172)
inline double ZOSAPI_Interfaces::ISurfaceZonePlate::GetDelta_R ( ) {
    double _result = 0;
    HRESULT _hr = get_Delta_R(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9173)
inline void ZOSAPI_Interfaces::ISurfaceZonePlate::PutDelta_R ( double pRetVal ) {
    HRESULT _hr = put_Delta_R(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9174)
inline double ZOSAPI_Interfaces::ISurfaceZonePlate::GetReferenceWave ( ) {
    double _result = 0;
    HRESULT _hr = get_ReferenceWave(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9175)
inline void ZOSAPI_Interfaces::ISurfaceZonePlate::PutReferenceWave ( double pRetVal ) {
    HRESULT _hr = put_ReferenceWave(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ITDERow wrapper method implementations
//

#pragma implementation_key(9176)
inline VARIANT_BOOL ZOSAPI_Interfaces::ITDERow::GetIsActive ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsActive(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9177)
inline long ZOSAPI_Interfaces::ITDERow::GetOperandNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_OperandNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9178)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ITDERow::GetOperandCell ( enum ToleranceColumn Col ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_GetOperandCell(Col, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9179)
inline _bstr_t ZOSAPI_Interfaces::ITDERow::GetTypeName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TypeName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(9180)
inline enum ZOSAPI_Interfaces::ToleranceOperandType ZOSAPI_Interfaces::ITDERow::GetType ( ) {
    enum ToleranceOperandType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9181)
inline SAFEARRAY * ZOSAPI_Interfaces::ITDERow::AvailableOperandTypes ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_AvailableOperandTypes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9182)
inline VARIANT_BOOL ZOSAPI_Interfaces::ITDERow::ChangeType ( enum ToleranceOperandType Type ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_ChangeType(Type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9183)
inline VARIANT_BOOL ZOSAPI_Interfaces::ITDERow::GetDoNotAdjustDuringInverseTolerancing ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DoNotAdjustDuringInverseTolerancing(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9184)
inline void ZOSAPI_Interfaces::ITDERow::PutDoNotAdjustDuringInverseTolerancing ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_DoNotAdjustDuringInverseTolerancing(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9185)
inline enum ZOSAPI_Interfaces::ZemaxColor ZOSAPI_Interfaces::ITDERow::GetRowColor ( ) {
    enum ZemaxColor _result;
    HRESULT _hr = get_RowColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9186)
inline void ZOSAPI_Interfaces::ITDERow::PutRowColor ( enum ZemaxColor pRetVal ) {
    HRESULT _hr = put_RowColor(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9187)
inline double ZOSAPI_Interfaces::ITDERow::GetMin ( ) {
    double _result = 0;
    HRESULT _hr = get_Min(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9188)
inline void ZOSAPI_Interfaces::ITDERow::PutMin ( double pRetVal ) {
    HRESULT _hr = put_Min(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9189)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ITDERow::GetMinCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_MinCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9190)
inline VARIANT_BOOL ZOSAPI_Interfaces::ITDERow::GetIsMinUsed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsMinUsed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9191)
inline double ZOSAPI_Interfaces::ITDERow::GetMax ( ) {
    double _result = 0;
    HRESULT _hr = get_Max(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9192)
inline void ZOSAPI_Interfaces::ITDERow::PutMax ( double pRetVal ) {
    HRESULT _hr = put_Max(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9193)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ITDERow::GetMaxCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_MaxCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9194)
inline VARIANT_BOOL ZOSAPI_Interfaces::ITDERow::GetIsMaxUsed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsMaxUsed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9195)
inline _bstr_t ZOSAPI_Interfaces::ITDERow::GetComment ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Comment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(9196)
inline void ZOSAPI_Interfaces::ITDERow::PutComment ( _bstr_t pRetVal ) {
    HRESULT _hr = put_Comment(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9197)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ITDERow::GetCommentCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CommentCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9198)
inline long ZOSAPI_Interfaces::ITDERow::GetParam1 ( ) {
    long _result = 0;
    HRESULT _hr = get_Param1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9199)
inline void ZOSAPI_Interfaces::ITDERow::PutParam1 ( long pRetVal ) {
    HRESULT _hr = put_Param1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9200)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ITDERow::GetParam1Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Param1Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9201)
inline VARIANT_BOOL ZOSAPI_Interfaces::ITDERow::GetIsParam1Used ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsParam1Used(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9202)
inline long ZOSAPI_Interfaces::ITDERow::GetParam2 ( ) {
    long _result = 0;
    HRESULT _hr = get_Param2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9203)
inline void ZOSAPI_Interfaces::ITDERow::PutParam2 ( long pRetVal ) {
    HRESULT _hr = put_Param2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9204)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ITDERow::GetParam2Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Param2Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9205)
inline VARIANT_BOOL ZOSAPI_Interfaces::ITDERow::GetIsParam2Used ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsParam2Used(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9206)
inline long ZOSAPI_Interfaces::ITDERow::GetParam3 ( ) {
    long _result = 0;
    HRESULT _hr = get_Param3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9207)
inline void ZOSAPI_Interfaces::ITDERow::PutParam3 ( long pRetVal ) {
    HRESULT _hr = put_Param3(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9208)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ITDERow::GetParam3Cell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_Param3Cell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9209)
inline VARIANT_BOOL ZOSAPI_Interfaces::ITDERow::GetIsParam3Used ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsParam3Used(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9210)
inline double ZOSAPI_Interfaces::ITDERow::GetNominal ( ) {
    double _result = 0;
    HRESULT _hr = get_Nominal(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9211)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ITDERow::GetNominalCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_NominalCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9212)
inline VARIANT_BOOL ZOSAPI_Interfaces::ITDERow::GetIsNominalUsed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsNominalUsed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IToleranceDataEditor wrapper method implementations
//

#pragma implementation_key(9213)
inline long ZOSAPI_Interfaces::IToleranceDataEditor::GetRowToOperandOffset ( ) {
    long _result = 0;
    HRESULT _hr = get_RowToOperandOffset(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9214)
inline long ZOSAPI_Interfaces::IToleranceDataEditor::GetNumberOfOperands ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfOperands(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9215)
inline enum ZOSAPI_Interfaces::ToleranceColumn ZOSAPI_Interfaces::IToleranceDataEditor::GetFirstColumn ( ) {
    enum ToleranceColumn _result;
    HRESULT _hr = get_FirstColumn(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9216)
inline enum ZOSAPI_Interfaces::ToleranceColumn ZOSAPI_Interfaces::IToleranceDataEditor::GetLastColumn ( ) {
    enum ToleranceColumn _result;
    HRESULT _hr = get_LastColumn(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9217)
inline ZOSAPI_Interfaces::ITDERowPtr ZOSAPI_Interfaces::IToleranceDataEditor::GetOperandAt ( long OperandNumber ) {
    struct ITDERow * _result = 0;
    HRESULT _hr = raw_GetOperandAt(OperandNumber, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ITDERowPtr(_result, false);
}

#pragma implementation_key(9218)
inline ZOSAPI_Interfaces::ITDERowPtr ZOSAPI_Interfaces::IToleranceDataEditor::InsertNewOperandAt ( long OperandNumber ) {
    struct ITDERow * _result = 0;
    HRESULT _hr = raw_InsertNewOperandAt(OperandNumber, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ITDERowPtr(_result, false);
}

#pragma implementation_key(9219)
inline ZOSAPI_Interfaces::ITDERowPtr ZOSAPI_Interfaces::IToleranceDataEditor::AddOperand ( ) {
    struct ITDERow * _result = 0;
    HRESULT _hr = raw_AddOperand(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ITDERowPtr(_result, false);
}

#pragma implementation_key(9220)
inline VARIANT_BOOL ZOSAPI_Interfaces::IToleranceDataEditor::RemoveOperandAt ( long OperandNumber ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_RemoveOperandAt(OperandNumber, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9221)
inline long ZOSAPI_Interfaces::IToleranceDataEditor::RemoveOperandsAt ( long OperandNumber, long numOperands ) {
    long _result = 0;
    HRESULT _hr = raw_RemoveOperandsAt(OperandNumber, numOperands, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9222)
inline VARIANT_BOOL ZOSAPI_Interfaces::IToleranceDataEditor::ShowTDE ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_ShowTDE(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9223)
inline HRESULT ZOSAPI_Interfaces::IToleranceDataEditor::HideTDE ( ) {
    HRESULT _hr = raw_HideTDE();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(9224)
inline ZOSAPI_Interfaces::INSCToleranceWizardPtr ZOSAPI_Interfaces::IToleranceDataEditor::GetNSCToleranceWizard ( ) {
    struct INSCToleranceWizard * _result = 0;
    HRESULT _hr = get_NSCToleranceWizard(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return INSCToleranceWizardPtr(_result, false);
}

#pragma implementation_key(9225)
inline ZOSAPI_Interfaces::ISEQToleranceWizardPtr ZOSAPI_Interfaces::IToleranceDataEditor::GetSEQToleranceWizard ( ) {
    struct ISEQToleranceWizard * _result = 0;
    HRESULT _hr = get_SEQToleranceWizard(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISEQToleranceWizardPtr(_result, false);
}

#pragma implementation_key(9226)
inline VARIANT_BOOL ZOSAPI_Interfaces::IToleranceDataEditor::LoadToleranceFile ( _bstr_t fileName ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_LoadToleranceFile(fileName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9227)
inline HRESULT ZOSAPI_Interfaces::IToleranceDataEditor::SaveToleranceFile ( _bstr_t fileName ) {
    HRESULT _hr = raw_SaveToleranceFile(fileName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(9228)
inline long ZOSAPI_Interfaces::IToleranceDataEditor::CopyOperands ( long fromOperandNumber, long NumberOfOperands, long toOperandNumber ) {
    long _result = 0;
    HRESULT _hr = raw_CopyOperands(fromOperandNumber, NumberOfOperands, toOperandNumber, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9229)
inline long ZOSAPI_Interfaces::IToleranceDataEditor::CopyOperandsFrom ( struct IToleranceDataEditor * fromEditor, long fromOperandNumber, long NumberOfOperands, long toOperandNumber ) {
    long _result = 0;
    HRESULT _hr = raw_CopyOperandsFrom(fromEditor, fromOperandNumber, NumberOfOperands, toOperandNumber, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IMFERow wrapper method implementations
//

#pragma implementation_key(9230)
inline VARIANT_BOOL ZOSAPI_Interfaces::IMFERow::GetIsActive ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsActive(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9231)
inline long ZOSAPI_Interfaces::IMFERow::GetOperandNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_OperandNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9232)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IMFERow::GetOperandCell ( enum MeritColumn Col ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_GetOperandCell(Col, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9233)
inline _bstr_t ZOSAPI_Interfaces::IMFERow::GetTypeName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TypeName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(9234)
inline enum ZOSAPI_Interfaces::MeritOperandType ZOSAPI_Interfaces::IMFERow::GetType ( ) {
    enum MeritOperandType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9235)
inline SAFEARRAY * ZOSAPI_Interfaces::IMFERow::AvailableOperandTypes ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_AvailableOperandTypes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9236)
inline VARIANT_BOOL ZOSAPI_Interfaces::IMFERow::ChangeType ( enum MeritOperandType Type ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_ChangeType(Type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9237)
inline enum ZOSAPI_Interfaces::ZemaxColor ZOSAPI_Interfaces::IMFERow::GetRowColor ( ) {
    enum ZemaxColor _result;
    HRESULT _hr = get_RowColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9238)
inline void ZOSAPI_Interfaces::IMFERow::PutRowColor ( enum ZemaxColor pRetVal ) {
    HRESULT _hr = put_RowColor(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9239)
inline double ZOSAPI_Interfaces::IMFERow::GetTarget ( ) {
    double _result = 0;
    HRESULT _hr = get_Target(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9240)
inline void ZOSAPI_Interfaces::IMFERow::PutTarget ( double pRetVal ) {
    HRESULT _hr = put_Target(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9241)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IMFERow::GetTargetCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_TargetCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9242)
inline double ZOSAPI_Interfaces::IMFERow::GetWeight ( ) {
    double _result = 0;
    HRESULT _hr = get_Weight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9243)
inline void ZOSAPI_Interfaces::IMFERow::PutWeight ( double pRetVal ) {
    HRESULT _hr = put_Weight(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9244)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IMFERow::GetWeightCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_WeightCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9245)
inline double ZOSAPI_Interfaces::IMFERow::GetValue ( ) {
    double _result = 0;
    HRESULT _hr = get_Value(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9246)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IMFERow::GetValueCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ValueCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9247)
inline double ZOSAPI_Interfaces::IMFERow::GetContribution ( ) {
    double _result = 0;
    HRESULT _hr = get_Contribution(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9248)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IMFERow::GetContributionCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ContributionCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

//
// interface IMeritFunctionEditor wrapper method implementations
//

#pragma implementation_key(9249)
inline long ZOSAPI_Interfaces::IMeritFunctionEditor::GetRowToOperandOffset ( ) {
    long _result = 0;
    HRESULT _hr = get_RowToOperandOffset(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9250)
inline long ZOSAPI_Interfaces::IMeritFunctionEditor::GetNumberOfOperands ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfOperands(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9251)
inline enum ZOSAPI_Interfaces::MeritColumn ZOSAPI_Interfaces::IMeritFunctionEditor::GetFirstColumn ( ) {
    enum MeritColumn _result;
    HRESULT _hr = get_FirstColumn(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9252)
inline enum ZOSAPI_Interfaces::MeritColumn ZOSAPI_Interfaces::IMeritFunctionEditor::GetLastColumn ( ) {
    enum MeritColumn _result;
    HRESULT _hr = get_LastColumn(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9253)
inline ZOSAPI_Interfaces::IMFERowPtr ZOSAPI_Interfaces::IMeritFunctionEditor::GetOperandAt ( long OperandNumber ) {
    struct IMFERow * _result = 0;
    HRESULT _hr = raw_GetOperandAt(OperandNumber, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IMFERowPtr(_result, false);
}

#pragma implementation_key(9254)
inline ZOSAPI_Interfaces::IMFERowPtr ZOSAPI_Interfaces::IMeritFunctionEditor::InsertNewOperandAt ( long OperandNumber ) {
    struct IMFERow * _result = 0;
    HRESULT _hr = raw_InsertNewOperandAt(OperandNumber, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IMFERowPtr(_result, false);
}

#pragma implementation_key(9255)
inline ZOSAPI_Interfaces::IMFERowPtr ZOSAPI_Interfaces::IMeritFunctionEditor::AddOperand ( ) {
    struct IMFERow * _result = 0;
    HRESULT _hr = raw_AddOperand(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IMFERowPtr(_result, false);
}

#pragma implementation_key(9256)
inline VARIANT_BOOL ZOSAPI_Interfaces::IMeritFunctionEditor::RemoveOperandAt ( long OperandNumber ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_RemoveOperandAt(OperandNumber, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9257)
inline long ZOSAPI_Interfaces::IMeritFunctionEditor::RemoveOperandsAt ( long OperandNumber, long numOperands ) {
    long _result = 0;
    HRESULT _hr = raw_RemoveOperandsAt(OperandNumber, numOperands, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9258)
inline VARIANT_BOOL ZOSAPI_Interfaces::IMeritFunctionEditor::ShowMFE ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_ShowMFE(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9259)
inline HRESULT ZOSAPI_Interfaces::IMeritFunctionEditor::HideMFE ( ) {
    HRESULT _hr = raw_HideMFE();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(9260)
inline HRESULT ZOSAPI_Interfaces::IMeritFunctionEditor::SaveMeritFunction ( _bstr_t fileName ) {
    HRESULT _hr = raw_SaveMeritFunction(fileName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(9261)
inline HRESULT ZOSAPI_Interfaces::IMeritFunctionEditor::LoadMeritFunction ( _bstr_t fileName ) {
    HRESULT _hr = raw_LoadMeritFunction(fileName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(9262)
inline long ZOSAPI_Interfaces::IMeritFunctionEditor::InsertMeritFunction ( _bstr_t fileName, long OperandNumber ) {
    long _result = 0;
    HRESULT _hr = raw_InsertMeritFunction(fileName, OperandNumber, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9263)
inline SAFEARRAY * ZOSAPI_Interfaces::IMeritFunctionEditor::GetMeritFunctionFiles ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_GetMeritFunctionFiles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9264)
inline _bstr_t ZOSAPI_Interfaces::IMeritFunctionEditor::GetMeritFunctionDirectory ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_MeritFunctionDirectory(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(9265)
inline double ZOSAPI_Interfaces::IMeritFunctionEditor::CalculateMeritFunction ( ) {
    double _result = 0;
    HRESULT _hr = raw_CalculateMeritFunction(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9266)
inline double ZOSAPI_Interfaces::IMeritFunctionEditor::GetOperandValue ( enum MeritOperandType Type, long srf, long wave, double Hx, double Hy, double Px, double Py, double Ex, double Ey ) {
    double _result = 0;
    HRESULT _hr = raw_GetOperandValue(Type, srf, wave, Hx, Hy, Px, Py, Ex, Ey, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9267)
inline ZOSAPI_Interfaces::INSCOptimizationWizardPtr ZOSAPI_Interfaces::IMeritFunctionEditor::GetNSCOptimizationWizard ( ) {
    struct INSCOptimizationWizard * _result = 0;
    HRESULT _hr = get_NSCOptimizationWizard(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return INSCOptimizationWizardPtr(_result, false);
}

#pragma implementation_key(9268)
inline ZOSAPI_Interfaces::ISEQOptimizationWizardPtr ZOSAPI_Interfaces::IMeritFunctionEditor::GetSEQOptimizationWizard ( ) {
    struct ISEQOptimizationWizard * _result = 0;
    HRESULT _hr = get_SEQOptimizationWizard(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISEQOptimizationWizardPtr(_result, false);
}

#pragma implementation_key(9269)
inline ZOSAPI_Interfaces::INSCBitmapWizardPtr ZOSAPI_Interfaces::IMeritFunctionEditor::GetNSCBitmapWizard ( ) {
    struct INSCBitmapWizard * _result = 0;
    HRESULT _hr = get_NSCBitmapWizard(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return INSCBitmapWizardPtr(_result, false);
}

#pragma implementation_key(9270)
inline ZOSAPI_Interfaces::INSCRoadwayLightingWizardPtr ZOSAPI_Interfaces::IMeritFunctionEditor::GetNSCRoadwayLightingWizard ( ) {
    struct INSCRoadwayLightingWizard * _result = 0;
    HRESULT _hr = get_NSCRoadwayLightingWizard(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return INSCRoadwayLightingWizardPtr(_result, false);
}

#pragma implementation_key(9271)
inline long ZOSAPI_Interfaces::IMeritFunctionEditor::CopyOperands ( long fromOperandNumber, long NumberOfOperands, long toOperandNumber ) {
    long _result = 0;
    HRESULT _hr = raw_CopyOperands(fromOperandNumber, NumberOfOperands, toOperandNumber, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9272)
inline long ZOSAPI_Interfaces::IMeritFunctionEditor::CopyOperandsFrom ( struct IMeritFunctionEditor * fromEditor, long fromOperandNumber, long NumberOfOperands, long toOperandNumber ) {
    long _result = 0;
    HRESULT _hr = raw_CopyOperandsFrom(fromEditor, fromOperandNumber, NumberOfOperands, toOperandNumber, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IMCERow wrapper method implementations
//

#pragma implementation_key(9273)
inline VARIANT_BOOL ZOSAPI_Interfaces::IMCERow::GetIsActive ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsActive(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9274)
inline long ZOSAPI_Interfaces::IMCERow::GetOperandNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_OperandNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9275)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::IMCERow::GetOperandCell ( long Configuration ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_GetOperandCell(Configuration, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9276)
inline _bstr_t ZOSAPI_Interfaces::IMCERow::GetTypeName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TypeName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(9277)
inline enum ZOSAPI_Interfaces::MultiConfigOperandType ZOSAPI_Interfaces::IMCERow::GetType ( ) {
    enum MultiConfigOperandType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9278)
inline SAFEARRAY * ZOSAPI_Interfaces::IMCERow::AvailableConfigOperandTypes ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_AvailableConfigOperandTypes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9279)
inline VARIANT_BOOL ZOSAPI_Interfaces::IMCERow::ChangeType ( enum MultiConfigOperandType Type ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_ChangeType(Type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9280)
inline enum ZOSAPI_Interfaces::ZemaxColor ZOSAPI_Interfaces::IMCERow::GetRowColor ( ) {
    enum ZemaxColor _result;
    HRESULT _hr = get_RowColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9281)
inline void ZOSAPI_Interfaces::IMCERow::PutRowColor ( enum ZemaxColor pRetVal ) {
    HRESULT _hr = put_RowColor(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9282)
inline long ZOSAPI_Interfaces::IMCERow::GetParam1 ( ) {
    long _result = 0;
    HRESULT _hr = get_Param1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9283)
inline void ZOSAPI_Interfaces::IMCERow::PutParam1 ( long pRetVal ) {
    HRESULT _hr = put_Param1(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9284)
inline VARIANT_BOOL ZOSAPI_Interfaces::IMCERow::GetParam1Enabled ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Param1Enabled(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9285)
inline long ZOSAPI_Interfaces::IMCERow::GetParam2 ( ) {
    long _result = 0;
    HRESULT _hr = get_Param2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9286)
inline void ZOSAPI_Interfaces::IMCERow::PutParam2 ( long pRetVal ) {
    HRESULT _hr = put_Param2(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9287)
inline VARIANT_BOOL ZOSAPI_Interfaces::IMCERow::GetParam2Enabled ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Param2Enabled(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9288)
inline long ZOSAPI_Interfaces::IMCERow::GetParam3 ( ) {
    long _result = 0;
    HRESULT _hr = get_Param3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9289)
inline void ZOSAPI_Interfaces::IMCERow::PutParam3 ( long pRetVal ) {
    HRESULT _hr = put_Param3(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9290)
inline VARIANT_BOOL ZOSAPI_Interfaces::IMCERow::GetParam3Enabled ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Param3Enabled(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface IMultiConfigEditor wrapper method implementations
//

#pragma implementation_key(9291)
inline long ZOSAPI_Interfaces::IMultiConfigEditor::GetRowToOperandOffset ( ) {
    long _result = 0;
    HRESULT _hr = get_RowToOperandOffset(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9292)
inline long ZOSAPI_Interfaces::IMultiConfigEditor::GetNumberOfOperands ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfOperands(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9293)
inline long ZOSAPI_Interfaces::IMultiConfigEditor::GetFirstConfiguration ( ) {
    long _result = 0;
    HRESULT _hr = get_FirstConfiguration(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9294)
inline long ZOSAPI_Interfaces::IMultiConfigEditor::GetLastConfiguration ( ) {
    long _result = 0;
    HRESULT _hr = get_LastConfiguration(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9295)
inline long ZOSAPI_Interfaces::IMultiConfigEditor::GetNumberOfConfigurations ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfConfigurations(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9296)
inline long ZOSAPI_Interfaces::IMultiConfigEditor::GetCurrentConfiguration ( ) {
    long _result = 0;
    HRESULT _hr = get_CurrentConfiguration(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9297)
inline VARIANT_BOOL ZOSAPI_Interfaces::IMultiConfigEditor::SetCurrentConfiguration ( long configurationNumber ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_SetCurrentConfiguration(configurationNumber, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9298)
inline VARIANT_BOOL ZOSAPI_Interfaces::IMultiConfigEditor::DeleteConfiguration ( long configurationNumber ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_DeleteConfiguration(configurationNumber, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9299)
inline VARIANT_BOOL ZOSAPI_Interfaces::IMultiConfigEditor::DeleteAllConfigurations ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_DeleteAllConfigurations(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9300)
inline VARIANT_BOOL ZOSAPI_Interfaces::IMultiConfigEditor::InsertConfiguration ( long configurationNumber, VARIANT_BOOL withPickups ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_InsertConfiguration(configurationNumber, withPickups, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9301)
inline VARIANT_BOOL ZOSAPI_Interfaces::IMultiConfigEditor::AddConfiguration ( VARIANT_BOOL withPickups ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_AddConfiguration(withPickups, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9302)
inline HRESULT ZOSAPI_Interfaces::IMultiConfigEditor::MakeSingleConfiguration ( ) {
    HRESULT _hr = raw_MakeSingleConfiguration();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(9303)
inline HRESULT ZOSAPI_Interfaces::IMultiConfigEditor::MakeSingleConfigurationOpt ( VARIANT_BOOL deleteMFEOperands ) {
    HRESULT _hr = raw_MakeSingleConfigurationOpt(deleteMFEOperands);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(9304)
inline VARIANT_BOOL ZOSAPI_Interfaces::IMultiConfigEditor::NextConfiguration ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_NextConfiguration(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9305)
inline VARIANT_BOOL ZOSAPI_Interfaces::IMultiConfigEditor::PrevConfiguration ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_PrevConfiguration(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9306)
inline ZOSAPI_Interfaces::IMCERowPtr ZOSAPI_Interfaces::IMultiConfigEditor::GetOperandAt ( long OperandNumber ) {
    struct IMCERow * _result = 0;
    HRESULT _hr = raw_GetOperandAt(OperandNumber, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IMCERowPtr(_result, false);
}

#pragma implementation_key(9307)
inline ZOSAPI_Interfaces::IMCERowPtr ZOSAPI_Interfaces::IMultiConfigEditor::InsertNewOperandAt ( long OperandNumber ) {
    struct IMCERow * _result = 0;
    HRESULT _hr = raw_InsertNewOperandAt(OperandNumber, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IMCERowPtr(_result, false);
}

#pragma implementation_key(9308)
inline ZOSAPI_Interfaces::IMCERowPtr ZOSAPI_Interfaces::IMultiConfigEditor::AddOperand ( ) {
    struct IMCERow * _result = 0;
    HRESULT _hr = raw_AddOperand(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IMCERowPtr(_result, false);
}

#pragma implementation_key(9309)
inline VARIANT_BOOL ZOSAPI_Interfaces::IMultiConfigEditor::RemoveOperandAt ( long OperandNumber ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_RemoveOperandAt(OperandNumber, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9310)
inline long ZOSAPI_Interfaces::IMultiConfigEditor::RemoveOperandsAt ( long OperandNumber, long numOperands ) {
    long _result = 0;
    HRESULT _hr = raw_RemoveOperandsAt(OperandNumber, numOperands, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9311)
inline VARIANT_BOOL ZOSAPI_Interfaces::IMultiConfigEditor::ShowMCE ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_ShowMCE(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9312)
inline HRESULT ZOSAPI_Interfaces::IMultiConfigEditor::HideMCE ( ) {
    HRESULT _hr = raw_HideMCE();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(9313)
inline long ZOSAPI_Interfaces::IMultiConfigEditor::CopyOperands ( long fromOperandNumber, long NumberOfOperands, long toOperandNumber ) {
    long _result = 0;
    HRESULT _hr = raw_CopyOperands(fromOperandNumber, NumberOfOperands, toOperandNumber, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9314)
inline long ZOSAPI_Interfaces::IMultiConfigEditor::CopyOperandsFrom ( struct IMultiConfigEditor * fromEditor, long fromOperandNumber, long NumberOfOperands, long toOperandNumber ) {
    long _result = 0;
    HRESULT _hr = raw_CopyOperandsFrom(fromEditor, fromOperandNumber, NumberOfOperands, toOperandNumber, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface INonSeqEditor wrapper method implementations
//

#pragma implementation_key(9315)
inline SAFEARRAY * ZOSAPI_Interfaces::INonSeqEditor::AllAvailableObjectNames ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_AllAvailableObjectNames(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9316)
inline SAFEARRAY * ZOSAPI_Interfaces::INonSeqEditor::AvailableSourceNames ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_AvailableSourceNames(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9317)
inline SAFEARRAY * ZOSAPI_Interfaces::INonSeqEditor::AvailableDetectorNames ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_AvailableDetectorNames(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9318)
inline SAFEARRAY * ZOSAPI_Interfaces::INonSeqEditor::AvailableObjectNames ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_AvailableObjectNames(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9319)
inline enum ZOSAPI_Interfaces::ObjectType ZOSAPI_Interfaces::INonSeqEditor::ObjectTypeFromObjectName ( _bstr_t objectName ) {
    enum ObjectType _result;
    HRESULT _hr = raw_ObjectTypeFromObjectName(objectName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9320)
inline _bstr_t ZOSAPI_Interfaces::INonSeqEditor::ObjectNameFromObjectType ( enum ObjectType ObjectType ) {
    BSTR _result = 0;
    HRESULT _hr = raw_ObjectNameFromObjectType(ObjectType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(9321)
inline long ZOSAPI_Interfaces::INonSeqEditor::GetRowToObjectOffset ( ) {
    long _result = 0;
    HRESULT _hr = get_RowToObjectOffset(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9322)
inline long ZOSAPI_Interfaces::INonSeqEditor::GetActiveSurface ( ) {
    long _result = 0;
    HRESULT _hr = get_ActiveSurface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9323)
inline VARIANT_BOOL ZOSAPI_Interfaces::INonSeqEditor::SetActiveSurface ( long SurfaceNumber ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_SetActiveSurface(SurfaceNumber, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9324)
inline VARIANT_BOOL ZOSAPI_Interfaces::INonSeqEditor::NextNSCGroup ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_NextNSCGroup(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9325)
inline VARIANT_BOOL ZOSAPI_Interfaces::INonSeqEditor::PrevNSCGroup ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_PrevNSCGroup(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9326)
inline long ZOSAPI_Interfaces::INonSeqEditor::GetNumberOfObjects ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfObjects(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9327)
inline enum ZOSAPI_Interfaces::ObjectColumn ZOSAPI_Interfaces::INonSeqEditor::GetFirstColumn ( ) {
    enum ObjectColumn _result;
    HRESULT _hr = get_FirstColumn(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9328)
inline enum ZOSAPI_Interfaces::ObjectColumn ZOSAPI_Interfaces::INonSeqEditor::GetLastColumn ( ) {
    enum ObjectColumn _result;
    HRESULT _hr = get_LastColumn(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9329)
inline ZOSAPI_Interfaces::INCERowPtr ZOSAPI_Interfaces::INonSeqEditor::GetObjectAt ( long ObjectNumber ) {
    struct INCERow * _result = 0;
    HRESULT _hr = raw_GetObjectAt(ObjectNumber, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return INCERowPtr(_result, false);
}

#pragma implementation_key(9330)
inline ZOSAPI_Interfaces::INCERowPtr ZOSAPI_Interfaces::INonSeqEditor::InsertNewObjectAt ( long ObjectNumber ) {
    struct INCERow * _result = 0;
    HRESULT _hr = raw_InsertNewObjectAt(ObjectNumber, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return INCERowPtr(_result, false);
}

#pragma implementation_key(9331)
inline ZOSAPI_Interfaces::INCERowPtr ZOSAPI_Interfaces::INonSeqEditor::AddObject ( ) {
    struct INCERow * _result = 0;
    HRESULT _hr = raw_AddObject(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return INCERowPtr(_result, false);
}

#pragma implementation_key(9332)
inline VARIANT_BOOL ZOSAPI_Interfaces::INonSeqEditor::RemoveObjectAt ( long ObjectNumber ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_RemoveObjectAt(ObjectNumber, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9333)
inline long ZOSAPI_Interfaces::INonSeqEditor::RemoveObjectsAt ( long ObjectNumber, long numObjects ) {
    long _result = 0;
    HRESULT _hr = raw_RemoveObjectsAt(ObjectNumber, numObjects, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9334)
inline HRESULT ZOSAPI_Interfaces::INonSeqEditor::ReloadObject ( long ObjectNumber ) {
    HRESULT _hr = raw_ReloadObject(ObjectNumber);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(9335)
inline HRESULT ZOSAPI_Interfaces::INonSeqEditor::ReloadAllObjects ( ) {
    HRESULT _hr = raw_ReloadAllObjects();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(9336)
inline VARIANT_BOOL ZOSAPI_Interfaces::INonSeqEditor::ShowNCE ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_ShowNCE(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9337)
inline HRESULT ZOSAPI_Interfaces::INonSeqEditor::HideNCE ( ) {
    HRESULT _hr = raw_HideNCE();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(9338)
inline VARIANT_BOOL ZOSAPI_Interfaces::INonSeqEditor::GetMatrix ( long ObjectNumber, double * R11, double * R12, double * R13, double * R21, double * R22, double * R23, double * R31, double * R32, double * R33, double * xo, double * yo, double * zo ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_GetMatrix(ObjectNumber, R11, R12, R13, R21, R22, R23, R31, R32, R33, xo, yo, zo, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9339)
inline VARIANT_BOOL ZOSAPI_Interfaces::INonSeqEditor::GetDetectorDimensions ( long ObjectNumber, unsigned long * Rows, unsigned long * Cols ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_GetDetectorDimensions(ObjectNumber, Rows, Cols, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9340)
inline VARIANT_BOOL ZOSAPI_Interfaces::INonSeqEditor::GetCoherentData ( long ObjectNumber, long pixel, enum DetectorDataType Data, double * Value ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_GetCoherentData(ObjectNumber, pixel, Data, Value, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9341)
inline SAFEARRAY * ZOSAPI_Interfaces::INonSeqEditor::GetAllCoherentDataSafe ( long ObjectNumber, enum DetectorDataType Data ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_GetAllCoherentDataSafe(ObjectNumber, Data, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9342)
inline VARIANT_BOOL ZOSAPI_Interfaces::INonSeqEditor::GetAllCoherentData ( long ObjectNumber, enum DetectorDataType Data, unsigned long numPixels, double * detectorData ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_GetAllCoherentData(ObjectNumber, Data, numPixels, detectorData, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9343)
inline unsigned long ZOSAPI_Interfaces::INonSeqEditor::GetDetectorSize ( long ObjectNumber ) {
    unsigned long _result = 0;
    HRESULT _hr = raw_GetDetectorSize(ObjectNumber, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9344)
inline VARIANT_BOOL ZOSAPI_Interfaces::INonSeqEditor::GetDetectorData ( long ObjectNumber, long pixel, long Data, double * Value ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_GetDetectorData(ObjectNumber, pixel, Data, Value, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9345)
inline VARIANT_BOOL ZOSAPI_Interfaces::INonSeqEditor::GetAllDetectorData ( long ObjectNumber, long Data, unsigned long numPixels, double * detectorData ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_GetAllDetectorData(ObjectNumber, Data, numPixels, detectorData, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9346)
inline SAFEARRAY * ZOSAPI_Interfaces::INonSeqEditor::GetAllDetectorDataSafe ( long ObjectNumber, long Data ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_GetAllDetectorDataSafe(ObjectNumber, Data, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9347)
inline VARIANT_BOOL ZOSAPI_Interfaces::INonSeqEditor::GetPolarDetectorData ( long ObjectNumber, long pixel, enum PolarDetectorDataType Data, double * Value ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_GetPolarDetectorData(ObjectNumber, pixel, Data, Value, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9348)
inline VARIANT_BOOL ZOSAPI_Interfaces::INonSeqEditor::GetAllPolarDetectorData ( long ObjectNumber, enum PolarDetectorDataType Data, unsigned long numPixels, double * detectorData ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_GetAllPolarDetectorData(ObjectNumber, Data, numPixels, detectorData, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9349)
inline SAFEARRAY * ZOSAPI_Interfaces::INonSeqEditor::GetAllPolarDetectorDataSafe ( long ObjectNumber, enum PolarDetectorDataType Data ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_GetAllPolarDetectorDataSafe(ObjectNumber, Data, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9350)
inline VARIANT_BOOL ZOSAPI_Interfaces::INonSeqEditor::LoadDetector ( long ObjectNumber, _bstr_t fileName, VARIANT_BOOL appendData ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_LoadDetector(ObjectNumber, fileName, appendData, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9351)
inline VARIANT_BOOL ZOSAPI_Interfaces::INonSeqEditor::SaveDetector ( long ObjectNumber, _bstr_t fileName ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_SaveDetector(ObjectNumber, fileName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9352)
inline long ZOSAPI_Interfaces::INonSeqEditor::CopyObjects ( long fromObjectNumber, long NumberOfObjects, long toObjectNumber ) {
    long _result = 0;
    HRESULT _hr = raw_CopyObjects(fromObjectNumber, NumberOfObjects, toObjectNumber, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9353)
inline long ZOSAPI_Interfaces::INonSeqEditor::CopyObjectsFrom ( struct INonSeqEditor * fromEditor, long fromObjectNumber, long NumberOfObjects, long toObjectNumber ) {
    long _result = 0;
    HRESULT _hr = raw_CopyObjectsFrom(fromEditor, fromObjectNumber, NumberOfObjects, toObjectNumber, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface INCERow wrapper method implementations
//

#pragma implementation_key(9354)
inline VARIANT_BOOL ZOSAPI_Interfaces::INCERow::GetIsActive ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsActive(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9355)
inline long ZOSAPI_Interfaces::INCERow::GetObjectNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_ObjectNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9356)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::INCERow::GetObjectCell ( enum ObjectColumn Col ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_GetObjectCell(Col, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9357)
inline _bstr_t ZOSAPI_Interfaces::INCERow::GetTypeName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TypeName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(9358)
inline enum ZOSAPI_Interfaces::ObjectType ZOSAPI_Interfaces::INCERow::GetType ( ) {
    enum ObjectType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9359)
inline SAFEARRAY * ZOSAPI_Interfaces::INCERow::AvailableObjectTypes ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_AvailableObjectTypes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9360)
inline SAFEARRAY * ZOSAPI_Interfaces::INCERow::AvailableParameters ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_AvailableParameters(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9361)
inline ZOSAPI_Interfaces::IObjectTypeSettingsPtr ZOSAPI_Interfaces::INCERow::GetCurrentTypeSettings ( ) {
    struct IObjectTypeSettings * _result = 0;
    HRESULT _hr = get_CurrentTypeSettings(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IObjectTypeSettingsPtr(_result, false);
}

#pragma implementation_key(9362)
inline ZOSAPI_Interfaces::IObjectTypeSettingsPtr ZOSAPI_Interfaces::INCERow::GetObjectTypeSettings ( enum ObjectType Type ) {
    struct IObjectTypeSettings * _result = 0;
    HRESULT _hr = raw_GetObjectTypeSettings(Type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IObjectTypeSettingsPtr(_result, false);
}

#pragma implementation_key(9363)
inline VARIANT_BOOL ZOSAPI_Interfaces::INCERow::ChangeType ( struct IObjectTypeSettings * settings ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_ChangeType(settings, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9364)
inline ZOSAPI_Interfaces::IObjectPtr ZOSAPI_Interfaces::INCERow::GetObjectData ( ) {
    struct IObject * _result = 0;
    HRESULT _hr = get_ObjectData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IObjectPtr(_result, false);
}

#pragma implementation_key(9365)
inline ZOSAPI_Interfaces::INCETypeDataPtr ZOSAPI_Interfaces::INCERow::GetTypeData ( ) {
    struct INCETypeData * _result = 0;
    HRESULT _hr = get_TypeData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return INCETypeDataPtr(_result, false);
}

#pragma implementation_key(9366)
inline ZOSAPI_Interfaces::INCEDrawDataPtr ZOSAPI_Interfaces::INCERow::GetDrawData ( ) {
    struct INCEDrawData * _result = 0;
    HRESULT _hr = get_DrawData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return INCEDrawDataPtr(_result, false);
}

#pragma implementation_key(9367)
inline ZOSAPI_Interfaces::INCESourcesDataPtr ZOSAPI_Interfaces::INCERow::GetSourcesData ( ) {
    struct INCESourcesData * _result = 0;
    HRESULT _hr = get_SourcesData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return INCESourcesDataPtr(_result, false);
}

#pragma implementation_key(9368)
inline ZOSAPI_Interfaces::INCECoatScatterDataPtr ZOSAPI_Interfaces::INCERow::GetCoatScatterData ( ) {
    struct INCECoatScatterData * _result = 0;
    HRESULT _hr = get_CoatScatterData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return INCECoatScatterDataPtr(_result, false);
}

#pragma implementation_key(9369)
inline ZOSAPI_Interfaces::INCEScatterToDataPtr ZOSAPI_Interfaces::INCERow::GetScatterToData ( ) {
    struct INCEScatterToData * _result = 0;
    HRESULT _hr = get_ScatterToData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return INCEScatterToDataPtr(_result, false);
}

#pragma implementation_key(9370)
inline ZOSAPI_Interfaces::INCEVolumePhysicsDataPtr ZOSAPI_Interfaces::INCERow::GetVolumePhysicsData ( ) {
    struct INCEVolumePhysicsData * _result = 0;
    HRESULT _hr = get_VolumePhysicsData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return INCEVolumePhysicsDataPtr(_result, false);
}

#pragma implementation_key(9371)
inline ZOSAPI_Interfaces::INCEIndexDataPtr ZOSAPI_Interfaces::INCERow::GetIndexData ( ) {
    struct INCEIndexData * _result = 0;
    HRESULT _hr = get_IndexData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return INCEIndexDataPtr(_result, false);
}

#pragma implementation_key(9372)
inline ZOSAPI_Interfaces::INCEDiffractionDataPtr ZOSAPI_Interfaces::INCERow::GetDiffractionData ( ) {
    struct INCEDiffractionData * _result = 0;
    HRESULT _hr = get_DiffractionData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return INCEDiffractionDataPtr(_result, false);
}

#pragma implementation_key(9373)
inline ZOSAPI_Interfaces::INCECADDataPtr ZOSAPI_Interfaces::INCERow::GetCADData ( ) {
    struct INCECADData * _result = 0;
    HRESULT _hr = get_CADData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return INCECADDataPtr(_result, false);
}

#pragma implementation_key(9374)
inline _bstr_t ZOSAPI_Interfaces::INCERow::GetComment ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Comment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(9375)
inline void ZOSAPI_Interfaces::INCERow::PutComment ( _bstr_t pRetVal ) {
    HRESULT _hr = put_Comment(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9376)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::INCERow::GetCommentCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CommentCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9377)
inline long ZOSAPI_Interfaces::INCERow::GetRefObject ( ) {
    long _result = 0;
    HRESULT _hr = get_RefObject(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9378)
inline void ZOSAPI_Interfaces::INCERow::PutRefObject ( long pRetVal ) {
    HRESULT _hr = put_RefObject(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9379)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::INCERow::GetRefObjectCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RefObjectCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9380)
inline long ZOSAPI_Interfaces::INCERow::GetInsideOf ( ) {
    long _result = 0;
    HRESULT _hr = get_InsideOf(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9381)
inline void ZOSAPI_Interfaces::INCERow::PutInsideOf ( long pRetVal ) {
    HRESULT _hr = put_InsideOf(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9382)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::INCERow::GetInsideOfCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_InsideOfCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9383)
inline double ZOSAPI_Interfaces::INCERow::GetXPosition ( ) {
    double _result = 0;
    HRESULT _hr = get_XPosition(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9384)
inline void ZOSAPI_Interfaces::INCERow::PutXPosition ( double pRetVal ) {
    HRESULT _hr = put_XPosition(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9385)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::INCERow::GetXPositionCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_XPositionCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9386)
inline double ZOSAPI_Interfaces::INCERow::GetYPosition ( ) {
    double _result = 0;
    HRESULT _hr = get_YPosition(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9387)
inline void ZOSAPI_Interfaces::INCERow::PutYPosition ( double pRetVal ) {
    HRESULT _hr = put_YPosition(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9388)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::INCERow::GetYPositionCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_YPositionCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9389)
inline double ZOSAPI_Interfaces::INCERow::GetZPosition ( ) {
    double _result = 0;
    HRESULT _hr = get_ZPosition(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9390)
inline void ZOSAPI_Interfaces::INCERow::PutZPosition ( double pRetVal ) {
    HRESULT _hr = put_ZPosition(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9391)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::INCERow::GetZPositionCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ZPositionCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9392)
inline double ZOSAPI_Interfaces::INCERow::GetTiltAboutX ( ) {
    double _result = 0;
    HRESULT _hr = get_TiltAboutX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9393)
inline void ZOSAPI_Interfaces::INCERow::PutTiltAboutX ( double pRetVal ) {
    HRESULT _hr = put_TiltAboutX(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9394)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::INCERow::GetTiltAboutXCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_TiltAboutXCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9395)
inline double ZOSAPI_Interfaces::INCERow::GetTiltAboutY ( ) {
    double _result = 0;
    HRESULT _hr = get_TiltAboutY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9396)
inline void ZOSAPI_Interfaces::INCERow::PutTiltAboutY ( double pRetVal ) {
    HRESULT _hr = put_TiltAboutY(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9397)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::INCERow::GetTiltAboutYCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_TiltAboutYCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9398)
inline double ZOSAPI_Interfaces::INCERow::GetTiltAboutZ ( ) {
    double _result = 0;
    HRESULT _hr = get_TiltAboutZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9399)
inline void ZOSAPI_Interfaces::INCERow::PutTiltAboutZ ( double pRetVal ) {
    HRESULT _hr = put_TiltAboutZ(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9400)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::INCERow::GetTiltAboutZCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_TiltAboutZCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9401)
inline _bstr_t ZOSAPI_Interfaces::INCERow::GetMaterial ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Material(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(9402)
inline void ZOSAPI_Interfaces::INCERow::PutMaterial ( _bstr_t pRetVal ) {
    HRESULT _hr = put_Material(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9403)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::INCERow::GetMaterialCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_MaterialCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9404)
inline ZOSAPI_Interfaces::IFaceDataPtr ZOSAPI_Interfaces::INCERow::GetFacetedObjectData ( ) {
    struct IFaceData * _result = 0;
    HRESULT _hr = raw_GetFacetedObjectData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IFaceDataPtr(_result, false);
}

//
// interface IObject wrapper method implementations
//

#pragma implementation_key(9405)
inline enum ZOSAPI_Interfaces::ObjectType ZOSAPI_Interfaces::IObject::GetType ( ) {
    enum ObjectType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9406)
inline ZOSAPI_Interfaces::INCERowPtr ZOSAPI_Interfaces::IObject::GetRow ( ) {
    struct INCERow * _result = 0;
    HRESULT _hr = get_Row(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return INCERowPtr(_result, false);
}

#pragma implementation_key(9407)
inline VARIANT_BOOL ZOSAPI_Interfaces::IObject::GetIsValid ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsValid(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface ILensDataEditor wrapper method implementations
//

#pragma implementation_key(9408)
inline long ZOSAPI_Interfaces::ILensDataEditor::GetRowToSurfaceOffset ( ) {
    long _result = 0;
    HRESULT _hr = get_RowToSurfaceOffset(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9409)
inline long ZOSAPI_Interfaces::ILensDataEditor::GetNumberOfSurfaces ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfSurfaces(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9410)
inline long ZOSAPI_Interfaces::ILensDataEditor::GetNumberOfNonSequentialSurfaces ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfNonSequentialSurfaces(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9411)
inline enum ZOSAPI_Interfaces::SurfaceColumn ZOSAPI_Interfaces::ILensDataEditor::GetFirstColumn ( ) {
    enum SurfaceColumn _result;
    HRESULT _hr = get_FirstColumn(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9412)
inline enum ZOSAPI_Interfaces::SurfaceColumn ZOSAPI_Interfaces::ILensDataEditor::GetLastColumn ( ) {
    enum SurfaceColumn _result;
    HRESULT _hr = get_LastColumn(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9413)
inline long ZOSAPI_Interfaces::ILensDataEditor::GetStopSurface ( ) {
    long _result = 0;
    HRESULT _hr = get_StopSurface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9414)
inline ZOSAPI_Interfaces::ILDERowPtr ZOSAPI_Interfaces::ILensDataEditor::GetSurfaceAt ( long SurfaceNumber ) {
    struct ILDERow * _result = 0;
    HRESULT _hr = raw_GetSurfaceAt(SurfaceNumber, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ILDERowPtr(_result, false);
}

#pragma implementation_key(9415)
inline ZOSAPI_Interfaces::ILDERowPtr ZOSAPI_Interfaces::ILensDataEditor::InsertNewSurfaceAt ( long SurfaceNumber ) {
    struct ILDERow * _result = 0;
    HRESULT _hr = raw_InsertNewSurfaceAt(SurfaceNumber, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ILDERowPtr(_result, false);
}

#pragma implementation_key(9416)
inline ZOSAPI_Interfaces::ILDERowPtr ZOSAPI_Interfaces::ILensDataEditor::AddSurface ( ) {
    struct ILDERow * _result = 0;
    HRESULT _hr = raw_AddSurface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ILDERowPtr(_result, false);
}

#pragma implementation_key(9417)
inline VARIANT_BOOL ZOSAPI_Interfaces::ILensDataEditor::RemoveSurfaceAt ( long SurfaceNumber ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_RemoveSurfaceAt(SurfaceNumber, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9418)
inline long ZOSAPI_Interfaces::ILensDataEditor::RemoveSurfacesAt ( long SurfaceNumber, long numSurfaces ) {
    long _result = 0;
    HRESULT _hr = raw_RemoveSurfacesAt(SurfaceNumber, numSurfaces, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9419)
inline VARIANT_BOOL ZOSAPI_Interfaces::ILensDataEditor::ShowLDE ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_ShowLDE(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9420)
inline HRESULT ZOSAPI_Interfaces::ILensDataEditor::HideLDE ( ) {
    HRESULT _hr = raw_HideLDE();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(9421)
inline IUnknownPtr ZOSAPI_Interfaces::ILensDataEditor::GetTool_AddCoatingsToAllSurfaces ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = raw_GetTool_AddCoatingsToAllSurfaces(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(9422)
inline HRESULT ZOSAPI_Interfaces::ILensDataEditor::RunTool_AddCoatingsToAllSurfaces ( IUnknown * settings ) {
    HRESULT _hr = raw_RunTool_AddCoatingsToAllSurfaces(settings);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(9423)
inline HRESULT ZOSAPI_Interfaces::ILensDataEditor::RunTool_RemoveAllApertures ( ) {
    HRESULT _hr = raw_RunTool_RemoveAllApertures();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(9424)
inline HRESULT ZOSAPI_Interfaces::ILensDataEditor::RunTool_ConvertSemiDiametersToCircularApertures ( ) {
    HRESULT _hr = raw_RunTool_ConvertSemiDiametersToCircularApertures();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(9425)
inline HRESULT ZOSAPI_Interfaces::ILensDataEditor::RunTool_ConvertSemiDiametersToFloatingApertures ( ) {
    HRESULT _hr = raw_RunTool_ConvertSemiDiametersToFloatingApertures();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(9426)
inline HRESULT ZOSAPI_Interfaces::ILensDataEditor::RunTool_ConvertSemiDiametersToMaximumApertures ( ) {
    HRESULT _hr = raw_RunTool_ConvertSemiDiametersToMaximumApertures();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(9427)
inline HRESULT ZOSAPI_Interfaces::ILensDataEditor::RunTool_ReplaceVignettingWithApertures ( ) {
    HRESULT _hr = raw_RunTool_ReplaceVignettingWithApertures();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(9428)
inline enum ZOSAPI_Interfaces::CoordinateConversionResult ZOSAPI_Interfaces::ILensDataEditor::RunTool_ConvertGlobalToLocalCoordinates ( long FirstSurface, long LastSurface, enum ConversionOrder Order ) {
    enum CoordinateConversionResult _result;
    HRESULT _hr = raw_RunTool_ConvertGlobalToLocalCoordinates(FirstSurface, LastSurface, Order, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9429)
inline enum ZOSAPI_Interfaces::CoordinateConversionResult ZOSAPI_Interfaces::ILensDataEditor::RunTool_ConvertLocalToGlobalCoordinates ( long FirstSurface, long LastSurface, long referenceSurface ) {
    enum CoordinateConversionResult _result;
    HRESULT _hr = raw_RunTool_ConvertLocalToGlobalCoordinates(FirstSurface, LastSurface, referenceSurface, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9430)
inline double ZOSAPI_Interfaces::ILensDataEditor::GetApodization ( double Px, double Py ) {
    double _result = 0;
    HRESULT _hr = raw_GetApodization(Px, Py, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9431)
inline HRESULT ZOSAPI_Interfaces::ILensDataEditor::GetFirstOrderData ( double * EFL, double * paraxialWorkingFNumber, double * realWorkingFNumber, double * paraxialImageHeight, double * paraxialMagnification ) {
    HRESULT _hr = raw_GetFirstOrderData(EFL, paraxialWorkingFNumber, realWorkingFNumber, paraxialImageHeight, paraxialMagnification);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(9432)
inline VARIANT_BOOL ZOSAPI_Interfaces::ILensDataEditor::GetGlass ( long Surface, BSTR * glassName, double * nd, double * vd, double * dPgF ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_GetGlass(Surface, glassName, nd, vd, dPgF, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9433)
inline VARIANT_BOOL ZOSAPI_Interfaces::ILensDataEditor::GetGlobalMatrix ( long Surface, double * R11, double * R12, double * R13, double * R21, double * R22, double * R23, double * R31, double * R32, double * R33, double * xo, double * yo, double * zo ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_GetGlobalMatrix(Surface, R11, R12, R13, R21, R22, R23, R31, R32, R33, xo, yo, zo, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9434)
inline long ZOSAPI_Interfaces::ILensDataEditor::GetIndex ( long Surface, long NumberOfWavelengths, double * indexAtWavelength ) {
    long _result = 0;
    HRESULT _hr = raw_GetIndex(Surface, NumberOfWavelengths, indexAtWavelength, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9435)
inline VARIANT_BOOL ZOSAPI_Interfaces::ILensDataEditor::SetLabel ( long Surface, long label ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_SetLabel(Surface, label, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9436)
inline VARIANT_BOOL ZOSAPI_Interfaces::ILensDataEditor::GetLabel ( long Surface, long * label ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_GetLabel(Surface, label, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9437)
inline VARIANT_BOOL ZOSAPI_Interfaces::ILensDataEditor::FindLabel ( long label, long * Surface ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_FindLabel(label, Surface, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9438)
inline HRESULT ZOSAPI_Interfaces::ILensDataEditor::GetPupil ( enum ZemaxApertureType * Type, double * ApertureValue, double * entrancePupilDiameter, double * entrancePupilPosition, double * exitPupilDiameter, double * exitPupilPosition, enum PupilApodizationType * ApodizationType, double * ApodizationFactor ) {
    HRESULT _hr = raw_GetPupil(Type, ApertureValue, entrancePupilDiameter, entrancePupilPosition, exitPupilDiameter, exitPupilPosition, ApodizationType, ApodizationFactor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(9439)
inline VARIANT_BOOL ZOSAPI_Interfaces::ILensDataEditor::GetSag ( long Surface, double X, double Y, double * sag, double * alternateSag ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_GetSag(Surface, X, Y, sag, alternateSag, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9440)
inline long ZOSAPI_Interfaces::ILensDataEditor::CopySurfaces ( long fromSurfaceNumber, long NumberOfSurfaces, long toSurfaceNumber ) {
    long _result = 0;
    HRESULT _hr = raw_CopySurfaces(fromSurfaceNumber, NumberOfSurfaces, toSurfaceNumber, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9441)
inline long ZOSAPI_Interfaces::ILensDataEditor::CopySurfacesFrom ( struct ILensDataEditor * fromEditor, long fromSurfaceNumber, long NumberOfSurfaces, long toSurfaceNumber ) {
    long _result = 0;
    HRESULT _hr = raw_CopySurfacesFrom(fromEditor, fromSurfaceNumber, NumberOfSurfaces, toSurfaceNumber, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface ILDERow wrapper method implementations
//

#pragma implementation_key(9442)
inline VARIANT_BOOL ZOSAPI_Interfaces::ILDERow::GetIsActive ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsActive(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9443)
inline long ZOSAPI_Interfaces::ILDERow::GetSurfaceNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_SurfaceNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9444)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ILDERow::GetSurfaceCell ( enum SurfaceColumn Col ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = raw_GetSurfaceCell(Col, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9445)
inline _bstr_t ZOSAPI_Interfaces::ILDERow::GetTypeName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TypeName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(9446)
inline enum ZOSAPI_Interfaces::SurfaceType ZOSAPI_Interfaces::ILDERow::GetType ( ) {
    enum SurfaceType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9447)
inline SAFEARRAY * ZOSAPI_Interfaces::ILDERow::AvailableSurfaceTypes ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_AvailableSurfaceTypes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9448)
inline ZOSAPI_Interfaces::ISurfaceTypeSettingsPtr ZOSAPI_Interfaces::ILDERow::GetCurrentTypeSettings ( ) {
    struct ISurfaceTypeSettings * _result = 0;
    HRESULT _hr = get_CurrentTypeSettings(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISurfaceTypeSettingsPtr(_result, false);
}

#pragma implementation_key(9449)
inline ZOSAPI_Interfaces::ISurfaceTypeSettingsPtr ZOSAPI_Interfaces::ILDERow::GetSurfaceTypeSettings ( enum SurfaceType Type ) {
    struct ISurfaceTypeSettings * _result = 0;
    HRESULT _hr = raw_GetSurfaceTypeSettings(Type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISurfaceTypeSettingsPtr(_result, false);
}

#pragma implementation_key(9450)
inline VARIANT_BOOL ZOSAPI_Interfaces::ILDERow::ChangeType ( struct ISurfaceTypeSettings * settings ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_ChangeType(settings, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9451)
inline VARIANT_BOOL ZOSAPI_Interfaces::ILDERow::GetIsObject ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsObject(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9452)
inline VARIANT_BOOL ZOSAPI_Interfaces::ILDERow::GetIsImage ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsImage(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9453)
inline VARIANT_BOOL ZOSAPI_Interfaces::ILDERow::GetIsStop ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsStop(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9454)
inline void ZOSAPI_Interfaces::ILDERow::PutIsStop ( VARIANT_BOOL pRetVal ) {
    HRESULT _hr = put_IsStop(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9455)
inline ZOSAPI_Interfaces::ISurfacePtr ZOSAPI_Interfaces::ILDERow::GetSurfaceData ( ) {
    struct ISurface * _result = 0;
    HRESULT _hr = get_SurfaceData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ISurfacePtr(_result, false);
}

#pragma implementation_key(9456)
inline ZOSAPI_Interfaces::ILDETypeDataPtr ZOSAPI_Interfaces::ILDERow::GetTypeData ( ) {
    struct ILDETypeData * _result = 0;
    HRESULT _hr = get_TypeData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ILDETypeDataPtr(_result, false);
}

#pragma implementation_key(9457)
inline ZOSAPI_Interfaces::ILDEDrawDataPtr ZOSAPI_Interfaces::ILDERow::GetDrawData ( ) {
    struct ILDEDrawData * _result = 0;
    HRESULT _hr = get_DrawData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ILDEDrawDataPtr(_result, false);
}

#pragma implementation_key(9458)
inline ZOSAPI_Interfaces::ILDEApertureDataPtr ZOSAPI_Interfaces::ILDERow::GetApertureData ( ) {
    struct ILDEApertureData * _result = 0;
    HRESULT _hr = get_ApertureData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ILDEApertureDataPtr(_result, false);
}

#pragma implementation_key(9459)
inline ZOSAPI_Interfaces::ILDEScatteringDataPtr ZOSAPI_Interfaces::ILDERow::GetScatteringData ( ) {
    struct ILDEScatteringData * _result = 0;
    HRESULT _hr = get_ScatteringData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ILDEScatteringDataPtr(_result, false);
}

#pragma implementation_key(9460)
inline ZOSAPI_Interfaces::ILDETiltDecenterDataPtr ZOSAPI_Interfaces::ILDERow::GetTiltDecenterData ( ) {
    struct ILDETiltDecenterData * _result = 0;
    HRESULT _hr = get_TiltDecenterData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ILDETiltDecenterDataPtr(_result, false);
}

#pragma implementation_key(9461)
inline ZOSAPI_Interfaces::ILDEPhysicalOpticsDataPtr ZOSAPI_Interfaces::ILDERow::GetPhysicalOpticsData ( ) {
    struct ILDEPhysicalOpticsData * _result = 0;
    HRESULT _hr = get_PhysicalOpticsData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ILDEPhysicalOpticsDataPtr(_result, false);
}

#pragma implementation_key(9462)
inline ZOSAPI_Interfaces::ILDECoatingDataPtr ZOSAPI_Interfaces::ILDERow::GetCoatingData ( ) {
    struct ILDECoatingData * _result = 0;
    HRESULT _hr = get_CoatingData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ILDECoatingDataPtr(_result, false);
}

#pragma implementation_key(9463)
inline ZOSAPI_Interfaces::ILDEImportDataPtr ZOSAPI_Interfaces::ILDERow::GetImportData ( ) {
    struct ILDEImportData * _result = 0;
    HRESULT _hr = get_ImportData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ILDEImportDataPtr(_result, false);
}

#pragma implementation_key(9464)
inline _bstr_t ZOSAPI_Interfaces::ILDERow::GetComment ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Comment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(9465)
inline void ZOSAPI_Interfaces::ILDERow::PutComment ( _bstr_t pRetVal ) {
    HRESULT _hr = put_Comment(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9466)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ILDERow::GetCommentCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CommentCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9467)
inline double ZOSAPI_Interfaces::ILDERow::GetRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_Radius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9468)
inline void ZOSAPI_Interfaces::ILDERow::PutRadius ( double pRetVal ) {
    HRESULT _hr = put_Radius(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9469)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ILDERow::GetRadiusCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_RadiusCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9470)
inline double ZOSAPI_Interfaces::ILDERow::GetThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_Thickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9471)
inline void ZOSAPI_Interfaces::ILDERow::PutThickness ( double pRetVal ) {
    HRESULT _hr = put_Thickness(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9472)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ILDERow::GetThicknessCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ThicknessCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9473)
inline _bstr_t ZOSAPI_Interfaces::ILDERow::GetMaterial ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Material(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(9474)
inline void ZOSAPI_Interfaces::ILDERow::PutMaterial ( _bstr_t pRetVal ) {
    HRESULT _hr = put_Material(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9475)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ILDERow::GetMaterialCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_MaterialCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9476)
inline _bstr_t ZOSAPI_Interfaces::ILDERow::GetCoating ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Coating(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(9477)
inline void ZOSAPI_Interfaces::ILDERow::PutCoating ( _bstr_t pRetVal ) {
    HRESULT _hr = put_Coating(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9478)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ILDERow::GetCoatingCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_CoatingCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9479)
inline double ZOSAPI_Interfaces::ILDERow::GetSemiDiameter ( ) {
    double _result = 0;
    HRESULT _hr = get_SemiDiameter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9480)
inline void ZOSAPI_Interfaces::ILDERow::PutSemiDiameter ( double pRetVal ) {
    HRESULT _hr = put_SemiDiameter(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9481)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ILDERow::GetSemiDiameterCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_SemiDiameterCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9482)
inline double ZOSAPI_Interfaces::ILDERow::GetChipZone ( ) {
    double _result = 0;
    HRESULT _hr = get_ChipZone(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9483)
inline void ZOSAPI_Interfaces::ILDERow::PutChipZone ( double pRetVal ) {
    HRESULT _hr = put_ChipZone(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9484)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ILDERow::GetChipZoneCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ChipZoneCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9485)
inline double ZOSAPI_Interfaces::ILDERow::GetMechanicalSemiDiameter ( ) {
    double _result = 0;
    HRESULT _hr = get_MechanicalSemiDiameter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9486)
inline void ZOSAPI_Interfaces::ILDERow::PutMechanicalSemiDiameter ( double pRetVal ) {
    HRESULT _hr = put_MechanicalSemiDiameter(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9487)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ILDERow::GetMechanicalSemiDiameterCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_MechanicalSemiDiameterCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9488)
inline double ZOSAPI_Interfaces::ILDERow::GetConic ( ) {
    double _result = 0;
    HRESULT _hr = get_Conic(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9489)
inline void ZOSAPI_Interfaces::ILDERow::PutConic ( double pRetVal ) {
    HRESULT _hr = put_Conic(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9490)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ILDERow::GetConicCell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_ConicCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

#pragma implementation_key(9491)
inline double ZOSAPI_Interfaces::ILDERow::GetTCE ( ) {
    double _result = 0;
    HRESULT _hr = get_TCE(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9492)
inline void ZOSAPI_Interfaces::ILDERow::PutTCE ( double pRetVal ) {
    HRESULT _hr = put_TCE(pRetVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9493)
inline ZOSAPI_Interfaces::IEditorCellPtr ZOSAPI_Interfaces::ILDERow::GetTCECell ( ) {
    struct IEditorCell * _result = 0;
    HRESULT _hr = get_TCECell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IEditorCellPtr(_result, false);
}

//
// interface ISurface wrapper method implementations
//

#pragma implementation_key(9494)
inline enum ZOSAPI_Interfaces::SurfaceType ZOSAPI_Interfaces::ISurface::GetType ( ) {
    enum SurfaceType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(9495)
inline ZOSAPI_Interfaces::ILDERowPtr ZOSAPI_Interfaces::ISurface::GetRow ( ) {
    struct ILDERow * _result = 0;
    HRESULT _hr = get_Row(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ILDERowPtr(_result, false);
}

#pragma implementation_key(9496)
inline VARIANT_BOOL ZOSAPI_Interfaces::ISurface::GetIsValid ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsValid(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}
